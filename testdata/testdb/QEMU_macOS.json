{"Time":"2023-05-31T11:42:45.268538-07:00","Action":"start"}
{"Time":"2023-05-31T11:42:45.836723-07:00","Action":"output","Output":"Found 8 cores, limiting parallelism with --test.parallel=2\n"}
{"Time":"2023-05-31T11:42:45.836855-07:00","Action":"run","Test":"TestDownloadOnly"}
{"Time":"2023-05-31T11:42:45.836858-07:00","Action":"output","Test":"TestDownloadOnly","Output":"=== RUN   TestDownloadOnly\n"}
{"Time":"2023-05-31T11:42:45.836913-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0"}
{"Time":"2023-05-31T11:42:45.836918-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"=== RUN   TestDownloadOnly/v1.16.0\n"}
{"Time":"2023-05-31T11:42:45.836921-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/json-events"}
{"Time":"2023-05-31T11:42:45.836925-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"=== RUN   TestDownloadOnly/v1.16.0/json-events\n"}
{"Time":"2023-05-31T11:42:45.83711-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"    aaa_download_only_test.go:69: (dbg) Run:  out/minikube-darwin-arm64 start -o=json --download-only -p download-only-883000 --force --alsologtostderr --kubernetes-version=v1.16.0 --container-runtime=docker --driver=qemu2 \n"}
{"Time":"2023-05-31T11:43:10.615483-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"    aaa_download_only_test.go:69: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -o=json --download-only -p download-only-883000 --force --alsologtostderr --kubernetes-version=v1.16.0 --container-runtime=docker --driver=qemu2 : exit status 40 (24.777810834s)\n"}
{"Time":"2023-05-31T11:43:10.615554-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.615561-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:43:10.615567-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"a86028a7-ce51-422c-8929-63508b2ffc41\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"0\",\"message\":\"[download-only-883000] minikube v1.30.1 on Darwin 13.4 (arm64)\",\"name\":\"Initial Minikube Setup\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:43:10.615577-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"8d63e94b-843e-48f0-8b7a-51d9eabc5b1f\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_LOCATION=16569\"}}\n"}
{"Time":"2023-05-31T11:43:10.615586-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"acfe8244-109b-494e-930e-027fd16fbca4\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\"}}\n"}
{"Time":"2023-05-31T11:43:10.615598-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"57a9e869-4e49-43b0-8cbe-b4f87cc200ea\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_BIN=out/minikube-darwin-arm64\"}}\n"}
{"Time":"2023-05-31T11:43:10.615605-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"fa2ae1ef-e9fc-4a1a-a26d-afbe217ba8cd\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\"}}\n"}
{"Time":"2023-05-31T11:43:10.615611-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"dbbc7c89-63e4-475a-80bf-826c0fb0bd1c\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\"}}\n"}
{"Time":"2023-05-31T11:43:10.615617-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"2536fe35-c010-49eb-bb75-443e412c71c4\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.warning\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"minikube skips various validations when --force is supplied; this may lead to unexpected behavior\"}}\n"}
{"Time":"2023-05-31T11:43:10.615627-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"b2aea36d-8a8a-4666-813a-fa37ddeec475\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"1\",\"message\":\"Using the qemu2 driver based on user configuration\",\"name\":\"Selecting Driver\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:43:10.615634-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"f2ded2e3-6f53-4036-ae1d-923cc778b738\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"Automatically selected the socket_vmnet network\"}}\n"}
{"Time":"2023-05-31T11:43:10.61564-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"7893cb5d-9aa6-40a7-9c30-0d9b3273b7be\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"1\",\"message\":\"Downloading VM boot image ...\",\"name\":\"Selecting Driver\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:43:10.615646-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"ead6f7ca-e37c-49de-bf0b-ddafedcb25ea\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"3\",\"message\":\"Starting control plane node download-only-883000 in cluster download-only-883000\",\"name\":\"Starting Node\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:43:10.615653-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"a51b9a80-4fbd-4d83-8e97-2e30738079a0\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"3\",\"message\":\"Downloading Kubernetes v1.16.0 preload ...\",\"name\":\"Starting Node\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:43:10.615666-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"ba25cb4c-65ab-4550-913d-6216cb3735ff\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.error\",\"datacontenttype\":\"application/json\",\"data\":{\"advice\":\"\",\"exitcode\":\"40\",\"issues\":\"\",\"message\":\"Failed to cache kubectl: download failed: https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1: getter: \\u0026{Ctx:context.Background Src:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1 Dst:/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl.download Pwd: Mode:2 Umask:---------- Detectors:[0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8] Decompressors:map[bz2:0x14000057038 gz:0x14000057110 tar:0x14000057040 tar.bz2:0x14000057050 tar.gz:0x140000570a0 tar.xz:0x140000570c0 tar.zst:0x140000570e0 tbz2:0x14000057050 tgz:0x140000"}
{"Time":"2023-05-31T11:43:10.615686-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"570a0 txz:0x140000570c0 tzst:0x140000570e0 xz:0x14000057118 zip:0x14000057120 zst:0x14000057130] Getters:map[file:0x14000130b80 http:0x140009c0a00 https:0x140009c0a50] Dir:false ProgressListener:\\u003cnil\\u003e Insecure:false DisableSymlinks:false Options:[]}: invalid checksum: Error downloading checksum file: bad response code: 404\",\"name\":\"INET_CACHE_KUBECTL\",\"url\":\"\"}}\n"}
{"Time":"2023-05-31T11:43:10.615694-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"819bbc27-dde1-46f7-91f0-ab2453081105\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.error\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"╭───────────────────────────────────────────────────────────────────────────────────────────╮\\n│                                                                                           │\\n│    If the above advice does not help, please let us know:                                 │\\n│    https://github.com/kubernetes/minikube/issues/new/choose                               │\\n│                                                                                           │\\n│    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\\n│                                      "}
{"Time":"2023-05-31T11:43:10.615704-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"                                                     │\\n╰───────────────────────────────────────────────────────────────────────────────────────────╯\"}}\n"}
{"Time":"2023-05-31T11:43:10.615709-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.615713-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:43:10.615717-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:43:10.61572-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.864628    1479 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:43:10.615734-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.864755    1479 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:10.615741-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.864758    1479 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:43:10.615745-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.864761    1479 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:10.615749-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.864834    1479 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:43:10.615754-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:42:45.864890    1479 root.go:312] Error reading config file at /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: open /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: no such file or directory\n"}
{"Time":"2023-05-31T11:43:10.61576-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.865981    1479 out.go:303] Setting JSON to true\n"}
{"Time":"2023-05-31T11:43:10.615771-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.894902    1479 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":736,\"bootTime\":1685557829,\"procs\":407,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:43:10.615781-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:42:45.894958    1479 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:43:10.615785-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.903674    1479 out.go:97] [download-only-883000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:43:10.61579-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:42:45.903803    1479 preload.go:295] Failed to list preload files: open /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball: no such file or directory\n"}
{"Time":"2023-05-31T11:43:10.6158-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.910506    1479 out.go:169] MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:43:10.615804-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.903828    1479 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:43:10.615808-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.925030    1479 out.go:169] KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:43:10.615812-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.931864    1479 out.go:169] MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:43:10.615818-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.938874    1479 out.go:169] MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:43:10.615822-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.945757    1479 out.go:169] MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:43:10.615827-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:42:45.959597    1479 out.go:272] minikube skips various validations when --force is supplied; this may lead to unexpected behavior\n"}
{"Time":"2023-05-31T11:43:10.615837-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.959877    1479 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:43:10.615841-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.996653    1479 out.go:97] Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:43:10.615845-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.996676    1479 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:43:10.61585-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.996680    1479 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:43:10.615855-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:45.996753    1479 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:43:10.615859-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.015305    1479 out.go:169] Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:43:10.615864-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026376    1479 start_flags.go:382] Using suggested 4000MB memory alloc based on sys=16384MB, container=0MB\n"}
{"Time":"2023-05-31T11:43:10.615868-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026466    1479 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T11:43:10.615873-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026484    1479 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:43:10.615877-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026508    1479 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T11:43:10.615968-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026512    1479 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:43:10.616051-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t{Name:download-only-883000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:download-only-883000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRun"}
{"Time":"2023-05-31T11:43:10.616064-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"time:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:43:10.616072-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.026680    1479 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:43:10.616076-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.036272    1479 out.go:97] Downloading VM boot image ...\n"}
{"Time":"2023-05-31T11:43:10.616081-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:46.036306    1479 download.go:107] Downloading: https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso?checksum=file:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso.sha256 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso\n"}
{"Time":"2023-05-31T11:43:10.616086-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.456116    1479 out.go:97] Starting control plane node download-only-883000 in cluster download-only-883000\n"}
{"Time":"2023-05-31T11:43:10.616091-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.456148    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.616095-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.513577    1479 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.16.0/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:10.616101-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.513623    1479 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:43:10.616105-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.513795    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.616108-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.518901    1479 out.go:97] Downloading Kubernetes v1.16.0 preload ...\n"}
{"Time":"2023-05-31T11:43:10.616113-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.518907    1479 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.616117-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:42:59.653332    1479 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.16.0/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4?checksum=md5:a000baffb0664b293d602f95ed25caa6 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:10.616136-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:09.475994    1479 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.616141-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:09.476138    1479 preload.go:256] verifying checksum of /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.616146-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.128767    1479 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T11:43:10.61615-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.128940    1479 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/download-only-883000/config.json ...\n"}
{"Time":"2023-05-31T11:43:10.616155-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.128958    1479 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/download-only-883000/config.json: {Name:mkb379b1b60f82f079305edc44cc631f1f2aca8c Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:43:10.61616-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.129203    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.616164-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.129387    1479 download.go:107] Downloading: https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl\n"}
{"Time":"2023-05-31T11:43:10.616169-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.581814    1479 out.go:169] \n"}
{"Time":"2023-05-31T11:43:10.616176-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:43:10.584777    1479 out_reason.go:110] Failed to cache kubectl: download failed: https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1: getter: \u0026{Ctx:context.Background Src:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1 Dst:/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl.download Pwd: Mode:2 Umask:---------- Detectors:[0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8] Decompressors:map[bz2:0x14000057038 gz:0x14000057110 tar:0x14000057040 tar.bz2:0x14000057050 tar.gz:0x140000570a0 tar.xz:0x140000570c0 tar.zst:0x140000570e0 tbz2:0x14000057050 tgz:0x140000570a0 txz:0x140000570c0 tzst:0x140000570e0 xz:0x14000057118 zip:0x14000057120 zst:0x14000057130] Getters:map[file:0x14000130b80 http:0x140009c0a00 https:0x140009c0a50] Dir:false ProgressListener"}
{"Time":"2023-05-31T11:43:10.616182-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":":\u003cnil\u003e Insecure:false DisableSymlinks:false Options:[]}: invalid checksum: Error downloading checksum file: bad response code: 404\n"}
{"Time":"2023-05-31T11:43:10.616186-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:43:10.584802    1479 out_reason.go:110] \n"}
{"Time":"2023-05-31T11:43:10.616191-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tW0531 11:43:10.590865    1479 out.go:229] ╭───────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:43:10.616198-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.616202-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│    If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:43:10.616206-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│    https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:43:10.61621-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.616214-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:43:10.616219-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.616223-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \t╰───────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:43:10.616228-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \tI0531 11:43:10.593717    1479 out.go:169] \n"}
{"Time":"2023-05-31T11:43:10.616232-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.616235-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:43:10.61624-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"    aaa_download_only_test.go:71: failed to download only. args: [\"start\" \"-o=json\" \"--download-only\" \"-p\" \"download-only-883000\" \"--force\" \"--alsologtostderr\" \"--kubernetes-version=v1.16.0\" \"--container-runtime=docker\" \"--driver=qemu2\" \"\"] exit status 40\n"}
{"Time":"2023-05-31T11:43:10.616251-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/preload-exists"}
{"Time":"2023-05-31T11:43:10.616256-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/preload-exists","Output":"=== RUN   TestDownloadOnly/v1.16.0/preload-exists\n"}
{"Time":"2023-05-31T11:43:10.62057-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/cached-images"}
{"Time":"2023-05-31T11:43:10.620586-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/cached-images","Output":"=== RUN   TestDownloadOnly/v1.16.0/cached-images\n"}
{"Time":"2023-05-31T11:43:10.620607-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/cached-images","Output":"    aaa_download_only_test.go:117: Preload exists, images won't be cached\n"}
{"Time":"2023-05-31T11:43:10.620676-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/binaries"}
{"Time":"2023-05-31T11:43:10.620683-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/binaries","Output":"=== RUN   TestDownloadOnly/v1.16.0/binaries\n"}
{"Time":"2023-05-31T11:43:10.620689-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/binaries","Output":"    aaa_download_only_test.go:136: Preload exists, binaries are present within.\n"}
{"Time":"2023-05-31T11:43:10.620713-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/kubectl"}
{"Time":"2023-05-31T11:43:10.620719-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/kubectl","Output":"=== RUN   TestDownloadOnly/v1.16.0/kubectl\n"}
{"Time":"2023-05-31T11:43:10.620768-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/kubectl","Output":"    aaa_download_only_test.go:160: expected the file for binary exist at \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl\" but got error stat /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl: no such file or directory\n"}
{"Time":"2023-05-31T11:43:10.620796-07:00","Action":"run","Test":"TestDownloadOnly/v1.16.0/LogsDuration"}
{"Time":"2023-05-31T11:43:10.620802-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"=== RUN   TestDownloadOnly/v1.16.0/LogsDuration\n"}
{"Time":"2023-05-31T11:43:10.620927-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"    aaa_download_only_test.go:169: (dbg) Run:  out/minikube-darwin-arm64 logs -p download-only-883000\n"}
{"Time":"2023-05-31T11:43:10.715488-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"    aaa_download_only_test.go:169: (dbg) Non-zero exit: out/minikube-darwin-arm64 logs -p download-only-883000: exit status 85 (94.226375ms)\n"}
{"Time":"2023-05-31T11:43:10.715503-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.715507-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:43:10.715509-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:10.715511-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T11:43:10.715514-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* |---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:10.715516-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t| Command |              Args              |       Profile        |  User   | Version |     Start Time      | End Time |\n"}
{"Time":"2023-05-31T11:43:10.715519-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:10.715521-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t| start   | -o=json --download-only        | download-only-883000 | jenkins | v1.30.1 | 31 May 23 11:42 PDT |          |\n"}
{"Time":"2023-05-31T11:43:10.715523-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|         | -p download-only-883000        |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:10.715525-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|         | --force --alsologtostderr      |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:10.715527-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|         | --kubernetes-version=v1.16.0   |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:10.715529-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|         | --container-runtime=docker     |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:10.715532-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|         | --driver=qemu2                 |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:10.715534-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t|---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:10.715536-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t\n"}
{"Time":"2023-05-31T11:43:10.715538-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:10.71554-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T11:43:10.715542-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* Log file created at: 2023/05/31 11:42:45\n"}
{"Time":"2023-05-31T11:43:10.715544-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T11:43:10.715546-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T11:43:10.715548-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T11:43:10.71555-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.864628    1479 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:43:10.715552-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.864755    1479 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:10.715554-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.864758    1479 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:43:10.715556-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.864761    1479 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:10.715558-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.864834    1479 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:43:10.715561-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:42:45.864890    1479 root.go:312] Error reading config file at /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: open /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: no such file or directory\n"}
{"Time":"2023-05-31T11:43:10.715564-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.865981    1479 out.go:303] Setting JSON to true\n"}
{"Time":"2023-05-31T11:43:10.715566-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.894902    1479 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":736,\"bootTime\":1685557829,\"procs\":407,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:43:10.71557-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:42:45.894958    1479 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:43:10.715572-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.903674    1479 out.go:97] [download-only-883000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:43:10.715575-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:42:45.903803    1479 preload.go:295] Failed to list preload files: open /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball: no such file or directory\n"}
{"Time":"2023-05-31T11:43:10.715587-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.910506    1479 out.go:169] MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:43:10.71559-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.903828    1479 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:43:10.715592-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.925030    1479 out.go:169] KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:43:10.715594-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.931864    1479 out.go:169] MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:43:10.715596-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.938874    1479 out.go:169] MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:43:10.715598-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.945757    1479 out.go:169] MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:43:10.715601-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:42:45.959597    1479 out.go:272] minikube skips various validations when --force is supplied; this may lead to unexpected behavior\n"}
{"Time":"2023-05-31T11:43:10.715604-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.959877    1479 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:43:10.715606-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.996653    1479 out.go:97] Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:43:10.715608-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.996676    1479 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:43:10.715611-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.996680    1479 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:43:10.715613-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:45.996753    1479 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:43:10.715615-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.015305    1479 out.go:169] Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:43:10.715646-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026376    1479 start_flags.go:382] Using suggested 4000MB memory alloc based on sys=16384MB, container=0MB\n"}
{"Time":"2023-05-31T11:43:10.715649-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026466    1479 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T11:43:10.715651-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026484    1479 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:43:10.715655-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026508    1479 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T11:43:10.715657-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026512    1479 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:43:10.715661-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t{Name:download-only-883000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:download-only-883000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRun"}
{"Time":"2023-05-31T11:43:10.715666-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"time:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:43:10.71567-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.026680    1479 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:43:10.715674-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.036272    1479 out.go:97] Downloading VM boot image ...\n"}
{"Time":"2023-05-31T11:43:10.715677-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:46.036306    1479 download.go:107] Downloading: https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso?checksum=file:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso.sha256 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso\n"}
{"Time":"2023-05-31T11:43:10.715684-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.456116    1479 out.go:97] Starting control plane node download-only-883000 in cluster download-only-883000\n"}
{"Time":"2023-05-31T11:43:10.715689-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.456148    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.715691-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.513577    1479 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.16.0/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:10.715694-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.513623    1479 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:43:10.715696-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.513795    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.715698-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.518901    1479 out.go:97] Downloading Kubernetes v1.16.0 preload ...\n"}
{"Time":"2023-05-31T11:43:10.715701-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.518907    1479 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.715704-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:42:59.653332    1479 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.16.0/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4?checksum=md5:a000baffb0664b293d602f95ed25caa6 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:10.715706-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:09.475994    1479 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.715709-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:09.476138    1479 preload.go:256] verifying checksum of /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:10.715711-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.128767    1479 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T11:43:10.715714-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.128940    1479 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/download-only-883000/config.json ...\n"}
{"Time":"2023-05-31T11:43:10.715716-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.128958    1479 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/download-only-883000/config.json: {Name:mkb379b1b60f82f079305edc44cc631f1f2aca8c Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:43:10.715719-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.129203    1479 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T11:43:10.715725-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.129387    1479 download.go:107] Downloading: https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl\n"}
{"Time":"2023-05-31T11:43:10.715728-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.581814    1479 out.go:169] \n"}
{"Time":"2023-05-31T11:43:10.715732-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:43:10.584777    1479 out_reason.go:110] Failed to cache kubectl: download failed: https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1: getter: \u0026{Ctx:context.Background Src:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.16.0/bin/darwin/arm64/kubectl.sha1 Dst:/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.16.0/kubectl.download Pwd: Mode:2 Umask:---------- Detectors:[0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8 0x1042b33b8] Decompressors:map[bz2:0x14000057038 gz:0x14000057110 tar:0x14000057040 tar.bz2:0x14000057050 tar.gz:0x140000570a0 tar.xz:0x140000570c0 tar.zst:0x140000570e0 tbz2:0x14000057050 tgz:0x140000570a0 txz:0x140000570c0 tzst:0x140000570e0 xz:0x14000057118 zip:0x14000057120 zst:0x14000057130] Getters:map[file:0x14000130b80 http:0x140009c0a00 https:0x140009c0a50] Dir:false ProgressListener"}
{"Time":"2023-05-31T11:43:10.715735-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":":\u003cnil\u003e Insecure:false DisableSymlinks:false Options:[]}: invalid checksum: Error downloading checksum file: bad response code: 404\n"}
{"Time":"2023-05-31T11:43:10.715738-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:43:10.584802    1479 out_reason.go:110] \n"}
{"Time":"2023-05-31T11:43:10.715741-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tW0531 11:43:10.590865    1479 out.go:229] ╭───────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:43:10.715744-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.715746-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│    If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:43:10.715749-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│    https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:43:10.715751-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.715753-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:43:10.715755-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t│                                                                                           │\n"}
{"Time":"2023-05-31T11:43:10.715758-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t╰───────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:43:10.71576-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \tI0531 11:43:10.593717    1479 out.go:169] \n"}
{"Time":"2023-05-31T11:43:10.715763-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t\n"}
{"Time":"2023-05-31T11:43:10.715765-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:10.715767-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t* The control plane node \"\" does not exist.\n"}
{"Time":"2023-05-31T11:43:10.715769-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \t  To start a cluster, run: \"minikube start -p download-only-883000\"\n"}
{"Time":"2023-05-31T11:43:10.715771-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.715773-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:43:10.715775-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"    aaa_download_only_test.go:170: minikube logs failed with error: exit status 85\n"}
{"Time":"2023-05-31T11:43:10.715784-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:43:10.715787-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p download-only-883000 -n download-only-883000\n"}
{"Time":"2023-05-31T11:43:10.749988-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p download-only-883000 -n download-only-883000: exit status 7 (34.330458ms)\n"}
{"Time":"2023-05-31T11:43:10.750005-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.750008-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:43:10.750009-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"        \tNonexistent\n"}
{"Time":"2023-05-31T11:43:10.750011-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"        \n"}
{"Time":"2023-05-31T11:43:10.750012-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:43:10.750014-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:43:10.750015-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    helpers_test.go:241: \"download-only-883000\" host is not running, skipping log retrieval (state=\"Nonexistent\")\n"}
{"Time":"2023-05-31T11:43:10.750019-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2"}
{"Time":"2023-05-31T11:43:10.75002-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2","Output":"=== RUN   TestDownloadOnly/v1.27.2\n"}
{"Time":"2023-05-31T11:43:10.750028-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/json-events"}
{"Time":"2023-05-31T11:43:10.75003-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/json-events","Output":"=== RUN   TestDownloadOnly/v1.27.2/json-events\n"}
{"Time":"2023-05-31T11:43:10.750055-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/json-events","Output":"    aaa_download_only_test.go:69: (dbg) Run:  out/minikube-darwin-arm64 start -o=json --download-only -p download-only-883000 --force --alsologtostderr --kubernetes-version=v1.27.2 --container-runtime=docker --driver=qemu2 \n"}
{"Time":"2023-05-31T11:43:24.170827-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/json-events","Output":"    aaa_download_only_test.go:69: (dbg) Done: out/minikube-darwin-arm64 start -o=json --download-only -p download-only-883000 --force --alsologtostderr --kubernetes-version=v1.27.2 --container-runtime=docker --driver=qemu2 : (13.420956s)\n"}
{"Time":"2023-05-31T11:43:24.170964-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/preload-exists"}
{"Time":"2023-05-31T11:43:24.170971-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/preload-exists","Output":"=== RUN   TestDownloadOnly/v1.27.2/preload-exists\n"}
{"Time":"2023-05-31T11:43:24.171144-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/cached-images"}
{"Time":"2023-05-31T11:43:24.171155-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/cached-images","Output":"=== RUN   TestDownloadOnly/v1.27.2/cached-images\n"}
{"Time":"2023-05-31T11:43:24.171158-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/cached-images","Output":"    aaa_download_only_test.go:117: Preload exists, images won't be cached\n"}
{"Time":"2023-05-31T11:43:24.171161-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/binaries"}
{"Time":"2023-05-31T11:43:24.171163-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/binaries","Output":"=== RUN   TestDownloadOnly/v1.27.2/binaries\n"}
{"Time":"2023-05-31T11:43:24.171165-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/binaries","Output":"    aaa_download_only_test.go:136: Preload exists, binaries are present within.\n"}
{"Time":"2023-05-31T11:43:24.171168-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/kubectl"}
{"Time":"2023-05-31T11:43:24.171169-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/kubectl","Output":"=== RUN   TestDownloadOnly/v1.27.2/kubectl\n"}
{"Time":"2023-05-31T11:43:24.171194-07:00","Action":"run","Test":"TestDownloadOnly/v1.27.2/LogsDuration"}
{"Time":"2023-05-31T11:43:24.171198-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"=== RUN   TestDownloadOnly/v1.27.2/LogsDuration\n"}
{"Time":"2023-05-31T11:43:24.171215-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"    aaa_download_only_test.go:169: (dbg) Run:  out/minikube-darwin-arm64 logs -p download-only-883000\n"}
{"Time":"2023-05-31T11:43:24.246156-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"    aaa_download_only_test.go:169: (dbg) Non-zero exit: out/minikube-darwin-arm64 logs -p download-only-883000: exit status 85 (74.369875ms)\n"}
{"Time":"2023-05-31T11:43:24.246175-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \n"}
{"Time":"2023-05-31T11:43:24.246177-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:43:24.246179-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:24.24618-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T11:43:24.246183-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* |---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:24.246185-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t| Command |              Args              |       Profile        |  User   | Version |     Start Time      | End Time |\n"}
{"Time":"2023-05-31T11:43:24.246187-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:24.246188-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t| start   | -o=json --download-only        | download-only-883000 | jenkins | v1.30.1 | 31 May 23 11:42 PDT |          |\n"}
{"Time":"2023-05-31T11:43:24.24619-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | -p download-only-883000        |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246202-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --force --alsologtostderr      |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246204-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --kubernetes-version=v1.16.0   |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246206-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --container-runtime=docker     |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246208-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --driver=qemu2                 |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246209-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t| start   | -o=json --download-only        | download-only-883000 | jenkins | v1.30.1 | 31 May 23 11:43 PDT |          |\n"}
{"Time":"2023-05-31T11:43:24.246211-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | -p download-only-883000        |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246213-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --force --alsologtostderr      |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246214-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --kubernetes-version=v1.27.2   |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246216-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --container-runtime=docker     |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246218-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|         | --driver=qemu2                 |                      |         |         |                     |          |\n"}
{"Time":"2023-05-31T11:43:24.246219-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t|---------|--------------------------------|----------------------|---------|---------|---------------------|----------|\n"}
{"Time":"2023-05-31T11:43:24.246221-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t\n"}
{"Time":"2023-05-31T11:43:24.246222-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:24.246223-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T11:43:24.246225-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* Log file created at: 2023/05/31 11:43:10\n"}
{"Time":"2023-05-31T11:43:24.246229-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T11:43:24.246231-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T11:43:24.246233-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T11:43:24.246234-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.776407    1490 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:43:24.246236-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.776519    1490 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:24.246238-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.776521    1490 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:43:24.246239-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.776524    1490 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:43:24.246241-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.776591    1490 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:43:24.246243-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tW0531 11:43:10.776647    1490 root.go:312] Error reading config file at /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: open /Users/jenkins/minikube-integration/16569-1035/.minikube/config/config.json: no such file or directory\n"}
{"Time":"2023-05-31T11:43:24.246245-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.777639    1490 out.go:303] Setting JSON to true\n"}
{"Time":"2023-05-31T11:43:24.246247-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.792754    1490 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":761,\"bootTime\":1685557829,\"procs\":409,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:43:24.24625-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tW0531 11:43:10.792819    1490 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:43:24.246251-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.796476    1490 out.go:97] [download-only-883000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:43:24.246253-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.800459    1490 out.go:169] MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:43:24.246255-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.796576    1490 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:43:24.246257-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.806473    1490 out.go:169] KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:43:24.246258-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.809492    1490 out.go:169] MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:43:24.24626-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.812470    1490 out.go:169] MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:43:24.246262-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.815470    1490 out.go:169] MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:43:24.246263-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tW0531 11:43:10.821450    1490 out.go:272] minikube skips various validations when --force is supplied; this may lead to unexpected behavior\n"}
{"Time":"2023-05-31T11:43:24.246265-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.821730    1490 config.go:182] Loaded profile config \"download-only-883000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.16.0\n"}
{"Time":"2023-05-31T11:43:24.246267-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tW0531 11:43:10.821754    1490 start.go:783] api.Load failed for download-only-883000: filestore \"download-only-883000\": Docker machine \"download-only-883000\" does not exist. Use \"docker-machine ls\" to list machines. Use \"docker-machine create\" to add a new one.\n"}
{"Time":"2023-05-31T11:43:24.24627-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.821793    1490 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:43:24.246271-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tW0531 11:43:10.821805    1490 start.go:783] api.Load failed for download-only-883000: filestore \"download-only-883000\": Docker machine \"download-only-883000\" does not exist. Use \"docker-machine ls\" to list machines. Use \"docker-machine create\" to add a new one.\n"}
{"Time":"2023-05-31T11:43:24.246273-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.825400    1490 out.go:97] Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:43:24.246275-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.825409    1490 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:43:24.246279-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.825411    1490 start.go:875] validating driver \"qemu2\" against \u0026{Name:download-only-883000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T11:43:24.246287-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"onfig:{KubernetesVersion:v1.16.0 ClusterName:download-only-883000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker Binar"}
{"Time":"2023-05-31T11:43:24.24629-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"yMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:43:24.246291-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.827278    1490 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:43:24.246294-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.827295    1490 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:43:24.246296-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.827301    1490 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:43:24.246299-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t{Name:download-only-883000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:download-only-883000 Namespace:def"}
{"Time":"2023-05-31T11:43:24.246308-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"ault APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath"}
{"Time":"2023-05-31T11:43:24.246311-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":": SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:43:24.246313-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.827387    1490 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:43:24.246315-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.830461    1490 out.go:97] Starting control plane node download-only-883000 in cluster download-only-883000\n"}
{"Time":"2023-05-31T11:43:24.246316-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.830469    1490 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:43:24.246318-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.978685    1490 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.2/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:24.24632-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.978746    1490 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:43:24.246322-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.979114    1490 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:43:24.246324-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.983258    1490 out.go:97] Downloading Kubernetes v1.27.2 preload ...\n"}
{"Time":"2023-05-31T11:43:24.246325-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:10.983273    1490 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:24.246327-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:11.121672    1490 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.2/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4?checksum=md5:4271952d77a401a4cbcfc4225771d46f -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:43:24.24633-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:19.753945    1490 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:24.246332-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:19.754069    1490 preload.go:256] verifying checksum of /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:43:24.246334-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:20.323189    1490 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:43:24.246335-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:20.323268    1490 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/download-only-883000/config.json ...\n"}
{"Time":"2023-05-31T11:43:24.24634-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:20.323584    1490 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:43:24.246342-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \tI0531 11:43:20.323743    1490 download.go:107] Downloading: https://dl.k8s.io/release/v1.27.2/bin/darwin/arm64/kubectl?checksum=file:https://dl.k8s.io/release/v1.27.2/bin/darwin/arm64/kubectl.sha256 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/darwin/arm64/v1.27.2/kubectl\n"}
{"Time":"2023-05-31T11:43:24.246344-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t\n"}
{"Time":"2023-05-31T11:43:24.246345-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:43:24.246347-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t* The control plane node \"\" does not exist.\n"}
{"Time":"2023-05-31T11:43:24.246349-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \t  To start a cluster, run: \"minikube start -p download-only-883000\"\n"}
{"Time":"2023-05-31T11:43:24.24635-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        \n"}
{"Time":"2023-05-31T11:43:24.246352-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:43:24.246353-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"    aaa_download_only_test.go:170: minikube logs failed with error: exit status 85\n"}
{"Time":"2023-05-31T11:43:24.246357-07:00","Action":"run","Test":"TestDownloadOnly/DeleteAll"}
{"Time":"2023-05-31T11:43:24.246359-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAll","Output":"=== RUN   TestDownloadOnly/DeleteAll\n"}
{"Time":"2023-05-31T11:43:24.246364-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAll","Output":"    aaa_download_only_test.go:187: (dbg) Run:  out/minikube-darwin-arm64 delete --all\n"}
{"Time":"2023-05-31T11:43:24.4887-07:00","Action":"run","Test":"TestDownloadOnly/DeleteAlwaysSucceeds"}
{"Time":"2023-05-31T11:43:24.488711-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAlwaysSucceeds","Output":"=== RUN   TestDownloadOnly/DeleteAlwaysSucceeds\n"}
{"Time":"2023-05-31T11:43:24.48874-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAlwaysSucceeds","Output":"    aaa_download_only_test.go:199: (dbg) Run:  out/minikube-darwin-arm64 delete -p download-only-883000\n"}
{"Time":"2023-05-31T11:43:24.720166-07:00","Action":"output","Test":"TestDownloadOnly","Output":"    helpers_test.go:175: Cleaning up \"download-only-883000\" profile ...\n"}
{"Time":"2023-05-31T11:43:24.72019-07:00","Action":"output","Test":"TestDownloadOnly","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p download-only-883000\n"}
{"Time":"2023-05-31T11:43:24.949899-07:00","Action":"output","Test":"TestDownloadOnly","Output":"--- FAIL: TestDownloadOnly (39.11s)\n"}
{"Time":"2023-05-31T11:43:24.949919-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0","Output":"    --- FAIL: TestDownloadOnly/v1.16.0 (24.91s)\n"}
{"Time":"2023-05-31T11:43:24.949924-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/json-events","Output":"        --- FAIL: TestDownloadOnly/v1.16.0/json-events (24.78s)\n"}
{"Time":"2023-05-31T11:43:24.949926-07:00","Action":"fail","Test":"TestDownloadOnly/v1.16.0/json-events","Elapsed":24.78}
{"Time":"2023-05-31T11:43:24.949942-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/preload-exists","Output":"        --- PASS: TestDownloadOnly/v1.16.0/preload-exists (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949948-07:00","Action":"pass","Test":"TestDownloadOnly/v1.16.0/preload-exists","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949949-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/cached-images","Output":"        --- SKIP: TestDownloadOnly/v1.16.0/cached-images (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.94995-07:00","Action":"skip","Test":"TestDownloadOnly/v1.16.0/cached-images","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949952-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/binaries","Output":"        --- SKIP: TestDownloadOnly/v1.16.0/binaries (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949953-07:00","Action":"skip","Test":"TestDownloadOnly/v1.16.0/binaries","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949954-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/kubectl","Output":"        --- FAIL: TestDownloadOnly/v1.16.0/kubectl (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949956-07:00","Action":"fail","Test":"TestDownloadOnly/v1.16.0/kubectl","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949957-07:00","Action":"output","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Output":"        --- PASS: TestDownloadOnly/v1.16.0/LogsDuration (0.09s)\n"}
{"Time":"2023-05-31T11:43:24.949958-07:00","Action":"pass","Test":"TestDownloadOnly/v1.16.0/LogsDuration","Elapsed":0.09}
{"Time":"2023-05-31T11:43:24.94996-07:00","Action":"fail","Test":"TestDownloadOnly/v1.16.0","Elapsed":24.91}
{"Time":"2023-05-31T11:43:24.949961-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2","Output":"    --- PASS: TestDownloadOnly/v1.27.2 (13.50s)\n"}
{"Time":"2023-05-31T11:43:24.949963-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/json-events","Output":"        --- PASS: TestDownloadOnly/v1.27.2/json-events (13.42s)\n"}
{"Time":"2023-05-31T11:43:24.949964-07:00","Action":"pass","Test":"TestDownloadOnly/v1.27.2/json-events","Elapsed":13.42}
{"Time":"2023-05-31T11:43:24.949966-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/preload-exists","Output":"        --- PASS: TestDownloadOnly/v1.27.2/preload-exists (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949967-07:00","Action":"pass","Test":"TestDownloadOnly/v1.27.2/preload-exists","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949969-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/cached-images","Output":"        --- SKIP: TestDownloadOnly/v1.27.2/cached-images (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949982-07:00","Action":"skip","Test":"TestDownloadOnly/v1.27.2/cached-images","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949983-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/binaries","Output":"        --- SKIP: TestDownloadOnly/v1.27.2/binaries (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949985-07:00","Action":"skip","Test":"TestDownloadOnly/v1.27.2/binaries","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949986-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/kubectl","Output":"        --- PASS: TestDownloadOnly/v1.27.2/kubectl (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.949987-07:00","Action":"pass","Test":"TestDownloadOnly/v1.27.2/kubectl","Elapsed":0}
{"Time":"2023-05-31T11:43:24.949988-07:00","Action":"output","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Output":"        --- PASS: TestDownloadOnly/v1.27.2/LogsDuration (0.07s)\n"}
{"Time":"2023-05-31T11:43:24.94999-07:00","Action":"pass","Test":"TestDownloadOnly/v1.27.2/LogsDuration","Elapsed":0.07}
{"Time":"2023-05-31T11:43:24.949992-07:00","Action":"pass","Test":"TestDownloadOnly/v1.27.2","Elapsed":13.5}
{"Time":"2023-05-31T11:43:24.949995-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAll","Output":"    --- PASS: TestDownloadOnly/DeleteAll (0.24s)\n"}
{"Time":"2023-05-31T11:43:24.949997-07:00","Action":"pass","Test":"TestDownloadOnly/DeleteAll","Elapsed":0.24}
{"Time":"2023-05-31T11:43:24.949998-07:00","Action":"output","Test":"TestDownloadOnly/DeleteAlwaysSucceeds","Output":"    --- PASS: TestDownloadOnly/DeleteAlwaysSucceeds (0.23s)\n"}
{"Time":"2023-05-31T11:43:24.950001-07:00","Action":"pass","Test":"TestDownloadOnly/DeleteAlwaysSucceeds","Elapsed":0.23}
{"Time":"2023-05-31T11:43:24.950002-07:00","Action":"fail","Test":"TestDownloadOnly","Elapsed":39.11}
{"Time":"2023-05-31T11:43:24.950003-07:00","Action":"run","Test":"TestDownloadOnlyKic"}
{"Time":"2023-05-31T11:43:24.950004-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"=== RUN   TestDownloadOnlyKic\n"}
{"Time":"2023-05-31T11:43:24.950006-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    aaa_download_only_test.go:210: skipping, only for docker or podman driver\n"}
{"Time":"2023-05-31T11:43:24.950007-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"--- SKIP: TestDownloadOnlyKic (0.00s)\n"}
{"Time":"2023-05-31T11:43:24.950009-07:00","Action":"skip","Test":"TestDownloadOnlyKic","Elapsed":0}
{"Time":"2023-05-31T11:43:24.950011-07:00","Action":"run","Test":"TestBinaryMirror"}
{"Time":"2023-05-31T11:43:24.950012-07:00","Action":"output","Test":"TestBinaryMirror","Output":"=== RUN   TestBinaryMirror\n"}
{"Time":"2023-05-31T11:43:24.9813-07:00","Action":"output","Test":"TestBinaryMirror","Output":"    aaa_download_only_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 start --download-only -p binary-mirror-974000 --alsologtostderr --binary-mirror http://127.0.0.1:49416 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:43:25.167247-07:00","Action":"output","Test":"TestBinaryMirror","Output":"    helpers_test.go:175: Cleaning up \"binary-mirror-974000\" profile ...\n"}
{"Time":"2023-05-31T11:43:25.16726-07:00","Action":"output","Test":"TestBinaryMirror","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p binary-mirror-974000\n"}
{"Time":"2023-05-31T11:43:25.281846-07:00","Action":"output","Test":"TestBinaryMirror","Output":"--- PASS: TestBinaryMirror (0.33s)\n"}
{"Time":"2023-05-31T11:43:25.281863-07:00","Action":"pass","Test":"TestBinaryMirror","Elapsed":0.33}
{"Time":"2023-05-31T11:43:25.281867-07:00","Action":"run","Test":"TestOffline"}
{"Time":"2023-05-31T11:43:25.281873-07:00","Action":"output","Test":"TestOffline","Output":"=== RUN   TestOffline\n"}
{"Time":"2023-05-31T11:43:25.281883-07:00","Action":"output","Test":"TestOffline","Output":"=== PAUSE TestOffline\n"}
{"Time":"2023-05-31T11:43:25.281884-07:00","Action":"pause","Test":"TestOffline"}
{"Time":"2023-05-31T11:43:25.281886-07:00","Action":"run","Test":"TestAddons"}
{"Time":"2023-05-31T11:43:25.281887-07:00","Action":"output","Test":"TestAddons","Output":"=== RUN   TestAddons\n"}
{"Time":"2023-05-31T11:43:25.281918-07:00","Action":"run","Test":"TestAddons/Setup"}
{"Time":"2023-05-31T11:43:25.281922-07:00","Action":"output","Test":"TestAddons/Setup","Output":"=== RUN   TestAddons/Setup\n"}
{"Time":"2023-05-31T11:43:25.281975-07:00","Action":"output","Test":"TestAddons/Setup","Output":"    addons_test.go:88: (dbg) Run:  out/minikube-darwin-arm64 start -p addons-901000 --wait=true --memory=4000 --alsologtostderr --addons=registry --addons=metrics-server --addons=volumesnapshots --addons=csi-hostpath-driver --addons=gcp-auth --addons=cloud-spanner --addons=inspektor-gadget --driver=qemu2  --addons=ingress --addons=ingress-dns\n"}
{"Time":"2023-05-31T11:44:08.730828-07:00","Action":"output","Test":"TestAddons/Setup","Output":"    addons_test.go:88: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p addons-901000 --wait=true --memory=4000 --alsologtostderr --addons=registry --addons=metrics-server --addons=volumesnapshots --addons=csi-hostpath-driver --addons=gcp-auth --addons=cloud-spanner --addons=inspektor-gadget --driver=qemu2  --addons=ingress --addons=ingress-dns: exit status 80 (43.445128458s)\n"}
{"Time":"2023-05-31T11:44:08.730851-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \n"}
{"Time":"2023-05-31T11:44:08.730855-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:44:08.730858-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* [addons-901000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:44:08.730859-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:44:08.730862-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.730863-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:44:08.730866-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:44:08.730868-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:44:08.730869-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:44:08.730871-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:44:08.730872-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:44:08.730874-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Starting control plane node addons-901000 in cluster addons-901000\n"}
{"Time":"2023-05-31T11:44:08.730875-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:44:08.730877-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Preparing Kubernetes v1.27.2 on Docker 24.0.1 ...\n"}
{"Time":"2023-05-31T11:44:08.730878-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Generating certificates and keys ...\n"}
{"Time":"2023-05-31T11:44:08.730879-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Booting up control plane ...\n"}
{"Time":"2023-05-31T11:44:08.73088-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Configuring RBAC rules ...\n"}
{"Time":"2023-05-31T11:44:08.730882-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Configuring bridge CNI (Container Networking Interface) ...\n"}
{"Time":"2023-05-31T11:44:08.730883-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Verifying csi-hostpath-driver addon...\n"}
{"Time":"2023-05-31T11:44:08.730884-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Using image ghcr.io/inspektor-gadget/inspektor-gadget:v0.16.1\n"}
{"Time":"2023-05-31T11:44:08.730886-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794\n"}
{"Time":"2023-05-31T11:44:08.730888-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.730889-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Using image gcr.io/cloud-spanner-emulator/emulator:1.5.5\n"}
{"Time":"2023-05-31T11:44:08.73089-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794\n"}
{"Time":"2023-05-31T11:44:08.73093-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - Using image registry.k8s.io/ingress-nginx/controller:v1.7.0\n"}
{"Time":"2023-05-31T11:44:08.730933-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* Verifying registry addon...\n"}
{"Time":"2023-05-31T11:44:08.730934-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.730935-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \n"}
{"Time":"2023-05-31T11:44:08.730948-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:44:08.730949-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:44:08.730952-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.308142    1544 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:44:08.730954-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.308531    1544 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:44:08.730955-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.308535    1544 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:44:08.730957-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.308537    1544 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:44:08.730958-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.308644    1544 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:44:08.73096-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.310229    1544 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:44:08.730961-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.325614    1544 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":776,\"bootTime\":1685557829,\"procs\":394,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:44:08.730964-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:43:25.325680    1544 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:44:08.730965-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.331124    1544 out.go:177] * [addons-901000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:44:08.730967-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.338309    1544 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:44:08.730968-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.338330    1544 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:44:08.730969-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.341302    1544 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.730971-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.344323    1544 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:44:08.730972-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.347303    1544 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:44:08.730977-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.350270    1544 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:44:08.730979-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.353269    1544 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:44:08.73098-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.356423    1544 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:44:08.730981-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.359183    1544 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:44:08.730983-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.366292    1544 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:44:08.730985-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.366297    1544 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:44:08.730986-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.366303    1544 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:44:08.730988-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.368133    1544 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:44:08.73099-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.375247    1544 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:44:08.730991-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378354    1544 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:44:08.730992-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378367    1544 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:44:08.730994-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378383    1544 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:44:08.730996-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378387    1544 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:44:08.730997-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378394    1544 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:44:08.731-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t{Name:addons-901000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:addons-901000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CR"}
{"Time":"2023-05-31T11:44:08.731004-07:00","Action":"output","Test":"TestAddons/Setup","Output":"ISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:44:08.731006-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.378499    1544 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731008-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.387239    1544 out.go:177] * Starting control plane node addons-901000 in cluster addons-901000\n"}
{"Time":"2023-05-31T11:44:08.731009-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391231    1544 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:44:08.731013-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391254    1544 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:44:08.731015-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391266    1544 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:44:08.731017-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391334    1544 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:44:08.731018-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391339    1544 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:44:08.73102-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391556    1544 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/config.json ...\n"}
{"Time":"2023-05-31T11:44:08.731021-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391568    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/config.json: {Name:mk97a64ec3b197a4650b130f9b12c09b679b0329 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731023-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391774    1544 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:44:08.731024-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391809    1544 start.go:364] acquiring machines lock for addons-901000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731026-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391890    1544 start.go:368] acquired machines lock for \"addons-901000\" in 75.583µs\n"}
{"Time":"2023-05-31T11:44:08.731029-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391915    1544 start.go:93] Provisioning new machine with config: \u0026{Name:addons-901000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T11:44:08.731032-07:00","Action":"output","Test":"TestAddons/Setup","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:addons-901000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262"}
{"Time":"2023-05-31T11:44:08.731034-07:00","Action":"output","Test":"TestAddons/Setup","Output":"144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:44:08.731036-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.391944    1544 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:44:08.731038-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.400297    1544 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:44:08.731039-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.760738    1544 start.go:159] libmachine.API.Create for \"addons-901000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:44:08.731041-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.760770    1544 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:44:08.731042-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.760930    1544 main.go:141] libmachine: Creating CA: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:44:08.731044-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.826509    1544 main.go:141] libmachine: Creating client certificate: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:44:08.731045-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:25.861468    1544 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:44:08.731047-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.180605    1544 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:44:08.731048-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.321589    1544 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:44:08.73105-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.321596    1544 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:44:08.731052-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.321801    1544 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2\n"}
{"Time":"2023-05-31T11:44:08.731053-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.410519    1544 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:44:08.731054-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.410543    1544 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:44:08.731056-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.410612    1544 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:44:08.731057-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.417949    1544 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:44:08.731058-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.73106-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.417969    1544 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:44:08.731061-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.417983    1544 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2\n"}
{"Time":"2023-05-31T11:44:08.731063-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.417995    1544 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:44:08.731065-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.418030    1544 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 4000 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/qemu.pid -device virtio-net-pci,netdev=net0,mac=56:da:28:08:b0:67 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/disk.qcow2\n"}
{"Time":"2023-05-31T11:44:08.731067-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.496279    1544 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:44:08.731068-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.496301    1544 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:44:08.731069-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.496305    1544 main.go:141] libmachine: Attempt 0\n"}
{"Time":"2023-05-31T11:44:08.731071-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:26.496322    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731072-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:28.498527    1544 main.go:141] libmachine: Attempt 1\n"}
{"Time":"2023-05-31T11:44:08.731073-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:28.498606    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731075-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:30.500731    1544 main.go:141] libmachine: Attempt 2\n"}
{"Time":"2023-05-31T11:44:08.731076-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:30.500752    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731078-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:32.502751    1544 main.go:141] libmachine: Attempt 3\n"}
{"Time":"2023-05-31T11:44:08.731079-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:32.502765    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731083-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:34.504747    1544 main.go:141] libmachine: Attempt 4\n"}
{"Time":"2023-05-31T11:44:08.731085-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:34.504757    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731088-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:36.506778    1544 main.go:141] libmachine: Attempt 5\n"}
{"Time":"2023-05-31T11:44:08.73109-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:36.506811    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731092-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509000    1544 main.go:141] libmachine: Attempt 6\n"}
{"Time":"2023-05-31T11:44:08.731093-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509089    1544 main.go:141] libmachine: Searching for 56:da:28:8:b0:67 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:44:08.731095-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509390    1544 main.go:141] libmachine: Found 1 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:44:08.731096-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509515    1544 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:44:08.731098-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509539    1544 main.go:141] libmachine: Found match: 56:da:28:8:b0:67\n"}
{"Time":"2023-05-31T11:44:08.731099-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509576    1544 main.go:141] libmachine: IP: 192.168.105.2\n"}
{"Time":"2023-05-31T11:44:08.7311-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:38.509602    1544 main.go:141] libmachine: Waiting for VM to start (ssh -p 22 docker@192.168.105.2)...\n"}
{"Time":"2023-05-31T11:44:08.731102-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.530950    1544 machine.go:88] provisioning docker machine ...\n"}
{"Time":"2023-05-31T11:44:08.731103-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.531039    1544 buildroot.go:166] provisioning hostname \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.731105-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.531918    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731106-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.532971    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731108-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.532988    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.731109-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tsudo hostname addons-901000 \u0026\u0026 echo \"addons-901000\" | sudo tee /etc/hostname\n"}
{"Time":"2023-05-31T11:44:08.73111-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.624549    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: addons-901000\n"}
{"Time":"2023-05-31T11:44:08.731112-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731113-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.624666    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731114-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.625161    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731116-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.625177    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.731117-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731118-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\tif ! grep -xq '.*\\saddons-901000' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:44:08.73112-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\t\tif grep -xq '127.0.1.1\\s.*' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:44:08.731123-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\t\t\tsudo sed -i 's/^127.0.1.1\\s.*/127.0.1.1 addons-901000/g' /etc/hosts;\n"}
{"Time":"2023-05-31T11:44:08.731125-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\t\telse \n"}
{"Time":"2023-05-31T11:44:08.731126-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\t\t\techo '127.0.1.1 addons-901000' | sudo tee -a /etc/hosts; \n"}
{"Time":"2023-05-31T11:44:08.731128-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\t\tfi\n"}
{"Time":"2023-05-31T11:44:08.731129-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\t\tfi\n"}
{"Time":"2023-05-31T11:44:08.73113-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702666    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: \n"}
{"Time":"2023-05-31T11:44:08.731132-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702683    1544 buildroot.go:172] set auth options {CertDir:/Users/jenkins/minikube-integration/16569-1035/.minikube CaCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ServerKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem ClientKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/jenkins/minikube-integration/16569-1035/.minikube}\n"}
{"Time":"2023-05-31T11:44:08.731135-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702699    1544 buildroot.go:174] setting up certificates\n"}
{"Time":"2023-05-31T11:44:08.731136-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702711    1544 provision.go:83] configureAuth start\n"}
{"Time":"2023-05-31T11:44:08.731137-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702718    1544 provision.go:138] copyHostCerts\n"}
{"Time":"2023-05-31T11:44:08.731139-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.702884    1544 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731141-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.703947    1544 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731143-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.704319    1544 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731145-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.704548    1544 provision.go:112] generating server cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ca-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem private-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem org=jenkins.addons-901000 san=[192.168.105.2 192.168.105.2 localhost 127.0.0.1 minikube addons-901000]\n"}
{"Time":"2023-05-31T11:44:08.731147-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.993593    1544 provision.go:172] copyRemoteCerts\n"}
{"Time":"2023-05-31T11:44:08.731148-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.993708    1544 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker\n"}
{"Time":"2023-05-31T11:44:08.73115-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:40.993733    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.731151-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.027715    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem --\u003e /etc/docker/server-key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731153-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.034887    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /etc/docker/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731157-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.041770    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem --\u003e /etc/docker/server.pem (1216 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731158-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.048574    1544 provision.go:86] duration metric: configureAuth took 345.862959ms\n"}
{"Time":"2023-05-31T11:44:08.73116-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.048583    1544 buildroot.go:189] setting minikube options for container-runtime\n"}
{"Time":"2023-05-31T11:44:08.731161-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.048928    1544 config.go:182] Loaded profile config \"addons-901000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.731163-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.048975    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731164-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.049205    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731166-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.049215    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.731167-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tdf --output=fstype / | tail -n 1\n"}
{"Time":"2023-05-31T11:44:08.731169-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114421    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: tmpfs\n"}
{"Time":"2023-05-31T11:44:08.73117-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731171-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114432    1544 buildroot.go:70] root file system type: tmpfs\n"}
{"Time":"2023-05-31T11:44:08.731173-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114487    1544 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...\n"}
{"Time":"2023-05-31T11:44:08.731174-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114537    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731176-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114794    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731177-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.114835    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.731179-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tsudo mkdir -p /lib/systemd/system \u0026\u0026 printf %s \"[Unit]\n"}
{"Time":"2023-05-31T11:44:08.73118-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:44:08.731182-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:44:08.731183-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:44:08.731184-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:44:08.731186-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:44:08.731187-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:44:08.731188-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.73119-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:44:08.731191-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:44:08.731192-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:44:08.731193-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731194-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731196-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731197-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:44:08.731198-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:44:08.7312-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:44:08.731201-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:44:08.731203-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:44:08.731204-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:44:08.731225-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:44:08.731226-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731228-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:44:08.731229-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:44:08.731231-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:44:08.731232-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:44:08.731236-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecReload=/bin/kill -s HUP \\$MAINPID\n"}
{"Time":"2023-05-31T11:44:08.731238-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731239-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:44:08.73124-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:44:08.731242-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:44:08.731243-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:44:08.731245-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:44:08.731246-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731248-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:44:08.731249-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:44:08.73125-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:44:08.731251-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:44:08.731252-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731254-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:44:08.731255-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:44:08.731256-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731257-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:44:08.731259-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:44:08.73126-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731261-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:44:08.731262-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:44:08.731263-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\" | sudo tee /lib/systemd/system/docker.service.new\n"}
{"Time":"2023-05-31T11:44:08.731265-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.181378    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: [Unit]\n"}
{"Time":"2023-05-31T11:44:08.731266-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:44:08.731267-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:44:08.731269-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:44:08.73127-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:44:08.731271-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:44:08.731273-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:44:08.731274-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731275-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:44:08.731276-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:44:08.731278-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:44:08.731279-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.73128-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731281-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731282-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:44:08.731284-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:44:08.731285-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:44:08.731286-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:44:08.731288-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:44:08.731289-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:44:08.731292-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:44:08.731294-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731295-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:44:08.731297-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:44:08.731298-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:44:08.7313-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:44:08.731301-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecReload=/bin/kill -s HUP $MAINPID\n"}
{"Time":"2023-05-31T11:44:08.731303-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731304-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:44:08.731305-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:44:08.731307-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:44:08.731308-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:44:08.731309-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:44:08.73131-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731312-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:44:08.731313-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:44:08.731314-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:44:08.731316-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:44:08.731318-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731319-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:44:08.73132-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:44:08.731322-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731323-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:44:08.731324-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:44:08.731325-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731327-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:44:08.731328-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:44:08.731329-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731331-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.181426    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731332-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.181675    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731334-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.181689    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.731336-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tsudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload \u0026\u0026 sudo systemctl -f enable docker \u0026\u0026 sudo systemctl -f restart docker; }\n"}
{"Time":"2023-05-31T11:44:08.731337-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533403    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: diff: can't stat '/lib/systemd/system/docker.service': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.731339-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tCreated symlink /etc/systemd/system/multi-user.target.wants/docker.service → /usr/lib/systemd/system/docker.service.\n"}
{"Time":"2023-05-31T11:44:08.73134-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731342-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533415    1544 machine.go:91] provisioned docker machine in 1.002459208s\n"}
{"Time":"2023-05-31T11:44:08.731343-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533421    1544 client.go:171] LocalClient.Create took 15.773024959s\n"}
{"Time":"2023-05-31T11:44:08.731347-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533429    1544 start.go:167] duration metric: libmachine.API.Create for \"addons-901000\" took 15.773075458s\n"}
{"Time":"2023-05-31T11:44:08.731348-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533433    1544 start.go:300] post-start starting for \"addons-901000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:44:08.73135-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533437    1544 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]\n"}
{"Time":"2023-05-31T11:44:08.731352-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533492    1544 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:44:08.731353-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.533501    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.731355-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.567644    1544 ssh_runner.go:195] Run: cat /etc/os-release\n"}
{"Time":"2023-05-31T11:44:08.731356-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569293    1544 info.go:137] Remote host: Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:44:08.731358-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569303    1544 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/addons for local assets ...\n"}
{"Time":"2023-05-31T11:44:08.73136-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569367    1544 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/files for local assets ...\n"}
{"Time":"2023-05-31T11:44:08.731361-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569390    1544 start.go:303] post-start completed in 35.955375ms\n"}
{"Time":"2023-05-31T11:44:08.731363-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569755    1544 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/config.json ...\n"}
{"Time":"2023-05-31T11:44:08.731365-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569905    1544 start.go:128] duration metric: createHost completed in 16.178345875s\n"}
{"Time":"2023-05-31T11:44:08.731366-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.569931    1544 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:44:08.731368-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.570152    1544 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1031e86d0] 0x1031eb130 \u003cnil\u003e  [] 0s} 192.168.105.2 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.731369-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.570156    1544 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:44:08.73137-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tdate +%s.%N\n"}
{"Time":"2023-05-31T11:44:08.731372-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.633748    1544 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: 1685558621.644738294\n"}
{"Time":"2023-05-31T11:44:08.731373-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731375-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.633757    1544 fix.go:207] guest clock: 1685558621.644738294\n"}
{"Time":"2023-05-31T11:44:08.731376-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.633761    1544 fix.go:220] Guest: 2023-05-31 11:43:41.644738294 -0700 PDT Remote: 2023-05-31 11:43:41.569908 -0700 PDT m=+16.280559501 (delta=74.830294ms)\n"}
{"Time":"2023-05-31T11:44:08.731378-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.633772    1544 fix.go:191] guest clock delta is within tolerance: 74.830294ms\n"}
{"Time":"2023-05-31T11:44:08.731379-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.633775    1544 start.go:83] releasing machines lock for \"addons-901000\", held for 16.242270292s\n"}
{"Time":"2023-05-31T11:44:08.731381-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.634087    1544 ssh_runner.go:195] Run: cat /version.json\n"}
{"Time":"2023-05-31T11:44:08.731382-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.634095    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.731386-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.634108    1544 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/\n"}
{"Time":"2023-05-31T11:44:08.731387-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.634159    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.731389-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.716481    1544 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:44:08.731393-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.718905    1544 ssh_runner.go:195] Run: sh -c \"stat /etc/cni/net.d/*loopback.conf*\"\n"}
{"Time":"2023-05-31T11:44:08.731394-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:43:41.720891    1544 cni.go:208] loopback cni configuration skipped: \"/etc/cni/net.d/*loopback.conf*\" not found\n"}
{"Time":"2023-05-31T11:44:08.731396-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.720922    1544 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf \"%p, \" -exec sh -c \"sudo mv {} {}.mk_disabled\" ;\n"}
{"Time":"2023-05-31T11:44:08.731398-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.726532    1544 cni.go:261] disabled [/etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)\n"}
{"Time":"2023-05-31T11:44:08.731399-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.726553    1544 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:44:08.7314-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.726652    1544 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:44:08.731402-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.734371    1544 docker.go:633] Got preloaded images: \n"}
{"Time":"2023-05-31T11:44:08.731403-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.734377    1544 docker.go:639] registry.k8s.io/kube-apiserver:v1.27.2 wasn't preloaded\n"}
{"Time":"2023-05-31T11:44:08.731404-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.734418    1544 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:44:08.731406-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.737211    1544 ssh_runner.go:195] Run: which lz4\n"}
{"Time":"2023-05-31T11:44:08.731407-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.738761    1544 ssh_runner.go:195] Run: stat -c \"%s %y\" /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:44:08.731409-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.739992    1544 ssh_runner.go:352] existence check for /preloaded.tar.lz4: stat -c \"%s %y\" /preloaded.tar.lz4: Process exited with status 1\n"}
{"Time":"2023-05-31T11:44:08.73141-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:44:08.731411-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.731412-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:44:08.731414-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstat: cannot statx '/preloaded.tar.lz4': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.731415-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:41.740009    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 --\u003e /preloaded.tar.lz4 (343635669 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731417-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:43.061916    1544 docker.go:597] Took 1.323243 seconds to copy over tarball\n"}
{"Time":"2023-05-31T11:44:08.731418-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:43.061994    1544 ssh_runner.go:195] Run: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:44:08.73142-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.194919    1544 ssh_runner.go:235] Completed: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4: (1.132932875s)\n"}
{"Time":"2023-05-31T11:44:08.731421-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.194935    1544 ssh_runner.go:146] rm: /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:44:08.731422-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.210393    1544 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:44:08.731424-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.213344    1544 ssh_runner.go:362] scp memory --\u003e /var/lib/docker/image/overlay2/repositories.json (2629 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731426-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.218441    1544 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:44:08.731427-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:44.291225    1544 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:44:08.731428-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.947331    1544 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.656129292s)\n"}
{"Time":"2023-05-31T11:44:08.73143-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.947368    1544 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:44:08.731431-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.947508    1544 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %s \"runtime-endpoint: unix:///run/containerd/containerd.sock\n"}
{"Time":"2023-05-31T11:44:08.731433-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:44:08.731665-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.952900    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)sandbox_image = .*$|\\1sandbox_image = \"registry.k8s.io/pause:3.9\"|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731682-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.955951    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\\1restrict_oom_score_adj = false|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731687-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.959040    1544 containerd.go:145] configuring containerd to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:44:08.731691-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.959071    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\\1SystemdCgroup = false|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731726-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.962061    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runtime.v1.linux\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731731-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.964873    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731734-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.968183    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runc.v1\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731735-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.971595    1544 ssh_runner.go:195] Run: sh -c \"sudo rm -rf /etc/cni/net.mk\"\n"}
{"Time":"2023-05-31T11:44:08.731737-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.974904    1544 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)conf_dir = .*$|\\1conf_dir = \"/etc/cni/net.d\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:44:08.731741-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.977719    1544 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables\n"}
{"Time":"2023-05-31T11:44:08.731742-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.980541    1544 ssh_runner.go:195] Run: sudo sh -c \"echo 1 \u003e /proc/sys/net/ipv4/ip_forward\"\n"}
{"Time":"2023-05-31T11:44:08.731744-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:45.983671    1544 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:44:08.731746-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.059080    1544 ssh_runner.go:195] Run: sudo systemctl restart containerd\n"}
{"Time":"2023-05-31T11:44:08.731747-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.067620    1544 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:44:08.731748-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.067691    1544 ssh_runner.go:195] Run: sudo systemctl cat docker.service\n"}
{"Time":"2023-05-31T11:44:08.73175-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.073469    1544 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:44:08.731751-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.078465    1544 ssh_runner.go:195] Run: sudo systemctl stop -f containerd\n"}
{"Time":"2023-05-31T11:44:08.731817-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.087466    1544 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:44:08.731826-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.092295    1544 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:44:08.731873-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.097272    1544 ssh_runner.go:195] Run: sudo systemctl stop -f crio\n"}
{"Time":"2023-05-31T11:44:08.731879-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.137948    1544 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:44:08.731899-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.142976    1544 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %s \"runtime-endpoint: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:44:08.731907-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:44:08.731912-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.148182    1544 ssh_runner.go:195] Run: which cri-dockerd\n"}
{"Time":"2023-05-31T11:44:08.731915-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.149555    1544 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d\n"}
{"Time":"2023-05-31T11:44:08.73192-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.152444    1544 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731924-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.157782    1544 ssh_runner.go:195] Run: sudo systemctl unmask docker.service\n"}
{"Time":"2023-05-31T11:44:08.731927-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.239820    1544 ssh_runner.go:195] Run: sudo systemctl enable docker.socket\n"}
{"Time":"2023-05-31T11:44:08.731931-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.321679    1544 docker.go:532] configuring docker to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:44:08.731934-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.321693    1544 ssh_runner.go:362] scp memory --\u003e /etc/docker/daemon.json (144 bytes)\n"}
{"Time":"2023-05-31T11:44:08.731938-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.327061    1544 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:44:08.731942-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:46.403268    1544 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:44:08.731946-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.572967    1544 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.169708208s)\n"}
{"Time":"2023-05-31T11:44:08.731949-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.573028    1544 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket\n"}
{"Time":"2023-05-31T11:44:08.731953-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.649505    1544 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket\n"}
{"Time":"2023-05-31T11:44:08.731957-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.730888    1544 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket\n"}
{"Time":"2023-05-31T11:44:08.73196-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.803423    1544 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:44:08.731964-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.884477    1544 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket\n"}
{"Time":"2023-05-31T11:44:08.731983-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.892210    1544 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:44:08.731988-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:47.981099    1544 ssh_runner.go:195] Run: sudo systemctl restart cri-docker\n"}
{"Time":"2023-05-31T11:44:08.731992-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.004539    1544 start.go:528] Will wait 60s for socket path /var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:44:08.731996-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.004621    1544 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:44:08.731999-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.006822    1544 start.go:549] Will wait 60s for crictl version\n"}
{"Time":"2023-05-31T11:44:08.732002-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.006863    1544 ssh_runner.go:195] Run: which crictl\n"}
{"Time":"2023-05-31T11:44:08.732006-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.008890    1544 ssh_runner.go:195] Run: sudo /usr/bin/crictl version\n"}
{"Time":"2023-05-31T11:44:08.73201-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.026804    1544 start.go:565] Version:  0.1.0\n"}
{"Time":"2023-05-31T11:44:08.732014-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRuntimeName:  docker\n"}
{"Time":"2023-05-31T11:44:08.73203-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRuntimeVersion:  24.0.1\n"}
{"Time":"2023-05-31T11:44:08.732033-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tRuntimeApiVersion:  v1alpha2\n"}
{"Time":"2023-05-31T11:44:08.732037-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.026894    1544 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:44:08.732041-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.034762    1544 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:44:08.732045-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.046161    1544 out.go:204] * Preparing Kubernetes v1.27.2 on Docker 24.0.1 ...\n"}
{"Time":"2023-05-31T11:44:08.732048-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.046331    1544 ssh_runner.go:195] Run: grep 192.168.105.1\thost.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:44:08.732052-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.047646    1544 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\thost.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.1\thost.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:44:08.732057-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.051483    1544 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:44:08.73206-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.051526    1544 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:44:08.732063-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.057478    1544 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:44:08.732067-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.73207-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732073-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732076-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732079-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:44:08.732082-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:44:08.732085-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:44:08.732088-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:44:08.732091-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.732094-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:44:08.732098-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.057487    1544 docker.go:563] Images already preloaded, skipping extraction\n"}
{"Time":"2023-05-31T11:44:08.732101-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.057541    1544 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:44:08.732104-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.063299    1544 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:44:08.732107-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.73211-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732113-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732116-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732119-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:44:08.732122-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:44:08.732125-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tregistry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:44:08.732128-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:44:08.73214-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.732144-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:44:08.732147-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.063308    1544 cache_images.go:84] Images are preloaded, skipping loading\n"}
{"Time":"2023-05-31T11:44:08.73215-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.063362    1544 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}\n"}
{"Time":"2023-05-31T11:44:08.732153-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074768    1544 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:44:08.732157-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074783    1544 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:44:08.73216-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074791    1544 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16\n"}
{"Time":"2023-05-31T11:44:08.732166-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074799    1544 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.105.2 APIServerPort:8443 KubernetesVersion:v1.27.2 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:addons-901000 NodeName:addons-901000 DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:[\"127.0.0.1\", \"localhost\", \"192.168.105.2\"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.105.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/ku"}
{"Time":"2023-05-31T11:44:08.732173-07:00","Action":"output","Test":"TestAddons/Setup","Output":"bernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}\n"}
{"Time":"2023-05-31T11:44:08.732176-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074868    1544 kubeadm.go:181] kubeadm config:\n"}
{"Time":"2023-05-31T11:44:08.73218-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta3\n"}
{"Time":"2023-05-31T11:44:08.732183-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tkind: InitConfiguration\n"}
{"Time":"2023-05-31T11:44:08.732186-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tlocalAPIEndpoint:\n"}
{"Time":"2023-05-31T11:44:08.732189-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  advertiseAddress: 192.168.105.2\n"}
{"Time":"2023-05-31T11:44:08.732193-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  bindPort: 8443\n"}
{"Time":"2023-05-31T11:44:08.732195-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tbootstrapTokens:\n"}
{"Time":"2023-05-31T11:44:08.732198-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  - groups:\n"}
{"Time":"2023-05-31T11:44:08.732201-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t      - system:bootstrappers:kubeadm:default-node-token\n"}
{"Time":"2023-05-31T11:44:08.732204-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    ttl: 24h0m0s\n"}
{"Time":"2023-05-31T11:44:08.732305-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    usages:\n"}
{"Time":"2023-05-31T11:44:08.732309-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t      - signing\n"}
{"Time":"2023-05-31T11:44:08.732312-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t      - authentication\n"}
{"Time":"2023-05-31T11:44:08.732315-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tnodeRegistration:\n"}
{"Time":"2023-05-31T11:44:08.732328-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  criSocket: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:44:08.732332-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  name: \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.732335-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  kubeletExtraArgs:\n"}
{"Time":"2023-05-31T11:44:08.732339-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    node-ip: 192.168.105.2\n"}
{"Time":"2023-05-31T11:44:08.732342-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  taints: []\n"}
{"Time":"2023-05-31T11:44:08.732345-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t---\n"}
{"Time":"2023-05-31T11:44:08.732348-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta3\n"}
{"Time":"2023-05-31T11:44:08.732351-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tkind: ClusterConfiguration\n"}
{"Time":"2023-05-31T11:44:08.732354-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tapiServer:\n"}
{"Time":"2023-05-31T11:44:08.732363-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  certSANs: [\"127.0.0.1\", \"localhost\", \"192.168.105.2\"]\n"}
{"Time":"2023-05-31T11:44:08.732378-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:44:08.732383-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    enable-admission-plugins: \"NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\"\n"}
{"Time":"2023-05-31T11:44:08.732386-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tcontrollerManager:\n"}
{"Time":"2023-05-31T11:44:08.732396-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:44:08.732406-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    allocate-node-cidrs: \"true\"\n"}
{"Time":"2023-05-31T11:44:08.732409-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:44:08.732413-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tscheduler:\n"}
{"Time":"2023-05-31T11:44:08.732415-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:44:08.732418-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:44:08.732421-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tcertificatesDir: /var/lib/minikube/certs\n"}
{"Time":"2023-05-31T11:44:08.732438-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tclusterName: mk\n"}
{"Time":"2023-05-31T11:44:08.732444-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tcontrolPlaneEndpoint: control-plane.minikube.internal:8443\n"}
{"Time":"2023-05-31T11:44:08.732448-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tetcd:\n"}
{"Time":"2023-05-31T11:44:08.732473-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  local:\n"}
{"Time":"2023-05-31T11:44:08.732476-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    dataDir: /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:44:08.732479-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    extraArgs:\n"}
{"Time":"2023-05-31T11:44:08.732483-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t      proxy-refresh-interval: \"70000\"\n"}
{"Time":"2023-05-31T11:44:08.732486-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tkubernetesVersion: v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732489-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tnetworking:\n"}
{"Time":"2023-05-31T11:44:08.732492-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  dnsDomain: cluster.local\n"}
{"Time":"2023-05-31T11:44:08.732501-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  podSubnet: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:44:08.732513-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  serviceSubnet: 10.96.0.0/12\n"}
{"Time":"2023-05-31T11:44:08.732517-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t---\n"}
{"Time":"2023-05-31T11:44:08.73252-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tapiVersion: kubelet.config.k8s.io/v1beta1\n"}
{"Time":"2023-05-31T11:44:08.732523-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tkind: KubeletConfiguration\n"}
{"Time":"2023-05-31T11:44:08.732526-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tauthentication:\n"}
{"Time":"2023-05-31T11:44:08.732535-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  x509:\n"}
{"Time":"2023-05-31T11:44:08.732539-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t    clientCAFile: /var/lib/minikube/certs/ca.crt\n"}
{"Time":"2023-05-31T11:44:08.732542-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tcgroupDriver: cgroupfs\n"}
{"Time":"2023-05-31T11:44:08.732545-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \thairpinMode: hairpin-veth\n"}
{"Time":"2023-05-31T11:44:08.732564-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \truntimeRequestTimeout: 15m\n"}
{"Time":"2023-05-31T11:44:08.732568-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tclusterDomain: \"cluster.local\"\n"}
{"Time":"2023-05-31T11:44:08.732572-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# disable disk resource management by default\n"}
{"Time":"2023-05-31T11:44:08.732585-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \timageGCHighThresholdPercent: 100\n"}
{"Time":"2023-05-31T11:44:08.732589-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tevictionHard:\n"}
{"Time":"2023-05-31T11:44:08.732592-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  nodefs.available: \"0%\"\n"}
{"Time":"2023-05-31T11:44:08.732596-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  nodefs.inodesFree: \"0%\"\n"}
{"Time":"2023-05-31T11:44:08.732599-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  imagefs.available: \"0%\"\n"}
{"Time":"2023-05-31T11:44:08.732602-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tfailSwapOn: false\n"}
{"Time":"2023-05-31T11:44:08.732605-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstaticPodPath: /etc/kubernetes/manifests\n"}
{"Time":"2023-05-31T11:44:08.732608-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t---\n"}
{"Time":"2023-05-31T11:44:08.732611-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tapiVersion: kubeproxy.config.k8s.io/v1alpha1\n"}
{"Time":"2023-05-31T11:44:08.732614-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tkind: KubeProxyConfiguration\n"}
{"Time":"2023-05-31T11:44:08.73266-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tclusterCIDR: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:44:08.732665-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tmetricsBindAddress: 0.0.0.0:10249\n"}
{"Time":"2023-05-31T11:44:08.732668-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tconntrack:\n"}
{"Time":"2023-05-31T11:44:08.732671-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  maxPerCore: 0\n"}
{"Time":"2023-05-31T11:44:08.732675-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_established\"\n"}
{"Time":"2023-05-31T11:44:08.732678-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  tcpEstablishedTimeout: 0s\n"}
{"Time":"2023-05-31T11:44:08.732682-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_close\"\n"}
{"Time":"2023-05-31T11:44:08.732685-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t  tcpCloseWaitTimeout: 0s\n"}
{"Time":"2023-05-31T11:44:08.732689-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.732692-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074906    1544 kubeadm.go:971] kubelet [Unit]\n"}
{"Time":"2023-05-31T11:44:08.732698-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tWants=docker.socket\n"}
{"Time":"2023-05-31T11:44:08.732706-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.732709-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:44:08.732712-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:44:08.732716-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tExecStart=/var/lib/minikube/binaries/v1.27.2/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=addons-901000 --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.105.2\n"}
{"Time":"2023-05-31T11:44:08.73272-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.732723-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:44:08.732726-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t config:\n"}
{"Time":"2023-05-31T11:44:08.73273-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t{KubernetesVersion:v1.27.2 ClusterName:addons-901000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}\n"}
{"Time":"2023-05-31T11:44:08.732734-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.074957    1544 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.732737-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.077727    1544 binaries.go:44] Found k8s binaries, skipping transfer\n"}
{"Time":"2023-05-31T11:44:08.732742-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.077758    1544 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube\n"}
{"Time":"2023-05-31T11:44:08.732811-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.080416    1544 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (375 bytes)\n"}
{"Time":"2023-05-31T11:44:08.732816-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.085397    1544 ssh_runner.go:362] scp memory --\u003e /lib/systemd/system/kubelet.service (352 bytes)\n"}
{"Time":"2023-05-31T11:44:08.73282-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.090431    1544 ssh_runner.go:362] scp memory --\u003e /var/tmp/minikube/kubeadm.yaml.new (2099 bytes)\n"}
{"Time":"2023-05-31T11:44:08.732823-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.095594    1544 ssh_runner.go:195] Run: grep 192.168.105.2\tcontrol-plane.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:44:08.732827-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.097091    1544 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\tcontrol-plane.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.2\tcontrol-plane.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:44:08.732832-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.100816    1544 certs.go:56] Setting up /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000 for IP: 192.168.105.2\n"}
{"Time":"2023-05-31T11:44:08.732995-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.100838    1544 certs.go:190] acquiring lock for shared ca certs: {Name:mk5d2be9e1df042d7290b2e1516090ac43150ffe Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.73301-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.100982    1544 certs.go:204] generating minikubeCA CA: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key\n"}
{"Time":"2023-05-31T11:44:08.733014-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.239788    1544 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt ...\n"}
{"Time":"2023-05-31T11:44:08.733018-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.239794    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt: {Name:mkee84fa16254b66c35e9e10b33f4fbe29c93400 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733022-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.239995    1544 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key ...\n"}
{"Time":"2023-05-31T11:44:08.733026-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.239998    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key: {Name:mk5891ebdbe2898c1d18cf4c114398bf03212710 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733052-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.240113    1544 certs.go:204] generating proxyClientCA CA: /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key\n"}
{"Time":"2023-05-31T11:44:08.733057-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348259    1544 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt ...\n"}
{"Time":"2023-05-31T11:44:08.733061-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348262    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt: {Name:mkd4147fbb6ba63bd5b3ffcba5003315cbd7539f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733075-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348400    1544 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key ...\n"}
{"Time":"2023-05-31T11:44:08.73308-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348403    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key: {Name:mk3cbef9da723122813624308f6861cce59d5d07 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733084-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348533    1544 certs.go:319] generating minikube-user signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.key\n"}
{"Time":"2023-05-31T11:44:08.733088-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.348541    1544 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:44:08.733092-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449602    1544 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.crt ...\n"}
{"Time":"2023-05-31T11:44:08.733096-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449607    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.crt: {Name:mk0b2cb8f79e79dfc203c73ae7b921878532c061 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733099-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449746    1544 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.key ...\n"}
{"Time":"2023-05-31T11:44:08.733104-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449749    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/client.key: {Name:mk4cac0ab291dadcdb37474b8281374e00a2d414 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733108-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449858    1544 certs.go:319] generating minikube signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key.96055969\n"}
{"Time":"2023-05-31T11:44:08.733139-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.449867    1544 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt.96055969 with IP's: [192.168.105.2 10.96.0.1 127.0.0.1 10.0.0.1]\n"}
{"Time":"2023-05-31T11:44:08.733148-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550401    1544 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt.96055969 ...\n"}
{"Time":"2023-05-31T11:44:08.73315-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550408    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt.96055969: {Name:mka736e8fb8496aede6578e5374903fad0557e58 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733152-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550624    1544 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key.96055969 ...\n"}
{"Time":"2023-05-31T11:44:08.733154-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550628    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key.96055969: {Name:mkf400d9c922ce6035a50ba02971335986e15541 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733156-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550728    1544 certs.go:337] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt.96055969 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt\n"}
{"Time":"2023-05-31T11:44:08.733158-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.550957    1544 certs.go:341] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key.96055969 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key\n"}
{"Time":"2023-05-31T11:44:08.733159-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.551070    1544 certs.go:319] generating aggregator signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.key\n"}
{"Time":"2023-05-31T11:44:08.733161-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.551083    1544 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:44:08.733163-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.711266    1544 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.crt ...\n"}
{"Time":"2023-05-31T11:44:08.733164-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.711271    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.crt: {Name:mkf30b67b01652e0a6e616d8d31e01fb015e8e28 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733166-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.711445    1544 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.key ...\n"}
{"Time":"2023-05-31T11:44:08.733167-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.711448    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.key: {Name:mkf3747de44689ca89e039440788baac67e47f6b Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.733175-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.711728    1544 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733177-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.712158    1544 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733178-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.712192    1544 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:44:08.73334-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.712381    1544 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733348-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.712831    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.crt --\u003e /var/lib/minikube/certs/apiserver.crt (1399 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733352-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.720718    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/apiserver.key --\u003e /var/lib/minikube/certs/apiserver.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733357-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.728185    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.crt --\u003e /var/lib/minikube/certs/proxy-client.crt (1147 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733361-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.735538    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/addons-901000/proxy-client.key --\u003e /var/lib/minikube/certs/proxy-client.key (1679 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733365-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.742904    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /var/lib/minikube/certs/ca.crt (1111 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733369-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.749837    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key --\u003e /var/lib/minikube/certs/ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733373-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.756619    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt --\u003e /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733376-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.763691    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key --\u003e /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:44:08.73338-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.770650    1544 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733384-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.777577    1544 ssh_runner.go:362] scp memory --\u003e /var/lib/minikube/kubeconfig (738 bytes)\n"}
{"Time":"2023-05-31T11:44:08.733391-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.783214    1544 ssh_runner.go:195] Run: openssl version\n"}
{"Time":"2023-05-31T11:44:08.733394-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.785105    1544 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/minikubeCA.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem\"\n"}
{"Time":"2023-05-31T11:44:08.733565-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.788435    1544 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:44:08.73357-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.789935    1544 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 May 31 18:43 /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:44:08.733574-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.789954    1544 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:44:08.733595-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.791581    1544 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0\"\n"}
{"Time":"2023-05-31T11:44:08.7336-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.794400    1544 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd\n"}
{"Time":"2023-05-31T11:44:08.733604-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.795883    1544 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2\n"}
{"Time":"2023-05-31T11:44:08.733608-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:44:08.733611-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.733614-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:44:08.733617-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.733624-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.795921    1544 kubeadm.go:404] StartCluster: {Name:addons-901000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v"}
{"Time":"2023-05-31T11:44:08.733631-07:00","Action":"output","Test":"TestAddons/Setup","Output":"1.27.2 ClusterName:addons-901000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.105.2 Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 Mount"}
{"Time":"2023-05-31T11:44:08.73406-07:00","Action":"output","Test":"TestAddons/Setup","Output":"Options:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:44:08.734066-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.795983    1544 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}\n"}
{"Time":"2023-05-31T11:44:08.734068-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.801401    1544 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:44:08.734069-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.804566    1544 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml\n"}
{"Time":"2023-05-31T11:44:08.734071-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.807748    1544 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf\n"}
{"Time":"2023-05-31T11:44:08.734073-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.810353    1544 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2\n"}
{"Time":"2023-05-31T11:44:08.734075-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:44:08.734076-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t\n"}
{"Time":"2023-05-31T11:44:08.734078-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:44:08.734079-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tls: cannot access '/etc/kubernetes/admin.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.73408-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.734082-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.734083-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:44:08.734085-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.810367    1544 ssh_runner.go:286] Start: /bin/bash -c \"sudo env PATH=\"/var/lib/minikube/binaries/v1.27.2:$PATH\" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem\"\n"}
{"Time":"2023-05-31T11:44:08.734089-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.832101    1544 kubeadm.go:322] [init] Using Kubernetes version: v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.734323-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.832132    1544 kubeadm.go:322] [preflight] Running pre-flight checks\n"}
{"Time":"2023-05-31T11:44:08.734334-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.887405    1544 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster\n"}
{"Time":"2023-05-31T11:44:08.734338-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.887458    1544 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection\n"}
{"Time":"2023-05-31T11:44:08.734342-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.887507    1544 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n"}
{"Time":"2023-05-31T11:44:08.734346-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.945790    1544 kubeadm.go:322] [certs] Using certificateDir folder \"/var/lib/minikube/certs\"\n"}
{"Time":"2023-05-31T11:44:08.734349-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.955023    1544 out.go:204]   - Generating certificates and keys ...\n"}
{"Time":"2023-05-31T11:44:08.734353-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.955073    1544 kubeadm.go:322] [certs] Using existing ca certificate authority\n"}
{"Time":"2023-05-31T11:44:08.734356-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.955102    1544 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk\n"}
{"Time":"2023-05-31T11:44:08.734372-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:48.988563    1544 kubeadm.go:322] [certs] Generating \"apiserver-kubelet-client\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734377-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.058133    1544 kubeadm.go:322] [certs] Generating \"front-proxy-ca\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.73438-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.101472    1544 kubeadm.go:322] [certs] Generating \"front-proxy-client\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734384-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.186128    1544 kubeadm.go:322] [certs] Generating \"etcd/ca\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734397-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.239008    1544 kubeadm.go:322] [certs] Generating \"etcd/server\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734401-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.239064    1544 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [addons-901000 localhost] and IPs [192.168.105.2 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:44:08.734404-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.325389    1544 kubeadm.go:322] [certs] Generating \"etcd/peer\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734408-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.325448    1544 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [addons-901000 localhost] and IPs [192.168.105.2 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:44:08.734412-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.429941    1544 kubeadm.go:322] [certs] Generating \"etcd/healthcheck-client\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734415-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.589937    1544 kubeadm.go:322] [certs] Generating \"apiserver-etcd-client\" certificate and key\n"}
{"Time":"2023-05-31T11:44:08.73447-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.786307    1544 kubeadm.go:322] [certs] Generating \"sa\" key and public key\n"}
{"Time":"2023-05-31T11:44:08.734476-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.786348    1544 kubeadm.go:322] [kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n"}
{"Time":"2023-05-31T11:44:08.73448-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:49.846108    1544 kubeadm.go:322] [kubeconfig] Writing \"admin.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:44:08.734484-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.038048    1544 kubeadm.go:322] [kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:44:08.734542-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.316585    1544 kubeadm.go:322] [kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:44:08.734546-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.450220    1544 kubeadm.go:322] [kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:44:08.734585-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.456912    1544 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n"}
{"Time":"2023-05-31T11:44:08.734592-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.456960    1544 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n"}
{"Time":"2023-05-31T11:44:08.734596-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.456981    1544 kubeadm.go:322] [kubelet-start] Starting the kubelet\n"}
{"Time":"2023-05-31T11:44:08.734599-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.531576    1544 kubeadm.go:322] [control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:44:08.734603-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.534856    1544 out.go:204]   - Booting up control plane ...\n"}
{"Time":"2023-05-31T11:44:08.734607-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.534903    1544 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-apiserver\"\n"}
{"Time":"2023-05-31T11:44:08.734617-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.534942    1544 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n"}
{"Time":"2023-05-31T11:44:08.734621-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.534977    1544 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-scheduler\"\n"}
{"Time":"2023-05-31T11:44:08.734625-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.535034    1544 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:44:08.734629-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:50.535114    1544 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n"}
{"Time":"2023-05-31T11:44:08.734633-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:54.535557    1544 kubeadm.go:322] [apiclient] All control plane components are healthy after 4.001250 seconds\n"}
{"Time":"2023-05-31T11:44:08.734638-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:54.535658    1544 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n"}
{"Time":"2023-05-31T11:44:08.734644-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:54.543285    1544 kubeadm.go:322] [kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster\n"}
{"Time":"2023-05-31T11:44:08.734648-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.060714    1544 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs\n"}
{"Time":"2023-05-31T11:44:08.734652-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.060880    1544 kubeadm.go:322] [mark-control-plane] Marking the node addons-901000 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]\n"}
{"Time":"2023-05-31T11:44:08.734656-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.566163    1544 kubeadm.go:322] [bootstrap-token] Using token: fdln59.o48tcrmvb1cxi2aa\n"}
{"Time":"2023-05-31T11:44:08.73466-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.571987    1544 out.go:204]   - Configuring RBAC rules ...\n"}
{"Time":"2023-05-31T11:44:08.734663-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.572043    1544 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n"}
{"Time":"2023-05-31T11:44:08.734667-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.572943    1544 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes\n"}
{"Time":"2023-05-31T11:44:08.734671-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.580034    1544 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n"}
{"Time":"2023-05-31T11:44:08.734674-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.581278    1544 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n"}
{"Time":"2023-05-31T11:44:08.734678-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.582425    1544 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n"}
{"Time":"2023-05-31T11:44:08.734682-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.584407    1544 kubeadm.go:322] [bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n"}
{"Time":"2023-05-31T11:44:08.734685-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.588284    1544 kubeadm.go:322] [kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n"}
{"Time":"2023-05-31T11:44:08.734689-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.740002    1544 kubeadm.go:322] [addons] Applied essential addon: CoreDNS\n"}
{"Time":"2023-05-31T11:44:08.734693-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976257    1544 kubeadm.go:322] [addons] Applied essential addon: kube-proxy\n"}
{"Time":"2023-05-31T11:44:08.734696-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976669    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734699-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976708    1544 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!\n"}
{"Time":"2023-05-31T11:44:08.73484-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976713    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734845-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976757    1544 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:\n"}
{"Time":"2023-05-31T11:44:08.734849-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976760    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734852-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976773    1544 kubeadm.go:322]   mkdir -p $HOME/.kube\n"}
{"Time":"2023-05-31T11:44:08.734862-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976810    1544 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:44:08.734865-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976848    1544 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:44:08.734869-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976854    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734873-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976881    1544 kubeadm.go:322] Alternatively, if you are the root user, you can run:\n"}
{"Time":"2023-05-31T11:44:08.734877-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976883    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734905-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976912    1544 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf\n"}
{"Time":"2023-05-31T11:44:08.734912-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976948    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734916-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.976986    1544 kubeadm.go:322] You should now deploy a pod network to the cluster.\n"}
{"Time":"2023-05-31T11:44:08.734921-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977031    1544 kubeadm.go:322] Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n"}
{"Time":"2023-05-31T11:44:08.734925-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977067    1544 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/\n"}
{"Time":"2023-05-31T11:44:08.734961-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977072    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734966-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977160    1544 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities\n"}
{"Time":"2023-05-31T11:44:08.73497-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977220    1544 kubeadm.go:322] and service account keys on each node and then running the following as root:\n"}
{"Time":"2023-05-31T11:44:08.734974-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977223    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734977-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977280    1544 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token fdln59.o48tcrmvb1cxi2aa \\\n"}
{"Time":"2023-05-31T11:44:08.734981-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977335    1544 kubeadm.go:322] \t--discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \\\n"}
{"Time":"2023-05-31T11:44:08.734985-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977348    1544 kubeadm.go:322] \t--control-plane \n"}
{"Time":"2023-05-31T11:44:08.734988-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977351    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734992-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977396    1544 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:\n"}
{"Time":"2023-05-31T11:44:08.734995-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977400    1544 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:44:08.734999-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977453    1544 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token fdln59.o48tcrmvb1cxi2aa \\\n"}
{"Time":"2023-05-31T11:44:08.735003-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977513    1544 kubeadm.go:322] \t--discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \n"}
{"Time":"2023-05-31T11:44:08.735007-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977810    1544 kubeadm.go:322] \t[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'\n"}
{"Time":"2023-05-31T11:44:08.735032-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.977908    1544 kubeadm.go:322] W0531 18:43:48.898735    1364 images.go:80] could not find officially supported version of etcd for Kubernetes v1.27.2, falling back to the nearest etcd version (3.5.7-0)\n"}
{"Time":"2023-05-31T11:44:08.735036-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.978007    1544 kubeadm.go:322] W0531 18:43:50.543800    1364 images.go:80] could not find officially supported version of etcd for Kubernetes v1.27.2, falling back to the nearest etcd version (3.5.7-0)\n"}
{"Time":"2023-05-31T11:44:08.73504-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.978018    1544 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:44:08.735044-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.978027    1544 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:44:08.735048-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.986527    1544 out.go:177] * Configuring bridge CNI (Container Networking Interface) ...\n"}
{"Time":"2023-05-31T11:44:08.735051-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.989606    1544 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d\n"}
{"Time":"2023-05-31T11:44:08.735055-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.992621    1544 ssh_runner.go:362] scp memory --\u003e /etc/cni/net.d/1-k8s.conflist (457 bytes)\n"}
{"Time":"2023-05-31T11:44:08.735058-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.997997    1544 ssh_runner.go:195] Run: /bin/bash -c \"cat /proc/$(pgrep kube-apiserver)/oom_adj\"\n"}
{"Time":"2023-05-31T11:44:08.735062-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.998066    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735115-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:55.998080    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl label nodes minikube.k8s.io/version=v1.30.1 minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140 minikube.k8s.io/name=addons-901000 minikube.k8s.io/updated_at=2023_05_31T11_43_55_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735122-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:56.013394    1544 ops.go:34] apiserver oom_adj: -16\n"}
{"Time":"2023-05-31T11:44:08.735125-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:56.078937    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735129-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:56.614138    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735133-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:57.114078    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735137-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:57.614038    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.73514-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:58.114051    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735144-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:58.614238    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735147-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:59.114252    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735151-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:43:59.614263    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735154-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:00.114301    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735158-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:00.612233    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735162-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:01.114244    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735166-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:01.614072    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735169-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:02.114215    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735306-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:02.613934    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735314-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:03.113942    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735318-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:03.614114    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735322-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:04.113318    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735326-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:04.613866    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735329-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:05.113291    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735333-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:05.614057    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735339-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:06.113889    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735344-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:06.614185    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735348-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:07.113853    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735351-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:07.613976    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735355-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.113868    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735359-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.612704    1544 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735363-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.651971    1544 kubeadm.go:1076] duration metric: took 12.654252042s to wait for elevateKubeSystemPrivileges.\n"}
{"Time":"2023-05-31T11:44:08.735366-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.651999    1544 kubeadm.go:406] StartCluster complete in 19.856541959s\n"}
{"Time":"2023-05-31T11:44:08.73537-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652012    1544 settings.go:142] acquiring lock: {Name:mk21b0706c1b317cf69100362f2296fa879c00d7 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.735374-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652172    1544 settings.go:150] Updating kubeconfig:  /Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:44:08.735378-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652361    1544 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/kubeconfig: {Name:mk798616fa7d82f2defe425781279f8a2840bc7d Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:44:08.735382-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652562    1544 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml\"\n"}
{"Time":"2023-05-31T11:44:08.735388-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652607    1544 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:true csi-hostpath-driver:true dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:true gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:true ingress-dns:true inspektor-gadget:true istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:true nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:true registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:true]\n"}
{"Time":"2023-05-31T11:44:08.735399-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652675    1544 addons.go:66] Setting volumesnapshots=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735403-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652684    1544 addons.go:228] Setting addon volumesnapshots=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735406-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652702    1544 addons.go:66] Setting csi-hostpath-driver=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.73541-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652705    1544 addons.go:66] Setting ingress=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735413-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652715    1544 addons.go:228] Setting addon ingress=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735598-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652718    1544 addons.go:228] Setting addon csi-hostpath-driver=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735603-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652746    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.735607-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652751    1544 addons.go:66] Setting gcp-auth=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735611-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652754    1544 addons.go:66] Setting inspektor-gadget=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735614-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652757    1544 mustload.go:65] Loading cluster: addons-901000\n"}
{"Time":"2023-05-31T11:44:08.735634-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652758    1544 addons.go:228] Setting addon inspektor-gadget=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735638-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652768    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.735641-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652776    1544 addons.go:66] Setting default-storageclass=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735645-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652811    1544 addons.go:66] Setting registry=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735648-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652824    1544 addons.go:228] Setting addon registry=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735652-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652808    1544 addons.go:66] Setting cloud-spanner=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735655-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652832    1544 config.go:182] Loaded profile config \"addons-901000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.735659-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652825    1544 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.73568-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652847    1544 addons.go:228] Setting addon cloud-spanner=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735685-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652888    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.735689-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652907    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.735693-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652951    1544 config.go:182] Loaded profile config \"addons-901000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:44:08.735697-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652781    1544 addons.go:66] Setting ingress-dns=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735701-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653043    1544 addons.go:228] Setting addon ingress-dns=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.73589-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653104    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.735977-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652956    1544 addons.go:66] Setting storage-provisioner=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735982-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653232    1544 addons.go:228] Setting addon storage-provisioner=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.735987-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653243    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.735991-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653255    1544 addons_storage_classes.go:55] \"addons-901000\" is not running, writing default-storageclass=true to disk and skipping enablement\n"}
{"Time":"2023-05-31T11:44:08.735996-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653258    1544 addons.go:228] Setting addon default-storageclass=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.736007-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653260    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736011-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653264    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.736015-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653266    1544 addons.go:274] \"addons-901000\" is not running, setting volumesnapshots=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736019-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652746    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.736023-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653269    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.736026-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652751    1544 addons.go:66] Setting metrics-server=true in profile \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.73603-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653405    1544 addons.go:228] Setting addon metrics-server=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.736034-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653419    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736039-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653425    1544 addons.go:274] \"addons-901000\" is not running, setting ingress-dns=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736043-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653454    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.736047-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653497    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.73609-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653504    1544 addons.go:274] \"addons-901000\" is not running, setting csi-hostpath-driver=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736095-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.653507    1544 addons.go:464] Verifying addon csi-hostpath-driver=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.736099-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653512    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736103-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653517    1544 addons.go:274] \"addons-901000\" is not running, setting default-storageclass=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736107-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.657789    1544 out.go:177] * Verifying csi-hostpath-driver addon...\n"}
{"Time":"2023-05-31T11:44:08.736111-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.652746    1544 host.go:66] Checking if \"addons-901000\" exists ...\n"}
{"Time":"2023-05-31T11:44:08.736114-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653633    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736118-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653670    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736123-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.653672    1544 host.go:54] host status for \"addons-901000\" returned error: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736127-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.667920    1544 addons.go:274] \"addons-901000\" is not running, setting storage-provisioner=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.73613-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.667920    1544 addons.go:274] \"addons-901000\" is not running, setting metrics-server=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736135-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.667941    1544 addons.go:274] \"addons-901000\" is not running, setting registry=true and skipping enablement (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:44:08.736138-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.668354    1544 kapi.go:75] Waiting for pod with label \"kubernetes.io/minikube-addons=csi-hostpath-driver\" in ns \"kube-system\" ...\n"}
{"Time":"2023-05-31T11:44:08.736142-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.671825    1544 out.go:177] \n"}
{"Time":"2023-05-31T11:44:08.736156-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.675801    1544 out.go:177]   - Using image ghcr.io/inspektor-gadget/inspektor-gadget:v0.16.1\n"}
{"Time":"2023-05-31T11:44:08.736283-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.675809    1544 out.go:177]   - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794\n"}
{"Time":"2023-05-31T11:44:08.736289-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.675815    1544 addons.go:464] Verifying addon metrics-server=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.7363-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.675803    1544 out.go:177]   - Using image gcr.io/cloud-spanner-emulator/emulator:1.5.5\n"}
{"Time":"2023-05-31T11:44:08.736306-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.679821    1544 addons.go:420] installing /etc/kubernetes/addons/ig-namespace.yaml\n"}
{"Time":"2023-05-31T11:44:08.73631-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.685828    1544 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/ig-namespace.yaml (55 bytes)\n"}
{"Time":"2023-05-31T11:44:08.736314-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.685839    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.736318-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.685843    1544 addons.go:420] installing /etc/kubernetes/addons/deployment.yaml\n"}
{"Time":"2023-05-31T11:44:08.736321-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.685846    1544 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/deployment.yaml (1003 bytes)\n"}
{"Time":"2023-05-31T11:44:08.736325-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.685851    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.736357-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.688730    1544 out.go:177]   - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794\n"}
{"Time":"2023-05-31T11:44:08.736363-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.688746    1544 out.go:239] X Exiting due to GUEST_STATUS: Unable to get machine status: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736367-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.678264    1544 kapi.go:86] Found 0 Pods for label selector kubernetes.io/minikube-addons=csi-hostpath-driver\n"}
{"Time":"2023-05-31T11:44:08.736388-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.675818    1544 addons.go:464] Verifying addon registry=true in \"addons-901000\"\n"}
{"Time":"2023-05-31T11:44:08.736393-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.697814    1544 out.go:177]   - Using image registry.k8s.io/ingress-nginx/controller:v1.7.0\n"}
{"Time":"2023-05-31T11:44:08.736397-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tX Exiting due to GUEST_STATUS: Unable to get machine status: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:44:08.736438-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.704792    1544 out.go:177] * Verifying registry addon...\n"}
{"Time":"2023-05-31T11:44:08.736443-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.697870    1544 out.go:239] * \n"}
{"Time":"2023-05-31T11:44:08.736447-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.701795    1544 addons.go:420] installing /etc/kubernetes/addons/ingress-deploy.yaml\n"}
{"Time":"2023-05-31T11:44:08.736451-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.702591    1544 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \\/etc\\/resolv.conf.*/i \\        hosts {\\n           192.168.105.1 host.minikube.internal\\n           fallthrough\\n        }' -e '/^        errors *$/i \\        log' | sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -\"\n"}
{"Time":"2023-05-31T11:44:08.736457-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.712800    1544 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/ingress-deploy.yaml (16145 bytes)\n"}
{"Time":"2023-05-31T11:44:08.736461-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.712810    1544 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.2 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/addons-901000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:44:08.736465-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t* \n"}
{"Time":"2023-05-31T11:44:08.736468-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.713159    1544 kapi.go:75] Waiting for pod with label \"kubernetes.io/minikube-addons=registry\" in ns \"kube-system\" ...\n"}
{"Time":"2023-05-31T11:44:08.736473-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tW0531 11:44:08.713289    1544 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:44:08.736478-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736492-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:44:08.736499-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:44:08.736506-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736546-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:44:08.736553-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736555-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:44:08.736557-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:44:08.736559-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736561-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:44:08.736563-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:44:08.736564-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736565-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:44:08.736567-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:44:08.736569-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:44:08.73657-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.716814    1544 out.go:177] \n"}
{"Time":"2023-05-31T11:44:08.736572-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \tI0531 11:44:08.714808    1544 kapi.go:86] Found 0 Pods for label selector kubernetes.io/minikube-addons=registry\n"}
{"Time":"2023-05-31T11:44:08.736574-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        \n"}
{"Time":"2023-05-31T11:44:08.736575-07:00","Action":"output","Test":"TestAddons/Setup","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:44:08.736577-07:00","Action":"output","Test":"TestAddons/Setup","Output":"    addons_test.go:90: out/minikube-darwin-arm64 start -p addons-901000 --wait=true --memory=4000 --alsologtostderr --addons=registry --addons=metrics-server --addons=volumesnapshots --addons=csi-hostpath-driver --addons=gcp-auth --addons=cloud-spanner --addons=inspektor-gadget --driver=qemu2  --addons=ingress --addons=ingress-dns failed: exit status 80\n"}
{"Time":"2023-05-31T11:44:08.73658-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:96: Failed setup for addon tests\n"}
{"Time":"2023-05-31T11:44:08.736582-07:00","Action":"output","Test":"TestAddons","Output":"    helpers_test.go:175: Cleaning up \"addons-901000\" profile ...\n"}
{"Time":"2023-05-31T11:44:08.736584-07:00","Action":"output","Test":"TestAddons","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p addons-901000\n"}
{"Time":"2023-05-31T11:44:08.883338-07:00","Action":"output","Test":"TestAddons","Output":"--- FAIL: TestAddons (43.60s)\n"}
{"Time":"2023-05-31T11:44:08.883354-07:00","Action":"output","Test":"TestAddons/Setup","Output":"    --- FAIL: TestAddons/Setup (43.45s)\n"}
{"Time":"2023-05-31T11:44:08.883538-07:00","Action":"fail","Test":"TestAddons/Setup","Elapsed":43.45}
{"Time":"2023-05-31T11:44:08.883545-07:00","Action":"fail","Test":"TestAddons","Elapsed":43.6}
{"Time":"2023-05-31T11:44:08.883548-07:00","Action":"run","Test":"TestCertOptions"}
{"Time":"2023-05-31T11:44:08.883549-07:00","Action":"output","Test":"TestCertOptions","Output":"=== RUN   TestCertOptions\n"}
{"Time":"2023-05-31T11:44:08.883552-07:00","Action":"output","Test":"TestCertOptions","Output":"=== PAUSE TestCertOptions\n"}
{"Time":"2023-05-31T11:44:08.883553-07:00","Action":"pause","Test":"TestCertOptions"}
{"Time":"2023-05-31T11:44:08.883571-07:00","Action":"run","Test":"TestCertExpiration"}
{"Time":"2023-05-31T11:44:08.883573-07:00","Action":"output","Test":"TestCertExpiration","Output":"=== RUN   TestCertExpiration\n"}
{"Time":"2023-05-31T11:44:08.883574-07:00","Action":"output","Test":"TestCertExpiration","Output":"=== PAUSE TestCertExpiration\n"}
{"Time":"2023-05-31T11:44:08.883576-07:00","Action":"pause","Test":"TestCertExpiration"}
{"Time":"2023-05-31T11:44:08.883577-07:00","Action":"run","Test":"TestDockerFlags"}
{"Time":"2023-05-31T11:44:08.883578-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== RUN   TestDockerFlags\n"}
{"Time":"2023-05-31T11:44:08.88358-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== PAUSE TestDockerFlags\n"}
{"Time":"2023-05-31T11:44:08.883581-07:00","Action":"pause","Test":"TestDockerFlags"}
{"Time":"2023-05-31T11:44:08.883582-07:00","Action":"run","Test":"TestForceSystemdFlag"}
{"Time":"2023-05-31T11:44:08.883584-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== RUN   TestForceSystemdFlag\n"}
{"Time":"2023-05-31T11:44:08.883615-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== PAUSE TestForceSystemdFlag\n"}
{"Time":"2023-05-31T11:44:08.883617-07:00","Action":"pause","Test":"TestForceSystemdFlag"}
{"Time":"2023-05-31T11:44:08.883619-07:00","Action":"run","Test":"TestForceSystemdEnv"}
{"Time":"2023-05-31T11:44:08.88362-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== RUN   TestForceSystemdEnv\n"}
{"Time":"2023-05-31T11:44:08.883622-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== PAUSE TestForceSystemdEnv\n"}
{"Time":"2023-05-31T11:44:08.883623-07:00","Action":"pause","Test":"TestForceSystemdEnv"}
{"Time":"2023-05-31T11:44:08.883625-07:00","Action":"run","Test":"TestKVMDriverInstallOrUpdate"}
{"Time":"2023-05-31T11:44:08.883627-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"=== RUN   TestKVMDriverInstallOrUpdate\n"}
{"Time":"2023-05-31T11:44:08.88366-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"    driver_install_or_update_test.go:41: Skip if not linux.\n"}
{"Time":"2023-05-31T11:44:08.883699-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"--- SKIP: TestKVMDriverInstallOrUpdate (0.00s)\n"}
{"Time":"2023-05-31T11:44:08.883706-07:00","Action":"skip","Test":"TestKVMDriverInstallOrUpdate","Elapsed":0}
{"Time":"2023-05-31T11:44:08.88371-07:00","Action":"run","Test":"TestHyperKitDriverInstallOrUpdate"}
{"Time":"2023-05-31T11:44:08.883713-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"=== RUN   TestHyperKitDriverInstallOrUpdate\n"}
{"Time":"2023-05-31T11:44:08.88374-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"=== PAUSE TestHyperKitDriverInstallOrUpdate\n"}
{"Time":"2023-05-31T11:44:08.883744-07:00","Action":"pause","Test":"TestHyperKitDriverInstallOrUpdate"}
{"Time":"2023-05-31T11:44:08.883746-07:00","Action":"run","Test":"TestHyperkitDriverSkipUpgrade"}
{"Time":"2023-05-31T11:44:08.883748-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade","Output":"=== RUN   TestHyperkitDriverSkipUpgrade\n"}
{"Time":"2023-05-31T11:44:08.883753-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade","Output":"=== PAUSE TestHyperkitDriverSkipUpgrade\n"}
{"Time":"2023-05-31T11:44:08.883754-07:00","Action":"pause","Test":"TestHyperkitDriverSkipUpgrade"}
{"Time":"2023-05-31T11:44:08.883755-07:00","Action":"run","Test":"TestErrorSpam"}
{"Time":"2023-05-31T11:44:08.883757-07:00","Action":"output","Test":"TestErrorSpam","Output":"=== RUN   TestErrorSpam\n"}
{"Time":"2023-05-31T11:44:08.883875-07:00","Action":"run","Test":"TestErrorSpam/setup"}
{"Time":"2023-05-31T11:44:08.883878-07:00","Action":"output","Test":"TestErrorSpam/setup","Output":"=== RUN   TestErrorSpam/setup\n"}
{"Time":"2023-05-31T11:44:08.883943-07:00","Action":"output","Test":"TestErrorSpam/setup","Output":"    error_spam_test.go:81: (dbg) Run:  out/minikube-darwin-arm64 start -p nospam-694000 -n=1 --memory=2250 --wait=false --log_dir=/var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:44:39.117181-07:00","Action":"output","Test":"TestErrorSpam/setup","Output":"    error_spam_test.go:81: (dbg) Done: out/minikube-darwin-arm64 start -p nospam-694000 -n=1 --memory=2250 --wait=false --log_dir=/var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 --driver=qemu2 : (30.233893292s)\n"}
{"Time":"2023-05-31T11:44:39.117268-07:00","Action":"output","Test":"TestErrorSpam/setup","Output":"    error_spam_test.go:91: acceptable stderr: \"! /usr/local/bin/kubectl is version 1.25.9, which may have incompatibilities with Kubernetes 1.27.2.\"\n"}
{"Time":"2023-05-31T11:44:39.117279-07:00","Action":"run","Test":"TestErrorSpam/start"}
{"Time":"2023-05-31T11:44:39.117281-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"=== RUN   TestErrorSpam/start\n"}
{"Time":"2023-05-31T11:44:39.117427-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"    error_spam_test.go:216: Cleaning up 1 logfile(s) ...\n"}
{"Time":"2023-05-31T11:44:39.117651-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 start --dry-run\n"}
{"Time":"2023-05-31T11:44:39.228606-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 start --dry-run\n"}
{"Time":"2023-05-31T11:44:39.333791-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"    error_spam_test.go:182: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 start --dry-run\n"}
{"Time":"2023-05-31T11:44:39.434478-07:00","Action":"run","Test":"TestErrorSpam/status"}
{"Time":"2023-05-31T11:44:39.434489-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"=== RUN   TestErrorSpam/status\n"}
{"Time":"2023-05-31T11:44:39.434527-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"    error_spam_test.go:216: Cleaning up 0 logfile(s) ...\n"}
{"Time":"2023-05-31T11:44:39.434619-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 status\n"}
{"Time":"2023-05-31T11:44:39.51985-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 status\n"}
{"Time":"2023-05-31T11:44:39.604102-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"    error_spam_test.go:182: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 status\n"}
{"Time":"2023-05-31T11:44:39.692546-07:00","Action":"run","Test":"TestErrorSpam/pause"}
{"Time":"2023-05-31T11:44:39.692558-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"=== RUN   TestErrorSpam/pause\n"}
{"Time":"2023-05-31T11:44:39.692602-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"    error_spam_test.go:216: Cleaning up 0 logfile(s) ...\n"}
{"Time":"2023-05-31T11:44:39.69262-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 pause\n"}
{"Time":"2023-05-31T11:44:39.989174-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 pause\n"}
{"Time":"2023-05-31T11:44:40.183564-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"    error_spam_test.go:182: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 pause\n"}
{"Time":"2023-05-31T11:44:40.367598-07:00","Action":"run","Test":"TestErrorSpam/unpause"}
{"Time":"2023-05-31T11:44:40.367612-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"=== RUN   TestErrorSpam/unpause\n"}
{"Time":"2023-05-31T11:44:40.36765-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"    error_spam_test.go:216: Cleaning up 0 logfile(s) ...\n"}
{"Time":"2023-05-31T11:44:40.367668-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 unpause\n"}
{"Time":"2023-05-31T11:44:40.592976-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 unpause\n"}
{"Time":"2023-05-31T11:44:40.800073-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"    error_spam_test.go:182: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 unpause\n"}
{"Time":"2023-05-31T11:44:40.994806-07:00","Action":"run","Test":"TestErrorSpam/stop"}
{"Time":"2023-05-31T11:44:40.994818-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"=== RUN   TestErrorSpam/stop\n"}
{"Time":"2023-05-31T11:44:40.994853-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    error_spam_test.go:216: Cleaning up 0 logfile(s) ...\n"}
{"Time":"2023-05-31T11:44:40.994873-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 stop\n"}
{"Time":"2023-05-31T11:44:53.072432-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    error_spam_test.go:159: (dbg) Done: out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 stop: (12.077517042s)\n"}
{"Time":"2023-05-31T11:44:53.072494-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    error_spam_test.go:159: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 stop\n"}
{"Time":"2023-05-31T11:44:53.171474-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    error_spam_test.go:182: (dbg) Run:  out/minikube-darwin-arm64 -p nospam-694000 --log_dir /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/nospam-694000 stop\n"}
{"Time":"2023-05-31T11:44:53.234468-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:175: Cleaning up \"nospam-694000\" profile ...\n"}
{"Time":"2023-05-31T11:44:53.23448-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p nospam-694000\n"}
{"Time":"2023-05-31T11:44:53.376701-07:00","Action":"output","Test":"TestErrorSpam","Output":"--- PASS: TestErrorSpam (44.49s)\n"}
{"Time":"2023-05-31T11:44:53.376715-07:00","Action":"output","Test":"TestErrorSpam/setup","Output":"    --- PASS: TestErrorSpam/setup (30.23s)\n"}
{"Time":"2023-05-31T11:44:53.376717-07:00","Action":"pass","Test":"TestErrorSpam/setup","Elapsed":30.23}
{"Time":"2023-05-31T11:44:53.376721-07:00","Action":"output","Test":"TestErrorSpam/start","Output":"    --- PASS: TestErrorSpam/start (0.32s)\n"}
{"Time":"2023-05-31T11:44:53.376722-07:00","Action":"pass","Test":"TestErrorSpam/start","Elapsed":0.32}
{"Time":"2023-05-31T11:44:53.376724-07:00","Action":"output","Test":"TestErrorSpam/status","Output":"    --- PASS: TestErrorSpam/status (0.26s)\n"}
{"Time":"2023-05-31T11:44:53.376725-07:00","Action":"pass","Test":"TestErrorSpam/status","Elapsed":0.26}
{"Time":"2023-05-31T11:44:53.376727-07:00","Action":"output","Test":"TestErrorSpam/pause","Output":"    --- PASS: TestErrorSpam/pause (0.68s)\n"}
{"Time":"2023-05-31T11:44:53.376729-07:00","Action":"pass","Test":"TestErrorSpam/pause","Elapsed":0.68}
{"Time":"2023-05-31T11:44:53.37673-07:00","Action":"output","Test":"TestErrorSpam/unpause","Output":"    --- PASS: TestErrorSpam/unpause (0.63s)\n"}
{"Time":"2023-05-31T11:44:53.376732-07:00","Action":"pass","Test":"TestErrorSpam/unpause","Elapsed":0.63}
{"Time":"2023-05-31T11:44:53.376733-07:00","Action":"output","Test":"TestErrorSpam/stop","Output":"    --- PASS: TestErrorSpam/stop (12.24s)\n"}
{"Time":"2023-05-31T11:44:53.376736-07:00","Action":"pass","Test":"TestErrorSpam/stop","Elapsed":12.24}
{"Time":"2023-05-31T11:44:53.376737-07:00","Action":"pass","Test":"TestErrorSpam","Elapsed":44.49}
{"Time":"2023-05-31T11:44:53.376738-07:00","Action":"run","Test":"TestFunctional"}
{"Time":"2023-05-31T11:44:53.37674-07:00","Action":"output","Test":"TestFunctional","Output":"=== RUN   TestFunctional\n"}
{"Time":"2023-05-31T11:44:53.37675-07:00","Action":"run","Test":"TestFunctional/serial"}
{"Time":"2023-05-31T11:44:53.376751-07:00","Action":"output","Test":"TestFunctional/serial","Output":"=== RUN   TestFunctional/serial\n"}
{"Time":"2023-05-31T11:44:53.376779-07:00","Action":"run","Test":"TestFunctional/serial/CopySyncFile"}
{"Time":"2023-05-31T11:44:53.376783-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"=== RUN   TestFunctional/serial/CopySyncFile\n"}
{"Time":"2023-05-31T11:44:53.376818-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"    functional_test.go:1850: local sync path: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/test/nested/copy/1477/hosts\n"}
{"Time":"2023-05-31T11:44:53.37788-07:00","Action":"run","Test":"TestFunctional/serial/StartWithProxy"}
{"Time":"2023-05-31T11:44:53.377891-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"=== RUN   TestFunctional/serial/StartWithProxy\n"}
{"Time":"2023-05-31T11:44:53.378601-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"    functional_test.go:2229: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --memory=4000 --apiserver-port=8441 --wait=all --driver=qemu2 \n"}
{"Time":"2023-05-31T11:45:41.799632-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"    functional_test.go:2229: (dbg) Done: out/minikube-darwin-arm64 start -p functional-730000 --memory=4000 --apiserver-port=8441 --wait=all --driver=qemu2 : (48.422138375s)\n"}
{"Time":"2023-05-31T11:45:41.79965-07:00","Action":"run","Test":"TestFunctional/serial/AuditLog"}
{"Time":"2023-05-31T11:45:41.799652-07:00","Action":"output","Test":"TestFunctional/serial/AuditLog","Output":"=== RUN   TestFunctional/serial/AuditLog\n"}
{"Time":"2023-05-31T11:45:41.799754-07:00","Action":"run","Test":"TestFunctional/serial/SoftStart"}
{"Time":"2023-05-31T11:45:41.799758-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"=== RUN   TestFunctional/serial/SoftStart\n"}
{"Time":"2023-05-31T11:45:41.800113-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:654: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --alsologtostderr -v=8\n"}
{"Time":"2023-05-31T11:46:15.699813-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:654: (dbg) Done: out/minikube-darwin-arm64 start -p functional-730000 --alsologtostderr -v=8: (33.859334584s)\n"}
{"Time":"2023-05-31T11:46:15.699828-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:658: soft start took 33.859743625s for \"functional-730000\" cluster.\n"}
{"Time":"2023-05-31T11:46:15.700054-07:00","Action":"run","Test":"TestFunctional/serial/KubeContext"}
{"Time":"2023-05-31T11:46:15.700058-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"=== RUN   TestFunctional/serial/KubeContext\n"}
{"Time":"2023-05-31T11:46:15.700114-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"    functional_test.go:676: (dbg) Run:  kubectl config current-context\n"}
{"Time":"2023-05-31T11:46:15.73065-07:00","Action":"run","Test":"TestFunctional/serial/KubectlGetPods"}
{"Time":"2023-05-31T11:46:15.730662-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"=== RUN   TestFunctional/serial/KubectlGetPods\n"}
{"Time":"2023-05-31T11:46:15.730734-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"    functional_test.go:691: (dbg) Run:  kubectl --context functional-730000 get po -A\n"}
{"Time":"2023-05-31T11:46:15.779992-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd"}
{"Time":"2023-05-31T11:46:15.780007-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd","Output":"=== RUN   TestFunctional/serial/CacheCmd\n"}
{"Time":"2023-05-31T11:46:15.780023-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache"}
{"Time":"2023-05-31T11:46:15.780025-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache\n"}
{"Time":"2023-05-31T11:46:15.780042-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/add_remote"}
{"Time":"2023-05-31T11:46:15.780046-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/add_remote\n"}
{"Time":"2023-05-31T11:46:15.780106-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:3.1\n"}
{"Time":"2023-05-31T11:46:18.060546-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:3.1: (2.279453167s)\n"}
{"Time":"2023-05-31T11:46:18.060562-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:3.3\n"}
{"Time":"2023-05-31T11:46:20.134244-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:3.3: (2.072895125s)\n"}
{"Time":"2023-05-31T11:46:20.13426-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:46:21.723635-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"    functional_test.go:1044: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 cache add registry.k8s.io/pause:latest: (1.588834s)\n"}
{"Time":"2023-05-31T11:46:21.723666-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/add_local"}
{"Time":"2023-05-31T11:46:21.723669-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/add_local\n"}
{"Time":"2023-05-31T11:46:21.724346-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"    functional_test.go:1072: (dbg) Run:  docker build -t minikube-local-cache-test:functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalserialCacheCmdcacheadd_local2368023089/001\n"}
{"Time":"2023-05-31T11:46:22.104901-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"    functional_test.go:1084: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache add minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:46:22.948604-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"    functional_test.go:1089: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache delete minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:46:22.982084-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"    functional_test.go:1078: (dbg) Run:  docker rmi minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:46:23.032689-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/CacheDelete"}
{"Time":"2023-05-31T11:46:23.032701-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/CacheDelete","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/CacheDelete\n"}
{"Time":"2023-05-31T11:46:23.032704-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/CacheDelete","Output":"    functional_test.go:1097: (dbg) Run:  out/minikube-darwin-arm64 cache delete registry.k8s.io/pause:3.3\n"}
{"Time":"2023-05-31T11:46:23.066038-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/list"}
{"Time":"2023-05-31T11:46:23.066059-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/list\n"}
{"Time":"2023-05-31T11:46:23.066064-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"    functional_test.go:1105: (dbg) Run:  out/minikube-darwin-arm64 cache list\n"}
{"Time":"2023-05-31T11:46:23.099037-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node"}
{"Time":"2023-05-31T11:46:23.099048-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node\n"}
{"Time":"2023-05-31T11:46:23.099067-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"    functional_test.go:1119: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh sudo crictl images\n"}
{"Time":"2023-05-31T11:46:23.172279-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload"}
{"Time":"2023-05-31T11:46:23.17229-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/cache_reload\n"}
{"Time":"2023-05-31T11:46:23.172307-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1142: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh sudo docker rmi registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:46:23.248263-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1148: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh sudo crictl inspecti registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:46:23.319214-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1148: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh sudo crictl inspecti registry.k8s.io/pause:latest: exit status 1 (70.820708ms)\n"}
{"Time":"2023-05-31T11:46:23.319227-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2023-05-31T11:46:23.319229-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:46:23.319231-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \t\u001b[31mFATA\u001b[0m[0000] no such image \"registry.k8s.io/pause:latest\" present \n"}
{"Time":"2023-05-31T11:46:23.319232-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2023-05-31T11:46:23.319241-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:46:23.319242-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:46:23.319244-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2023-05-31T11:46:23.319245-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2023-05-31T11:46:23.319246-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:46:23.319248-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1153: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cache reload\n"}
{"Time":"2023-05-31T11:46:24.437019-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1153: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 cache reload: (1.117466708s)\n"}
{"Time":"2023-05-31T11:46:24.437039-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:1158: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh sudo crictl inspecti registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:46:24.512814-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/delete"}
{"Time":"2023-05-31T11:46:24.512828-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/delete\n"}
{"Time":"2023-05-31T11:46:24.512853-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"    functional_test.go:1167: (dbg) Run:  out/minikube-darwin-arm64 cache delete registry.k8s.io/pause:3.1\n"}
{"Time":"2023-05-31T11:46:24.546581-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"    functional_test.go:1167: (dbg) Run:  out/minikube-darwin-arm64 cache delete registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:46:24.577883-07:00","Action":"run","Test":"TestFunctional/serial/MinikubeKubectlCmd"}
{"Time":"2023-05-31T11:46:24.577894-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"=== RUN   TestFunctional/serial/MinikubeKubectlCmd\n"}
{"Time":"2023-05-31T11:46:24.577905-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"    functional_test.go:711: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 kubectl -- --context functional-730000 get pods\n"}
{"Time":"2023-05-31T11:46:25.072334-07:00","Action":"run","Test":"TestFunctional/serial/MinikubeKubectlCmdDirectly"}
{"Time":"2023-05-31T11:46:25.072346-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmdDirectly","Output":"=== RUN   TestFunctional/serial/MinikubeKubectlCmdDirectly\n"}
{"Time":"2023-05-31T11:46:25.072611-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmdDirectly","Output":"    functional_test.go:736: (dbg) Run:  out/kubectl --context functional-730000 get pods\n"}
{"Time":"2023-05-31T11:46:25.606599-07:00","Action":"run","Test":"TestFunctional/serial/ExtraConfig"}
{"Time":"2023-05-31T11:46:25.606611-07:00","Action":"output","Test":"TestFunctional/serial/ExtraConfig","Output":"=== RUN   TestFunctional/serial/ExtraConfig\n"}
{"Time":"2023-05-31T11:46:25.606659-07:00","Action":"output","Test":"TestFunctional/serial/ExtraConfig","Output":"    functional_test.go:752: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --extra-config=apiserver.enable-admission-plugins=NamespaceAutoProvision --wait=all\n"}
{"Time":"2023-05-31T11:47:02.010764-07:00","Action":"output","Test":"TestFunctional/serial/ExtraConfig","Output":"    functional_test.go:752: (dbg) Done: out/minikube-darwin-arm64 start -p functional-730000 --extra-config=apiserver.enable-admission-plugins=NamespaceAutoProvision --wait=all: (36.401204833s)\n"}
{"Time":"2023-05-31T11:47:02.010779-07:00","Action":"output","Test":"TestFunctional/serial/ExtraConfig","Output":"    functional_test.go:756: restart took 36.401308166s for \"functional-730000\" cluster.\n"}
{"Time":"2023-05-31T11:47:02.010971-07:00","Action":"run","Test":"TestFunctional/serial/ComponentHealth"}
{"Time":"2023-05-31T11:47:02.010976-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"=== RUN   TestFunctional/serial/ComponentHealth\n"}
{"Time":"2023-05-31T11:47:02.011047-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:805: (dbg) Run:  kubectl --context functional-730000 get po -l tier=control-plane -n kube-system -o=json\n"}
{"Time":"2023-05-31T11:47:02.053787-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:820: etcd phase: Running\n"}
{"Time":"2023-05-31T11:47:02.053801-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:830: etcd status: Ready\n"}
{"Time":"2023-05-31T11:47:02.053803-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:820: kube-apiserver phase: Running\n"}
{"Time":"2023-05-31T11:47:02.053805-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:830: kube-apiserver status: Ready\n"}
{"Time":"2023-05-31T11:47:02.053807-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:820: kube-controller-manager phase: Running\n"}
{"Time":"2023-05-31T11:47:02.053808-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:830: kube-controller-manager status: Ready\n"}
{"Time":"2023-05-31T11:47:02.053809-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:820: kube-scheduler phase: Running\n"}
{"Time":"2023-05-31T11:47:02.053811-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"    functional_test.go:830: kube-scheduler status: Ready\n"}
{"Time":"2023-05-31T11:47:02.053814-07:00","Action":"run","Test":"TestFunctional/serial/LogsCmd"}
{"Time":"2023-05-31T11:47:02.053816-07:00","Action":"output","Test":"TestFunctional/serial/LogsCmd","Output":"=== RUN   TestFunctional/serial/LogsCmd\n"}
{"Time":"2023-05-31T11:47:02.053817-07:00","Action":"output","Test":"TestFunctional/serial/LogsCmd","Output":"    functional_test.go:1231: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 logs\n"}
{"Time":"2023-05-31T11:47:02.695939-07:00","Action":"run","Test":"TestFunctional/serial/LogsFileCmd"}
{"Time":"2023-05-31T11:47:02.695952-07:00","Action":"output","Test":"TestFunctional/serial/LogsFileCmd","Output":"=== RUN   TestFunctional/serial/LogsFileCmd\n"}
{"Time":"2023-05-31T11:47:02.696169-07:00","Action":"output","Test":"TestFunctional/serial/LogsFileCmd","Output":"    functional_test.go:1245: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 logs --file /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalserialLogsFileCmd3523057780/001/logs.txt\n"}
{"Time":"2023-05-31T11:47:03.346612-07:00","Action":"run","Test":"TestFunctional/parallel"}
{"Time":"2023-05-31T11:47:03.346629-07:00","Action":"output","Test":"TestFunctional/parallel","Output":"=== RUN   TestFunctional/parallel\n"}
{"Time":"2023-05-31T11:47:03.346633-07:00","Action":"run","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2023-05-31T11:47:03.346634-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== RUN   TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2023-05-31T11:47:03.346645-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== PAUSE TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2023-05-31T11:47:03.346646-07:00","Action":"pause","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2023-05-31T11:47:03.346647-07:00","Action":"run","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2023-05-31T11:47:03.346648-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== RUN   TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2023-05-31T11:47:03.346651-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== PAUSE TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2023-05-31T11:47:03.346652-07:00","Action":"pause","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2023-05-31T11:47:03.346653-07:00","Action":"run","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2023-05-31T11:47:03.346654-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== RUN   TestFunctional/parallel/DryRun\n"}
{"Time":"2023-05-31T11:47:03.346656-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== PAUSE TestFunctional/parallel/DryRun\n"}
{"Time":"2023-05-31T11:47:03.346657-07:00","Action":"pause","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2023-05-31T11:47:03.346658-07:00","Action":"run","Test":"TestFunctional/parallel/InternationalLanguage"}
{"Time":"2023-05-31T11:47:03.34666-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"=== RUN   TestFunctional/parallel/InternationalLanguage\n"}
{"Time":"2023-05-31T11:47:03.346662-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"=== PAUSE TestFunctional/parallel/InternationalLanguage\n"}
{"Time":"2023-05-31T11:47:03.346663-07:00","Action":"pause","Test":"TestFunctional/parallel/InternationalLanguage"}
{"Time":"2023-05-31T11:47:03.346664-07:00","Action":"run","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2023-05-31T11:47:03.346665-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== RUN   TestFunctional/parallel/StatusCmd\n"}
{"Time":"2023-05-31T11:47:03.346667-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== PAUSE TestFunctional/parallel/StatusCmd\n"}
{"Time":"2023-05-31T11:47:03.346668-07:00","Action":"pause","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2023-05-31T11:47:03.346673-07:00","Action":"run","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2023-05-31T11:47:03.346674-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== RUN   TestFunctional/parallel/MountCmd\n"}
{"Time":"2023-05-31T11:47:03.346676-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== PAUSE TestFunctional/parallel/MountCmd\n"}
{"Time":"2023-05-31T11:47:03.346678-07:00","Action":"pause","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2023-05-31T11:47:03.346699-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2023-05-31T11:47:03.3467-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== RUN   TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2023-05-31T11:47:03.346701-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== PAUSE TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2023-05-31T11:47:03.346703-07:00","Action":"pause","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2023-05-31T11:47:03.346704-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2023-05-31T11:47:03.346705-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== RUN   TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2023-05-31T11:47:03.346707-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== PAUSE TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2023-05-31T11:47:03.346708-07:00","Action":"pause","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2023-05-31T11:47:03.346709-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmdConnect"}
{"Time":"2023-05-31T11:47:03.346711-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"=== RUN   TestFunctional/parallel/ServiceCmdConnect\n"}
{"Time":"2023-05-31T11:47:03.346724-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"=== PAUSE TestFunctional/parallel/ServiceCmdConnect\n"}
{"Time":"2023-05-31T11:47:03.346728-07:00","Action":"pause","Test":"TestFunctional/parallel/ServiceCmdConnect"}
{"Time":"2023-05-31T11:47:03.34673-07:00","Action":"run","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2023-05-31T11:47:03.346732-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== RUN   TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2023-05-31T11:47:03.346742-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== PAUSE TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2023-05-31T11:47:03.346746-07:00","Action":"pause","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2023-05-31T11:47:03.346748-07:00","Action":"run","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2023-05-31T11:47:03.346749-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== RUN   TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2023-05-31T11:47:03.346751-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== PAUSE TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2023-05-31T11:47:03.346752-07:00","Action":"pause","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2023-05-31T11:47:03.346754-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2023-05-31T11:47:03.346756-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== RUN   TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2023-05-31T11:47:03.34676-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== PAUSE TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2023-05-31T11:47:03.346762-07:00","Action":"pause","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2023-05-31T11:47:03.346763-07:00","Action":"run","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2023-05-31T11:47:03.346764-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== RUN   TestFunctional/parallel/SSHCmd\n"}
{"Time":"2023-05-31T11:47:03.346766-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== PAUSE TestFunctional/parallel/SSHCmd\n"}
{"Time":"2023-05-31T11:47:03.346767-07:00","Action":"pause","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2023-05-31T11:47:03.346856-07:00","Action":"run","Test":"TestFunctional/parallel/CpCmd"}
{"Time":"2023-05-31T11:47:03.346874-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"=== RUN   TestFunctional/parallel/CpCmd\n"}
{"Time":"2023-05-31T11:47:03.346897-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"=== PAUSE TestFunctional/parallel/CpCmd\n"}
{"Time":"2023-05-31T11:47:03.346899-07:00","Action":"pause","Test":"TestFunctional/parallel/CpCmd"}
{"Time":"2023-05-31T11:47:03.3469-07:00","Action":"run","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2023-05-31T11:47:03.346901-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== RUN   TestFunctional/parallel/MySQL\n"}
{"Time":"2023-05-31T11:47:03.346903-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== PAUSE TestFunctional/parallel/MySQL\n"}
{"Time":"2023-05-31T11:47:03.346904-07:00","Action":"pause","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2023-05-31T11:47:03.346905-07:00","Action":"run","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2023-05-31T11:47:03.346906-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== RUN   TestFunctional/parallel/FileSync\n"}
{"Time":"2023-05-31T11:47:03.346908-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== PAUSE TestFunctional/parallel/FileSync\n"}
{"Time":"2023-05-31T11:47:03.346911-07:00","Action":"pause","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2023-05-31T11:47:03.346912-07:00","Action":"run","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2023-05-31T11:47:03.346913-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== RUN   TestFunctional/parallel/CertSync\n"}
{"Time":"2023-05-31T11:47:03.346916-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== PAUSE TestFunctional/parallel/CertSync\n"}
{"Time":"2023-05-31T11:47:03.346917-07:00","Action":"pause","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2023-05-31T11:47:03.346918-07:00","Action":"run","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2023-05-31T11:47:03.34692-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== RUN   TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2023-05-31T11:47:03.346921-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== PAUSE TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2023-05-31T11:47:03.346922-07:00","Action":"pause","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2023-05-31T11:47:03.346923-07:00","Action":"run","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2023-05-31T11:47:03.346924-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== RUN   TestFunctional/parallel/DockerEnv\n"}
{"Time":"2023-05-31T11:47:03.346926-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== PAUSE TestFunctional/parallel/DockerEnv\n"}
{"Time":"2023-05-31T11:47:03.346927-07:00","Action":"pause","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2023-05-31T11:47:03.346928-07:00","Action":"run","Test":"TestFunctional/parallel/PodmanEnv"}
{"Time":"2023-05-31T11:47:03.346929-07:00","Action":"output","Test":"TestFunctional/parallel/PodmanEnv","Output":"=== RUN   TestFunctional/parallel/PodmanEnv\n"}
{"Time":"2023-05-31T11:47:03.346931-07:00","Action":"output","Test":"TestFunctional/parallel/PodmanEnv","Output":"=== PAUSE TestFunctional/parallel/PodmanEnv\n"}
{"Time":"2023-05-31T11:47:03.346933-07:00","Action":"pause","Test":"TestFunctional/parallel/PodmanEnv"}
{"Time":"2023-05-31T11:47:03.346934-07:00","Action":"run","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2023-05-31T11:47:03.346935-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== RUN   TestFunctional/parallel/NodeLabels\n"}
{"Time":"2023-05-31T11:47:03.346937-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== PAUSE TestFunctional/parallel/NodeLabels\n"}
{"Time":"2023-05-31T11:47:03.346938-07:00","Action":"pause","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2023-05-31T11:47:03.346939-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands"}
{"Time":"2023-05-31T11:47:03.34694-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands","Output":"=== RUN   TestFunctional/parallel/ImageCommands\n"}
{"Time":"2023-05-31T11:47:03.346942-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands","Output":"=== PAUSE TestFunctional/parallel/ImageCommands\n"}
{"Time":"2023-05-31T11:47:03.346944-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands"}
{"Time":"2023-05-31T11:47:03.346945-07:00","Action":"run","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled"}
{"Time":"2023-05-31T11:47:03.346946-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"=== RUN   TestFunctional/parallel/NonActiveRuntimeDisabled\n"}
{"Time":"2023-05-31T11:47:03.346948-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"=== PAUSE TestFunctional/parallel/NonActiveRuntimeDisabled\n"}
{"Time":"2023-05-31T11:47:03.346949-07:00","Action":"pause","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled"}
{"Time":"2023-05-31T11:47:03.346951-07:00","Action":"run","Test":"TestFunctional/parallel/Version"}
{"Time":"2023-05-31T11:47:03.346952-07:00","Action":"output","Test":"TestFunctional/parallel/Version","Output":"=== RUN   TestFunctional/parallel/Version\n"}
{"Time":"2023-05-31T11:47:03.346953-07:00","Action":"output","Test":"TestFunctional/parallel/Version","Output":"=== PAUSE TestFunctional/parallel/Version\n"}
{"Time":"2023-05-31T11:47:03.346954-07:00","Action":"pause","Test":"TestFunctional/parallel/Version"}
{"Time":"2023-05-31T11:47:03.346956-07:00","Action":"run","Test":"TestFunctional/parallel/License"}
{"Time":"2023-05-31T11:47:03.346957-07:00","Action":"output","Test":"TestFunctional/parallel/License","Output":"=== RUN   TestFunctional/parallel/License\n"}
{"Time":"2023-05-31T11:47:03.346958-07:00","Action":"output","Test":"TestFunctional/parallel/License","Output":"=== PAUSE TestFunctional/parallel/License\n"}
{"Time":"2023-05-31T11:47:03.346959-07:00","Action":"pause","Test":"TestFunctional/parallel/License"}
{"Time":"2023-05-31T11:47:03.34696-07:00","Action":"cont","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2023-05-31T11:47:03.346962-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== CONT  TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2023-05-31T11:47:03.346963-07:00","Action":"cont","Test":"TestFunctional/parallel/CpCmd"}
{"Time":"2023-05-31T11:47:03.346965-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"=== CONT  TestFunctional/parallel/CpCmd\n"}
{"Time":"2023-05-31T11:47:03.346966-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config unset cpus\n"}
{"Time":"2023-05-31T11:47:03.347011-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"    helpers_test.go:556: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cp testdata/cp-test.txt /home/docker/cp-test.txt\n"}
{"Time":"2023-05-31T11:47:03.383777-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config get cpus\n"}
{"Time":"2023-05-31T11:47:03.412852-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 config get cpus: exit status 14 (29.054417ms)\n"}
{"Time":"2023-05-31T11:47:03.412867-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.412869-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:03.412871-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \tError: specified key could not be found in config\n"}
{"Time":"2023-05-31T11:47:03.412873-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.412874-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:03.412877-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config set cpus 2\n"}
{"Time":"2023-05-31T11:47:03.421711-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"    helpers_test.go:534: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh -n functional-730000 \"sudo cat /home/docker/cp-test.txt\"\n"}
{"Time":"2023-05-31T11:47:03.44764-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config get cpus\n"}
{"Time":"2023-05-31T11:47:03.488619-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config unset cpus\n"}
{"Time":"2023-05-31T11:47:03.491807-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"    helpers_test.go:556: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 cp functional-730000:/home/docker/cp-test.txt /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelCpCmd2722981526/001/cp-test.txt\n"}
{"Time":"2023-05-31T11:47:03.521776-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 config get cpus\n"}
{"Time":"2023-05-31T11:47:03.550373-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:1194: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 config get cpus: exit status 14 (28.526334ms)\n"}
{"Time":"2023-05-31T11:47:03.550386-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.550388-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:03.55039-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \tError: specified key could not be found in config\n"}
{"Time":"2023-05-31T11:47:03.550392-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.550393-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:03.550396-07:00","Action":"cont","Test":"TestFunctional/parallel/License"}
{"Time":"2023-05-31T11:47:03.550397-07:00","Action":"output","Test":"TestFunctional/parallel/License","Output":"=== CONT  TestFunctional/parallel/License\n"}
{"Time":"2023-05-31T11:47:03.550447-07:00","Action":"output","Test":"TestFunctional/parallel/License","Output":"    functional_test.go:2283: (dbg) Run:  out/minikube-darwin-arm64 license\n"}
{"Time":"2023-05-31T11:47:03.556678-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"    helpers_test.go:534: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh -n functional-730000 \"sudo cat /home/docker/cp-test.txt\"\n"}
{"Time":"2023-05-31T11:47:03.624154-07:00","Action":"cont","Test":"TestFunctional/parallel/Version"}
{"Time":"2023-05-31T11:47:03.624167-07:00","Action":"output","Test":"TestFunctional/parallel/Version","Output":"=== CONT  TestFunctional/parallel/Version\n"}
{"Time":"2023-05-31T11:47:03.624171-07:00","Action":"run","Test":"TestFunctional/parallel/Version/short"}
{"Time":"2023-05-31T11:47:03.624173-07:00","Action":"output","Test":"TestFunctional/parallel/Version/short","Output":"=== RUN   TestFunctional/parallel/Version/short\n"}
{"Time":"2023-05-31T11:47:03.624177-07:00","Action":"output","Test":"TestFunctional/parallel/Version/short","Output":"=== PAUSE TestFunctional/parallel/Version/short\n"}
{"Time":"2023-05-31T11:47:03.624178-07:00","Action":"pause","Test":"TestFunctional/parallel/Version/short"}
{"Time":"2023-05-31T11:47:03.624181-07:00","Action":"run","Test":"TestFunctional/parallel/Version/components"}
{"Time":"2023-05-31T11:47:03.624182-07:00","Action":"output","Test":"TestFunctional/parallel/Version/components","Output":"=== RUN   TestFunctional/parallel/Version/components\n"}
{"Time":"2023-05-31T11:47:03.624187-07:00","Action":"output","Test":"TestFunctional/parallel/Version/components","Output":"=== PAUSE TestFunctional/parallel/Version/components\n"}
{"Time":"2023-05-31T11:47:03.624188-07:00","Action":"pause","Test":"TestFunctional/parallel/Version/components"}
{"Time":"2023-05-31T11:47:03.62419-07:00","Action":"cont","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled"}
{"Time":"2023-05-31T11:47:03.624199-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"=== CONT  TestFunctional/parallel/NonActiveRuntimeDisabled\n"}
{"Time":"2023-05-31T11:47:03.624264-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"    functional_test.go:2022: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo systemctl is-active crio\"\n"}
{"Time":"2023-05-31T11:47:03.688272-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"    functional_test.go:2022: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo systemctl is-active crio\": exit status 1 (63.9415ms)\n"}
{"Time":"2023-05-31T11:47:03.688285-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.688287-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:03.688289-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        \tinactive\n"}
{"Time":"2023-05-31T11:47:03.688291-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.688293-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:03.688294-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:03.688295-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        \tssh: Process exited with status 3\n"}
{"Time":"2023-05-31T11:47:03.688304-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        \n"}
{"Time":"2023-05-31T11:47:03.688305-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:03.688314-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands"}
{"Time":"2023-05-31T11:47:03.688315-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands","Output":"=== CONT  TestFunctional/parallel/ImageCommands\n"}
{"Time":"2023-05-31T11:47:03.688317-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageListShort"}
{"Time":"2023-05-31T11:47:03.688318-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageListShort\n"}
{"Time":"2023-05-31T11:47:03.68832-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"=== PAUSE TestFunctional/parallel/ImageCommands/ImageListShort\n"}
{"Time":"2023-05-31T11:47:03.688321-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands/ImageListShort"}
{"Time":"2023-05-31T11:47:03.688323-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageListTable"}
{"Time":"2023-05-31T11:47:03.688324-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageListTable\n"}
{"Time":"2023-05-31T11:47:03.688355-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"=== PAUSE TestFunctional/parallel/ImageCommands/ImageListTable\n"}
{"Time":"2023-05-31T11:47:03.68837-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands/ImageListTable"}
{"Time":"2023-05-31T11:47:03.688374-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageListJson"}
{"Time":"2023-05-31T11:47:03.688377-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageListJson\n"}
{"Time":"2023-05-31T11:47:03.688381-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"=== PAUSE TestFunctional/parallel/ImageCommands/ImageListJson\n"}
{"Time":"2023-05-31T11:47:03.688384-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands/ImageListJson"}
{"Time":"2023-05-31T11:47:03.688389-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml"}
{"Time":"2023-05-31T11:47:03.688392-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageListYaml\n"}
{"Time":"2023-05-31T11:47:03.688396-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"=== PAUSE TestFunctional/parallel/ImageCommands/ImageListYaml\n"}
{"Time":"2023-05-31T11:47:03.688399-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml"}
{"Time":"2023-05-31T11:47:03.688402-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageBuild"}
{"Time":"2023-05-31T11:47:03.688404-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageBuild\n"}
{"Time":"2023-05-31T11:47:03.688408-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"=== PAUSE TestFunctional/parallel/ImageCommands/ImageBuild\n"}
{"Time":"2023-05-31T11:47:03.688411-07:00","Action":"pause","Test":"TestFunctional/parallel/ImageCommands/ImageBuild"}
{"Time":"2023-05-31T11:47:03.688415-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/Setup"}
{"Time":"2023-05-31T11:47:03.688418-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/Setup","Output":"=== RUN   TestFunctional/parallel/ImageCommands/Setup\n"}
{"Time":"2023-05-31T11:47:03.688505-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/Setup","Output":"    functional_test.go:340: (dbg) Run:  docker pull gcr.io/google-containers/addon-resizer:1.8.8\n"}
{"Time":"2023-05-31T11:47:03.955409-07:00","Action":"cont","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2023-05-31T11:47:03.95542-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== CONT  TestFunctional/parallel/NodeLabels\n"}
{"Time":"2023-05-31T11:47:03.955505-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"    functional_test.go:217: (dbg) Run:  kubectl --context functional-730000 get nodes --output=go-template \"--template='{{range $k, $v := (index .items 0).metadata.labels}}{{$k}} {{end}}'\"\n"}
{"Time":"2023-05-31T11:47:03.991724-07:00","Action":"cont","Test":"TestFunctional/parallel/PodmanEnv"}
{"Time":"2023-05-31T11:47:03.991738-07:00","Action":"output","Test":"TestFunctional/parallel/PodmanEnv","Output":"=== CONT  TestFunctional/parallel/PodmanEnv\n"}
{"Time":"2023-05-31T11:47:03.991746-07:00","Action":"output","Test":"TestFunctional/parallel/PodmanEnv","Output":"    functional_test.go:545: only validate podman env with docker container runtime, currently testing docker\n"}
{"Time":"2023-05-31T11:47:03.991763-07:00","Action":"cont","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2023-05-31T11:47:03.991782-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== CONT  TestFunctional/parallel/DockerEnv\n"}
{"Time":"2023-05-31T11:47:03.991787-07:00","Action":"run","Test":"TestFunctional/parallel/DockerEnv/bash"}
{"Time":"2023-05-31T11:47:03.991788-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv/bash","Output":"=== RUN   TestFunctional/parallel/DockerEnv/bash\n"}
{"Time":"2023-05-31T11:47:03.991838-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv/bash","Output":"    functional_test.go:494: (dbg) Run:  /bin/bash -c \"eval $(out/minikube-darwin-arm64 -p functional-730000 docker-env) \u0026\u0026 out/minikube-darwin-arm64 status -p functional-730000\"\n"}
{"Time":"2023-05-31T11:47:04.246752-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv/bash","Output":"    functional_test.go:517: (dbg) Run:  /bin/bash -c \"eval $(out/minikube-darwin-arm64 -p functional-730000 docker-env) \u0026\u0026 docker images\"\n"}
{"Time":"2023-05-31T11:47:04.39974-07:00","Action":"cont","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2023-05-31T11:47:04.399752-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== CONT  TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2023-05-31T11:47:04.399756-07:00","Action":"run","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes"}
{"Time":"2023-05-31T11:47:04.399758-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Output":"=== RUN   TestFunctional/parallel/UpdateContextCmd/no_changes\n"}
{"Time":"2023-05-31T11:47:04.399771-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Output":"=== PAUSE TestFunctional/parallel/UpdateContextCmd/no_changes\n"}
{"Time":"2023-05-31T11:47:04.399772-07:00","Action":"pause","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes"}
{"Time":"2023-05-31T11:47:04.399774-07:00","Action":"run","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster"}
{"Time":"2023-05-31T11:47:04.399776-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Output":"=== RUN   TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster\n"}
{"Time":"2023-05-31T11:47:04.399779-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Output":"=== PAUSE TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster\n"}
{"Time":"2023-05-31T11:47:04.39978-07:00","Action":"pause","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster"}
{"Time":"2023-05-31T11:47:04.399783-07:00","Action":"run","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters"}
{"Time":"2023-05-31T11:47:04.399784-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Output":"=== RUN   TestFunctional/parallel/UpdateContextCmd/no_clusters\n"}
{"Time":"2023-05-31T11:47:04.399793-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Output":"=== PAUSE TestFunctional/parallel/UpdateContextCmd/no_clusters\n"}
{"Time":"2023-05-31T11:47:04.399795-07:00","Action":"pause","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters"}
{"Time":"2023-05-31T11:47:04.399797-07:00","Action":"cont","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2023-05-31T11:47:04.399798-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== CONT  TestFunctional/parallel/CertSync\n"}
{"Time":"2023-05-31T11:47:04.400006-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1967: Checking for existence of /etc/ssl/certs/1477.pem within VM\n"}
{"Time":"2023-05-31T11:47:04.400013-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1968: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /etc/ssl/certs/1477.pem\"\n"}
{"Time":"2023-05-31T11:47:04.470315-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1967: Checking for existence of /usr/share/ca-certificates/1477.pem within VM\n"}
{"Time":"2023-05-31T11:47:04.470331-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1968: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /usr/share/ca-certificates/1477.pem\"\n"}
{"Time":"2023-05-31T11:47:04.537212-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1967: Checking for existence of /etc/ssl/certs/51391683.0 within VM\n"}
{"Time":"2023-05-31T11:47:04.537235-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1968: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /etc/ssl/certs/51391683.0\"\n"}
{"Time":"2023-05-31T11:47:04.605326-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1994: Checking for existence of /etc/ssl/certs/14772.pem within VM\n"}
{"Time":"2023-05-31T11:47:04.605344-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1995: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /etc/ssl/certs/14772.pem\"\n"}
{"Time":"2023-05-31T11:47:04.673216-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1994: Checking for existence of /usr/share/ca-certificates/14772.pem within VM\n"}
{"Time":"2023-05-31T11:47:04.673234-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1995: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /usr/share/ca-certificates/14772.pem\"\n"}
{"Time":"2023-05-31T11:47:04.740733-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1994: Checking for existence of /etc/ssl/certs/3ec20f2e.0 within VM\n"}
{"Time":"2023-05-31T11:47:04.740748-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:1995: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /etc/ssl/certs/3ec20f2e.0\"\n"}
{"Time":"2023-05-31T11:47:04.810348-07:00","Action":"cont","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2023-05-31T11:47:04.810366-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== CONT  TestFunctional/parallel/FileSync\n"}
{"Time":"2023-05-31T11:47:04.810375-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:1924: Checking for existence of /etc/test/nested/copy/1477/hosts within VM\n"}
{"Time":"2023-05-31T11:47:04.81041-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:1926: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo cat /etc/test/nested/copy/1477/hosts\"\n"}
{"Time":"2023-05-31T11:47:04.881291-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:1931: file sync test content: Test file for checking file sync process\n"}
{"Time":"2023-05-31T11:47:04.881508-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2023-05-31T11:47:04.881513-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2023-05-31T11:47:04.881586-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:1782: arm64 is not supported by mysql. Skip the test. See https://github.com/kubernetes/minikube/issues/10144\n"}
{"Time":"2023-05-31T11:47:04.881588-07:00","Action":"cont","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2023-05-31T11:47:04.881596-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== CONT  TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2023-05-31T11:47:04.881598-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/DeployApp"}
{"Time":"2023-05-31T11:47:04.881599-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/DeployApp\n"}
{"Time":"2023-05-31T11:47:04.881652-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    functional_test.go:1435: (dbg) Run:  kubectl --context functional-730000 create deployment hello-node --image=registry.k8s.io/echoserver-arm:1.8\n"}
{"Time":"2023-05-31T11:47:04.92039-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    functional_test.go:1443: (dbg) Run:  kubectl --context functional-730000 expose deployment hello-node --type=NodePort --port=8080\n"}
{"Time":"2023-05-31T11:47:04.967311-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    functional_test.go:1448: (dbg) TestFunctional/parallel/ServiceCmd/DeployApp: waiting 10m0s for pods matching \"app=hello-node\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:04.977693-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    helpers_test.go:344: \"hello-node-7b684b55f9-7pbws\" [d8491b04-6efb-4030-b764-a46c6a800ab8] Pending / Ready:ContainersNotReady (containers with unready status: [echoserver-arm]) / ContainersReady:ContainersNotReady (containers with unready status: [echoserver-arm])\n"}
{"Time":"2023-05-31T11:47:05.836872-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/Setup","Output":"    functional_test.go:340: (dbg) Done: docker pull gcr.io/google-containers/addon-resizer:1.8.8: (2.148323166s)\n"}
{"Time":"2023-05-31T11:47:05.836938-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/Setup","Output":"    functional_test.go:345: (dbg) Run:  docker tag gcr.io/google-containers/addon-resizer:1.8.8 gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:05.878764-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon"}
{"Time":"2023-05-31T11:47:05.878787-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageLoadDaemon\n"}
{"Time":"2023-05-31T11:47:05.878825-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Output":"    functional_test.go:353: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:07.960979-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Output":"    functional_test.go:353: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr: (2.082105625s)\n"}
{"Time":"2023-05-31T11:47:07.960992-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:47:08.041185-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon"}
{"Time":"2023-05-31T11:47:08.041207-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageReloadDaemon\n"}
{"Time":"2023-05-31T11:47:08.041214-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Output":"    functional_test.go:363: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:09.507369-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Output":"    functional_test.go:363: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr: (1.466092458s)\n"}
{"Time":"2023-05-31T11:47:09.507393-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:47:09.583882-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon"}
{"Time":"2023-05-31T11:47:09.583896-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon\n"}
{"Time":"2023-05-31T11:47:09.583992-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:233: (dbg) Run:  docker pull gcr.io/google-containers/addon-resizer:1.8.9\n"}
{"Time":"2023-05-31T11:47:11.802795-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:233: (dbg) Done: docker pull gcr.io/google-containers/addon-resizer:1.8.9: (2.218641833s)\n"}
{"Time":"2023-05-31T11:47:11.802915-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:238: (dbg) Run:  docker tag gcr.io/google-containers/addon-resizer:1.8.9 gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:11.866252-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:243: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:11.980692-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    helpers_test.go:344: \"hello-node-7b684b55f9-7pbws\" [d8491b04-6efb-4030-b764-a46c6a800ab8] Running / Ready:ContainersNotReady (containers with unready status: [echoserver-arm]) / ContainersReady:ContainersNotReady (containers with unready status: [echoserver-arm])\n"}
{"Time":"2023-05-31T11:47:13.737485-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:243: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 image load --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr: (1.871216208s)\n"}
{"Time":"2023-05-31T11:47:13.7375-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:47:13.813953-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageSaveToFile"}
{"Time":"2023-05-31T11:47:13.813965-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveToFile","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageSaveToFile\n"}
{"Time":"2023-05-31T11:47:13.81404-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveToFile","Output":"    functional_test.go:378: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image save gcr.io/google-containers/addon-resizer:functional-730000 /Users/jenkins/workspace/addon-resizer-save.tar --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:14.333562-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageRemove"}
{"Time":"2023-05-31T11:47:14.333577-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageRemove","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageRemove\n"}
{"Time":"2023-05-31T11:47:14.333586-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageRemove","Output":"    functional_test.go:390: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image rm gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:14.423046-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageRemove","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:47:14.495942-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile"}
{"Time":"2023-05-31T11:47:14.495956-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageLoadFromFile\n"}
{"Time":"2023-05-31T11:47:14.495976-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile","Output":"    functional_test.go:407: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image load /Users/jenkins/workspace/addon-resizer-save.tar --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:15.040255-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:47:15.120379-07:00","Action":"run","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon"}
{"Time":"2023-05-31T11:47:15.120392-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"=== RUN   TestFunctional/parallel/ImageCommands/ImageSaveDaemon\n"}
{"Time":"2023-05-31T11:47:15.120505-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"    functional_test.go:417: (dbg) Run:  docker rmi gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:15.165635-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"    functional_test.go:422: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image save --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:16.684703-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"    functional_test.go:422: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 image save --daemon gcr.io/google-containers/addon-resizer:functional-730000 --alsologtostderr: (1.518967542s)\n"}
{"Time":"2023-05-31T11:47:16.684718-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"    functional_test.go:427: (dbg) Run:  docker image inspect gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:16.723321-07:00","Action":"cont","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2023-05-31T11:47:16.723333-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== CONT  TestFunctional/parallel/SSHCmd\n"}
{"Time":"2023-05-31T11:47:16.72337-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"    functional_test.go:1723: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"echo hello\"\n"}
{"Time":"2023-05-31T11:47:16.804202-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"    functional_test.go:1740: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"cat /etc/hostname\"\n"}
{"Time":"2023-05-31T11:47:16.875766-07:00","Action":"cont","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2023-05-31T11:47:16.875778-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== CONT  TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2023-05-31T11:47:16.875801-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial"}
{"Time":"2023-05-31T11:47:16.875802-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial\n"}
{"Time":"2023-05-31T11:47:16.875832-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel"}
{"Time":"2023-05-31T11:47:16.875833-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel\n"}
{"Time":"2023-05-31T11:47:16.888496-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    functional_test_tunnel_test.go:154: (dbg) daemon: [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr]\n"}
{"Time":"2023-05-31T11:47:16.888545-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    functional_test_tunnel_test.go:154: (dbg) daemon: [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr]\n"}
{"Time":"2023-05-31T11:47:16.97513-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    functional_test_tunnel_test.go:194: (dbg) stopping [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr] ...\n"}
{"Time":"2023-05-31T11:47:17.086729-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    helpers_test.go:508: unable to kill pid 1990: os: process already finished\n"}
{"Time":"2023-05-31T11:47:17.086758-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    functional_test_tunnel_test.go:194: (dbg) stopping [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr] ...\n"}
{"Time":"2023-05-31T11:47:17.086762-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"    helpers_test.go:490: unable to find parent, assuming dead: process does not exist\n"}
{"Time":"2023-05-31T11:47:17.086822-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel"}
{"Time":"2023-05-31T11:47:17.086824-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/StartTunnel\n"}
{"Time":"2023-05-31T11:47:17.097293-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"    functional_test_tunnel_test.go:129: (dbg) daemon: [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr]\n"}
{"Time":"2023-05-31T11:47:17.099418-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService"}
{"Time":"2023-05-31T11:47:17.099425-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/WaitService\n"}
{"Time":"2023-05-31T11:47:17.109675-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup"}
{"Time":"2023-05-31T11:47:17.109687-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup\n"}
{"Time":"2023-05-31T11:47:17.110348-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"    functional_test_tunnel_test.go:212: (dbg) Run:  kubectl --context functional-730000 apply -f testdata/testsvc.yaml\n"}
{"Time":"2023-05-31T11:47:17.309806-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"    functional_test_tunnel_test.go:216: (dbg) TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup: waiting 4m0s for pods matching \"run=nginx-svc\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:17.311425-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"    helpers_test.go:344: \"nginx-svc\" [722c6ae9-122f-4f4a-a458-dd0fbdb0ea4b] Pending / Ready:ContainersNotReady (containers with unready status: [nginx]) / ContainersReady:ContainersNotReady (containers with unready status: [nginx])\n"}
{"Time":"2023-05-31T11:47:17.982492-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"    functional_test.go:1448: (dbg) TestFunctional/parallel/ServiceCmd/DeployApp: app=hello-node healthy within 13.015176709s\n"}
{"Time":"2023-05-31T11:47:17.982524-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/List"}
{"Time":"2023-05-31T11:47:17.982528-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/List","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/List\n"}
{"Time":"2023-05-31T11:47:17.982585-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/List","Output":"    functional_test.go:1457: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service list\n"}
{"Time":"2023-05-31T11:47:18.08214-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput"}
{"Time":"2023-05-31T11:47:18.082155-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/JSONOutput\n"}
{"Time":"2023-05-31T11:47:18.082211-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput","Output":"    functional_test.go:1487: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service list -o json\n"}
{"Time":"2023-05-31T11:47:18.171768-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput","Output":"    functional_test.go:1492: Took \"89.548667ms\" to run \"out/minikube-darwin-arm64 -p functional-730000 service list -o json\"\n"}
{"Time":"2023-05-31T11:47:18.17194-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/HTTPS"}
{"Time":"2023-05-31T11:47:18.171956-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/HTTPS","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/HTTPS\n"}
{"Time":"2023-05-31T11:47:18.171963-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/HTTPS","Output":"    functional_test.go:1507: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service --namespace=default --https --url hello-node\n"}
{"Time":"2023-05-31T11:47:18.275055-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/HTTPS","Output":"    functional_test.go:1520: found endpoint: https://192.168.105.4:31990\n"}
{"Time":"2023-05-31T11:47:18.275161-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/Format"}
{"Time":"2023-05-31T11:47:18.275163-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/Format","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/Format\n"}
{"Time":"2023-05-31T11:47:18.275208-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/Format","Output":"    functional_test.go:1538: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service hello-node --url --format={{.IP}}\n"}
{"Time":"2023-05-31T11:47:18.372699-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd/URL"}
{"Time":"2023-05-31T11:47:18.372713-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/URL","Output":"=== RUN   TestFunctional/parallel/ServiceCmd/URL\n"}
{"Time":"2023-05-31T11:47:18.372718-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/URL","Output":"    functional_test.go:1557: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service hello-node --url\n"}
{"Time":"2023-05-31T11:47:18.47371-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/URL","Output":"    functional_test.go:1563: found endpoint for hello-node: http://192.168.105.4:31990\n"}
{"Time":"2023-05-31T11:47:18.473859-07:00","Action":"cont","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2023-05-31T11:47:18.473865-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== CONT  TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2023-05-31T11:47:18.474363-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:44: (dbg) TestFunctional/parallel/PersistentVolumeClaim: waiting 4m0s for pods matching \"integration-test=storage-provisioner\" in namespace \"kube-system\" ...\n"}
{"Time":"2023-05-31T11:47:18.476038-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"storage-provisioner\" [9d24627b-1cc8-4785-976e-c58e95c7273d] Running\n"}
{"Time":"2023-05-31T11:47:21.320189-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"    helpers_test.go:344: \"nginx-svc\" [722c6ae9-122f-4f4a-a458-dd0fbdb0ea4b] Running\n"}
{"Time":"2023-05-31T11:47:23.485748-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:44: (dbg) TestFunctional/parallel/PersistentVolumeClaim: integration-test=storage-provisioner healthy within 5.011329167s\n"}
{"Time":"2023-05-31T11:47:23.486188-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:49: (dbg) Run:  kubectl --context functional-730000 get storageclass -o=json\n"}
{"Time":"2023-05-31T11:47:23.557347-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:69: (dbg) Run:  kubectl --context functional-730000 apply -f testdata/storage-provisioner/pvc.yaml\n"}
{"Time":"2023-05-31T11:47:23.626247-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:76: (dbg) Run:  kubectl --context functional-730000 get pvc myclaim -o=json\n"}
{"Time":"2023-05-31T11:47:23.663966-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:125: (dbg) Run:  kubectl --context functional-730000 apply -f testdata/storage-provisioner/pod.yaml\n"}
{"Time":"2023-05-31T11:47:23.729649-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:130: (dbg) TestFunctional/parallel/PersistentVolumeClaim: waiting 3m0s for pods matching \"test=storage-provisioner\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:23.732615-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [22bd3bce-833b-41b8-826d-7f980434cfc6] Pending\n"}
{"Time":"2023-05-31T11:47:24.734636-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [22bd3bce-833b-41b8-826d-7f980434cfc6] Pending / Ready:ContainersNotReady (containers with unready status: [myfrontend]) / ContainersReady:ContainersNotReady (containers with unready status: [myfrontend])\n"}
{"Time":"2023-05-31T11:47:27.315378-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"    functional_test_tunnel_test.go:216: (dbg) TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup: run=nginx-svc healthy within 10.005656959s\n"}
{"Time":"2023-05-31T11:47:27.31673-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP"}
{"Time":"2023-05-31T11:47:27.316735-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP\n"}
{"Time":"2023-05-31T11:47:27.31683-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"    functional_test_tunnel_test.go:234: (dbg) Run:  kubectl --context functional-730000 get svc nginx-svc -o jsonpath={.status.loadBalancer.ingress[0].ip}\n"}
{"Time":"2023-05-31T11:47:27.352827-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect"}
{"Time":"2023-05-31T11:47:27.352841-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/AccessDirect\n"}
{"Time":"2023-05-31T11:47:27.36445-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"    functional_test_tunnel_test.go:299: tunnel at http://10.102.164.144 is working!\n"}
{"Time":"2023-05-31T11:47:27.364523-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig"}
{"Time":"2023-05-31T11:47:27.364536-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig\n"}
{"Time":"2023-05-31T11:47:27.374712-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"    functional_test_tunnel_test.go:319: (dbg) Run:  dig +time=5 +tries=3 @10.96.0.10 nginx-svc.default.svc.cluster.local. A\n"}
{"Time":"2023-05-31T11:47:27.385283-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"    functional_test_tunnel_test.go:327: DNS resolution by dig for nginx-svc.default.svc.cluster.local. is working!\n"}
{"Time":"2023-05-31T11:47:27.385343-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil"}
{"Time":"2023-05-31T11:47:27.385351-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil\n"}
{"Time":"2023-05-31T11:47:27.395255-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"    functional_test_tunnel_test.go:351: (dbg) Run:  dscacheutil -q host -a name nginx-svc.default.svc.cluster.local.\n"}
{"Time":"2023-05-31T11:47:27.401505-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"    functional_test_tunnel_test.go:359: DNS resolution by dscacheutil for nginx-svc.default.svc.cluster.local. is working!\n"}
{"Time":"2023-05-31T11:47:27.401567-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS"}
{"Time":"2023-05-31T11:47:27.40157-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS\n"}
{"Time":"2023-05-31T11:47:27.413297-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"    functional_test_tunnel_test.go:424: tunnel at http://nginx-svc.default.svc.cluster.local. is working!\n"}
{"Time":"2023-05-31T11:47:27.413311-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel"}
{"Time":"2023-05-31T11:47:27.413313-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel\n"}
{"Time":"2023-05-31T11:47:27.423691-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"    functional_test_tunnel_test.go:434: (dbg) stopping [out/minikube-darwin-arm64 -p functional-730000 tunnel --alsologtostderr] ...\n"}
{"Time":"2023-05-31T11:47:27.535346-07:00","Action":"cont","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2023-05-31T11:47:27.535367-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== CONT  TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2023-05-31T11:47:27.535457-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"    functional_test.go:1688: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 addons list\n"}
{"Time":"2023-05-31T11:47:27.614637-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"    functional_test.go:1700: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 addons list -o json\n"}
{"Time":"2023-05-31T11:47:27.658376-07:00","Action":"cont","Test":"TestFunctional/parallel/ServiceCmdConnect"}
{"Time":"2023-05-31T11:47:27.658388-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"=== CONT  TestFunctional/parallel/ServiceCmdConnect\n"}
{"Time":"2023-05-31T11:47:27.658467-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1625: (dbg) Run:  kubectl --context functional-730000 create deployment hello-node-connect --image=registry.k8s.io/echoserver-arm:1.8\n"}
{"Time":"2023-05-31T11:47:27.696371-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1633: (dbg) Run:  kubectl --context functional-730000 expose deployment hello-node-connect --type=NodePort --port=8080\n"}
{"Time":"2023-05-31T11:47:27.744299-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1638: (dbg) TestFunctional/parallel/ServiceCmdConnect: waiting 10m0s for pods matching \"app=hello-node-connect\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:27.746156-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:344: \"hello-node-connect-58d66798bb-stzzj\" [a120ea47-9aab-4f46-a7f1-0defe24bb54b] Pending / Ready:ContainersNotReady (containers with unready status: [echoserver-arm]) / ContainersReady:ContainersNotReady (containers with unready status: [echoserver-arm])\n"}
{"Time":"2023-05-31T11:47:29.737292-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [22bd3bce-833b-41b8-826d-7f980434cfc6] Running\n"}
{"Time":"2023-05-31T11:47:29.749864-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:344: \"hello-node-connect-58d66798bb-stzzj\" [a120ea47-9aab-4f46-a7f1-0defe24bb54b] Running / Ready:ContainersNotReady (containers with unready status: [echoserver-arm]) / ContainersReady:ContainersNotReady (containers with unready status: [echoserver-arm])\n"}
{"Time":"2023-05-31T11:47:34.741818-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:130: (dbg) TestFunctional/parallel/PersistentVolumeClaim: test=storage-provisioner healthy within 11.0122055s\n"}
{"Time":"2023-05-31T11:47:34.742029-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:100: (dbg) Run:  kubectl --context functional-730000 exec sp-pod -- touch /tmp/mount/foo\n"}
{"Time":"2023-05-31T11:47:34.753229-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1638: (dbg) TestFunctional/parallel/ServiceCmdConnect: app=hello-node-connect healthy within 7.008971709s\n"}
{"Time":"2023-05-31T11:47:34.753257-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1647: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 service hello-node-connect --url\n"}
{"Time":"2023-05-31T11:47:34.86807-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:106: (dbg) Run:  kubectl --context functional-730000 delete -f testdata/storage-provisioner/pod.yaml\n"}
{"Time":"2023-05-31T11:47:34.900216-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1653: found endpoint for hello-node-connect: http://192.168.105.4:30108\n"}
{"Time":"2023-05-31T11:47:34.90055-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:35.587895-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:125: (dbg) Run:  kubectl --context functional-730000 apply -f testdata/storage-provisioner/pod.yaml\n"}
{"Time":"2023-05-31T11:47:35.658505-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:130: (dbg) TestFunctional/parallel/PersistentVolumeClaim: waiting 3m0s for pods matching \"test=storage-provisioner\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:35.66068-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [2a69fa5e-f172-4313-a37c-e1a55c4ebbd1] Pending\n"}
{"Time":"2023-05-31T11:47:35.696477-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:36.667401-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [2a69fa5e-f172-4313-a37c-e1a55c4ebbd1] Pending / Ready:ContainersNotReady (containers with unready status: [myfrontend]) / ContainersReady:ContainersNotReady (containers with unready status: [myfrontend])\n"}
{"Time":"2023-05-31T11:47:37.5746-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:37.666482-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:344: \"sp-pod\" [2a69fa5e-f172-4313-a37c-e1a55c4ebbd1] Running\n"}
{"Time":"2023-05-31T11:47:40.235035-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:42.056841-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:42.671098-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:130: (dbg) TestFunctional/parallel/PersistentVolumeClaim: test=storage-provisioner healthy within 7.01260825s\n"}
{"Time":"2023-05-31T11:47:42.671397-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    functional_test_pvc_test.go:114: (dbg) Run:  kubectl --context functional-730000 exec sp-pod -- ls /tmp/mount\n"}
{"Time":"2023-05-31T11:47:42.789152-07:00","Action":"cont","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2023-05-31T11:47:42.789165-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== CONT  TestFunctional/parallel/StatusCmd\n"}
{"Time":"2023-05-31T11:47:42.789219-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:849: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 status\n"}
{"Time":"2023-05-31T11:47:42.873827-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:855: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 status -f host:{{.Host}},kublet:{{.Kubelet}},apiserver:{{.APIServer}},kubeconfig:{{.Kubeconfig}}\n"}
{"Time":"2023-05-31T11:47:42.956027-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:867: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 status -o json\n"}
{"Time":"2023-05-31T11:47:43.037699-07:00","Action":"cont","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2023-05-31T11:47:43.037713-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== CONT  TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2023-05-31T11:47:43.037717-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create"}
{"Time":"2023-05-31T11:47:43.037718-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_not_create\n"}
{"Time":"2023-05-31T11:47:43.037785-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"    functional_test.go:1268: (dbg) Run:  out/minikube-darwin-arm64 profile lis\n"}
{"Time":"2023-05-31T11:47:43.108074-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"    functional_test.go:1273: (dbg) Run:  out/minikube-darwin-arm64 profile list --output json\n"}
{"Time":"2023-05-31T11:47:43.229275-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_list"}
{"Time":"2023-05-31T11:47:43.229288-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_list\n"}
{"Time":"2023-05-31T11:47:43.229297-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"    functional_test.go:1308: (dbg) Run:  out/minikube-darwin-arm64 profile list\n"}
{"Time":"2023-05-31T11:47:43.347851-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"    functional_test.go:1313: Took \"118.499667ms\" to run \"out/minikube-darwin-arm64 profile list\"\n"}
{"Time":"2023-05-31T11:47:43.347867-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"    functional_test.go:1322: (dbg) Run:  out/minikube-darwin-arm64 profile list -l\n"}
{"Time":"2023-05-31T11:47:43.379634-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"    functional_test.go:1327: Took \"31.735416ms\" to run \"out/minikube-darwin-arm64 profile list -l\"\n"}
{"Time":"2023-05-31T11:47:43.37968-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output"}
{"Time":"2023-05-31T11:47:43.379682-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_json_output\n"}
{"Time":"2023-05-31T11:47:43.379719-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"    functional_test.go:1359: (dbg) Run:  out/minikube-darwin-arm64 profile list -o json\n"}
{"Time":"2023-05-31T11:47:43.495977-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"    functional_test.go:1364: Took \"116.218708ms\" to run \"out/minikube-darwin-arm64 profile list -o json\"\n"}
{"Time":"2023-05-31T11:47:43.496133-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"    functional_test.go:1372: (dbg) Run:  out/minikube-darwin-arm64 profile list -o json --light\n"}
{"Time":"2023-05-31T11:47:43.528757-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"    functional_test.go:1377: Took \"32.5805ms\" to run \"out/minikube-darwin-arm64 profile list -o json --light\"\n"}
{"Time":"2023-05-31T11:47:43.528886-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2023-05-31T11:47:43.528893-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2023-05-31T11:47:43.528904-07:00","Action":"run","Test":"TestFunctional/parallel/MountCmd/any-port"}
{"Time":"2023-05-31T11:47:43.528905-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"=== RUN   TestFunctional/parallel/MountCmd/any-port\n"}
{"Time":"2023-05-31T11:47:43.529079-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:73: (dbg) daemon: [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001:/mount-9p --alsologtostderr -v=1]\n"}
{"Time":"2023-05-31T11:47:43.531301-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:107: wrote \"test-1685558863531147000\" to /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001/created-by-test\n"}
{"Time":"2023-05-31T11:47:43.531383-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:107: wrote \"test-1685558863531147000\" to /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001/created-by-test-removed-by-pod\n"}
{"Time":"2023-05-31T11:47:43.531447-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:107: wrote \"test-1685558863531147000\" to /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001/test-1685558863531147000\n"}
{"Time":"2023-05-31T11:47:43.531471-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:115: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2023-05-31T11:47:43.593264-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:115: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\": exit status 1 (61.7145ms)\n"}
{"Time":"2023-05-31T11:47:43.593277-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:43.593279-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:43.593281-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2023-05-31T11:47:43.593282-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:43.593284-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:44.160641-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:115: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2023-05-31T11:47:44.239593-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:129: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh -- ls -la /mount-9p\n"}
{"Time":"2023-05-31T11:47:44.314427-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:133: guest mount directory contents\n"}
{"Time":"2023-05-31T11:47:44.314438-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        total 2\r\n"}
{"Time":"2023-05-31T11:47:44.31444-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        -rw-r--r-- 1 docker docker 24 May 31 18:47 created-by-test\r\n"}
{"Time":"2023-05-31T11:47:44.314442-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        -rw-r--r-- 1 docker docker 24 May 31 18:47 created-by-test-removed-by-pod\r\n"}
{"Time":"2023-05-31T11:47:44.314443-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"        -rw-r--r-- 1 docker docker 24 May 31 18:47 test-1685558863531147000\r\n"}
{"Time":"2023-05-31T11:47:44.314454-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:137: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh cat /mount-9p/test-1685558863531147000\n"}
{"Time":"2023-05-31T11:47:44.385517-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:148: (dbg) Run:  kubectl --context functional-730000 replace --force -f testdata/busybox-mount-test.yaml\n"}
{"Time":"2023-05-31T11:47:44.453876-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:153: (dbg) TestFunctional/parallel/MountCmd/any-port: waiting 4m0s for pods matching \"integration-test=busybox-mount\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:47:44.455734-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    helpers_test.go:344: \"busybox-mount\" [677d6f33-8625-43e4-854a-fc4cbc188c23] Pending\n"}
{"Time":"2023-05-31T11:47:45.462214-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    helpers_test.go:344: \"busybox-mount\" [677d6f33-8625-43e4-854a-fc4cbc188c23] Pending / Ready:ContainersNotReady (containers with unready status: [mount-munger]) / ContainersReady:ContainersNotReady (containers with unready status: [mount-munger])\n"}
{"Time":"2023-05-31T11:47:46.531363-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:48.463096-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    helpers_test.go:344: \"busybox-mount\" [677d6f33-8625-43e4-854a-fc4cbc188c23] Pending: Initialized:PodCompleted / Ready:PodCompleted / ContainersReady:PodCompleted\n"}
{"Time":"2023-05-31T11:47:49.464199-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    helpers_test.go:344: \"busybox-mount\" [677d6f33-8625-43e4-854a-fc4cbc188c23] Succeeded: Initialized:PodCompleted / Ready:PodCompleted / ContainersReady:PodCompleted\n"}
{"Time":"2023-05-31T11:47:49.464238-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:153: (dbg) TestFunctional/parallel/MountCmd/any-port: integration-test=busybox-mount healthy within 5.010393917s\n"}
{"Time":"2023-05-31T11:47:49.46455-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:169: (dbg) Run:  kubectl --context functional-730000 logs busybox-mount\n"}
{"Time":"2023-05-31T11:47:49.533645-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:181: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh stat /mount-9p/created-by-test\n"}
{"Time":"2023-05-31T11:47:49.603023-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:181: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh stat /mount-9p/created-by-pod\n"}
{"Time":"2023-05-31T11:47:49.672072-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:90: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo umount -f /mount-9p\"\n"}
{"Time":"2023-05-31T11:47:49.741012-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"    functional_test_mount_test.go:94: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001:/mount-9p --alsologtostderr -v=1] ...\n"}
{"Time":"2023-05-31T11:47:49.852771-07:00","Action":"run","Test":"TestFunctional/parallel/MountCmd/specific-port"}
{"Time":"2023-05-31T11:47:49.852782-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"=== RUN   TestFunctional/parallel/MountCmd/specific-port\n"}
{"Time":"2023-05-31T11:47:49.852915-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:213: (dbg) daemon: [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdspecific-port3017336378/001:/mount-9p --alsologtostderr -v=1 --port 46464]\n"}
{"Time":"2023-05-31T11:47:49.855271-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:243: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2023-05-31T11:47:49.917993-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:243: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\": exit status 1 (62.660625ms)\n"}
{"Time":"2023-05-31T11:47:49.918009-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:49.918011-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:49.918013-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2023-05-31T11:47:49.918014-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:49.918016-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:50.548973-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:243: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2023-05-31T11:47:50.640499-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:257: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh -- ls -la /mount-9p\n"}
{"Time":"2023-05-31T11:47:50.709442-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:261: guest mount directory contents\n"}
{"Time":"2023-05-31T11:47:50.709455-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        total 0\r\n"}
{"Time":"2023-05-31T11:47:50.709458-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:263: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdspecific-port3017336378/001:/mount-9p --alsologtostderr -v=1 --port 46464] ...\n"}
{"Time":"2023-05-31T11:47:50.820167-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:264: reading mount text\n"}
{"Time":"2023-05-31T11:47:50.820198-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:278: done reading mount text\n"}
{"Time":"2023-05-31T11:47:50.820286-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:230: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo umount -f /mount-9p\"\n"}
{"Time":"2023-05-31T11:47:50.885295-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:230: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh \"sudo umount -f /mount-9p\": exit status 1 (64.92975ms)\n"}
{"Time":"2023-05-31T11:47:50.88531-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:50.885312-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:50.885314-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \tumount: /mount-9p: not mounted.\n"}
{"Time":"2023-05-31T11:47:50.885315-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:50.885316-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:50.885318-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:50.885319-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \tssh: Process exited with status 32\n"}
{"Time":"2023-05-31T11:47:50.88532-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        \n"}
{"Time":"2023-05-31T11:47:50.885342-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:50.885344-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:232: \"out/minikube-darwin-arm64 -p functional-730000 ssh \\\"sudo umount -f /mount-9p\\\"\": exit status 1\n"}
{"Time":"2023-05-31T11:47:50.885347-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"    functional_test_mount_test.go:234: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdspecific-port3017336378/001:/mount-9p --alsologtostderr -v=1 --port 46464] ...\n"}
{"Time":"2023-05-31T11:47:50.996195-07:00","Action":"run","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup"}
{"Time":"2023-05-31T11:47:50.996207-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"=== RUN   TestFunctional/parallel/MountCmd/VerifyCleanup\n"}
{"Time":"2023-05-31T11:47:50.99636-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:298: (dbg) daemon: [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount1 --alsologtostderr -v=1]\n"}
{"Time":"2023-05-31T11:47:50.998699-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:298: (dbg) daemon: [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount2 --alsologtostderr -v=1]\n"}
{"Time":"2023-05-31T11:47:50.999641-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:298: (dbg) daemon: [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount3 --alsologtostderr -v=1]\n"}
{"Time":"2023-05-31T11:47:51.0006-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:325: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T\" /mount1\n"}
{"Time":"2023-05-31T11:47:51.083844-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:325: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T\" /mount1: exit status 80 (83.136875ms)\n"}
{"Time":"2023-05-31T11:47:51.083857-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.083859-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:51.08386-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:51.083861-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:51.083863-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.083864-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:51.083865-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:51.083871-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \tX Exiting due to GUEST_STATUS: Unable to get machine status: state: connect: dial unix /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/monitor: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:51.083874-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:51.083876-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t╭──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:47:51.083882-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│                                                                                                                          │\n"}
{"Time":"2023-05-31T11:47:51.083884-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│    * If the above advice does not help, please let us know:                                                              │\n"}
{"Time":"2023-05-31T11:47:51.083885-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                                                            │\n"}
{"Time":"2023-05-31T11:47:51.083887-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│                                                                                                                          │\n"}
{"Time":"2023-05-31T11:47:51.083888-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                 │\n"}
{"Time":"2023-05-31T11:47:51.08389-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│    * Please also attach the following file to the GitHub issue:                                                          │\n"}
{"Time":"2023-05-31T11:47:51.083891-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_mount_92a8db3350ab58c6723d8fb08c31d61a4f51c82d_0.log    │\n"}
{"Time":"2023-05-31T11:47:51.083894-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t│                                                                                                                          │\n"}
{"Time":"2023-05-31T11:47:51.083896-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \t╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:47:51.083898-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.083899-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:51.498629-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:325: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T\" /mount1\n"}
{"Time":"2023-05-31T11:47:51.598937-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:325: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T\" /mount2\n"}
{"Time":"2023-05-31T11:47:51.665741-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:325: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh \"findmnt -T\" /mount3\n"}
{"Time":"2023-05-31T11:47:51.730776-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:370: (dbg) Run:  out/minikube-darwin-arm64 mount -p functional-730000 --kill=true\n"}
{"Time":"2023-05-31T11:47:51.761286-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:313: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount1 --alsologtostderr -v=1] ...\n"}
{"Time":"2023-05-31T11:47:51.761302-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    helpers_test.go:490: unable to find parent, assuming dead: process does not exist\n"}
{"Time":"2023-05-31T11:47:51.761304-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:313: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount2 --alsologtostderr -v=1] ...\n"}
{"Time":"2023-05-31T11:47:51.761306-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    helpers_test.go:490: unable to find parent, assuming dead: process does not exist\n"}
{"Time":"2023-05-31T11:47:51.761308-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    functional_test_mount_test.go:313: (dbg) stopping [out/minikube-darwin-arm64 mount -p functional-730000 /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount3 --alsologtostderr -v=1] ...\n"}
{"Time":"2023-05-31T11:47:51.761311-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"    helpers_test.go:490: unable to find parent, assuming dead: process does not exist\n"}
{"Time":"2023-05-31T11:47:51.762139-07:00","Action":"cont","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2023-05-31T11:47:51.762153-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== CONT  TestFunctional/parallel/DryRun\n"}
{"Time":"2023-05-31T11:47:51.762175-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:969: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --dry-run --memory 250MB --alsologtostderr --driver=qemu2 \n"}
{"Time":"2023-05-31T11:47:51.877833-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:969: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p functional-730000 --dry-run --memory 250MB --alsologtostderr --driver=qemu2 : exit status 23 (115.498375ms)\n"}
{"Time":"2023-05-31T11:47:51.877846-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.877847-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:51.877849-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t* [functional-730000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:47:51.877851-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:47:51.877852-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:47:51.877854-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:47:51.877855-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:47:51.877856-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:47:51.877858-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:47:51.87786-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:47:51.877861-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:51.877862-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:51.877863-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.877865-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:51.877866-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:51.877867-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.789473    2133 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:51.877869-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.789649    2133 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:51.87787-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.789652    2133 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:51.877872-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.789654    2133 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:51.877873-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.789728    2133 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:51.877874-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.790789    2133 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:47:51.877876-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.807169    2133 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1042,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:47:51.87788-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tW0531 11:47:51.807250    2133 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:47:51.877881-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.813117    2133 out.go:177] * [functional-730000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:47:51.877883-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.821071    2133 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:47:51.877884-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.821116    2133 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:47:51.877885-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.827994    2133 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:47:51.877887-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.829382    2133 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:47:51.877888-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.832040    2133 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:47:51.877889-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.835080    2133 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:47:51.877891-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.838114    2133 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:47:51.877892-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.841263    2133 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:51.877894-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.841520    2133 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:47:51.877895-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.845966    2133 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:47:51.877896-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.855029    2133 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:47:51.8779-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.855034    2133 start.go:875] validating driver \"qemu2\" against \u0026{Name:functional-730000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T11:47:51.877905-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:functional-730000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:apiserver Key:enable-admission-plugins Value:NamespaceAutoProvision}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8441 NodeName:} Nodes:[{Name: IP:192.168.105.4 Port:8441 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false E"}
{"Time":"2023-05-31T11:47:51.877907-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"xtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:47:51.877909-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.855085    2133 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:47:51.87791-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.862044    2133 out.go:177] \n"}
{"Time":"2023-05-31T11:47:51.877912-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tW0531 11:47:51.864979    2133 out.go:239] X Exiting due to RSRC_INSUFFICIENT_REQ_MEMORY: Requested memory allocation 250MiB is less than the usable minimum of 1800MB\n"}
{"Time":"2023-05-31T11:47:51.877913-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tX Exiting due to RSRC_INSUFFICIENT_REQ_MEMORY: Requested memory allocation 250MiB is less than the usable minimum of 1800MB\n"}
{"Time":"2023-05-31T11:47:51.877914-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0531 11:47:51.869028    2133 out.go:177] \n"}
{"Time":"2023-05-31T11:47:51.87792-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2023-05-31T11:47:51.877922-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:51.877924-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:986: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --dry-run --alsologtostderr -v=1 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:47:51.978767-07:00","Action":"cont","Test":"TestFunctional/parallel/InternationalLanguage"}
{"Time":"2023-05-31T11:47:51.978779-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"=== CONT  TestFunctional/parallel/InternationalLanguage\n"}
{"Time":"2023-05-31T11:47:51.978819-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"    functional_test.go:1015: (dbg) Run:  out/minikube-darwin-arm64 start -p functional-730000 --dry-run --memory 250MB --alsologtostderr --driver=qemu2 \n"}
{"Time":"2023-05-31T11:47:52.081891-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"    functional_test.go:1015: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p functional-730000 --dry-run --memory 250MB --alsologtostderr --driver=qemu2 : exit status 23 (102.934416ms)\n"}
{"Time":"2023-05-31T11:47:52.081905-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \n"}
{"Time":"2023-05-31T11:47:52.081907-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:52.081909-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t* [functional-730000] minikube v1.30.1 sur Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:47:52.081911-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:47:52.081913-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:47:52.081914-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:47:52.081915-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:47:52.081917-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:47:52.081921-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:47:52.08193-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t* Utilisation du pilote qemu2 basé sur le profil existant\n"}
{"Time":"2023-05-31T11:47:52.081932-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:52.081933-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:52.081934-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \n"}
{"Time":"2023-05-31T11:47:52.081935-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:52.081936-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:52.081938-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.001344    2143 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:52.081939-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.001455    2143 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:52.081941-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.001457    2143 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:52.081942-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.001460    2143 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:52.081944-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.001541    2143 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:52.081945-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.002826    2143 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:47:52.081947-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.019924    2143 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1043,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:47:52.08195-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tW0531 11:47:52.020028    2143 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:47:52.081952-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.023120    2143 out.go:177] * [functional-730000] minikube v1.30.1 sur Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:47:52.081953-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.028004    2143 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:47:52.081954-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.028048    2143 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:47:52.081957-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.033062    2143 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:47:52.081958-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.036061    2143 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:47:52.08196-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.039047    2143 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:47:52.081961-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.042094    2143 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:47:52.081963-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.045014    2143 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:47:52.081965-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.048300    2143 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:52.081966-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.048523    2143 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:47:52.081968-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.053079    2143 out.go:177] * Utilisation du pilote qemu2 basé sur le profil existant\n"}
{"Time":"2023-05-31T11:47:52.081969-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.059984    2143 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:47:52.081974-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.059988    2143 start.go:875] validating driver \"qemu2\" against \u0026{Name:functional-730000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T11:47:52.081979-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:functional-730000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:apiserver Key:enable-admission-plugins Value:NamespaceAutoProvision}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8441 NodeName:} Nodes:[{Name: IP:192.168.105.4 Port:8441 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false E"}
{"Time":"2023-05-31T11:47:52.081982-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"xtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:47:52.081988-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.060026    2143 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:47:52.08199-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.064896    2143 out.go:177] \n"}
{"Time":"2023-05-31T11:47:52.081991-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tW0531 11:47:52.069054    2143 out.go:239] X Fermeture en raison de RSRC_INSUFFICIENT_REQ_MEMORY : L'allocation de mémoire demandée 250 Mio est inférieure au minimum utilisable de 1800 Mo\n"}
{"Time":"2023-05-31T11:47:52.081993-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tX Fermeture en raison de RSRC_INSUFFICIENT_REQ_MEMORY : L'allocation de mémoire demandée 250 Mio est inférieure au minimum utilisable de 1800 Mo\n"}
{"Time":"2023-05-31T11:47:52.081996-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \tI0531 11:47:52.073043    2143 out.go:177] \n"}
{"Time":"2023-05-31T11:47:52.081998-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        \n"}
{"Time":"2023-05-31T11:47:52.082057-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:52.082085-07:00","Action":"cont","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2023-05-31T11:47:52.082088-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== CONT  TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2023-05-31T11:47:52.08209-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    functional_test.go:900: (dbg) daemon: [out/minikube-darwin-arm64 dashboard --url --port 36195 -p functional-730000 --alsologtostderr -v=1]\n"}
{"Time":"2023-05-31T11:47:55.056223-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1659: error fetching http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:55.056238-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1679: failed to fetch http://192.168.105.4:30108: Get \"http://192.168.105.4:30108\": dial tcp 192.168.105.4:30108: connect: connection refused\n"}
{"Time":"2023-05-31T11:47:55.056242-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1596: service test failed - dumping debug information\n"}
{"Time":"2023-05-31T11:47:55.056244-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1597: -----------------------service failure post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:47:55.056303-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1600: (dbg) Run:  kubectl --context functional-730000 describe po hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.128446-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1604: hello-node pod describe:\n"}
{"Time":"2023-05-31T11:47:55.128463-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Name:             hello-node-connect-58d66798bb-stzzj\n"}
{"Time":"2023-05-31T11:47:55.128465-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Namespace:        default\n"}
{"Time":"2023-05-31T11:47:55.128467-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Priority:         0\n"}
{"Time":"2023-05-31T11:47:55.128468-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Service Account:  default\n"}
{"Time":"2023-05-31T11:47:55.128471-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Node:             functional-730000/192.168.105.4\n"}
{"Time":"2023-05-31T11:47:55.128473-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Start Time:       Wed, 31 May 2023 11:47:27 -0700\n"}
{"Time":"2023-05-31T11:47:55.128474-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Labels:           app=hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.128477-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"                          pod-template-hash=58d66798bb\n"}
{"Time":"2023-05-31T11:47:55.128478-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Annotations:      \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.12848-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Status:           Running\n"}
{"Time":"2023-05-31T11:47:55.128481-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IP:               10.244.0.8\n"}
{"Time":"2023-05-31T11:47:55.128482-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IPs:\n"}
{"Time":"2023-05-31T11:47:55.128483-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          IP:           10.244.0.8\n"}
{"Time":"2023-05-31T11:47:55.128485-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Controlled By:  ReplicaSet/hello-node-connect-58d66798bb\n"}
{"Time":"2023-05-31T11:47:55.128486-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Containers:\n"}
{"Time":"2023-05-31T11:47:55.128488-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          echoserver-arm:\n"}
{"Time":"2023-05-31T11:47:55.128512-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Container ID:   docker://b37ab09b2fdc56ba62e72f3ac946cc58e87ae29ef3a5321bfd8109b6978e81a0\n"}
{"Time":"2023-05-31T11:47:55.128519-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Image:          registry.k8s.io/echoserver-arm:1.8\n"}
{"Time":"2023-05-31T11:47:55.128521-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Image ID:       docker-pullable://registry.k8s.io/echoserver-arm@sha256:b33d4cdf6ed097f4e9b77b135d83a596ab73c6268b0342648818eb85f5edfdb5\n"}
{"Time":"2023-05-31T11:47:55.128522-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Port:           \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.128524-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Host Port:      \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.128525-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            State:          Terminated\n"}
{"Time":"2023-05-31T11:47:55.128526-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Reason:       Error\n"}
{"Time":"2023-05-31T11:47:55.128528-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Exit Code:    1\n"}
{"Time":"2023-05-31T11:47:55.128529-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Started:      Wed, 31 May 2023 11:47:43 -0700\n"}
{"Time":"2023-05-31T11:47:55.12853-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Finished:     Wed, 31 May 2023 11:47:43 -0700\n"}
{"Time":"2023-05-31T11:47:55.128532-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Last State:     Terminated\n"}
{"Time":"2023-05-31T11:47:55.128533-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Reason:       Error\n"}
{"Time":"2023-05-31T11:47:55.128534-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Exit Code:    1\n"}
{"Time":"2023-05-31T11:47:55.128536-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Started:      Wed, 31 May 2023 11:47:29 -0700\n"}
{"Time":"2023-05-31T11:47:55.128537-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              Finished:     Wed, 31 May 2023 11:47:29 -0700\n"}
{"Time":"2023-05-31T11:47:55.128538-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Ready:          False\n"}
{"Time":"2023-05-31T11:47:55.12854-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Restart Count:  2\n"}
{"Time":"2023-05-31T11:47:55.128541-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Environment:    \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.128543-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Mounts:\n"}
{"Time":"2023-05-31T11:47:55.128544-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"              /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-lbqfp (ro)\n"}
{"Time":"2023-05-31T11:47:55.128546-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Conditions:\n"}
{"Time":"2023-05-31T11:47:55.128547-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Type              Status\n"}
{"Time":"2023-05-31T11:47:55.128548-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Initialized       True \n"}
{"Time":"2023-05-31T11:47:55.128549-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Ready             False \n"}
{"Time":"2023-05-31T11:47:55.128551-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          ContainersReady   False \n"}
{"Time":"2023-05-31T11:47:55.128552-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          PodScheduled      True \n"}
{"Time":"2023-05-31T11:47:55.128553-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Volumes:\n"}
{"Time":"2023-05-31T11:47:55.128555-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          kube-api-access-lbqfp:\n"}
{"Time":"2023-05-31T11:47:55.128556-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            Type:                    Projected (a volume that contains injected data from multiple sources)\n"}
{"Time":"2023-05-31T11:47:55.128558-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            TokenExpirationSeconds:  3607\n"}
{"Time":"2023-05-31T11:47:55.128559-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            ConfigMapName:           kube-root-ca.crt\n"}
{"Time":"2023-05-31T11:47:55.12856-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            ConfigMapOptional:       \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:47:55.128562-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"            DownwardAPI:             true\n"}
{"Time":"2023-05-31T11:47:55.128563-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        QoS Class:                   BestEffort\n"}
{"Time":"2023-05-31T11:47:55.128564-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Node-Selectors:              \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.128566-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n"}
{"Time":"2023-05-31T11:47:55.128568-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"                                     node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\n"}
{"Time":"2023-05-31T11:47:55.128569-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Events:\n"}
{"Time":"2023-05-31T11:47:55.12857-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Type     Reason     Age                From               Message\n"}
{"Time":"2023-05-31T11:47:55.12858-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          ----     ------     ----               ----               -------\n"}
{"Time":"2023-05-31T11:47:55.128582-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Normal   Scheduled  27s                default-scheduler  Successfully assigned default/hello-node-connect-58d66798bb-stzzj to functional-730000\n"}
{"Time":"2023-05-31T11:47:55.128584-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Normal   Pulled     12s (x3 over 27s)  kubelet            Container image \"registry.k8s.io/echoserver-arm:1.8\" already present on machine\n"}
{"Time":"2023-05-31T11:47:55.128585-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Normal   Created    12s (x3 over 27s)  kubelet            Created container echoserver-arm\n"}
{"Time":"2023-05-31T11:47:55.128586-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Normal   Started    12s (x3 over 27s)  kubelet            Started container echoserver-arm\n"}
{"Time":"2023-05-31T11:47:55.128589-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"          Warning  BackOff    11s (x3 over 25s)  kubelet            Back-off restarting failed container echoserver-arm in pod hello-node-connect-58d66798bb-stzzj_default(a120ea47-9aab-4f46-a7f1-0defe24bb54b)\n"}
{"Time":"2023-05-31T11:47:55.128591-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \n"}
{"Time":"2023-05-31T11:47:55.128594-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1606: (dbg) Run:  kubectl --context functional-730000 logs -l app=hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.172044-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1610: hello-node logs:\n"}
{"Time":"2023-05-31T11:47:55.17206-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        exec /usr/sbin/nginx: exec format error\n"}
{"Time":"2023-05-31T11:47:55.172134-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1612: (dbg) Run:  kubectl --context functional-730000 describe svc hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.209946-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    functional_test.go:1616: hello-node svc describe:\n"}
{"Time":"2023-05-31T11:47:55.20996-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Name:                     hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.209962-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Namespace:                default\n"}
{"Time":"2023-05-31T11:47:55.209964-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Labels:                   app=hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.209965-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Annotations:              \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.209967-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Selector:                 app=hello-node-connect\n"}
{"Time":"2023-05-31T11:47:55.209968-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Type:                     NodePort\n"}
{"Time":"2023-05-31T11:47:55.20997-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IP Family Policy:         SingleStack\n"}
{"Time":"2023-05-31T11:47:55.209971-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IP Families:              IPv4\n"}
{"Time":"2023-05-31T11:47:55.209972-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IP:                       10.100.45.1\n"}
{"Time":"2023-05-31T11:47:55.209974-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        IPs:                      10.100.45.1\n"}
{"Time":"2023-05-31T11:47:55.209975-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Port:                     \u003cunset\u003e  8080/TCP\n"}
{"Time":"2023-05-31T11:47:55.209977-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        TargetPort:               8080/TCP\n"}
{"Time":"2023-05-31T11:47:55.209978-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        NodePort:                 \u003cunset\u003e  30108/TCP\n"}
{"Time":"2023-05-31T11:47:55.209979-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Endpoints:                \n"}
{"Time":"2023-05-31T11:47:55.209981-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Session Affinity:         None\n"}
{"Time":"2023-05-31T11:47:55.209982-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        External Traffic Policy:  Cluster\n"}
{"Time":"2023-05-31T11:47:55.209983-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        Events:                   \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.209997-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:47:55.209999-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p functional-730000 -n functional-730000\n"}
{"Time":"2023-05-31T11:47:55.294048-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:244: \u003c\u003c\u003c TestFunctional/parallel/ServiceCmdConnect FAILED: start of post-mortem logs \u003c\u003c\u003c\n"}
{"Time":"2023-05-31T11:47:55.294063-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:245: ======\u003e  post-mortem[TestFunctional/parallel/ServiceCmdConnect]: minikube logs \u003c======\n"}
{"Time":"2023-05-31T11:47:55.294066-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:247: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 logs -n 25\n"}
{"Time":"2023-05-31T11:47:55.966208-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:252: TestFunctional/parallel/ServiceCmdConnect logs: \n"}
{"Time":"2023-05-31T11:47:55.966225-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:55.966227-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966229-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966231-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* |-----------|----------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:47:55.966233-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|  Command  |                                                         Args                                                         |      Profile      |  User   | Version |     Start Time      |      End Time       |\n"}
{"Time":"2023-05-31T11:47:55.966236-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|-----------|----------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:47:55.966246-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966247-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdany-port3328431145/001:/mount-9p      |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966249-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966251-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966252-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount-9p | grep 9p                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966254-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966256-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount-9p | grep 9p                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966257-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh -- ls                                                                                          | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966319-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -la /mount-9p                                                                                                        |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966337-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh cat                                                                                            | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966352-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /mount-9p/test-1685558863531147000                                                                                   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966356-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh stat                                                                                           | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966361-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /mount-9p/created-by-test                                                                                            |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966365-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh stat                                                                                           | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966371-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /mount-9p/created-by-pod                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966392-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh sudo                                                                                           | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966398-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | umount -f /mount-9p                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.96642-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966425-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount-9p | grep 9p                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966428-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.96643-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdspecific-port3017336378/001:/mount-9p |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966431-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1 --port 46464                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.96644-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966443-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount-9p | grep 9p                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966445-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh -- ls                                                                                          | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966447-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -la /mount-9p                                                                                                        |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966448-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh sudo                                                                                           | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.96645-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | umount -f /mount-9p                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966452-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966454-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount2   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966455-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966458-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.96646-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount3   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966462-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966464-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966466-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount1                                                                                                           |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966468-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966472-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount1   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966473-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966475-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966477-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount1                                                                                                           |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966479-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966481-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount2                                                                                                           |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966482-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| ssh       | functional-730000 ssh findmnt                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:47:55.966484-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -T /mount3                                                                                                           |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966486-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| mount     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966487-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --kill=true                                                                                                          |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966489-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| start     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966491-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --dry-run --memory                                                                                                   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966493-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | 250MB --alsologtostderr                                                                                              |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966495-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --driver=qemu2                                                                                                       |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966496-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| start     | -p functional-730000 --dry-run                                                                                       | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966498-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.9665-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --driver=qemu2                                                                                                       |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966505-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| start     | -p functional-730000                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966507-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --dry-run --memory                                                                                                   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966511-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | 250MB --alsologtostderr                                                                                              |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966513-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --driver=qemu2                                                                                                       |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966515-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t| dashboard | --url --port 36195                                                                                                   | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:47:55.966517-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | -p functional-730000                                                                                                 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966519-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|           | --alsologtostderr -v=1                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:47:55.966521-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t|-----------|----------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:47:55.966524-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966526-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966527-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966528-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* Log file created at: 2023/05/31 11:47:52\n"}
{"Time":"2023-05-31T11:47:55.96653-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T11:47:55.966531-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T11:47:55.966532-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T11:47:55.966534-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.001344    2143 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:55.966535-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.001455    2143 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:55.966537-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.001457    2143 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:55.966538-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.001460    2143 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:55.96654-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.001541    2143 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:55.966542-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.002826    2143 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:47:55.966543-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.019924    2143 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1043,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:47:55.966547-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 11:47:52.020028    2143 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:47:55.966548-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.023120    2143 out.go:177] * [functional-730000] minikube v1.30.1 sur Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:47:55.96655-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.028004    2143 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:47:55.966552-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.028048    2143 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:47:55.966553-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.033062    2143 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:47:55.966554-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.036061    2143 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:47:55.966556-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.039047    2143 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:47:55.966558-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.042094    2143 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:47:55.96656-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.045014    2143 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:47:55.966561-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.048300    2143 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:55.966563-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.048523    2143 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:47:55.966564-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.053079    2143 out.go:177] * Utilisation du pilote qemu2 basé sur le profil existant\n"}
{"Time":"2023-05-31T11:47:55.966566-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.059984    2143 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:47:55.966569-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.059988    2143 start.go:875] validating driver \"qemu2\" against \u0026{Name:functional-730000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T11:47:55.966573-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:functional-730000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:apiserver Key:enable-admission-plugins Value:NamespaceAutoProvision}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8441 NodeName:} Nodes:[{Name: IP:192.168.105.4 Port:8441 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false E"}
{"Time":"2023-05-31T11:47:55.966576-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"xtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:47:55.966578-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.060026    2143 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:47:55.96658-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.064896    2143 out.go:177] \n"}
{"Time":"2023-05-31T11:47:55.966582-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 11:47:52.069054    2143 out.go:239] X Fermeture en raison de RSRC_INSUFFICIENT_REQ_MEMORY : L'allocation de mémoire demandée 250 Mio est inférieure au minimum utilisable de 1800 Mo\n"}
{"Time":"2023-05-31T11:47:55.966584-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 11:47:52.073043    2143 out.go:177] \n"}
{"Time":"2023-05-31T11:47:55.966593-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966594-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966596-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e Docker \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966597-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:45:05 UTC, ends at Wed 2023-05-31 18:47:55 UTC. --\n"}
{"Time":"2023-05-31T11:47:55.966599-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.746602746Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966601-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.746609163Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:47:55.966605-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.746613538Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966607-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6409]: time=\"2023-05-31T18:47:52.796623127Z\" level=info msg=\"ignoring event\" container=ed99806330001ee36b648790874659b678081e3992fb4fba54eb2ea94b54d211 module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:47:55.966609-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.796816791Z\" level=info msg=\"shim disconnected\" id=ed99806330001ee36b648790874659b678081e3992fb4fba54eb2ea94b54d211 namespace=moby\n"}
{"Time":"2023-05-31T11:47:55.966611-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.796846791Z\" level=warning msg=\"cleaning up after shim disconnected\" id=ed99806330001ee36b648790874659b678081e3992fb4fba54eb2ea94b54d211 namespace=moby\n"}
{"Time":"2023-05-31T11:47:55.966622-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.796851833Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:47:55.966635-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:52.808136772Z\" level=warning msg=\"cleanup warnings time=\\\"2023-05-31T18:47:52Z\\\" level=warning msg=\\\"failed to remove runc container\\\" error=\\\"runc did not terminate successfully: exit status 255: \\\" runtime=io.containerd.runc.v2\\n\" namespace=moby\n"}
{"Time":"2023-05-31T11:47:55.966642-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051362167Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:47:55.966667-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051397958Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966674-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051422291Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:47:55.966678-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051427625Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966694-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051667456Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:47:55.966696-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051687206Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966698-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051693456Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:47:55.9667-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:53.051697622Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966702-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 cri-dockerd[6670]: time=\"2023-05-31T18:47:53Z\" level=info msg=\"Will attempt to re-write config file /var/lib/docker/containers/c944fe5735503acb2910209cce1edfb4ea4a87ebb0c376a19be2b020c39184e8/resolv.conf as [nameserver 10.96.0.10 search kubernetes-dashboard.svc.cluster.local svc.cluster.local cluster.local options ndots:5]\"\n"}
{"Time":"2023-05-31T11:47:55.966705-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 cri-dockerd[6670]: time=\"2023-05-31T18:47:53Z\" level=info msg=\"Will attempt to re-write config file /var/lib/docker/containers/284f13a4477aa037fa4e35fefb5759190e528f1c3a4f3cbbe246cd07fff48bf0/resolv.conf as [nameserver 10.96.0.10 search kubernetes-dashboard.svc.cluster.local svc.cluster.local cluster.local options ndots:5]\"\n"}
{"Time":"2023-05-31T11:47:55.966707-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:53 functional-730000 dockerd[6409]: time=\"2023-05-31T18:47:53.462181398Z\" level=warning msg=\"reference for unknown type: \" digest=\"sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c\" remote=\"docker.io/kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c\"\n"}
{"Time":"2023-05-31T11:47:55.966709-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 cri-dockerd[6670]: time=\"2023-05-31T18:47:55Z\" level=info msg=\"Stop pulling image docker.io/kubernetesui/metrics-scraper:v1.0.8@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c: Status: Downloaded newer image for kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c\"\n"}
{"Time":"2023-05-31T11:47:55.966711-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:55.213790304Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:47:55.966713-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:55.213829262Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.966716-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:55.213840887Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:47:55.966718-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 dockerd[6416]: time=\"2023-05-31T18:47:55.213847595Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:47:55.96672-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 dockerd[6409]: time=\"2023-05-31T18:47:55.373511324Z\" level=warning msg=\"reference for unknown type: \" digest=\"sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93\" remote=\"docker.io/kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93\"\n"}
{"Time":"2023-05-31T11:47:55.966722-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966723-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966724-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e container status \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966726-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* CONTAINER           IMAGE                                                                                                  CREATED                  STATE               NAME                        ATTEMPT             POD ID\n"}
{"Time":"2023-05-31T11:47:55.966727-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tcb916b7db3007       kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c   Less than a second ago   Running             dashboard-metrics-scraper   0                   c944fe5735503\n"}
{"Time":"2023-05-31T11:47:55.966729-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \ted99806330001       72565bf5bbedf                                                                                          3 seconds ago            Exited              echoserver-arm              3                   91c15783f4de3\n"}
{"Time":"2023-05-31T11:47:55.966731-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t387d64203306d       gcr.io/k8s-minikube/busybox@sha256:2d03e6ceeb99250061dd110530b0ece7998cd84121f952adef120ea7c5a6f00e    8 seconds ago            Exited              mount-munger                0                   bc2e6dff9ee8b\n"}
{"Time":"2023-05-31T11:47:55.966732-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tb37ab09b2fdc5       72565bf5bbedf                                                                                          12 seconds ago           Exited              echoserver-arm              2                   09c9965f5eeb2\n"}
{"Time":"2023-05-31T11:47:55.966734-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tba32bd700e33c       nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305                          19 seconds ago           Running             myfrontend                  0                   697b8fcf14488\n"}
{"Time":"2023-05-31T11:47:55.966736-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t88a6c3163e38d       nginx@sha256:2e776a66a3556f001aba13431b26e448fe8acba277bf93d2ab1a785571a46d90                          35 seconds ago           Running             nginx                       0                   648926570f4ec\n"}
{"Time":"2023-05-31T11:47:55.966738-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \ta95b3c7f02f75       97e04611ad434                                                                                          About a minute ago       Running             coredns                     2                   3a53ab0a3dc82\n"}
{"Time":"2023-05-31T11:47:55.966739-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t3e36a86f06489       ba04bb24b9575                                                                                          About a minute ago       Running             storage-provisioner         2                   3a5e8b15463b3\n"}
{"Time":"2023-05-31T11:47:55.966741-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tf455352a1d88f       29921a0845422                                                                                          About a minute ago       Running             kube-proxy                  2                   c6f72539304db\n"}
{"Time":"2023-05-31T11:47:55.966743-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t7c026b8450b61       72c9df6be7f1b                                                                                          About a minute ago       Running             kube-apiserver              0                   c749e29fb6dbd\n"}
{"Time":"2023-05-31T11:47:55.966745-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tc299c6a97ce25       24bc64e911039                                                                                          About a minute ago       Running             etcd                        2                   e0dc7403d2089\n"}
{"Time":"2023-05-31T11:47:55.966746-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t27fa0bde23d9e       2ee705380c3c5                                                                                          About a minute ago       Running             kube-controller-manager     2                   01eab1054e7c0\n"}
{"Time":"2023-05-31T11:47:55.966748-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t0c6723ae1d6f4       305d7ed1dae28                                                                                          About a minute ago       Running             kube-scheduler              2                   f2411c8ad2093\n"}
{"Time":"2023-05-31T11:47:55.96675-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t45299a343d096       ba04bb24b9575                                                                                          About a minute ago       Exited              storage-provisioner         1                   458146be43da4\n"}
{"Time":"2023-05-31T11:47:55.966751-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t5095eee524e78       97e04611ad434                                                                                          About a minute ago       Exited              coredns                     1                   5d0ea12322481\n"}
{"Time":"2023-05-31T11:47:55.966753-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t8f54741bc2c0d       29921a0845422                                                                                          About a minute ago       Exited              kube-proxy                  1                   667940fcad8f1\n"}
{"Time":"2023-05-31T11:47:55.966755-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t0ad12502565b1       305d7ed1dae28                                                                                          About a minute ago       Exited              kube-scheduler              1                   a46c66908f732\n"}
{"Time":"2023-05-31T11:47:55.966756-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t55d5165223483       2ee705380c3c5                                                                                          About a minute ago       Exited              kube-controller-manager     1                   ebf6dc34a38fc\n"}
{"Time":"2023-05-31T11:47:55.966761-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \ta7036c2a3d0b8       24bc64e911039                                                                                          About a minute ago       Exited              etcd                        1                   7eadd407fe906\n"}
{"Time":"2023-05-31T11:47:55.966762-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966763-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966764-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e coredns [5095eee524e7] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966766-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* [INFO] plugin/kubernetes: waiting for Kubernetes API before starting server\n"}
{"Time":"2023-05-31T11:47:55.966767-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/ready: Still waiting on: \"kubernetes\"\n"}
{"Time":"2023-05-31T11:47:55.966769-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server\n"}
{"Time":"2023-05-31T11:47:55.96677-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server\n"}
{"Time":"2023-05-31T11:47:55.966771-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t.:53\n"}
{"Time":"2023-05-31T11:47:55.966773-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/reload: Running configuration SHA512 = ea7a0d73d9d208f758b1f67640ef03c58089b9d9366cf3478df3bb369b210e39f213811b46224f8a04380814b6e0890ccd358f5b5e8c80bc22ac19c8601ee35b\n"}
{"Time":"2023-05-31T11:47:55.966774-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tCoreDNS-1.10.1\n"}
{"Time":"2023-05-31T11:47:55.966775-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tlinux/arm64, go1.20, 055b2c3\n"}
{"Time":"2023-05-31T11:47:55.966777-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 127.0.0.1:52752 - 57209 \"HINFO IN 7875390671645935058.6448967527405444882. udp 57 false 512\" NXDOMAIN qr,rd,ra 132 0.004716405s\n"}
{"Time":"2023-05-31T11:47:55.966778-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] SIGTERM: Shutting down servers then terminating\n"}
{"Time":"2023-05-31T11:47:55.96678-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/health: Going into lameduck mode for 5s\n"}
{"Time":"2023-05-31T11:47:55.966781-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966782-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966783-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e coredns [a95b3c7f02f7] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966785-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* .:53\n"}
{"Time":"2023-05-31T11:47:55.966789-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] plugin/reload: Running configuration SHA512 = ea7a0d73d9d208f758b1f67640ef03c58089b9d9366cf3478df3bb369b210e39f213811b46224f8a04380814b6e0890ccd358f5b5e8c80bc22ac19c8601ee35b\n"}
{"Time":"2023-05-31T11:47:55.96679-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tCoreDNS-1.10.1\n"}
{"Time":"2023-05-31T11:47:55.966791-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tlinux/arm64, go1.20, 055b2c3\n"}
{"Time":"2023-05-31T11:47:55.966793-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 127.0.0.1:44220 - 50646 \"HINFO IN 4852947524019685056.8356553131542767452. udp 57 false 512\" NXDOMAIN qr,rd,ra 132 0.004723577s\n"}
{"Time":"2023-05-31T11:47:55.966794-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:35130 - 32096 \"A IN nginx-svc.default.svc.cluster.local. udp 64 false 4096\" NOERROR qr,aa,rd 104 0.000124997s\n"}
{"Time":"2023-05-31T11:47:55.966797-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:33705 - 35206 \"AAAA IN nginx-svc.default.svc.cluster.local. udp 53 false 512\" NOERROR qr,aa,rd 146 0.000128914s\n"}
{"Time":"2023-05-31T11:47:55.966799-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:44216 - 12594 \"SVCB IN _dns.resolver.arpa. udp 36 false 512\" NXDOMAIN qr,rd,ra 116 0.001467262s\n"}
{"Time":"2023-05-31T11:47:55.966801-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:8559 - 7176 \"A IN nginx-svc.default.svc.cluster.local. udp 53 false 512\" NOERROR qr,aa,rd 104 0.000035499s\n"}
{"Time":"2023-05-31T11:47:55.966802-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:57570 - 51364 \"AAAA IN nginx-svc.default.svc.cluster.local. udp 64 false 1232\" NOERROR qr,aa,rd 146 0.000053374s\n"}
{"Time":"2023-05-31T11:47:55.966804-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[INFO] 10.244.0.1:4669 - 52881 \"A IN nginx-svc.default.svc.cluster.local. udp 64 false 1232\" NOERROR qr,aa,rd 104 0.000029707s\n"}
{"Time":"2023-05-31T11:47:55.966805-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.966806-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.966807-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e describe nodes \u003c==\n"}
{"Time":"2023-05-31T11:47:55.966809-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* Name:               functional-730000\n"}
{"Time":"2023-05-31T11:47:55.966812-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tRoles:              control-plane\n"}
{"Time":"2023-05-31T11:47:55.966814-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tLabels:             beta.kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:47:55.966815-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    beta.kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:47:55.966816-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:47:55.966818-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    kubernetes.io/hostname=functional-730000\n"}
{"Time":"2023-05-31T11:47:55.966819-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:47:55.966821-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140\n"}
{"Time":"2023-05-31T11:47:55.966823-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    minikube.k8s.io/name=functional-730000\n"}
{"Time":"2023-05-31T11:47:55.966824-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    minikube.k8s.io/primary=true\n"}
{"Time":"2023-05-31T11:47:55.966825-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    minikube.k8s.io/updated_at=2023_05_31T11_45_25_0700\n"}
{"Time":"2023-05-31T11:47:55.966827-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    minikube.k8s.io/version=v1.30.1\n"}
{"Time":"2023-05-31T11:47:55.966828-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    node-role.kubernetes.io/control-plane=\n"}
{"Time":"2023-05-31T11:47:55.966829-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    node.kubernetes.io/exclude-from-external-load-balancers=\n"}
{"Time":"2023-05-31T11:47:55.966831-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:47:55.966833-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    node.alpha.kubernetes.io/ttl: 0\n"}
{"Time":"2023-05-31T11:47:55.966834-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                    volumes.kubernetes.io/controller-managed-attach-detach: true\n"}
{"Time":"2023-05-31T11:47:55.966838-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tCreationTimestamp:  Wed, 31 May 2023 18:45:22 +0000\n"}
{"Time":"2023-05-31T11:47:55.966839-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tTaints:             \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:55.96684-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tUnschedulable:      false\n"}
{"Time":"2023-05-31T11:47:55.966842-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tLease:\n"}
{"Time":"2023-05-31T11:47:55.966843-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  HolderIdentity:  functional-730000\n"}
{"Time":"2023-05-31T11:47:55.966844-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  AcquireTime:     \u003cunset\u003e\n"}
{"Time":"2023-05-31T11:47:55.966846-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  RenewTime:       Wed, 31 May 2023 18:47:54 +0000\n"}
{"Time":"2023-05-31T11:47:55.966847-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tConditions:\n"}
{"Time":"2023-05-31T11:47:55.966849-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n"}
{"Time":"2023-05-31T11:47:55.96685-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ----             ------  -----------------                 ------------------                ------                       -------\n"}
{"Time":"2023-05-31T11:47:55.966852-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  MemoryPressure   False   Wed, 31 May 2023 18:47:43 +0000   Wed, 31 May 2023 18:45:22 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n"}
{"Time":"2023-05-31T11:47:55.966854-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  DiskPressure     False   Wed, 31 May 2023 18:47:43 +0000   Wed, 31 May 2023 18:45:22 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n"}
{"Time":"2023-05-31T11:47:55.966855-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  PIDPressure      False   Wed, 31 May 2023 18:47:43 +0000   Wed, 31 May 2023 18:45:22 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n"}
{"Time":"2023-05-31T11:47:55.966857-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Ready            True    Wed, 31 May 2023 18:47:43 +0000   Wed, 31 May 2023 18:45:27 +0000   KubeletReady                 kubelet is posting ready status\n"}
{"Time":"2023-05-31T11:47:55.966859-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tAddresses:\n"}
{"Time":"2023-05-31T11:47:55.96686-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  InternalIP:  192.168.105.4\n"}
{"Time":"2023-05-31T11:47:55.966861-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Hostname:    functional-730000\n"}
{"Time":"2023-05-31T11:47:55.966862-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tCapacity:\n"}
{"Time":"2023-05-31T11:47:55.966864-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:47:55.966865-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:47:55.966866-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:47:55.966867-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:47:55.966869-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:47:55.96687-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:47:55.966871-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  memory:             3905972Ki\n"}
{"Time":"2023-05-31T11:47:55.966873-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:47:55.966874-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tAllocatable:\n"}
{"Time":"2023-05-31T11:47:55.966875-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:47:55.966877-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:47:55.966878-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:47:55.966879-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:47:55.966885-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:47:55.966886-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:47:55.966888-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  memory:             3905972Ki\n"}
{"Time":"2023-05-31T11:47:55.96689-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:47:55.966891-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tSystem Info:\n"}
{"Time":"2023-05-31T11:47:55.966892-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Machine ID:                 08566a2bd5694af89aacb58901fd2069\n"}
{"Time":"2023-05-31T11:47:55.966893-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  System UUID:                08566a2bd5694af89aacb58901fd2069\n"}
{"Time":"2023-05-31T11:47:55.966895-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Boot ID:                    327b4b84-94ab-496d-b577-168c3bec70c5\n"}
{"Time":"2023-05-31T11:47:55.966896-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Kernel Version:             5.10.57\n"}
{"Time":"2023-05-31T11:47:55.9669-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  OS Image:                   Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:47:55.966901-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Operating System:           linux\n"}
{"Time":"2023-05-31T11:47:55.966902-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Architecture:               arm64\n"}
{"Time":"2023-05-31T11:47:55.966904-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Container Runtime Version:  docker://24.0.1\n"}
{"Time":"2023-05-31T11:47:55.966905-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Kubelet Version:            v1.27.2\n"}
{"Time":"2023-05-31T11:47:55.966906-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Kube-Proxy Version:         v1.27.2\n"}
{"Time":"2023-05-31T11:47:55.966907-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tPodCIDR:                      10.244.0.0/24\n"}
{"Time":"2023-05-31T11:47:55.966909-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tPodCIDRs:                     10.244.0.0/24\n"}
{"Time":"2023-05-31T11:47:55.96691-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tNon-terminated Pods:          (13 in total)\n"}
{"Time":"2023-05-31T11:47:55.966911-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Namespace                   Name                                          CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n"}
{"Time":"2023-05-31T11:47:55.966913-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ---------                   ----                                          ------------  ----------  ---------------  -------------  ---\n"}
{"Time":"2023-05-31T11:47:55.966914-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  default                     hello-node-7b684b55f9-7pbws                   0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         50s\n"}
{"Time":"2023-05-31T11:47:55.966916-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  default                     hello-node-connect-58d66798bb-stzzj           0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         28s\n"}
{"Time":"2023-05-31T11:47:55.966917-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  default                     nginx-svc                                     0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         38s\n"}
{"Time":"2023-05-31T11:47:55.966919-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  default                     sp-pod                                        0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         20s\n"}
{"Time":"2023-05-31T11:47:55.966921-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 coredns-5d78c9869d-wvnft                      100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     2m18s\n"}
{"Time":"2023-05-31T11:47:55.966922-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 etcd-functional-730000                        100m (5%!)(MISSING)     0 (0%!)(MISSING)      100Mi (2%!)(MISSING)       0 (0%!)(MISSING)         2m30s\n"}
{"Time":"2023-05-31T11:47:55.966924-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 kube-apiserver-functional-730000              250m (12%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         72s\n"}
{"Time":"2023-05-31T11:47:55.966925-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 kube-controller-manager-functional-730000     200m (10%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         2m31s\n"}
{"Time":"2023-05-31T11:47:55.966927-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 kube-proxy-mdct7                              0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         2m17s\n"}
{"Time":"2023-05-31T11:47:55.966929-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 kube-scheduler-functional-730000              100m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         2m30s\n"}
{"Time":"2023-05-31T11:47:55.966931-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-system                 storage-provisioner                           0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         2m17s\n"}
{"Time":"2023-05-31T11:47:55.966932-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kubernetes-dashboard        dashboard-metrics-scraper-5dd9cbfd69-f2kgx    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3s\n"}
{"Time":"2023-05-31T11:47:55.966934-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kubernetes-dashboard        kubernetes-dashboard-5c5cfc8747-v249w         0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3s\n"}
{"Time":"2023-05-31T11:47:55.966935-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tAllocated resources:\n"}
{"Time":"2023-05-31T11:47:55.966937-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  (Total limits may be over 100 percent, i.e., overcommitted.)\n"}
{"Time":"2023-05-31T11:47:55.966938-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Resource           Requests    Limits\n"}
{"Time":"2023-05-31T11:47:55.966939-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  --------           --------    ------\n"}
{"Time":"2023-05-31T11:47:55.96694-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  cpu                750m (37%!)(MISSING)  0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966955-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  memory             170Mi (4%!)(MISSING)  170Mi (4%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966959-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966961-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966962-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966964-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966965-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:47:55.966966-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tEvents:\n"}
{"Time":"2023-05-31T11:47:55.966968-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Type    Reason                   Age                    From             Message\n"}
{"Time":"2023-05-31T11:47:55.966969-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ----    ------                   ----                   ----             -------\n"}
{"Time":"2023-05-31T11:47:55.966971-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 2m16s                  kube-proxy       \n"}
{"Time":"2023-05-31T11:47:55.966972-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 71s                    kube-proxy       \n"}
{"Time":"2023-05-31T11:47:55.966973-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 116s                   kube-proxy       \n"}
{"Time":"2023-05-31T11:47:55.966975-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasNoDiskPressure    2m35s (x8 over 2m35s)  kubelet          Node functional-730000 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2023-05-31T11:47:55.966976-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientMemory  2m35s (x8 over 2m35s)  kubelet          Node functional-730000 status is now: NodeHasSufficientMemory\n"}
{"Time":"2023-05-31T11:47:55.966978-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 2m35s                  kubelet          Starting kubelet.\n"}
{"Time":"2023-05-31T11:47:55.96698-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientPID     2m35s (x7 over 2m35s)  kubelet          Node functional-730000 status is now: NodeHasSufficientPID\n"}
{"Time":"2023-05-31T11:47:55.966981-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeAllocatableEnforced  2m35s                  kubelet          Updated Node Allocatable limit across pods\n"}
{"Time":"2023-05-31T11:47:55.966983-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientPID     2m30s                  kubelet          Node functional-730000 status is now: NodeHasSufficientPID\n"}
{"Time":"2023-05-31T11:47:55.967044-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeAllocatableEnforced  2m30s                  kubelet          Updated Node Allocatable limit across pods\n"}
{"Time":"2023-05-31T11:47:55.967046-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientMemory  2m30s                  kubelet          Node functional-730000 status is now: NodeHasSufficientMemory\n"}
{"Time":"2023-05-31T11:47:55.967048-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasNoDiskPressure    2m30s                  kubelet          Node functional-730000 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2023-05-31T11:47:55.967049-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 2m30s                  kubelet          Starting kubelet.\n"}
{"Time":"2023-05-31T11:47:55.967051-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeReady                2m28s                  kubelet          Node functional-730000 status is now: NodeReady\n"}
{"Time":"2023-05-31T11:47:55.967052-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  RegisteredNode           2m17s                  node-controller  Node functional-730000 event: Registered Node functional-730000 in Controller\n"}
{"Time":"2023-05-31T11:47:55.967054-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  RegisteredNode           104s                   node-controller  Node functional-730000 event: Registered Node functional-730000 in Controller\n"}
{"Time":"2023-05-31T11:47:55.967056-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasNoDiskPressure    76s (x8 over 76s)      kubelet          Node functional-730000 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2023-05-31T11:47:55.967058-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientMemory  76s (x8 over 76s)      kubelet          Node functional-730000 status is now: NodeHasSufficientMemory\n"}
{"Time":"2023-05-31T11:47:55.967059-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Starting                 76s                    kubelet          Starting kubelet.\n"}
{"Time":"2023-05-31T11:47:55.96706-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeHasSufficientPID     76s (x7 over 76s)      kubelet          Node functional-730000 status is now: NodeHasSufficientPID\n"}
{"Time":"2023-05-31T11:47:55.967062-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  NodeAllocatableEnforced  76s                    kubelet          Updated Node Allocatable limit across pods\n"}
{"Time":"2023-05-31T11:47:55.967064-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  RegisteredNode           60s                    node-controller  Node functional-730000 event: Registered Node functional-730000 in Controller\n"}
{"Time":"2023-05-31T11:47:55.967065-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.967066-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.967139-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e dmesg \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967143-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* [  +0.102215] systemd-fstab-generator[3554]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967147-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +5.191188] kauditd_printk_skb: 23 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967148-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +6.307939] systemd-fstab-generator[4113]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.96715-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.085289] systemd-fstab-generator[4124]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967151-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.082045] systemd-fstab-generator[4135]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967153-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.074722] systemd-fstab-generator[4146]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967154-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.092117] systemd-fstab-generator[4214]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.96716-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[May31 18:46] kauditd_printk_skb: 42 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967162-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[ +15.011677] systemd-fstab-generator[5962]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967163-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.164551] systemd-fstab-generator[5994]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967164-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.082325] systemd-fstab-generator[6005]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967166-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.102406] systemd-fstab-generator[6018]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967167-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[ +11.495093] systemd-fstab-generator[6560]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967168-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.085056] systemd-fstab-generator[6571]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.96717-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.070814] systemd-fstab-generator[6582]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967171-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.083684] systemd-fstab-generator[6593]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967172-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.089940] systemd-fstab-generator[6663]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967243-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +0.857463] systemd-fstab-generator[6910]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:47:55.967249-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +4.419380] kauditd_printk_skb: 45 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967253-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[ +11.624805] kauditd_printk_skb: 1 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967257-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[May31 18:47] TCP: eth0: Driver has suspect GRO implementation, TCP performance may be compromised.\n"}
{"Time":"2023-05-31T11:47:55.967261-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[ +17.482743] kauditd_printk_skb: 3 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967265-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +5.227725] kauditd_printk_skb: 4 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967268-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[ +15.485589] kauditd_printk_skb: 3 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967272-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t[  +7.708651] kauditd_printk_skb: 3 callbacks suppressed\n"}
{"Time":"2023-05-31T11:47:55.967275-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.967278-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.967282-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e etcd [a7036c2a3d0b] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967286-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* {\"level\":\"info\",\"ts\":\"2023-05-31T18:45:57.401Z\",\"caller\":\"embed/etcd.go:558\",\"msg\":\"cmux::serve\",\"address\":\"192.168.105.4:2380\"}\n"}
{"Time":"2023-05-31T11:47:55.967291-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:57.401Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 switched to configuration voters=(527499358918876438)\"}\n"}
{"Time":"2023-05-31T11:47:55.96731-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:57.401Z\",\"caller\":\"membership/cluster.go:421\",\"msg\":\"added member\",\"cluster-id\":\"80e92d98c466b02f\",\"local-member-id\":\"7520ddf439b1d16\",\"added-peer-id\":\"7520ddf439b1d16\",\"added-peer-peer-urls\":[\"https://192.168.105.4:2380\"]}\n"}
{"Time":"2023-05-31T11:47:55.967317-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:57.401Z\",\"caller\":\"membership/cluster.go:584\",\"msg\":\"set initial cluster version\",\"cluster-id\":\"80e92d98c466b02f\",\"local-member-id\":\"7520ddf439b1d16\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:47:55.967322-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:57.401Z\",\"caller\":\"api/capability.go:75\",\"msg\":\"enabled capabilities for version\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:47:55.967339-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.492Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 is starting a new election at term 2\"}\n"}
{"Time":"2023-05-31T11:47:55.967352-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.492Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became pre-candidate at term 2\"}\n"}
{"Time":"2023-05-31T11:47:55.967372-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.493Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 received MsgPreVoteResp from 7520ddf439b1d16 at term 2\"}\n"}
{"Time":"2023-05-31T11:47:55.967381-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.493Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became candidate at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967401-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.493Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 received MsgVoteResp from 7520ddf439b1d16 at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967406-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.493Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became leader at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967431-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.493Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"raft.node: 7520ddf439b1d16 elected leader 7520ddf439b1d16 at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967438-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.494Z\",\"caller\":\"etcdserver/server.go:2062\",\"msg\":\"published local member to cluster through raft\",\"local-member-id\":\"7520ddf439b1d16\",\"local-member-attributes\":\"{Name:functional-730000 ClientURLs:[https://192.168.105.4:2379]}\",\"request-path\":\"/0/members/7520ddf439b1d16/attributes\",\"cluster-id\":\"80e92d98c466b02f\",\"publish-timeout\":\"7s\"}\n"}
{"Time":"2023-05-31T11:47:55.967444-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.494Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:47:55.967448-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.494Z\",\"caller\":\"etcdmain/main.go:44\",\"msg\":\"notifying init daemon\"}\n"}
{"Time":"2023-05-31T11:47:55.967452-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.494Z\",\"caller\":\"etcdmain/main.go:50\",\"msg\":\"successfully notified init daemon\"}\n"}
{"Time":"2023-05-31T11:47:55.967456-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.494Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:47:55.967461-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.495Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"127.0.0.1:2379\"}\n"}
{"Time":"2023-05-31T11:47:55.967466-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:45:58.495Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"192.168.105.4:2379\"}\n"}
{"Time":"2023-05-31T11:47:55.96747-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.011Z\",\"caller\":\"osutil/interrupt_unix.go:64\",\"msg\":\"received signal; shutting down\",\"signal\":\"terminated\"}\n"}
{"Time":"2023-05-31T11:47:55.967489-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.012Z\",\"caller\":\"embed/etcd.go:373\",\"msg\":\"closing etcd server\",\"name\":\"functional-730000\",\"data-dir\":\"/var/lib/minikube/etcd\",\"advertise-peer-urls\":[\"https://192.168.105.4:2380\"],\"advertise-client-urls\":[\"https://192.168.105.4:2379\"]}\n"}
{"Time":"2023-05-31T11:47:55.967497-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.022Z\",\"caller\":\"etcdserver/server.go:1465\",\"msg\":\"skipped leadership transfer for single voting member cluster\",\"local-member-id\":\"7520ddf439b1d16\",\"current-leader-member-id\":\"7520ddf439b1d16\"}\n"}
{"Time":"2023-05-31T11:47:55.967525-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.023Z\",\"caller\":\"embed/etcd.go:568\",\"msg\":\"stopping serving peer traffic\",\"address\":\"192.168.105.4:2380\"}\n"}
{"Time":"2023-05-31T11:47:55.967554-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.025Z\",\"caller\":\"embed/etcd.go:573\",\"msg\":\"stopped serving peer traffic\",\"address\":\"192.168.105.4:2380\"}\n"}
{"Time":"2023-05-31T11:47:55.967559-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:27.025Z\",\"caller\":\"embed/etcd.go:375\",\"msg\":\"closed etcd server\",\"name\":\"functional-730000\",\"data-dir\":\"/var/lib/minikube/etcd\",\"advertise-peer-urls\":[\"https://192.168.105.4:2380\"],\"advertise-client-urls\":[\"https://192.168.105.4:2379\"]}\n"}
{"Time":"2023-05-31T11:47:55.967563-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.967566-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.96757-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e etcd [c299c6a97ce2] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967574-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* {\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.927Z\",\"caller\":\"fileutil/purge.go:44\",\"msg\":\"started to purge file\",\"dir\":\"/var/lib/minikube/etcd/member/snap\",\"suffix\":\"snap\",\"max\":5,\"interval\":\"30s\"}\n"}
{"Time":"2023-05-31T11:47:55.96758-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.927Z\",\"caller\":\"fileutil/purge.go:44\",\"msg\":\"started to purge file\",\"dir\":\"/var/lib/minikube/etcd/member/wal\",\"suffix\":\"wal\",\"max\":5,\"interval\":\"30s\"}\n"}
{"Time":"2023-05-31T11:47:55.967584-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.927Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 switched to configuration voters=(527499358918876438)\"}\n"}
{"Time":"2023-05-31T11:47:55.967589-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.928Z\",\"caller\":\"membership/cluster.go:421\",\"msg\":\"added member\",\"cluster-id\":\"80e92d98c466b02f\",\"local-member-id\":\"7520ddf439b1d16\",\"added-peer-id\":\"7520ddf439b1d16\",\"added-peer-peer-urls\":[\"https://192.168.105.4:2380\"]}\n"}
{"Time":"2023-05-31T11:47:55.967594-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.928Z\",\"caller\":\"membership/cluster.go:584\",\"msg\":\"set initial cluster version\",\"cluster-id\":\"80e92d98c466b02f\",\"local-member-id\":\"7520ddf439b1d16\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:47:55.967599-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.928Z\",\"caller\":\"api/capability.go:75\",\"msg\":\"enabled capabilities for version\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:47:55.967605-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.932Z\",\"caller\":\"embed/etcd.go:687\",\"msg\":\"starting with client TLS\",\"tls-info\":\"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = \",\"cipher-suites\":[]}\n"}
{"Time":"2023-05-31T11:47:55.96761-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.939Z\",\"caller\":\"embed/etcd.go:275\",\"msg\":\"now serving peer/client/metrics\",\"local-member-id\":\"7520ddf439b1d16\",\"initial-advertise-peer-urls\":[\"https://192.168.105.4:2380\"],\"listen-peer-urls\":[\"https://192.168.105.4:2380\"],\"advertise-client-urls\":[\"https://192.168.105.4:2379\"],\"listen-client-urls\":[\"https://127.0.0.1:2379\",\"https://192.168.105.4:2379\"],\"listen-metrics-urls\":[\"http://127.0.0.1:2381\"]}\n"}
{"Time":"2023-05-31T11:47:55.967616-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.939Z\",\"caller\":\"embed/etcd.go:762\",\"msg\":\"serving metrics\",\"address\":\"http://127.0.0.1:2381\"}\n"}
{"Time":"2023-05-31T11:47:55.96762-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.935Z\",\"caller\":\"embed/etcd.go:586\",\"msg\":\"serving peer traffic\",\"address\":\"192.168.105.4:2380\"}\n"}
{"Time":"2023-05-31T11:47:55.967624-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:40.939Z\",\"caller\":\"embed/etcd.go:558\",\"msg\":\"cmux::serve\",\"address\":\"192.168.105.4:2380\"}\n"}
{"Time":"2023-05-31T11:47:55.967637-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 is starting a new election at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967642-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became pre-candidate at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.967646-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 received MsgPreVoteResp from 7520ddf439b1d16 at term 3\"}\n"}
{"Time":"2023-05-31T11:47:55.96765-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became candidate at term 4\"}\n"}
{"Time":"2023-05-31T11:47:55.967654-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 received MsgVoteResp from 7520ddf439b1d16 at term 4\"}\n"}
{"Time":"2023-05-31T11:47:55.967659-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"7520ddf439b1d16 became leader at term 4\"}\n"}
{"Time":"2023-05-31T11:47:55.967663-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.402Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"raft.node: 7520ddf439b1d16 elected leader 7520ddf439b1d16 at term 4\"}\n"}
{"Time":"2023-05-31T11:47:55.967667-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.407Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:47:55.967672-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.407Z\",\"caller\":\"etcdserver/server.go:2062\",\"msg\":\"published local member to cluster through raft\",\"local-member-id\":\"7520ddf439b1d16\",\"local-member-attributes\":\"{Name:functional-730000 ClientURLs:[https://192.168.105.4:2379]}\",\"request-path\":\"/0/members/7520ddf439b1d16/attributes\",\"cluster-id\":\"80e92d98c466b02f\",\"publish-timeout\":\"7s\"}\n"}
{"Time":"2023-05-31T11:47:55.967693-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.407Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:47:55.967719-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.409Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"192.168.105.4:2379\"}\n"}
{"Time":"2023-05-31T11:47:55.967723-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.410Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"127.0.0.1:2379\"}\n"}
{"Time":"2023-05-31T11:47:55.967728-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.410Z\",\"caller\":\"etcdmain/main.go:44\",\"msg\":\"notifying init daemon\"}\n"}
{"Time":"2023-05-31T11:47:55.967732-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:46:42.410Z\",\"caller\":\"etcdmain/main.go:50\",\"msg\":\"successfully notified init daemon\"}\n"}
{"Time":"2023-05-31T11:47:55.967736-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.967749-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.967753-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kernel \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967756-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t*  18:47:55 up 2 min,  0 users,  load average: 1.27, 0.39, 0.14\n"}
{"Time":"2023-05-31T11:47:55.96776-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tLinux functional-730000 5.10.57 #1 SMP PREEMPT Wed May 24 00:44:44 UTC 2023 aarch64 GNU/Linux\n"}
{"Time":"2023-05-31T11:47:55.967763-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tPRETTY_NAME=\"Buildroot 2021.02.12\"\n"}
{"Time":"2023-05-31T11:47:55.967767-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.96777-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.967773-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-apiserver [7c026b8450b6] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967777-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:43.125207       1 shared_informer.go:318] Caches are synced for node_authorizer\n"}
{"Time":"2023-05-31T11:47:55.967781-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.143758       1 shared_informer.go:318] Caches are synced for crd-autoregister\n"}
{"Time":"2023-05-31T11:47:55.967785-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.143776       1 cache.go:39] Caches are synced for autoregister controller\n"}
{"Time":"2023-05-31T11:47:55.967789-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.143831       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller\n"}
{"Time":"2023-05-31T11:47:55.967795-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.143786       1 apf_controller.go:366] Running API Priority and Fairness config worker\n"}
{"Time":"2023-05-31T11:47:55.967799-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.143955       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process\n"}
{"Time":"2023-05-31T11:47:55.967803-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.144154       1 cache.go:39] Caches are synced for AvailableConditionController controller\n"}
{"Time":"2023-05-31T11:47:55.967816-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.144668       1 shared_informer.go:318] Caches are synced for configmaps\n"}
{"Time":"2023-05-31T11:47:55.967822-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.144844       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller\n"}
{"Time":"2023-05-31T11:47:55.967826-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.917656       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).\n"}
{"Time":"2023-05-31T11:47:55.96783-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.048715       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.\n"}
{"Time":"2023-05-31T11:47:55.967833-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.637120       1 controller.go:624] quota admission added evaluator for: serviceaccounts\n"}
{"Time":"2023-05-31T11:47:55.967854-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.640296       1 controller.go:624] quota admission added evaluator for: deployments.apps\n"}
{"Time":"2023-05-31T11:47:55.967858-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.651883       1 controller.go:624] quota admission added evaluator for: daemonsets.apps\n"}
{"Time":"2023-05-31T11:47:55.967861-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.659847       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:47:55.967865-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.662107       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:47:55.967868-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:55.561861       1 controller.go:624] quota admission added evaluator for: endpoints\n"}
{"Time":"2023-05-31T11:47:55.967885-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:55.662299       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io\n"}
{"Time":"2023-05-31T11:47:55.967889-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:05.014682       1 controller.go:624] quota admission added evaluator for: replicasets.apps\n"}
{"Time":"2023-05-31T11:47:55.967919-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:05.060460       1 alloc.go:330] \"allocated clusterIPs\" service=\"default/hello-node\" clusterIPs=map[IPv4:10.97.137.90]\n"}
{"Time":"2023-05-31T11:47:55.967925-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:17.403799       1 alloc.go:330] \"allocated clusterIPs\" service=\"default/nginx-svc\" clusterIPs=map[IPv4:10.102.164.144]\n"}
{"Time":"2023-05-31T11:47:55.967929-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:27.838953       1 alloc.go:330] \"allocated clusterIPs\" service=\"default/hello-node-connect\" clusterIPs=map[IPv4:10.100.45.1]\n"}
{"Time":"2023-05-31T11:47:55.967933-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.628047       1 controller.go:624] quota admission added evaluator for: namespaces\n"}
{"Time":"2023-05-31T11:47:55.967954-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.717799       1 alloc.go:330] \"allocated clusterIPs\" service=\"kubernetes-dashboard/kubernetes-dashboard\" clusterIPs=map[IPv4:10.103.147.8]\n"}
{"Time":"2023-05-31T11:47:55.967958-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.742078       1 alloc.go:330] \"allocated clusterIPs\" service=\"kubernetes-dashboard/dashboard-metrics-scraper\" clusterIPs=map[IPv4:10.97.200.180]\n"}
{"Time":"2023-05-31T11:47:55.96796-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.967962-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.967963-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-controller-manager [27fa0bde23d9] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.967965-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:55.613542       1 shared_informer.go:318] Caches are synced for resource quota\n"}
{"Time":"2023-05-31T11:47:55.967967-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:55.703538       1 shared_informer.go:318] Caches are synced for persistent volume\n"}
{"Time":"2023-05-31T11:47:55.967968-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:56.027465       1 shared_informer.go:318] Caches are synced for garbage collector\n"}
{"Time":"2023-05-31T11:47:55.96797-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:56.053039       1 shared_informer.go:318] Caches are synced for garbage collector\n"}
{"Time":"2023-05-31T11:47:55.967971-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:56.053197       1 garbagecollector.go:166] \"All resource monitors have synced. Proceeding to collect garbage\"\n"}
{"Time":"2023-05-31T11:47:55.967973-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:05.017220       1 event.go:307] \"Event occurred\" object=\"default/hello-node\" fieldPath=\"\" kind=\"Deployment\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"ScalingReplicaSet\" message=\"Scaled up replica set hello-node-7b684b55f9 to 1\"\n"}
{"Time":"2023-05-31T11:47:55.967976-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:05.024886       1 event.go:307] \"Event occurred\" object=\"default/hello-node-7b684b55f9\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"SuccessfulCreate\" message=\"Created pod: hello-node-7b684b55f9-7pbws\"\n"}
{"Time":"2023-05-31T11:47:55.967978-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.728364       1 event.go:307] \"Event occurred\" object=\"default/myclaim\" fieldPath=\"\" kind=\"PersistentVolumeClaim\" apiVersion=\"v1\" type=\"Normal\" reason=\"ExternalProvisioning\" message=\"waiting for a volume to be created, either by external provisioner \\\"k8s.io/minikube-hostpath\\\" or manually created by system administrator\"\n"}
{"Time":"2023-05-31T11:47:55.967983-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.728440       1 event.go:307] \"Event occurred\" object=\"default/myclaim\" fieldPath=\"\" kind=\"PersistentVolumeClaim\" apiVersion=\"v1\" type=\"Normal\" reason=\"ExternalProvisioning\" message=\"waiting for a volume to be created, either by external provisioner \\\"k8s.io/minikube-hostpath\\\" or manually created by system administrator\"\n"}
{"Time":"2023-05-31T11:47:55.967985-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:27.793149       1 event.go:307] \"Event occurred\" object=\"default/hello-node-connect\" fieldPath=\"\" kind=\"Deployment\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"ScalingReplicaSet\" message=\"Scaled up replica set hello-node-connect-58d66798bb to 1\"\n"}
{"Time":"2023-05-31T11:47:55.967987-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:27.796976       1 event.go:307] \"Event occurred\" object=\"default/hello-node-connect-58d66798bb\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"SuccessfulCreate\" message=\"Created pod: hello-node-connect-58d66798bb-stzzj\"\n"}
{"Time":"2023-05-31T11:47:55.967989-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.648153       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/dashboard-metrics-scraper\" fieldPath=\"\" kind=\"Deployment\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"ScalingReplicaSet\" message=\"Scaled up replica set dashboard-metrics-scraper-5dd9cbfd69 to 1\"\n"}
{"Time":"2023-05-31T11:47:55.967991-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.651371       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Warning\" reason=\"FailedCreate\" message=\"Error creating: pods \\\"dashboard-metrics-scraper-5dd9cbfd69-\\\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \\\"kubernetes-dashboard\\\" not found\"\n"}
{"Time":"2023-05-31T11:47:55.967994-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:47:52.655290       1 replica_set.go:544] sync \"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" failed with pods \"dashboard-metrics-scraper-5dd9cbfd69-\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \"kubernetes-dashboard\" not found\n"}
{"Time":"2023-05-31T11:47:55.967996-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:47:52.659287       1 replica_set.go:544] sync \"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" failed with pods \"dashboard-metrics-scraper-5dd9cbfd69-\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \"kubernetes-dashboard\" not found\n"}
{"Time":"2023-05-31T11:47:55.967999-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.659344       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Warning\" reason=\"FailedCreate\" message=\"Error creating: pods \\\"dashboard-metrics-scraper-5dd9cbfd69-\\\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \\\"kubernetes-dashboard\\\" not found\"\n"}
{"Time":"2023-05-31T11:47:55.968001-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.663834       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/kubernetes-dashboard\" fieldPath=\"\" kind=\"Deployment\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"ScalingReplicaSet\" message=\"Scaled up replica set kubernetes-dashboard-5c5cfc8747 to 1\"\n"}
{"Time":"2023-05-31T11:47:55.968003-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:47:52.665454       1 replica_set.go:544] sync \"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" failed with pods \"dashboard-metrics-scraper-5dd9cbfd69-\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \"kubernetes-dashboard\" not found\n"}
{"Time":"2023-05-31T11:47:55.968005-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.665741       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Warning\" reason=\"FailedCreate\" message=\"Error creating: pods \\\"dashboard-metrics-scraper-5dd9cbfd69-\\\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \\\"kubernetes-dashboard\\\" not found\"\n"}
{"Time":"2023-05-31T11:47:55.968008-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.668478       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Warning\" reason=\"FailedCreate\" message=\"Error creating: pods \\\"kubernetes-dashboard-5c5cfc8747-\\\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \\\"kubernetes-dashboard\\\" not found\"\n"}
{"Time":"2023-05-31T11:47:55.968087-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:47:52.673156       1 replica_set.go:544] sync \"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747\" failed with pods \"kubernetes-dashboard-5c5cfc8747-\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \"kubernetes-dashboard\" not found\n"}
{"Time":"2023-05-31T11:47:55.968089-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:47:52.675292       1 replica_set.go:544] sync \"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747\" failed with pods \"kubernetes-dashboard-5c5cfc8747-\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \"kubernetes-dashboard\" not found\n"}
{"Time":"2023-05-31T11:47:55.968091-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.675446       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Warning\" reason=\"FailedCreate\" message=\"Error creating: pods \\\"kubernetes-dashboard-5c5cfc8747-\\\" is forbidden: error looking up service account kubernetes-dashboard/kubernetes-dashboard: serviceaccount \\\"kubernetes-dashboard\\\" not found\"\n"}
{"Time":"2023-05-31T11:47:55.968094-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.681496       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"SuccessfulCreate\" message=\"Created pod: kubernetes-dashboard-5c5cfc8747-v249w\"\n"}
{"Time":"2023-05-31T11:47:55.968096-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:52.691308       1 event.go:307] \"Event occurred\" object=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69\" fieldPath=\"\" kind=\"ReplicaSet\" apiVersion=\"apps/v1\" type=\"Normal\" reason=\"SuccessfulCreate\" message=\"Created pod: dashboard-metrics-scraper-5dd9cbfd69-f2kgx\"\n"}
{"Time":"2023-05-31T11:47:55.968098-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.968099-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.9681-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-controller-manager [55d516522348] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968102-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:11.539380       1 range_allocator.go:178] \"Starting range CIDR allocator\"\n"}
{"Time":"2023-05-31T11:47:55.968103-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.539382       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator\n"}
{"Time":"2023-05-31T11:47:55.968105-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.539385       1 shared_informer.go:318] Caches are synced for cidrallocator\n"}
{"Time":"2023-05-31T11:47:55.968106-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.541465       1 shared_informer.go:318] Caches are synced for ReplicationController\n"}
{"Time":"2023-05-31T11:47:55.968108-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.546996       1 shared_informer.go:318] Caches are synced for ReplicaSet\n"}
{"Time":"2023-05-31T11:47:55.968197-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.554410       1 shared_informer.go:318] Caches are synced for HPA\n"}
{"Time":"2023-05-31T11:47:55.968213-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.556585       1 shared_informer.go:318] Caches are synced for disruption\n"}
{"Time":"2023-05-31T11:47:55.968215-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.558734       1 shared_informer.go:318] Caches are synced for crt configmap\n"}
{"Time":"2023-05-31T11:47:55.96822-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.559866       1 shared_informer.go:318] Caches are synced for ephemeral\n"}
{"Time":"2023-05-31T11:47:55.968221-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.561960       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring\n"}
{"Time":"2023-05-31T11:47:55.968223-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.563057       1 shared_informer.go:318] Caches are synced for GC\n"}
{"Time":"2023-05-31T11:47:55.968224-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.564146       1 shared_informer.go:318] Caches are synced for certificate-csrapproving\n"}
{"Time":"2023-05-31T11:47:55.968226-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.566286       1 shared_informer.go:318] Caches are synced for bootstrap_signer\n"}
{"Time":"2023-05-31T11:47:55.968227-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.571659       1 shared_informer.go:318] Caches are synced for job\n"}
{"Time":"2023-05-31T11:47:55.968229-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.573733       1 shared_informer.go:318] Caches are synced for endpoint\n"}
{"Time":"2023-05-31T11:47:55.96823-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.575075       1 shared_informer.go:318] Caches are synced for TTL after finished\n"}
{"Time":"2023-05-31T11:47:55.968232-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.676442       1 shared_informer.go:318] Caches are synced for resource quota\n"}
{"Time":"2023-05-31T11:47:55.968233-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.684732       1 shared_informer.go:318] Caches are synced for resource quota\n"}
{"Time":"2023-05-31T11:47:55.968234-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.686912       1 shared_informer.go:318] Caches are synced for attach detach\n"}
{"Time":"2023-05-31T11:47:55.968236-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.703955       1 shared_informer.go:318] Caches are synced for expand\n"}
{"Time":"2023-05-31T11:47:55.968237-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.718622       1 shared_informer.go:318] Caches are synced for persistent volume\n"}
{"Time":"2023-05-31T11:47:55.968239-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:11.724647       1 shared_informer.go:318] Caches are synced for PV protection\n"}
{"Time":"2023-05-31T11:47:55.96824-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:12.096831       1 shared_informer.go:318] Caches are synced for garbage collector\n"}
{"Time":"2023-05-31T11:47:55.968291-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:12.168970       1 shared_informer.go:318] Caches are synced for garbage collector\n"}
{"Time":"2023-05-31T11:47:55.968297-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:12.169055       1 garbagecollector.go:166] \"All resource monitors have synced. Proceeding to collect garbage\"\n"}
{"Time":"2023-05-31T11:47:55.968301-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.968312-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.968315-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-proxy [8f54741bc2c0] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968319-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:45:59.165025       1 node.go:141] Successfully retrieved node IP: 192.168.105.4\n"}
{"Time":"2023-05-31T11:47:55.968336-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.165077       1 server_others.go:110] \"Detected node IP\" address=\"192.168.105.4\"\n"}
{"Time":"2023-05-31T11:47:55.968339-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.165088       1 server_others.go:551] \"Using iptables proxy\"\n"}
{"Time":"2023-05-31T11:47:55.968341-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.192827       1 server_others.go:176] \"kube-proxy running in single-stack mode: secondary ipFamily is not supported\" ipFamily=IPv6\n"}
{"Time":"2023-05-31T11:47:55.968342-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.192877       1 server_others.go:190] \"Using iptables Proxier\"\n"}
{"Time":"2023-05-31T11:47:55.968344-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.192897       1 proxier.go:253] \"Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses\"\n"}
{"Time":"2023-05-31T11:47:55.968346-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.193477       1 server.go:657] \"Version info\" version=\"v1.27.2\"\n"}
{"Time":"2023-05-31T11:47:55.968347-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.193527       1 server.go:659] \"Golang settings\" GOGC=\"\" GOMAXPROCS=\"\" GOTRACEBACK=\"\"\n"}
{"Time":"2023-05-31T11:47:55.968349-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195463       1 config.go:188] \"Starting service config controller\"\n"}
{"Time":"2023-05-31T11:47:55.96835-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195480       1 shared_informer.go:311] Waiting for caches to sync for service config\n"}
{"Time":"2023-05-31T11:47:55.968352-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195497       1 config.go:97] \"Starting endpoint slice config controller\"\n"}
{"Time":"2023-05-31T11:47:55.968353-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195503       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config\n"}
{"Time":"2023-05-31T11:47:55.968415-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195716       1 config.go:315] \"Starting node config controller\"\n"}
{"Time":"2023-05-31T11:47:55.968419-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.195722       1 shared_informer.go:311] Waiting for caches to sync for node config\n"}
{"Time":"2023-05-31T11:47:55.96842-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.296344       1 shared_informer.go:318] Caches are synced for node config\n"}
{"Time":"2023-05-31T11:47:55.968422-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.296360       1 shared_informer.go:318] Caches are synced for endpoint slice config\n"}
{"Time":"2023-05-31T11:47:55.968423-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.296360       1 shared_informer.go:318] Caches are synced for service config\n"}
{"Time":"2023-05-31T11:47:55.968424-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.968426-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.968427-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-proxy [f455352a1d88] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968429-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:44.300311       1 node.go:141] Successfully retrieved node IP: 192.168.105.4\n"}
{"Time":"2023-05-31T11:47:55.96843-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.300345       1 server_others.go:110] \"Detected node IP\" address=\"192.168.105.4\"\n"}
{"Time":"2023-05-31T11:47:55.968432-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.300357       1 server_others.go:551] \"Using iptables proxy\"\n"}
{"Time":"2023-05-31T11:47:55.968433-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.316124       1 server_others.go:176] \"kube-proxy running in single-stack mode: secondary ipFamily is not supported\" ipFamily=IPv6\n"}
{"Time":"2023-05-31T11:47:55.968435-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.316134       1 server_others.go:190] \"Using iptables Proxier\"\n"}
{"Time":"2023-05-31T11:47:55.968436-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.316161       1 proxier.go:253] \"Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses\"\n"}
{"Time":"2023-05-31T11:47:55.968438-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.321896       1 server.go:657] \"Version info\" version=\"v1.27.2\"\n"}
{"Time":"2023-05-31T11:47:55.96844-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.321906       1 server.go:659] \"Golang settings\" GOGC=\"\" GOMAXPROCS=\"\" GOTRACEBACK=\"\"\n"}
{"Time":"2023-05-31T11:47:55.968441-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322303       1 config.go:188] \"Starting service config controller\"\n"}
{"Time":"2023-05-31T11:47:55.968443-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322321       1 shared_informer.go:311] Waiting for caches to sync for service config\n"}
{"Time":"2023-05-31T11:47:55.968504-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322332       1 config.go:97] \"Starting endpoint slice config controller\"\n"}
{"Time":"2023-05-31T11:47:55.968506-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322334       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config\n"}
{"Time":"2023-05-31T11:47:55.968508-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322666       1 config.go:315] \"Starting node config controller\"\n"}
{"Time":"2023-05-31T11:47:55.968512-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.322670       1 shared_informer.go:311] Waiting for caches to sync for node config\n"}
{"Time":"2023-05-31T11:47:55.968513-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.422927       1 shared_informer.go:318] Caches are synced for node config\n"}
{"Time":"2023-05-31T11:47:55.968514-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.422944       1 shared_informer.go:318] Caches are synced for service config\n"}
{"Time":"2023-05-31T11:47:55.968516-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.422957       1 shared_informer.go:318] Caches are synced for endpoint slice config\n"}
{"Time":"2023-05-31T11:47:55.96852-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.968522-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.968523-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-scheduler [0ad12502565b] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968524-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:45:58.068837       1 serving.go:348] Generated self-signed cert in-memory\n"}
{"Time":"2023-05-31T11:47:55.968526-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:45:59.113783       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'\n"}
{"Time":"2023-05-31T11:47:55.968529-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:45:59.113797       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot get resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:47:55.968531-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:45:59.113802       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.\n"}
{"Time":"2023-05-31T11:47:55.968532-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:45:59.113805       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false\n"}
{"Time":"2023-05-31T11:47:55.968534-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.153827       1 server.go:154] \"Starting Kubernetes Scheduler\" version=\"v1.27.2\"\n"}
{"Time":"2023-05-31T11:47:55.96863-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.153845       1 server.go:156] \"Golang settings\" GOGC=\"\" GOMAXPROCS=\"\" GOTRACEBACK=\"\"\n"}
{"Time":"2023-05-31T11:47:55.968647-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.155161       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259\n"}
{"Time":"2023-05-31T11:47:55.968651-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.155317       1 configmap_cafile_content.go:202] \"Starting controller\" name=\"client-ca::kube-system::extension-apiserver-authentication::client-ca-file\"\n"}
{"Time":"2023-05-31T11:47:55.968656-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.155326       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:47:55.96866-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.155368       1 tlsconfig.go:240] \"Starting DynamicServingCertificateController\"\n"}
{"Time":"2023-05-31T11:47:55.968664-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.256137       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:47:55.968668-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:27.030986       1 secure_serving.go:255] Stopped listening on 127.0.0.1:10259\n"}
{"Time":"2023-05-31T11:47:55.968671-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:27.031008       1 tlsconfig.go:255] \"Shutting down DynamicServingCertificateController\"\n"}
{"Time":"2023-05-31T11:47:55.968687-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:27.031068       1 configmap_cafile_content.go:223] \"Shutting down controller\" name=\"client-ca::kube-system::extension-apiserver-authentication::client-ca-file\"\n"}
{"Time":"2023-05-31T11:47:55.968694-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tE0531 18:46:27.031153       1 run.go:74] \"command failed\" err=\"finished without leader elect\"\n"}
{"Time":"2023-05-31T11:47:55.968697-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.968714-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.968736-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kube-scheduler [0c6723ae1d6f] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968738-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:41.026644       1 serving.go:348] Generated self-signed cert in-memory\n"}
{"Time":"2023-05-31T11:47:55.96874-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:46:43.068892       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'\n"}
{"Time":"2023-05-31T11:47:55.968742-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:46:43.068956       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot get resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:47:55.968744-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:46:43.068977       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.\n"}
{"Time":"2023-05-31T11:47:55.968746-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tW0531 18:46:43.068994       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false\n"}
{"Time":"2023-05-31T11:47:55.968747-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.093916       1 server.go:154] \"Starting Kubernetes Scheduler\" version=\"v1.27.2\"\n"}
{"Time":"2023-05-31T11:47:55.968749-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.094011       1 server.go:156] \"Golang settings\" GOGC=\"\" GOMAXPROCS=\"\" GOTRACEBACK=\"\"\n"}
{"Time":"2023-05-31T11:47:55.96875-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.094905       1 configmap_cafile_content.go:202] \"Starting controller\" name=\"client-ca::kube-system::extension-apiserver-authentication::client-ca-file\"\n"}
{"Time":"2023-05-31T11:47:55.968752-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.094929       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:47:55.968754-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.099339       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259\n"}
{"Time":"2023-05-31T11:47:55.968756-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.099383       1 tlsconfig.go:240] \"Starting DynamicServingCertificateController\"\n"}
{"Time":"2023-05-31T11:47:55.968757-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:43.195355       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:47:55.968759-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.96876-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.968761-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e kubelet \u003c==\n"}
{"Time":"2023-05-31T11:47:55.968763-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:45:05 UTC, ends at Wed 2023-05-31 18:47:55 UTC. --\n"}
{"Time":"2023-05-31T11:47:55.968765-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:44 functional-730000 kubelet[6916]: I0531 18:47:44.588447    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"test-volume\\\" (UniqueName: \\\"kubernetes.io/host-path/677d6f33-8625-43e4-854a-fc4cbc188c23-test-volume\\\") pod \\\"busybox-mount\\\" (UID: \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\") \" pod=\"default/busybox-mount\"\n"}
{"Time":"2023-05-31T11:47:55.968767-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:44 functional-730000 kubelet[6916]: I0531 18:47:44.588581    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"kube-api-access-lqgns\\\" (UniqueName: \\\"kubernetes.io/projected/677d6f33-8625-43e4-854a-fc4cbc188c23-kube-api-access-lqgns\\\") pod \\\"busybox-mount\\\" (UID: \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\") \" pod=\"default/busybox-mount\"\n"}
{"Time":"2023-05-31T11:47:55.968832-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:44 functional-730000 kubelet[6916]: I0531 18:47:44.830552    6916 scope.go:115] \"RemoveContainer\" containerID=\"2e3db69a2f3f1dc91b037558099c29ecfd94b363cd23134c85049dab9973c50a\"\n"}
{"Time":"2023-05-31T11:47:55.968835-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:44 functional-730000 kubelet[6916]: I0531 18:47:44.830786    6916 scope.go:115] \"RemoveContainer\" containerID=\"b37ab09b2fdc56ba62e72f3ac946cc58e87ae29ef3a5321bfd8109b6978e81a0\"\n"}
{"Time":"2023-05-31T11:47:55.968837-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:44 functional-730000 kubelet[6916]: E0531 18:47:44.830907    6916 pod_workers.go:1294] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"echoserver-arm\\\" with CrashLoopBackOff: \\\"back-off 20s restarting failed container=echoserver-arm pod=hello-node-connect-58d66798bb-stzzj_default(a120ea47-9aab-4f46-a7f1-0defe24bb54b)\\\"\" pod=\"default/hello-node-connect-58d66798bb-stzzj\" podUID=a120ea47-9aab-4f46-a7f1-0defe24bb54b\n"}
{"Time":"2023-05-31T11:47:55.968839-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.129980    6916 reconciler_common.go:172] \"operationExecutor.UnmountVolume started for volume \\\"test-volume\\\" (UniqueName: \\\"kubernetes.io/host-path/677d6f33-8625-43e4-854a-fc4cbc188c23-test-volume\\\") pod \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\" (UID: \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\") \"\n"}
{"Time":"2023-05-31T11:47:55.968842-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.130026    6916 reconciler_common.go:172] \"operationExecutor.UnmountVolume started for volume \\\"kube-api-access-lqgns\\\" (UniqueName: \\\"kubernetes.io/projected/677d6f33-8625-43e4-854a-fc4cbc188c23-kube-api-access-lqgns\\\") pod \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\" (UID: \\\"677d6f33-8625-43e4-854a-fc4cbc188c23\\\") \"\n"}
{"Time":"2023-05-31T11:47:55.968845-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.130219    6916 operation_generator.go:878] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/host-path/677d6f33-8625-43e4-854a-fc4cbc188c23-test-volume\" (OuterVolumeSpecName: \"test-volume\") pod \"677d6f33-8625-43e4-854a-fc4cbc188c23\" (UID: \"677d6f33-8625-43e4-854a-fc4cbc188c23\"). InnerVolumeSpecName \"test-volume\". PluginName \"kubernetes.io/host-path\", VolumeGidValue \"\"\n"}
{"Time":"2023-05-31T11:47:55.968847-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.132716    6916 operation_generator.go:878] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/projected/677d6f33-8625-43e4-854a-fc4cbc188c23-kube-api-access-lqgns\" (OuterVolumeSpecName: \"kube-api-access-lqgns\") pod \"677d6f33-8625-43e4-854a-fc4cbc188c23\" (UID: \"677d6f33-8625-43e4-854a-fc4cbc188c23\"). InnerVolumeSpecName \"kube-api-access-lqgns\". PluginName \"kubernetes.io/projected\", VolumeGidValue \"\"\n"}
{"Time":"2023-05-31T11:47:55.968957-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.230592    6916 reconciler_common.go:300] \"Volume detached for volume \\\"test-volume\\\" (UniqueName: \\\"kubernetes.io/host-path/677d6f33-8625-43e4-854a-fc4cbc188c23-test-volume\\\") on node \\\"functional-730000\\\" DevicePath \\\"\\\"\"\n"}
{"Time":"2023-05-31T11:47:55.968959-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.230612    6916 reconciler_common.go:300] \"Volume detached for volume \\\"kube-api-access-lqgns\\\" (UniqueName: \\\"kubernetes.io/projected/677d6f33-8625-43e4-854a-fc4cbc188c23-kube-api-access-lqgns\\\") on node \\\"functional-730000\\\" DevicePath \\\"\\\"\"\n"}
{"Time":"2023-05-31T11:47:55.968962-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:49 functional-730000 kubelet[6916]: I0531 18:47:49.917954    6916 pod_container_deletor.go:80] \"Container not found in pod's containers\" containerID=\"bc2e6dff9ee8b7378b8e04b806e374d29db5346cc7343c2e8d15238df40815dc\"\n"}
{"Time":"2023-05-31T11:47:55.968963-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.684458    6916 topology_manager.go:212] \"Topology Admit Handler\"\n"}
{"Time":"2023-05-31T11:47:55.968965-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: E0531 18:47:52.684491    6916 cpu_manager.go:395] \"RemoveStaleState: removing container\" podUID=\"677d6f33-8625-43e4-854a-fc4cbc188c23\" containerName=\"mount-munger\"\n"}
{"Time":"2023-05-31T11:47:55.968967-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.684506    6916 memory_manager.go:346] \"RemoveStaleState removing state\" podUID=\"677d6f33-8625-43e4-854a-fc4cbc188c23\" containerName=\"mount-munger\"\n"}
{"Time":"2023-05-31T11:47:55.968969-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.695748    6916 topology_manager.go:212] \"Topology Admit Handler\"\n"}
{"Time":"2023-05-31T11:47:55.96897-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.718863    6916 scope.go:115] \"RemoveContainer\" containerID=\"0d5cc7fd69896ae84ca28f568192f1353f60819a6d2ac6aae4ef21eb00decfa9\"\n"}
{"Time":"2023-05-31T11:47:55.968972-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.857815    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"tmp-volume\\\" (UniqueName: \\\"kubernetes.io/empty-dir/4b377b21-be99-4a91-9afd-1ca3c3d586bd-tmp-volume\\\") pod \\\"kubernetes-dashboard-5c5cfc8747-v249w\\\" (UID: \\\"4b377b21-be99-4a91-9afd-1ca3c3d586bd\\\") \" pod=\"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747-v249w\"\n"}
{"Time":"2023-05-31T11:47:55.968975-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.857842    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"kube-api-access-vbz6f\\\" (UniqueName: \\\"kubernetes.io/projected/4b377b21-be99-4a91-9afd-1ca3c3d586bd-kube-api-access-vbz6f\\\") pod \\\"kubernetes-dashboard-5c5cfc8747-v249w\\\" (UID: \\\"4b377b21-be99-4a91-9afd-1ca3c3d586bd\\\") \" pod=\"kubernetes-dashboard/kubernetes-dashboard-5c5cfc8747-v249w\"\n"}
{"Time":"2023-05-31T11:47:55.96903-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.857855    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"tmp-volume\\\" (UniqueName: \\\"kubernetes.io/empty-dir/62599766-31ba-4060-b0d9-f944ca3864ec-tmp-volume\\\") pod \\\"dashboard-metrics-scraper-5dd9cbfd69-f2kgx\\\" (UID: \\\"62599766-31ba-4060-b0d9-f944ca3864ec\\\") \" pod=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69-f2kgx\"\n"}
{"Time":"2023-05-31T11:47:55.969046-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.857865    6916 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"kube-api-access-mn4kb\\\" (UniqueName: \\\"kubernetes.io/projected/62599766-31ba-4060-b0d9-f944ca3864ec-kube-api-access-mn4kb\\\") pod \\\"dashboard-metrics-scraper-5dd9cbfd69-f2kgx\\\" (UID: \\\"62599766-31ba-4060-b0d9-f944ca3864ec\\\") \" pod=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69-f2kgx\"\n"}
{"Time":"2023-05-31T11:47:55.969051-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.938370    6916 scope.go:115] \"RemoveContainer\" containerID=\"0d5cc7fd69896ae84ca28f568192f1353f60819a6d2ac6aae4ef21eb00decfa9\"\n"}
{"Time":"2023-05-31T11:47:55.969057-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: I0531 18:47:52.938552    6916 scope.go:115] \"RemoveContainer\" containerID=\"ed99806330001ee36b648790874659b678081e3992fb4fba54eb2ea94b54d211\"\n"}
{"Time":"2023-05-31T11:47:55.969062-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:52 functional-730000 kubelet[6916]: E0531 18:47:52.938653    6916 pod_workers.go:1294] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"echoserver-arm\\\" with CrashLoopBackOff: \\\"back-off 40s restarting failed container=echoserver-arm pod=hello-node-7b684b55f9-7pbws_default(d8491b04-6efb-4030-b764-a46c6a800ab8)\\\"\" pod=\"default/hello-node-7b684b55f9-7pbws\" podUID=d8491b04-6efb-4030-b764-a46c6a800ab8\n"}
{"Time":"2023-05-31T11:47:55.969068-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tMay 31 18:47:55 functional-730000 kubelet[6916]: I0531 18:47:55.980246    6916 pod_startup_latency_tracker.go:102] \"Observed pod startup duration\" pod=\"kubernetes-dashboard/dashboard-metrics-scraper-5dd9cbfd69-f2kgx\" podStartSLOduration=2.066983042 podCreationTimestamp=\"2023-05-31 18:47:52 +0000 UTC\" firstStartedPulling=\"2023-05-31 18:47:53.246388873 +0000 UTC m=+73.582479492\" lastFinishedPulling=\"2023-05-31 18:47:55.159628375 +0000 UTC m=+75.495719035\" observedRunningTime=\"2023-05-31 18:47:55.979670839 +0000 UTC m=+76.315761500\" watchObservedRunningTime=\"2023-05-31 18:47:55.980222585 +0000 UTC m=+76.316313245\"\n"}
{"Time":"2023-05-31T11:47:55.969078-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.969081-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.969084-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e storage-provisioner [3e36a86f0648] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.969188-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:46:44.341023       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...\n"}
{"Time":"2023-05-31T11:47:55.969193-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.345277       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!\n"}
{"Time":"2023-05-31T11:47:55.969197-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:44.345355       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...\n"}
{"Time":"2023-05-31T11:47:55.969201-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:01.752951       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath\n"}
{"Time":"2023-05-31T11:47:55.969205-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:01.753403       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_functional-730000_0820b921-4b24-44a1-ba2e-ee507ee640b5!\n"}
{"Time":"2023-05-31T11:47:55.969209-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:01.754675       1 event.go:282] Event(v1.ObjectReference{Kind:\"Endpoints\", Namespace:\"kube-system\", Name:\"k8s.io-minikube-hostpath\", UID:\"40568059-af79-4f74-9d88-76e9b9b298ab\", APIVersion:\"v1\", ResourceVersion:\"605\", FieldPath:\"\"}): type: 'Normal' reason: 'LeaderElection' functional-730000_0820b921-4b24-44a1-ba2e-ee507ee640b5 became leader\n"}
{"Time":"2023-05-31T11:47:55.969214-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:01.854154       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_functional-730000_0820b921-4b24-44a1-ba2e-ee507ee640b5!\n"}
{"Time":"2023-05-31T11:47:55.969218-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.729427       1 controller.go:1332] provision \"default/myclaim\" class \"standard\": started\n"}
{"Time":"2023-05-31T11:47:55.969235-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.729456       1 storage_provisioner.go:61] Provisioning volume {\u0026StorageClass{ObjectMeta:{standard    9a347bc9-a6eb-4659-8168-25d5b6ae3e02 382 0 2023-05-31 18:45:38 +0000 UTC \u003cnil\u003e \u003cnil\u003e map[addonmanager.kubernetes.io/mode:EnsureExists] map[kubectl.kubernetes.io/last-applied-configuration:{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"standard\"},\"provisioner\":\"k8s.io/minikube-hostpath\"}\n"}
{"Time":"2023-05-31T11:47:55.969241-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t storageclass.kubernetes.io/is-default-class:true] [] []  [{kubectl-client-side-apply Update storage.k8s.io/v1 2023-05-31 18:45:38 +0000 UTC FieldsV1 {\"f:metadata\":{\"f:annotations\":{\".\":{},\"f:kubectl.kubernetes.io/last-applied-configuration\":{},\"f:storageclass.kubernetes.io/is-default-class\":{}},\"f:labels\":{\".\":{},\"f:addonmanager.kubernetes.io/mode\":{}}},\"f:provisioner\":{},\"f:reclaimPolicy\":{},\"f:volumeBindingMode\":{}}}]},Provisioner:k8s.io/minikube-hostpath,Parameters:map[string]string{},ReclaimPolicy:*Delete,MountOptions:[],AllowVolumeExpansion:nil,VolumeBindingMode:*Immediate,AllowedTopologies:[]TopologySelectorTerm{},} pvc-46f972da-e59f-4ed0-b609-eb99ad89d1a9 \u0026PersistentVolumeClaim{ObjectMeta:{myclaim  default  46f972da-e59f-4ed0-b609-eb99ad89d1a9 674 0 2023-05-31 18:47:23 +0000 UTC \u003cnil\u003e \u003cnil\u003e map[] map[kubectl.kubernetes.io/last-applied-configuration:{\"apiVersion\":\"v1\",\"kind\":\"PersistentVolumeClaim\",\"metadata\":{\"annotations\":{},\"name\":\"myclaim\",\"namespace\":\"default\"},\"spec\":{\"accessModes\":[\"Rea"}
{"Time":"2023-05-31T11:47:55.969245-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"dWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"500Mi\"}},\"volumeMode\":\"Filesystem\"}}\n"}
{"Time":"2023-05-31T11:47:55.969248-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t volume.beta.kubernetes.io/storage-provisioner:k8s.io/minikube-hostpath volume.kubernetes.io/storage-provisioner:k8s.io/minikube-hostpath] [] [kubernetes.io/pvc-protection]  [{kube-controller-manager Update v1 2023-05-31 18:47:23 +0000 UTC FieldsV1 {\"f:metadata\":{\"f:annotations\":{\"f:volume.beta.kubernetes.io/storage-provisioner\":{},\"f:volume.kubernetes.io/storage-provisioner\":{}}}}} {kubectl-client-side-apply Update v1 2023-05-31 18:47:23 +0000 UTC FieldsV1 {\"f:metadata\":{\"f:annotations\":{\".\":{},\"f:kubectl.kubernetes.io/last-applied-configuration\":{}}},\"f:spec\":{\"f:accessModes\":{},\"f:resources\":{\"f:requests\":{\".\":{},\"f:storage\":{}}},\"f:volumeMode\":{}}}}]},Spec:PersistentVolumeClaimSpec{AccessModes:[ReadWriteOnce],Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{storage: {{524288000 0} {\u003cnil\u003e} 500Mi BinarySI},},},VolumeName:,Selector:nil,StorageClassName:*standard,VolumeMode:*Filesystem,DataSource:nil,},Status:PersistentVolumeClaimStatus{Phase:Pending,AccessModes:[],Capacity:"}
{"Time":"2023-05-31T11:47:55.96925-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"ResourceList{},Conditions:[]PersistentVolumeClaimCondition{},},} nil} to /tmp/hostpath-provisioner/default/myclaim\n"}
{"Time":"2023-05-31T11:47:55.969254-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.730312       1 event.go:282] Event(v1.ObjectReference{Kind:\"PersistentVolumeClaim\", Namespace:\"default\", Name:\"myclaim\", UID:\"46f972da-e59f-4ed0-b609-eb99ad89d1a9\", APIVersion:\"v1\", ResourceVersion:\"674\", FieldPath:\"\"}): type: 'Normal' reason: 'Provisioning' External provisioner is provisioning volume for claim \"default/myclaim\"\n"}
{"Time":"2023-05-31T11:47:55.969256-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.730496       1 controller.go:1439] provision \"default/myclaim\" class \"standard\": volume \"pvc-46f972da-e59f-4ed0-b609-eb99ad89d1a9\" provisioned\n"}
{"Time":"2023-05-31T11:47:55.969258-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.730534       1 controller.go:1456] provision \"default/myclaim\" class \"standard\": succeeded\n"}
{"Time":"2023-05-31T11:47:55.96926-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.730542       1 volume_store.go:212] Trying to save persistentvolume \"pvc-46f972da-e59f-4ed0-b609-eb99ad89d1a9\"\n"}
{"Time":"2023-05-31T11:47:55.969261-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.735128       1 volume_store.go:219] persistentvolume \"pvc-46f972da-e59f-4ed0-b609-eb99ad89d1a9\" saved\n"}
{"Time":"2023-05-31T11:47:55.969323-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:47:23.735433       1 event.go:282] Event(v1.ObjectReference{Kind:\"PersistentVolumeClaim\", Namespace:\"default\", Name:\"myclaim\", UID:\"46f972da-e59f-4ed0-b609-eb99ad89d1a9\", APIVersion:\"v1\", ResourceVersion:\"674\", FieldPath:\"\"}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-46f972da-e59f-4ed0-b609-eb99ad89d1a9\n"}
{"Time":"2023-05-31T11:47:55.96933-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.969368-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* \n"}
{"Time":"2023-05-31T11:47:55.96937-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* ==\u003e storage-provisioner [45299a343d09] \u003c==\n"}
{"Time":"2023-05-31T11:47:55.969372-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t* I0531 18:45:58.229218       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...\n"}
{"Time":"2023-05-31T11:47:55.969374-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.153554       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!\n"}
{"Time":"2023-05-31T11:47:55.969375-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:45:59.153578       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...\n"}
{"Time":"2023-05-31T11:47:55.969377-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:16.563625       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath\n"}
{"Time":"2023-05-31T11:47:55.969379-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:16.564304       1 event.go:282] Event(v1.ObjectReference{Kind:\"Endpoints\", Namespace:\"kube-system\", Name:\"k8s.io-minikube-hostpath\", UID:\"40568059-af79-4f74-9d88-76e9b9b298ab\", APIVersion:\"v1\", ResourceVersion:\"507\", FieldPath:\"\"}): type: 'Normal' reason: 'LeaderElection' functional-730000_b8828355-58cb-47e5-882c-e6f188ae8c85 became leader\n"}
{"Time":"2023-05-31T11:47:55.969381-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:16.564422       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_functional-730000_b8828355-58cb-47e5-882c-e6f188ae8c85!\n"}
{"Time":"2023-05-31T11:47:55.969383-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tI0531 18:46:16.665069       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_functional-730000_b8828355-58cb-47e5-882c-e6f188ae8c85!\n"}
{"Time":"2023-05-31T11:47:55.969384-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t\n"}
{"Time":"2023-05-31T11:47:55.969386-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \n"}
{"Time":"2023-05-31T11:47:55.969387-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:55.969388-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:254: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.APIServer}} -p functional-730000 -n functional-730000\n"}
{"Time":"2023-05-31T11:47:56.048695-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:261: (dbg) Run:  kubectl --context functional-730000 get po -o=jsonpath={.items[*].metadata.name} -A --field-selector=status.phase!=Running\n"}
{"Time":"2023-05-31T11:47:56.085127-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:272: non-running pods: busybox-mount kubernetes-dashboard-5c5cfc8747-v249w\n"}
{"Time":"2023-05-31T11:47:56.085143-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:274: ======\u003e post-mortem[TestFunctional/parallel/ServiceCmdConnect]: describe non-running pods \u003c======\n"}
{"Time":"2023-05-31T11:47:56.085275-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:277: (dbg) Run:  kubectl --context functional-730000 describe pod busybox-mount kubernetes-dashboard-5c5cfc8747-v249w\n"}
{"Time":"2023-05-31T11:47:56.127215-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:277: (dbg) Non-zero exit: kubectl --context functional-730000 describe pod busybox-mount kubernetes-dashboard-5c5cfc8747-v249w: exit status 1 (41.745708ms)\n"}
{"Time":"2023-05-31T11:47:56.12723-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.127232-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:47:56.127234-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tName:             busybox-mount\n"}
{"Time":"2023-05-31T11:47:56.127235-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tNamespace:        default\n"}
{"Time":"2023-05-31T11:47:56.127237-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tPriority:         0\n"}
{"Time":"2023-05-31T11:47:56.127238-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tService Account:  default\n"}
{"Time":"2023-05-31T11:47:56.127239-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tNode:             functional-730000/192.168.105.4\n"}
{"Time":"2023-05-31T11:47:56.127241-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tStart Time:       Wed, 31 May 2023 11:47:44 -0700\n"}
{"Time":"2023-05-31T11:47:56.127242-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tLabels:           integration-test=busybox-mount\n"}
{"Time":"2023-05-31T11:47:56.127244-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tAnnotations:      \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.127245-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tStatus:           Succeeded\n"}
{"Time":"2023-05-31T11:47:56.127246-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tIP:               10.244.0.10\n"}
{"Time":"2023-05-31T11:47:56.127247-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tIPs:\n"}
{"Time":"2023-05-31T11:47:56.127249-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  IP:  10.244.0.10\n"}
{"Time":"2023-05-31T11:47:56.12725-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tContainers:\n"}
{"Time":"2023-05-31T11:47:56.127251-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  mount-munger:\n"}
{"Time":"2023-05-31T11:47:56.127252-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Container ID:  docker://387d64203306d5df1049d0fe0a626f3aa42d951a063e767e3496cae5b7458bc8\n"}
{"Time":"2023-05-31T11:47:56.127254-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Image:         gcr.io/k8s-minikube/busybox:1.28.4-glibc\n"}
{"Time":"2023-05-31T11:47:56.127256-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Image ID:      docker-pullable://gcr.io/k8s-minikube/busybox@sha256:2d03e6ceeb99250061dd110530b0ece7998cd84121f952adef120ea7c5a6f00e\n"}
{"Time":"2023-05-31T11:47:56.127257-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Port:          \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.127258-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Host Port:     \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.12726-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Command:\n"}
{"Time":"2023-05-31T11:47:56.127261-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      /bin/sh\n"}
{"Time":"2023-05-31T11:47:56.127262-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      -c\n"}
{"Time":"2023-05-31T11:47:56.127269-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      --\n"}
{"Time":"2023-05-31T11:47:56.127271-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Args:\n"}
{"Time":"2023-05-31T11:47:56.127272-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      cat /mount-9p/created-by-test; echo test \u003e /mount-9p/created-by-pod; rm /mount-9p/created-by-test-removed-by-pod; echo test \u003e /mount-9p/created-by-pod-removed-by-test date \u003e\u003e /mount-9p/pod-dates\n"}
{"Time":"2023-05-31T11:47:56.127274-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    State:          Terminated\n"}
{"Time":"2023-05-31T11:47:56.127275-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      Reason:       Completed\n"}
{"Time":"2023-05-31T11:47:56.127276-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      Exit Code:    0\n"}
{"Time":"2023-05-31T11:47:56.127278-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      Started:      Wed, 31 May 2023 11:47:47 -0700\n"}
{"Time":"2023-05-31T11:47:56.127279-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      Finished:     Wed, 31 May 2023 11:47:47 -0700\n"}
{"Time":"2023-05-31T11:47:56.12728-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Ready:          False\n"}
{"Time":"2023-05-31T11:47:56.127282-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Restart Count:  0\n"}
{"Time":"2023-05-31T11:47:56.127283-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Environment:    \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.127284-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Mounts:\n"}
{"Time":"2023-05-31T11:47:56.127286-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      /mount-9p from test-volume (rw)\n"}
{"Time":"2023-05-31T11:47:56.127287-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-lqgns (ro)\n"}
{"Time":"2023-05-31T11:47:56.127289-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tConditions:\n"}
{"Time":"2023-05-31T11:47:56.12729-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Type              Status\n"}
{"Time":"2023-05-31T11:47:56.127291-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Initialized       True \n"}
{"Time":"2023-05-31T11:47:56.127292-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Ready             False \n"}
{"Time":"2023-05-31T11:47:56.127294-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ContainersReady   False \n"}
{"Time":"2023-05-31T11:47:56.127295-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  PodScheduled      True \n"}
{"Time":"2023-05-31T11:47:56.127296-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tVolumes:\n"}
{"Time":"2023-05-31T11:47:56.127297-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  test-volume:\n"}
{"Time":"2023-05-31T11:47:56.127299-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Type:          HostPath (bare host directory volume)\n"}
{"Time":"2023-05-31T11:47:56.1273-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Path:          /mount-9p\n"}
{"Time":"2023-05-31T11:47:56.127301-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    HostPathType:  \n"}
{"Time":"2023-05-31T11:47:56.127302-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  kube-api-access-lqgns:\n"}
{"Time":"2023-05-31T11:47:56.127304-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    Type:                    Projected (a volume that contains injected data from multiple sources)\n"}
{"Time":"2023-05-31T11:47:56.127305-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    TokenExpirationSeconds:  3607\n"}
{"Time":"2023-05-31T11:47:56.127306-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    ConfigMapName:           kube-root-ca.crt\n"}
{"Time":"2023-05-31T11:47:56.127308-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    ConfigMapOptional:       \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:47:56.127309-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t    DownwardAPI:             true\n"}
{"Time":"2023-05-31T11:47:56.127311-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tQoS Class:                   BestEffort\n"}
{"Time":"2023-05-31T11:47:56.127312-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tNode-Selectors:              \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.127313-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n"}
{"Time":"2023-05-31T11:47:56.127315-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\n"}
{"Time":"2023-05-31T11:47:56.127316-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tEvents:\n"}
{"Time":"2023-05-31T11:47:56.127317-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Type    Reason     Age   From               Message\n"}
{"Time":"2023-05-31T11:47:56.127319-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  ----    ------     ----  ----               -------\n"}
{"Time":"2023-05-31T11:47:56.12732-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Scheduled  11s   default-scheduler  Successfully assigned default/busybox-mount to functional-730000\n"}
{"Time":"2023-05-31T11:47:56.127324-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Pulling    11s   kubelet            Pulling image \"gcr.io/k8s-minikube/busybox:1.28.4-glibc\"\n"}
{"Time":"2023-05-31T11:47:56.127326-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Pulled     9s    kubelet            Successfully pulled image \"gcr.io/k8s-minikube/busybox:1.28.4-glibc\" in 1.941255856s (1.941264981s including waiting)\n"}
{"Time":"2023-05-31T11:47:56.127327-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Created    9s    kubelet            Created container mount-munger\n"}
{"Time":"2023-05-31T11:47:56.127329-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \t  Normal  Started    9s    kubelet            Started container mount-munger\n"}
{"Time":"2023-05-31T11:47:56.12733-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.127331-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:47:56.127332-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:56.127334-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \tError from server (NotFound): pods \"kubernetes-dashboard-5c5cfc8747-v249w\" not found\n"}
{"Time":"2023-05-31T11:47:56.127335-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.127336-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:56.127338-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"    helpers_test.go:279: kubectl --context functional-730000 describe pod busybox-mount kubernetes-dashboard-5c5cfc8747-v249w: exit status 1\n"}
{"Time":"2023-05-31T11:47:56.12734-07:00","Action":"cont","Test":"TestFunctional/parallel/Version/short"}
{"Time":"2023-05-31T11:47:56.127346-07:00","Action":"output","Test":"TestFunctional/parallel/Version/short","Output":"=== CONT  TestFunctional/parallel/Version/short\n"}
{"Time":"2023-05-31T11:47:56.127349-07:00","Action":"output","Test":"TestFunctional/parallel/Version/short","Output":"    functional_test.go:2251: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 version --short\n"}
{"Time":"2023-05-31T11:47:56.163941-07:00","Action":"cont","Test":"TestFunctional/parallel/Version/components"}
{"Time":"2023-05-31T11:47:56.163955-07:00","Action":"output","Test":"TestFunctional/parallel/Version/components","Output":"=== CONT  TestFunctional/parallel/Version/components\n"}
{"Time":"2023-05-31T11:47:56.163971-07:00","Action":"output","Test":"TestFunctional/parallel/Version/components","Output":"    functional_test.go:2265: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 version -o=json --components\n"}
{"Time":"2023-05-31T11:47:56.329571-07:00","Action":"cont","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes"}
{"Time":"2023-05-31T11:47:56.329586-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Output":"=== CONT  TestFunctional/parallel/UpdateContextCmd/no_changes\n"}
{"Time":"2023-05-31T11:47:56.329647-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Output":"    functional_test.go:2114: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 update-context --alsologtostderr -v=2\n"}
{"Time":"2023-05-31T11:47:56.374476-07:00","Action":"cont","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters"}
{"Time":"2023-05-31T11:47:56.37449-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Output":"=== CONT  TestFunctional/parallel/UpdateContextCmd/no_clusters\n"}
{"Time":"2023-05-31T11:47:56.374696-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Output":"    functional_test.go:2114: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 update-context --alsologtostderr -v=2\n"}
{"Time":"2023-05-31T11:47:56.423572-07:00","Action":"cont","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster"}
{"Time":"2023-05-31T11:47:56.423588-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Output":"=== CONT  TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster\n"}
{"Time":"2023-05-31T11:47:56.423748-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Output":"    functional_test.go:2114: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 update-context --alsologtostderr -v=2\n"}
{"Time":"2023-05-31T11:47:56.473582-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands/ImageListShort"}
{"Time":"2023-05-31T11:47:56.473595-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"=== CONT  TestFunctional/parallel/ImageCommands/ImageListShort\n"}
{"Time":"2023-05-31T11:47:56.473707-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"    functional_test.go:259: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls --format short --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:56.551621-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"    functional_test.go:264: (dbg) Stdout: out/minikube-darwin-arm64 -p functional-730000 image ls --format short --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.551637-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:47:56.551639-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:47:56.551641-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/pause:3.3\n"}
{"Time":"2023-05-31T11:47:56.551642-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/pause:3.1\n"}
{"Time":"2023-05-31T11:47:56.551644-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551645-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551647-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551653-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551655-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:47:56.551656-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/echoserver-arm:1.8\n"}
{"Time":"2023-05-31T11:47:56.551658-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        registry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:47:56.551663-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:47:56.551664-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        gcr.io/k8s-minikube/busybox:1.28.4-glibc\n"}
{"Time":"2023-05-31T11:47:56.551666-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:56.551685-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        docker.io/library/nginx:latest\n"}
{"Time":"2023-05-31T11:47:56.551687-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        docker.io/library/nginx:alpine\n"}
{"Time":"2023-05-31T11:47:56.551688-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        docker.io/library/minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:47:56.55169-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        docker.io/kubernetesui/metrics-scraper:\u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.551693-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"    functional_test.go:267: (dbg) Stderr: out/minikube-darwin-arm64 -p functional-730000 image ls --format short --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.551694-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502095    2171 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:56.551696-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502481    2171 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.551697-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502485    2171 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:56.551699-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502487    2171 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.5517-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502557    2171 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:56.551702-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.502948    2171 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551704-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.503007    2171 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.551705-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.503896    2171 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:47:56.55171-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.503907    2171 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.4 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:47:56.551712-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"        I0531 11:47:56.536630    2171 ssh_runner.go:195] Run: docker images --no-trunc --format \"{{json .}}\"\n"}
{"Time":"2023-05-31T11:47:56.551735-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands/ImageListJson"}
{"Time":"2023-05-31T11:47:56.551736-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"=== CONT  TestFunctional/parallel/ImageCommands/ImageListJson\n"}
{"Time":"2023-05-31T11:47:56.551774-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"    functional_test.go:259: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls --format json --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:56.625515-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"    functional_test.go:264: (dbg) Stdout: out/minikube-darwin-arm64 -p functional-730000 image ls --format json --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.625532-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        [{\"id\":\"5ee47dcca7543750b3941b52e98f103bbbae9aaf574ab4dc018e1e7d34e505ad\",\"repoDigests\":[],\"repoTags\":[\"docker.io/library/nginx:alpine\"],\"size\":\"41000000\"},{\"id\":\"305d7ed1dae2877c3a80d434c5fb9f1aac1aa3d2431c36130a3fcd1970e93840\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/kube-scheduler:v1.27.2\"],\"size\":\"56200000\"},{\"id\":\"97e04611ad43405a2e5863ae17c6f1bc9181bdefdaa78627c432ef754a4eb108\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/coredns/coredns:v1.10.1\"],\"size\":\"51400000\"},{\"id\":\"24bc64e911039ecf00e263be2161797c758b7d82403ca5516ab64047a477f737\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/etcd:3.5.7-0\"],\"size\":\"181000000\"},{\"id\":\"ba04bb24b95753201135cbc420b233c1b0b9fa2e1fd21d28319c348c33fbcde6\",\"repoDigests\":[],\"repoTags\":[\"gcr.io/k8s-minikube/storage-provisioner:v5\"],\"size\":\"29000000\"},{\"id\":\"72c9df6be7f1b997e4a31b5cb9aa7262e5278905af97e6a69e341e3f0f9bbaae\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/kube-apiserver:v1.27.2\"],\"size\":\"115000000\"},{\"id\":\"29921a084542255eb81a1a660a603b1a24636d88b"}
{"Time":"2023-05-31T11:47:56.625537-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"202f9010daae75fa32754c0\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/kube-proxy:v1.27.2\"],\"size\":\"66500000\"},{\"id\":\"8057e0500773a37cde2cff041eb13ebd68c748419a2fbfd1dfb5bf38696cc8e5\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/pause:3.1\"],\"size\":\"525000\"},{\"id\":\"a422e0e982356f6c1cf0e5bb7b733363caae3992a07c99951fbcc73e58ed656a\",\"repoDigests\":[],\"repoTags\":[\"docker.io/kubernetesui/metrics-scraper:\\u003cnone\\u003e\"],\"size\":\"42300000\"},{\"id\":\"ffd4cfbbe753e62419e129ee2ac618beb94e51baa7471df5038b0b516b59cf91\",\"repoDigests\":[],\"repoTags\":[\"gcr.io/google-containers/addon-resizer:functional-730000\"],\"size\":\"32900000\"},{\"id\":\"1611cd07b61d57dbbfebe6db242513fd51e1c02d20ba08af17a45837d86a8a8c\",\"repoDigests\":[],\"repoTags\":[\"gcr.io/k8s-minikube/busybox:1.28.4-glibc\"],\"size\":\"3550000\"},{\"id\":\"72565bf5bbedfb62e9d21afa2b1221b2c7a5e05b746dae33430bc550d3f87beb\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/echoserver-arm:1.8\"],\"size\":\"85000000\"},{\"id\":\"8cb2091f603e75187e2f6226c5901d12e00b1d1f778c6471ae4578e8a1c4724a\",\"repoDig"}
{"Time":"2023-05-31T11:47:56.625546-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"ests\":[],\"repoTags\":[\"registry.k8s.io/pause:latest\"],\"size\":\"240000\"},{\"id\":\"8a6c1b85c0427dbbec58178318e5303e0f104c0da77d16e6996b89b76164db7b\",\"repoDigests\":[],\"repoTags\":[\"docker.io/library/minikube-local-cache-test:functional-730000\"],\"size\":\"30\"},{\"id\":\"c42efe0b54387756e68d167a437aef21451f63eebd9330bb555367d67128386c\",\"repoDigests\":[],\"repoTags\":[\"docker.io/library/nginx:latest\"],\"size\":\"135000000\"},{\"id\":\"2ee705380c3c59a538b853cbe9ae9886ebbd0001a4cea4add5adeea48e5f48d4\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/kube-controller-manager:v1.27.2\"],\"size\":\"107000000\"},{\"id\":\"829e9de338bd5fdd3f16f68f83a9fb288fbc8453e881e5d5cfd0f6f2ff72b43e\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/pause:3.9\"],\"size\":\"514000\"},{\"id\":\"3d18732f8686cc3c878055d99a05fa80289502fa496b36b6a0fe0f77206a7300\",\"repoDigests\":[],\"repoTags\":[\"registry.k8s.io/pause:3.3\"],\"size\":\"484000\"}]\n"}
{"Time":"2023-05-31T11:47:56.625552-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"    functional_test.go:267: (dbg) Stderr: out/minikube-darwin-arm64 -p functional-730000 image ls --format json --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.625553-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.578390    2173 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:56.625555-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.578538    2173 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.625556-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.578542    2173 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:56.625558-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.578544    2173 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.62556-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.578618    2173 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:56.625562-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.579006    2173 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.625564-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.579063    2173 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.625565-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.579823    2173 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:47:56.625567-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.579832    2173 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.4 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:47:56.625569-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"        I0531 11:47:56.611249    2173 ssh_runner.go:195] Run: docker images --no-trunc --format \"{{json .}}\"\n"}
{"Time":"2023-05-31T11:47:56.625615-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands/ImageListTable"}
{"Time":"2023-05-31T11:47:56.625617-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"=== CONT  TestFunctional/parallel/ImageCommands/ImageListTable\n"}
{"Time":"2023-05-31T11:47:56.62562-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"    functional_test.go:259: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls --format table --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:56.714616-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"    functional_test.go:264: (dbg) Stdout: out/minikube-darwin-arm64 -p functional-730000 image ls --format table --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.71463-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        |---------------------------------------------|-------------------|---------------|--------|\n"}
{"Time":"2023-05-31T11:47:56.714632-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        |                    Image                    |        Tag        |   Image ID    |  Size  |\n"}
{"Time":"2023-05-31T11:47:56.714633-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        |---------------------------------------------|-------------------|---------------|--------|\n"}
{"Time":"2023-05-31T11:47:56.714635-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/kube-controller-manager     | v1.27.2           | 2ee705380c3c5 | 107MB  |\n"}
{"Time":"2023-05-31T11:47:56.714636-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/kube-proxy                  | v1.27.2           | 29921a0845422 | 66.5MB |\n"}
{"Time":"2023-05-31T11:47:56.714638-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | docker.io/library/nginx                     | alpine            | 5ee47dcca7543 | 41MB   |\n"}
{"Time":"2023-05-31T11:47:56.714639-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/kube-apiserver              | v1.27.2           | 72c9df6be7f1b | 115MB  |\n"}
{"Time":"2023-05-31T11:47:56.714641-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/pause                       | 3.9               | 829e9de338bd5 | 514kB  |\n"}
{"Time":"2023-05-31T11:47:56.714642-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | gcr.io/k8s-minikube/storage-provisioner     | v5                | ba04bb24b9575 | 29MB   |\n"}
{"Time":"2023-05-31T11:47:56.714644-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | gcr.io/k8s-minikube/busybox                 | 1.28.4-glibc      | 1611cd07b61d5 | 3.55MB |\n"}
{"Time":"2023-05-31T11:47:56.714645-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | docker.io/library/minikube-local-cache-test | functional-730000 | 8a6c1b85c0427 | 30B    |\n"}
{"Time":"2023-05-31T11:47:56.714646-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/kube-scheduler              | v1.27.2           | 305d7ed1dae28 | 56.2MB |\n"}
{"Time":"2023-05-31T11:47:56.714648-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/etcd                        | 3.5.7-0           | 24bc64e911039 | 181MB  |\n"}
{"Time":"2023-05-31T11:47:56.71465-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | gcr.io/google-containers/addon-resizer      | functional-730000 | ffd4cfbbe753e | 32.9MB |\n"}
{"Time":"2023-05-31T11:47:56.714651-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/pause                       | 3.1               | 8057e0500773a | 525kB  |\n"}
{"Time":"2023-05-31T11:47:56.714652-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/echoserver-arm              | 1.8               | 72565bf5bbedf | 85MB   |\n"}
{"Time":"2023-05-31T11:47:56.714654-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | docker.io/library/nginx                     | latest            | c42efe0b54387 | 135MB  |\n"}
{"Time":"2023-05-31T11:47:56.714655-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/coredns/coredns             | v1.10.1           | 97e04611ad434 | 51.4MB |\n"}
{"Time":"2023-05-31T11:47:56.714656-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | docker.io/kubernetesui/metrics-scraper      | \u003cnone\u003e            | a422e0e982356 | 42.3MB |\n"}
{"Time":"2023-05-31T11:47:56.714658-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/pause                       | 3.3               | 3d18732f8686c | 484kB  |\n"}
{"Time":"2023-05-31T11:47:56.71466-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        | registry.k8s.io/pause                       | latest            | 8cb2091f603e7 | 240kB  |\n"}
{"Time":"2023-05-31T11:47:56.714661-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        |---------------------------------------------|-------------------|---------------|--------|\n"}
{"Time":"2023-05-31T11:47:56.714663-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"    functional_test.go:267: (dbg) Stderr: out/minikube-darwin-arm64 -p functional-730000 image ls --format table --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.714665-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.651678    2175 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:56.714666-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.651804    2175 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.714668-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.651807    2175 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:56.714669-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.651810    2175 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.714671-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.651894    2175 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:56.714672-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.652324    2175 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.714674-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.652385    2175 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.714675-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.653161    2175 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:47:56.714677-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.653173    2175 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.4 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:47:56.714679-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"        I0531 11:47:56.693729    2175 ssh_runner.go:195] Run: docker images --no-trunc --format \"{{json .}}\"\n"}
{"Time":"2023-05-31T11:47:56.714724-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml"}
{"Time":"2023-05-31T11:47:56.714753-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"=== CONT  TestFunctional/parallel/ImageCommands/ImageListYaml\n"}
{"Time":"2023-05-31T11:47:56.714779-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"    functional_test.go:259: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls --format yaml --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:56.807471-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"    functional_test.go:264: (dbg) Stdout: out/minikube-darwin-arm64 -p functional-730000 image ls --format yaml --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.807485-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 8057e0500773a37cde2cff041eb13ebd68c748419a2fbfd1dfb5bf38696cc8e5\n"}
{"Time":"2023-05-31T11:47:56.807488-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807489-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807491-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/pause:3.1\n"}
{"Time":"2023-05-31T11:47:56.807492-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"525000\"\n"}
{"Time":"2023-05-31T11:47:56.807494-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: c42efe0b54387756e68d167a437aef21451f63eebd9330bb555367d67128386c\n"}
{"Time":"2023-05-31T11:47:56.807495-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807497-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807498-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - docker.io/library/nginx:latest\n"}
{"Time":"2023-05-31T11:47:56.807499-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"135000000\"\n"}
{"Time":"2023-05-31T11:47:56.807506-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 305d7ed1dae2877c3a80d434c5fb9f1aac1aa3d2431c36130a3fcd1970e93840\n"}
{"Time":"2023-05-31T11:47:56.807508-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807509-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.80751-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.807511-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"56200000\"\n"}
{"Time":"2023-05-31T11:47:56.807513-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 24bc64e911039ecf00e263be2161797c758b7d82403ca5516ab64047a477f737\n"}
{"Time":"2023-05-31T11:47:56.807514-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807515-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807516-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:47:56.807518-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"181000000\"\n"}
{"Time":"2023-05-31T11:47:56.807519-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 829e9de338bd5fdd3f16f68f83a9fb288fbc8453e881e5d5cfd0f6f2ff72b43e\n"}
{"Time":"2023-05-31T11:47:56.807525-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807526-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807527-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:47:56.807529-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"514000\"\n"}
{"Time":"2023-05-31T11:47:56.80753-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 5ee47dcca7543750b3941b52e98f103bbbae9aaf574ab4dc018e1e7d34e505ad\n"}
{"Time":"2023-05-31T11:47:56.807532-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807533-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807535-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - docker.io/library/nginx:alpine\n"}
{"Time":"2023-05-31T11:47:56.807536-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"41000000\"\n"}
{"Time":"2023-05-31T11:47:56.807537-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 2ee705380c3c59a538b853cbe9ae9886ebbd0001a4cea4add5adeea48e5f48d4\n"}
{"Time":"2023-05-31T11:47:56.807539-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807541-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807542-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.807543-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"107000000\"\n"}
{"Time":"2023-05-31T11:47:56.807544-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 29921a084542255eb81a1a660a603b1a24636d88b202f9010daae75fa32754c0\n"}
{"Time":"2023-05-31T11:47:56.807546-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807547-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807548-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.80755-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"66500000\"\n"}
{"Time":"2023-05-31T11:47:56.807551-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 72565bf5bbedfb62e9d21afa2b1221b2c7a5e05b746dae33430bc550d3f87beb\n"}
{"Time":"2023-05-31T11:47:56.807552-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807553-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807555-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/echoserver-arm:1.8\n"}
{"Time":"2023-05-31T11:47:56.807556-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"85000000\"\n"}
{"Time":"2023-05-31T11:47:56.807557-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 8cb2091f603e75187e2f6226c5901d12e00b1d1f778c6471ae4578e8a1c4724a\n"}
{"Time":"2023-05-31T11:47:56.807558-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.80756-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807561-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/pause:latest\n"}
{"Time":"2023-05-31T11:47:56.807563-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"240000\"\n"}
{"Time":"2023-05-31T11:47:56.807564-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 8a6c1b85c0427dbbec58178318e5303e0f104c0da77d16e6996b89b76164db7b\n"}
{"Time":"2023-05-31T11:47:56.807565-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807566-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807568-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - docker.io/library/minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:47:56.807569-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"30\"\n"}
{"Time":"2023-05-31T11:47:56.807571-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: ba04bb24b95753201135cbc420b233c1b0b9fa2e1fd21d28319c348c33fbcde6\n"}
{"Time":"2023-05-31T11:47:56.807572-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807573-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807574-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:47:56.807576-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"29000000\"\n"}
{"Time":"2023-05-31T11:47:56.807577-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 3d18732f8686cc3c878055d99a05fa80289502fa496b36b6a0fe0f77206a7300\n"}
{"Time":"2023-05-31T11:47:56.807578-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.80758-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807583-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/pause:3.3\n"}
{"Time":"2023-05-31T11:47:56.807585-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"484000\"\n"}
{"Time":"2023-05-31T11:47:56.807586-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 1611cd07b61d57dbbfebe6db242513fd51e1c02d20ba08af17a45837d86a8a8c\n"}
{"Time":"2023-05-31T11:47:56.807587-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807589-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.80759-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - gcr.io/k8s-minikube/busybox:1.28.4-glibc\n"}
{"Time":"2023-05-31T11:47:56.807591-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"3550000\"\n"}
{"Time":"2023-05-31T11:47:56.807592-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 72c9df6be7f1b997e4a31b5cb9aa7262e5278905af97e6a69e341e3f0f9bbaae\n"}
{"Time":"2023-05-31T11:47:56.807594-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807595-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807596-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.807648-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"115000000\"\n"}
{"Time":"2023-05-31T11:47:56.807651-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: 97e04611ad43405a2e5863ae17c6f1bc9181bdefdaa78627c432ef754a4eb108\n"}
{"Time":"2023-05-31T11:47:56.807652-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807654-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807655-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - registry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:47:56.807656-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"51400000\"\n"}
{"Time":"2023-05-31T11:47:56.807657-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: a422e0e982356f6c1cf0e5bb7b733363caae3992a07c99951fbcc73e58ed656a\n"}
{"Time":"2023-05-31T11:47:56.807659-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.80766-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807661-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - docker.io/kubernetesui/metrics-scraper:\u003cnone\u003e\n"}
{"Time":"2023-05-31T11:47:56.807663-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"42300000\"\n"}
{"Time":"2023-05-31T11:47:56.807664-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        - id: ffd4cfbbe753e62419e129ee2ac618beb94e51baa7471df5038b0b516b59cf91\n"}
{"Time":"2023-05-31T11:47:56.807665-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoDigests: []\n"}
{"Time":"2023-05-31T11:47:56.807666-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          repoTags:\n"}
{"Time":"2023-05-31T11:47:56.807668-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          - gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:47:56.807682-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"          size: \"32900000\"\n"}
{"Time":"2023-05-31T11:47:56.807685-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.807688-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"    functional_test.go:267: (dbg) Stderr: out/minikube-darwin-arm64 -p functional-730000 image ls --format yaml --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:56.80769-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743118    2177 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:56.807692-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743255    2177 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.807695-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743258    2177 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:56.807696-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743261    2177 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:56.807698-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743352    2177 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:56.8077-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743756    2177 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.807701-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.743816    2177 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:56.807707-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.744793    2177 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:47:56.807708-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.744804    2177 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.4 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:47:56.807711-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"        I0531 11:47:56.781692    2177 ssh_runner.go:195] Run: docker images --no-trunc --format \"{{json .}}\"\n"}
{"Time":"2023-05-31T11:47:56.807713-07:00","Action":"cont","Test":"TestFunctional/parallel/ImageCommands/ImageBuild"}
{"Time":"2023-05-31T11:47:56.807715-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"=== CONT  TestFunctional/parallel/ImageCommands/ImageBuild\n"}
{"Time":"2023-05-31T11:47:56.807716-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:306: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 ssh pgrep buildkitd\n"}
{"Time":"2023-05-31T11:47:56.873858-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:306: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p functional-730000 ssh pgrep buildkitd: exit status 1 (66.118417ms)\n"}
{"Time":"2023-05-31T11:47:56.873873-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.873875-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:47:56.873877-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2023-05-31T11:47:56.873878-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        \n"}
{"Time":"2023-05-31T11:47:56.87388-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:47:56.873882-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:313: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image build -t localhost/my-image:functional-730000 testdata/build --alsologtostderr\n"}
{"Time":"2023-05-31T11:47:59.654304-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:313: (dbg) Done: out/minikube-darwin-arm64 -p functional-730000 image build -t localhost/my-image:functional-730000 testdata/build --alsologtostderr: (2.7803835s)\n"}
{"Time":"2023-05-31T11:47:59.654319-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:318: (dbg) Stdout: out/minikube-darwin-arm64 -p functional-730000 image build -t localhost/my-image:functional-730000 testdata/build --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:59.654321-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Sending build context to Docker daemon  3.072kB\r\r\n"}
{"Time":"2023-05-31T11:47:59.654323-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Step 1/3 : FROM gcr.io/k8s-minikube/busybox\n"}
{"Time":"2023-05-31T11:47:59.654324-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        latest: Pulling from k8s-minikube/busybox\n"}
{"Time":"2023-05-31T11:47:59.654325-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        a01966dde7f8: Pulling fs layer\n"}
{"Time":"2023-05-31T11:47:59.654327-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        a01966dde7f8: Verifying Checksum\n"}
{"Time":"2023-05-31T11:47:59.654336-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        a01966dde7f8: Download complete\n"}
{"Time":"2023-05-31T11:47:59.654338-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        a01966dde7f8: Pull complete\n"}
{"Time":"2023-05-31T11:47:59.654339-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Digest: sha256:ca5ae90100d50772da31f3b5016209e25ad61972404e2ccd83d44f10dee7e79b\n"}
{"Time":"2023-05-31T11:47:59.654341-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Status: Downloaded newer image for gcr.io/k8s-minikube/busybox:latest\n"}
{"Time":"2023-05-31T11:47:59.654344-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"         ---\u003e 71a676dd070f\n"}
{"Time":"2023-05-31T11:47:59.654346-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Step 2/3 : RUN true\n"}
{"Time":"2023-05-31T11:47:59.654348-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"         ---\u003e Running in 4ccda4345350\n"}
{"Time":"2023-05-31T11:47:59.65435-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Removing intermediate container 4ccda4345350\n"}
{"Time":"2023-05-31T11:47:59.654351-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"         ---\u003e 7d734c195ef8\n"}
{"Time":"2023-05-31T11:47:59.654352-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Step 3/3 : ADD content.txt /\n"}
{"Time":"2023-05-31T11:47:59.654354-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"         ---\u003e 432460cbd970\n"}
{"Time":"2023-05-31T11:47:59.654355-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Successfully built 432460cbd970\n"}
{"Time":"2023-05-31T11:47:59.654359-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        Successfully tagged localhost/my-image:functional-730000\n"}
{"Time":"2023-05-31T11:47:59.654362-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:321: (dbg) Stderr: out/minikube-darwin-arm64 -p functional-730000 image build -t localhost/my-image:functional-730000 testdata/build --alsologtostderr:\n"}
{"Time":"2023-05-31T11:47:59.654364-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902289    2181 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:47:59.654365-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902495    2181 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:59.654367-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902497    2181 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:47:59.654369-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902500    2181 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:47:59.65437-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902568    2181 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:47:59.654372-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.902953    2181 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:59.654373-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.903724    2181 config.go:182] Loaded profile config \"functional-730000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:47:59.654385-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.904502    2181 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:47:59.654387-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.904512    2181 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.4 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/functional-730000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:47:59.654389-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.935406    2181 build_images.go:151] Building image from path: /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/build.839737012.tar\n"}
{"Time":"2023-05-31T11:47:59.654391-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.935471    2181 ssh_runner.go:195] Run: sudo mkdir -p /var/lib/minikube/build\n"}
{"Time":"2023-05-31T11:47:59.654392-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.939970    2181 ssh_runner.go:195] Run: stat -c \"%s %y\" /var/lib/minikube/build/build.839737012.tar\n"}
{"Time":"2023-05-31T11:47:59.654397-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.941996    2181 ssh_runner.go:352] existence check for /var/lib/minikube/build/build.839737012.tar: stat -c \"%s %y\" /var/lib/minikube/build/build.839737012.tar: Process exited with status 1\n"}
{"Time":"2023-05-31T11:47:59.654399-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        stdout:\n"}
{"Time":"2023-05-31T11:47:59.6544-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        \n"}
{"Time":"2023-05-31T11:47:59.654402-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        stderr:\n"}
{"Time":"2023-05-31T11:47:59.654403-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        stat: cannot statx '/var/lib/minikube/build/build.839737012.tar': No such file or directory\n"}
{"Time":"2023-05-31T11:47:59.654404-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.942013    2181 ssh_runner.go:362] scp /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/build.839737012.tar --\u003e /var/lib/minikube/build/build.839737012.tar (3072 bytes)\n"}
{"Time":"2023-05-31T11:47:59.654406-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.954303    2181 ssh_runner.go:195] Run: sudo mkdir -p /var/lib/minikube/build/build.839737012\n"}
{"Time":"2023-05-31T11:47:59.654408-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.958118    2181 ssh_runner.go:195] Run: sudo tar -C /var/lib/minikube/build/build.839737012 -xf /var/lib/minikube/build/build.839737012.tar\n"}
{"Time":"2023-05-31T11:47:59.654409-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.961789    2181 docker.go:336] Building image: /var/lib/minikube/build/build.839737012\n"}
{"Time":"2023-05-31T11:47:59.654412-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:56.961861    2181 ssh_runner.go:195] Run: docker build -t localhost/my-image:functional-730000 /var/lib/minikube/build/build.839737012\n"}
{"Time":"2023-05-31T11:47:59.654414-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        DEPRECATED: The legacy builder is deprecated and will be removed in a future release.\n"}
{"Time":"2023-05-31T11:47:59.654415-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"                    Install the buildx component to build images with BuildKit:\n"}
{"Time":"2023-05-31T11:47:59.654417-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"                    https://docs.docker.com/go/buildx/\n"}
{"Time":"2023-05-31T11:47:59.654418-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        \n"}
{"Time":"2023-05-31T11:47:59.65442-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.569495    2181 ssh_runner.go:235] Completed: docker build -t localhost/my-image:functional-730000 /var/lib/minikube/build/build.839737012: (2.607649167s)\n"}
{"Time":"2023-05-31T11:47:59.654421-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.569577    2181 ssh_runner.go:195] Run: sudo rm -rf /var/lib/minikube/build/build.839737012\n"}
{"Time":"2023-05-31T11:47:59.654423-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.572894    2181 ssh_runner.go:195] Run: sudo rm -f /var/lib/minikube/build/build.839737012.tar\n"}
{"Time":"2023-05-31T11:47:59.654424-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.575767    2181 build_images.go:207] Built localhost/my-image:functional-730000 from /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/build.839737012.tar\n"}
{"Time":"2023-05-31T11:47:59.654425-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.575782    2181 build_images.go:123] succeeded building to: functional-730000\n"}
{"Time":"2023-05-31T11:47:59.654427-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"        I0531 11:47:59.575785    2181 build_images.go:124] failed building to: \n"}
{"Time":"2023-05-31T11:47:59.654428-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"    functional_test.go:446: (dbg) Run:  out/minikube-darwin-arm64 -p functional-730000 image ls\n"}
{"Time":"2023-05-31T11:48:00.050292-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"2023/05/31 11:48:00 [DEBUG] GET http://127.0.0.1:36195/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/\n"}
{"Time":"2023-05-31T11:48:00.052722-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    functional_test.go:905: (dbg) stopping [out/minikube-darwin-arm64 dashboard --url --port 36195 -p functional-730000 --alsologtostderr -v=1] ...\n"}
{"Time":"2023-05-31T11:48:00.164248-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    helpers_test.go:508: unable to kill pid 2149: os: process already finished\n"}
{"Time":"2023-05-31T11:48:00.266663-07:00","Action":"run","Test":"TestFunctional/delete_addon-resizer_images"}
{"Time":"2023-05-31T11:48:00.266675-07:00","Action":"output","Test":"TestFunctional/delete_addon-resizer_images","Output":"=== RUN   TestFunctional/delete_addon-resizer_images\n"}
{"Time":"2023-05-31T11:48:00.266753-07:00","Action":"output","Test":"TestFunctional/delete_addon-resizer_images","Output":"    functional_test.go:188: (dbg) Run:  docker rmi -f gcr.io/google-containers/addon-resizer:1.8.8\n"}
{"Time":"2023-05-31T11:48:00.409439-07:00","Action":"output","Test":"TestFunctional/delete_addon-resizer_images","Output":"    functional_test.go:188: (dbg) Run:  docker rmi -f gcr.io/google-containers/addon-resizer:functional-730000\n"}
{"Time":"2023-05-31T11:48:00.447987-07:00","Action":"run","Test":"TestFunctional/delete_my-image_image"}
{"Time":"2023-05-31T11:48:00.447998-07:00","Action":"output","Test":"TestFunctional/delete_my-image_image","Output":"=== RUN   TestFunctional/delete_my-image_image\n"}
{"Time":"2023-05-31T11:48:00.44808-07:00","Action":"output","Test":"TestFunctional/delete_my-image_image","Output":"    functional_test.go:196: (dbg) Run:  docker rmi -f localhost/my-image:functional-730000\n"}
{"Time":"2023-05-31T11:48:00.484947-07:00","Action":"run","Test":"TestFunctional/delete_minikube_cached_images"}
{"Time":"2023-05-31T11:48:00.484959-07:00","Action":"output","Test":"TestFunctional/delete_minikube_cached_images","Output":"=== RUN   TestFunctional/delete_minikube_cached_images\n"}
{"Time":"2023-05-31T11:48:00.485041-07:00","Action":"output","Test":"TestFunctional/delete_minikube_cached_images","Output":"    functional_test.go:204: (dbg) Run:  docker rmi -f minikube-local-cache-test:functional-730000\n"}
{"Time":"2023-05-31T11:48:00.521559-07:00","Action":"output","Test":"TestFunctional","Output":"    helpers_test.go:175: Cleaning up \"functional-730000\" profile ...\n"}
{"Time":"2023-05-31T11:48:00.521578-07:00","Action":"output","Test":"TestFunctional","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p functional-730000\n"}
{"Time":"2023-05-31T11:48:00.63976-07:00","Action":"output","Test":"TestFunctional","Output":"--- FAIL: TestFunctional (187.22s)\n"}
{"Time":"2023-05-31T11:48:00.639774-07:00","Action":"output","Test":"TestFunctional/serial","Output":"    --- PASS: TestFunctional/serial (129.92s)\n"}
{"Time":"2023-05-31T11:48:00.639776-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"        --- PASS: TestFunctional/serial/CopySyncFile (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639778-07:00","Action":"pass","Test":"TestFunctional/serial/CopySyncFile","Elapsed":0}
{"Time":"2023-05-31T11:48:00.639781-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"        --- PASS: TestFunctional/serial/StartWithProxy (48.42s)\n"}
{"Time":"2023-05-31T11:48:00.639783-07:00","Action":"pass","Test":"TestFunctional/serial/StartWithProxy","Elapsed":48.42}
{"Time":"2023-05-31T11:48:00.639785-07:00","Action":"output","Test":"TestFunctional/serial/AuditLog","Output":"        --- PASS: TestFunctional/serial/AuditLog (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639787-07:00","Action":"pass","Test":"TestFunctional/serial/AuditLog","Elapsed":0}
{"Time":"2023-05-31T11:48:00.639788-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"        --- PASS: TestFunctional/serial/SoftStart (33.86s)\n"}
{"Time":"2023-05-31T11:48:00.63979-07:00","Action":"pass","Test":"TestFunctional/serial/SoftStart","Elapsed":33.86}
{"Time":"2023-05-31T11:48:00.639791-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"        --- PASS: TestFunctional/serial/KubeContext (0.03s)\n"}
{"Time":"2023-05-31T11:48:00.639793-07:00","Action":"pass","Test":"TestFunctional/serial/KubeContext","Elapsed":0.03}
{"Time":"2023-05-31T11:48:00.639794-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"        --- PASS: TestFunctional/serial/KubectlGetPods (0.05s)\n"}
{"Time":"2023-05-31T11:48:00.639795-07:00","Action":"pass","Test":"TestFunctional/serial/KubectlGetPods","Elapsed":0.05}
{"Time":"2023-05-31T11:48:00.639797-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd","Output":"        --- PASS: TestFunctional/serial/CacheCmd (8.79s)\n"}
{"Time":"2023-05-31T11:48:00.639798-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache","Output":"            --- PASS: TestFunctional/serial/CacheCmd/cache (8.79s)\n"}
{"Time":"2023-05-31T11:48:00.6398-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/add_remote (5.94s)\n"}
{"Time":"2023-05-31T11:48:00.639802-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/add_remote","Elapsed":5.94}
{"Time":"2023-05-31T11:48:00.639804-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/add_local (1.31s)\n"}
{"Time":"2023-05-31T11:48:00.639805-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/add_local","Elapsed":1.31}
{"Time":"2023-05-31T11:48:00.639806-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/CacheDelete","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/CacheDelete (0.03s)\n"}
{"Time":"2023-05-31T11:48:00.639808-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/CacheDelete","Elapsed":0.03}
{"Time":"2023-05-31T11:48:00.639809-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/list (0.03s)\n"}
{"Time":"2023-05-31T11:48:00.639811-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/list","Elapsed":0.03}
{"Time":"2023-05-31T11:48:00.639812-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node (0.07s)\n"}
{"Time":"2023-05-31T11:48:00.639814-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Elapsed":0.07}
{"Time":"2023-05-31T11:48:00.639815-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/cache_reload (1.34s)\n"}
{"Time":"2023-05-31T11:48:00.639817-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Elapsed":1.34}
{"Time":"2023-05-31T11:48:00.639818-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/delete (0.06s)\n"}
{"Time":"2023-05-31T11:48:00.639819-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/delete","Elapsed":0.06}
{"Time":"2023-05-31T11:48:00.639821-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache","Elapsed":8.79}
{"Time":"2023-05-31T11:48:00.639822-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd","Elapsed":8.79}
{"Time":"2023-05-31T11:48:00.639823-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"        --- PASS: TestFunctional/serial/MinikubeKubectlCmd (0.49s)\n"}
{"Time":"2023-05-31T11:48:00.639825-07:00","Action":"pass","Test":"TestFunctional/serial/MinikubeKubectlCmd","Elapsed":0.49}
{"Time":"2023-05-31T11:48:00.639826-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmdDirectly","Output":"        --- PASS: TestFunctional/serial/MinikubeKubectlCmdDirectly (0.53s)\n"}
{"Time":"2023-05-31T11:48:00.639828-07:00","Action":"pass","Test":"TestFunctional/serial/MinikubeKubectlCmdDirectly","Elapsed":0.53}
{"Time":"2023-05-31T11:48:00.639829-07:00","Action":"output","Test":"TestFunctional/serial/ExtraConfig","Output":"        --- PASS: TestFunctional/serial/ExtraConfig (36.40s)\n"}
{"Time":"2023-05-31T11:48:00.639836-07:00","Action":"pass","Test":"TestFunctional/serial/ExtraConfig","Elapsed":36.4}
{"Time":"2023-05-31T11:48:00.639837-07:00","Action":"output","Test":"TestFunctional/serial/ComponentHealth","Output":"        --- PASS: TestFunctional/serial/ComponentHealth (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.639843-07:00","Action":"pass","Test":"TestFunctional/serial/ComponentHealth","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.639844-07:00","Action":"output","Test":"TestFunctional/serial/LogsCmd","Output":"        --- PASS: TestFunctional/serial/LogsCmd (0.64s)\n"}
{"Time":"2023-05-31T11:48:00.639846-07:00","Action":"pass","Test":"TestFunctional/serial/LogsCmd","Elapsed":0.64}
{"Time":"2023-05-31T11:48:00.639847-07:00","Action":"output","Test":"TestFunctional/serial/LogsFileCmd","Output":"        --- PASS: TestFunctional/serial/LogsFileCmd (0.65s)\n"}
{"Time":"2023-05-31T11:48:00.639849-07:00","Action":"pass","Test":"TestFunctional/serial/LogsFileCmd","Elapsed":0.65}
{"Time":"2023-05-31T11:48:00.63985-07:00","Action":"pass","Test":"TestFunctional/serial","Elapsed":129.92}
{"Time":"2023-05-31T11:48:00.639851-07:00","Action":"output","Test":"TestFunctional/parallel","Output":"    --- FAIL: TestFunctional/parallel (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639853-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        --- PASS: TestFunctional/parallel/ConfigCmd (0.20s)\n"}
{"Time":"2023-05-31T11:48:00.639854-07:00","Action":"pass","Test":"TestFunctional/parallel/ConfigCmd","Elapsed":0.2}
{"Time":"2023-05-31T11:48:00.639856-07:00","Action":"output","Test":"TestFunctional/parallel/CpCmd","Output":"        --- PASS: TestFunctional/parallel/CpCmd (0.28s)\n"}
{"Time":"2023-05-31T11:48:00.639857-07:00","Action":"pass","Test":"TestFunctional/parallel/CpCmd","Elapsed":0.28}
{"Time":"2023-05-31T11:48:00.639858-07:00","Action":"output","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Output":"        --- PASS: TestFunctional/parallel/NonActiveRuntimeDisabled (0.06s)\n"}
{"Time":"2023-05-31T11:48:00.63986-07:00","Action":"pass","Test":"TestFunctional/parallel/NonActiveRuntimeDisabled","Elapsed":0.06}
{"Time":"2023-05-31T11:48:00.639861-07:00","Action":"output","Test":"TestFunctional/parallel/License","Output":"        --- PASS: TestFunctional/parallel/License (0.40s)\n"}
{"Time":"2023-05-31T11:48:00.639863-07:00","Action":"pass","Test":"TestFunctional/parallel/License","Elapsed":0.4}
{"Time":"2023-05-31T11:48:00.639864-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"        --- PASS: TestFunctional/parallel/NodeLabels (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.639866-07:00","Action":"pass","Test":"TestFunctional/parallel/NodeLabels","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.639867-07:00","Action":"output","Test":"TestFunctional/parallel/PodmanEnv","Output":"        --- SKIP: TestFunctional/parallel/PodmanEnv (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639868-07:00","Action":"skip","Test":"TestFunctional/parallel/PodmanEnv","Elapsed":0}
{"Time":"2023-05-31T11:48:00.639869-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"        --- PASS: TestFunctional/parallel/DockerEnv (0.41s)\n"}
{"Time":"2023-05-31T11:48:00.639871-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv/bash","Output":"            --- PASS: TestFunctional/parallel/DockerEnv/bash (0.41s)\n"}
{"Time":"2023-05-31T11:48:00.639872-07:00","Action":"pass","Test":"TestFunctional/parallel/DockerEnv/bash","Elapsed":0.41}
{"Time":"2023-05-31T11:48:00.639874-07:00","Action":"pass","Test":"TestFunctional/parallel/DockerEnv","Elapsed":0.41}
{"Time":"2023-05-31T11:48:00.639875-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"        --- PASS: TestFunctional/parallel/CertSync (0.41s)\n"}
{"Time":"2023-05-31T11:48:00.639876-07:00","Action":"pass","Test":"TestFunctional/parallel/CertSync","Elapsed":0.41}
{"Time":"2023-05-31T11:48:00.639878-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"        --- PASS: TestFunctional/parallel/FileSync (0.07s)\n"}
{"Time":"2023-05-31T11:48:00.639879-07:00","Action":"pass","Test":"TestFunctional/parallel/FileSync","Elapsed":0.07}
{"Time":"2023-05-31T11:48:00.639881-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        --- SKIP: TestFunctional/parallel/MySQL (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639882-07:00","Action":"skip","Test":"TestFunctional/parallel/MySQL","Elapsed":0}
{"Time":"2023-05-31T11:48:00.639884-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"        --- PASS: TestFunctional/parallel/SSHCmd (0.15s)\n"}
{"Time":"2023-05-31T11:48:00.639886-07:00","Action":"pass","Test":"TestFunctional/parallel/SSHCmd","Elapsed":0.15}
{"Time":"2023-05-31T11:48:00.639887-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        --- PASS: TestFunctional/parallel/ServiceCmd (13.59s)\n"}
{"Time":"2023-05-31T11:48:00.639888-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/DeployApp (13.10s)\n"}
{"Time":"2023-05-31T11:48:00.63989-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/DeployApp","Elapsed":13.1}
{"Time":"2023-05-31T11:48:00.639892-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/List","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/List (0.10s)\n"}
{"Time":"2023-05-31T11:48:00.639893-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/List","Elapsed":0.1}
{"Time":"2023-05-31T11:48:00.639894-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/JSONOutput (0.09s)\n"}
{"Time":"2023-05-31T11:48:00.639896-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/JSONOutput","Elapsed":0.09}
{"Time":"2023-05-31T11:48:00.639897-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/HTTPS","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/HTTPS (0.10s)\n"}
{"Time":"2023-05-31T11:48:00.639899-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/HTTPS","Elapsed":0.1}
{"Time":"2023-05-31T11:48:00.6399-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/Format","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/Format (0.10s)\n"}
{"Time":"2023-05-31T11:48:00.639901-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/Format","Elapsed":0.1}
{"Time":"2023-05-31T11:48:00.639902-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd/URL","Output":"            --- PASS: TestFunctional/parallel/ServiceCmd/URL (0.10s)\n"}
{"Time":"2023-05-31T11:48:00.639904-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd/URL","Elapsed":0.1}
{"Time":"2023-05-31T11:48:00.639905-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd","Elapsed":13.59}
{"Time":"2023-05-31T11:48:00.639907-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"        --- PASS: TestFunctional/parallel/TunnelCmd (10.66s)\n"}
{"Time":"2023-05-31T11:48:00.639908-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial","Output":"            --- PASS: TestFunctional/parallel/TunnelCmd/serial (10.66s)\n"}
{"Time":"2023-05-31T11:48:00.63991-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel (0.21s)\n"}
{"Time":"2023-05-31T11:48:00.639911-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/RunSecondTunnel","Elapsed":0.21}
{"Time":"2023-05-31T11:48:00.639913-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/StartTunnel (0.01s)\n"}
{"Time":"2023-05-31T11:48:00.639914-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Elapsed":0.01}
{"Time":"2023-05-31T11:48:00.639916-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/WaitService (10.25s)\n"}
{"Time":"2023-05-31T11:48:00.639919-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Output":"                    --- PASS: TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup (10.21s)\n"}
{"Time":"2023-05-31T11:48:00.63992-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/Setup","Elapsed":10.21}
{"Time":"2023-05-31T11:48:00.639922-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"                    --- PASS: TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.639923-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.639926-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Elapsed":10.25}
{"Time":"2023-05-31T11:48:00.63993-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/AccessDirect (0.01s)\n"}
{"Time":"2023-05-31T11:48:00.639932-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Elapsed":0.01}
{"Time":"2023-05-31T11:48:00.639933-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig (0.02s)\n"}
{"Time":"2023-05-31T11:48:00.639935-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Elapsed":0.02}
{"Time":"2023-05-31T11:48:00.639936-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil (0.02s)\n"}
{"Time":"2023-05-31T11:48:00.639938-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Elapsed":0.02}
{"Time":"2023-05-31T11:48:00.63994-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS (0.01s)\n"}
{"Time":"2023-05-31T11:48:00.639942-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Elapsed":0.01}
{"Time":"2023-05-31T11:48:00.639943-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel (0.12s)\n"}
{"Time":"2023-05-31T11:48:00.639944-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Elapsed":0.12}
{"Time":"2023-05-31T11:48:00.639946-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial","Elapsed":10.66}
{"Time":"2023-05-31T11:48:00.639947-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd","Elapsed":10.66}
{"Time":"2023-05-31T11:48:00.639948-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"        --- PASS: TestFunctional/parallel/AddonsCmd (0.12s)\n"}
{"Time":"2023-05-31T11:48:00.63995-07:00","Action":"pass","Test":"TestFunctional/parallel/AddonsCmd","Elapsed":0.12}
{"Time":"2023-05-31T11:48:00.639951-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"        --- PASS: TestFunctional/parallel/PersistentVolumeClaim (24.32s)\n"}
{"Time":"2023-05-31T11:48:00.639952-07:00","Action":"pass","Test":"TestFunctional/parallel/PersistentVolumeClaim","Elapsed":24.32}
{"Time":"2023-05-31T11:48:00.639954-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"        --- PASS: TestFunctional/parallel/StatusCmd (0.25s)\n"}
{"Time":"2023-05-31T11:48:00.639956-07:00","Action":"pass","Test":"TestFunctional/parallel/StatusCmd","Elapsed":0.25}
{"Time":"2023-05-31T11:48:00.639957-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"        --- PASS: TestFunctional/parallel/ProfileCmd (0.49s)\n"}
{"Time":"2023-05-31T11:48:00.639959-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_not_create (0.19s)\n"}
{"Time":"2023-05-31T11:48:00.63996-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Elapsed":0.19}
{"Time":"2023-05-31T11:48:00.639962-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_list (0.15s)\n"}
{"Time":"2023-05-31T11:48:00.639963-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Elapsed":0.15}
{"Time":"2023-05-31T11:48:00.639965-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_json_output (0.15s)\n"}
{"Time":"2023-05-31T11:48:00.639966-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Elapsed":0.15}
{"Time":"2023-05-31T11:48:00.639968-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd","Elapsed":0.49}
{"Time":"2023-05-31T11:48:00.639969-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        --- PASS: TestFunctional/parallel/MountCmd (8.23s)\n"}
{"Time":"2023-05-31T11:48:00.639971-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/any-port","Output":"            --- PASS: TestFunctional/parallel/MountCmd/any-port (6.32s)\n"}
{"Time":"2023-05-31T11:48:00.639973-07:00","Action":"pass","Test":"TestFunctional/parallel/MountCmd/any-port","Elapsed":6.32}
{"Time":"2023-05-31T11:48:00.639975-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/specific-port","Output":"            --- PASS: TestFunctional/parallel/MountCmd/specific-port (1.14s)\n"}
{"Time":"2023-05-31T11:48:00.639976-07:00","Action":"pass","Test":"TestFunctional/parallel/MountCmd/specific-port","Elapsed":1.14}
{"Time":"2023-05-31T11:48:00.639977-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Output":"            --- PASS: TestFunctional/parallel/MountCmd/VerifyCleanup (0.77s)\n"}
{"Time":"2023-05-31T11:48:00.639979-07:00","Action":"pass","Test":"TestFunctional/parallel/MountCmd/VerifyCleanup","Elapsed":0.77}
{"Time":"2023-05-31T11:48:00.63998-07:00","Action":"pass","Test":"TestFunctional/parallel/MountCmd","Elapsed":8.23}
{"Time":"2023-05-31T11:48:00.639982-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        --- PASS: TestFunctional/parallel/DryRun (0.22s)\n"}
{"Time":"2023-05-31T11:48:00.639983-07:00","Action":"pass","Test":"TestFunctional/parallel/DryRun","Elapsed":0.22}
{"Time":"2023-05-31T11:48:00.639984-07:00","Action":"output","Test":"TestFunctional/parallel/InternationalLanguage","Output":"        --- PASS: TestFunctional/parallel/InternationalLanguage (0.10s)\n"}
{"Time":"2023-05-31T11:48:00.639986-07:00","Action":"pass","Test":"TestFunctional/parallel/InternationalLanguage","Elapsed":0.1}
{"Time":"2023-05-31T11:48:00.639991-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmdConnect","Output":"        --- FAIL: TestFunctional/parallel/ServiceCmdConnect (28.47s)\n"}
{"Time":"2023-05-31T11:48:00.639992-07:00","Action":"fail","Test":"TestFunctional/parallel/ServiceCmdConnect","Elapsed":28.47}
{"Time":"2023-05-31T11:48:00.639994-07:00","Action":"output","Test":"TestFunctional/parallel/Version","Output":"        --- PASS: TestFunctional/parallel/Version (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.639995-07:00","Action":"output","Test":"TestFunctional/parallel/Version/short","Output":"            --- PASS: TestFunctional/parallel/Version/short (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.639997-07:00","Action":"pass","Test":"TestFunctional/parallel/Version/short","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.639998-07:00","Action":"output","Test":"TestFunctional/parallel/Version/components","Output":"            --- PASS: TestFunctional/parallel/Version/components (0.17s)\n"}
{"Time":"2023-05-31T11:48:00.640001-07:00","Action":"pass","Test":"TestFunctional/parallel/Version/components","Elapsed":0.17}
{"Time":"2023-05-31T11:48:00.640002-07:00","Action":"pass","Test":"TestFunctional/parallel/Version","Elapsed":0}
{"Time":"2023-05-31T11:48:00.640003-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"        --- PASS: TestFunctional/parallel/UpdateContextCmd (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.640008-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Output":"            --- PASS: TestFunctional/parallel/UpdateContextCmd/no_changes (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.64001-07:00","Action":"pass","Test":"TestFunctional/parallel/UpdateContextCmd/no_changes","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.640012-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Output":"            --- PASS: TestFunctional/parallel/UpdateContextCmd/no_clusters (0.05s)\n"}
{"Time":"2023-05-31T11:48:00.640015-07:00","Action":"pass","Test":"TestFunctional/parallel/UpdateContextCmd/no_clusters","Elapsed":0.05}
{"Time":"2023-05-31T11:48:00.640017-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Output":"            --- PASS: TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster (0.05s)\n"}
{"Time":"2023-05-31T11:48:00.640018-07:00","Action":"pass","Test":"TestFunctional/parallel/UpdateContextCmd/no_minikube_cluster","Elapsed":0.05}
{"Time":"2023-05-31T11:48:00.64002-07:00","Action":"pass","Test":"TestFunctional/parallel/UpdateContextCmd","Elapsed":0}
{"Time":"2023-05-31T11:48:00.640021-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands","Output":"        --- PASS: TestFunctional/parallel/ImageCommands (13.04s)\n"}
{"Time":"2023-05-31T11:48:00.640023-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/Setup","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/Setup (2.19s)\n"}
{"Time":"2023-05-31T11:48:00.640024-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/Setup","Elapsed":2.19}
{"Time":"2023-05-31T11:48:00.640026-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageLoadDaemon (2.16s)\n"}
{"Time":"2023-05-31T11:48:00.640028-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageLoadDaemon","Elapsed":2.16}
{"Time":"2023-05-31T11:48:00.640029-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageReloadDaemon (1.54s)\n"}
{"Time":"2023-05-31T11:48:00.640031-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageReloadDaemon","Elapsed":1.54}
{"Time":"2023-05-31T11:48:00.640033-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon (4.23s)\n"}
{"Time":"2023-05-31T11:48:00.640034-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageTagAndLoadDaemon","Elapsed":4.23}
{"Time":"2023-05-31T11:48:00.640036-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveToFile","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageSaveToFile (0.52s)\n"}
{"Time":"2023-05-31T11:48:00.640038-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageSaveToFile","Elapsed":0.52}
{"Time":"2023-05-31T11:48:00.640039-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageRemove","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageRemove (0.16s)\n"}
{"Time":"2023-05-31T11:48:00.640041-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageRemove","Elapsed":0.16}
{"Time":"2023-05-31T11:48:00.640043-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageLoadFromFile (0.62s)\n"}
{"Time":"2023-05-31T11:48:00.640044-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageLoadFromFile","Elapsed":0.62}
{"Time":"2023-05-31T11:48:00.640046-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageSaveDaemon (1.60s)\n"}
{"Time":"2023-05-31T11:48:00.640047-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageSaveDaemon","Elapsed":1.6}
{"Time":"2023-05-31T11:48:00.640049-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageListShort (0.08s)\n"}
{"Time":"2023-05-31T11:48:00.64005-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageListShort","Elapsed":0.08}
{"Time":"2023-05-31T11:48:00.640052-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageListJson (0.07s)\n"}
{"Time":"2023-05-31T11:48:00.640053-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageListJson","Elapsed":0.07}
{"Time":"2023-05-31T11:48:00.640054-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageListTable (0.09s)\n"}
{"Time":"2023-05-31T11:48:00.640056-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageListTable","Elapsed":0.09}
{"Time":"2023-05-31T11:48:00.640057-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageListYaml (0.09s)\n"}
{"Time":"2023-05-31T11:48:00.640059-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageListYaml","Elapsed":0.09}
{"Time":"2023-05-31T11:48:00.640061-07:00","Action":"output","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Output":"            --- PASS: TestFunctional/parallel/ImageCommands/ImageBuild (2.95s)\n"}
{"Time":"2023-05-31T11:48:00.640062-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands/ImageBuild","Elapsed":2.95}
{"Time":"2023-05-31T11:48:00.640063-07:00","Action":"pass","Test":"TestFunctional/parallel/ImageCommands","Elapsed":13.04}
{"Time":"2023-05-31T11:48:00.640065-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"        --- PASS: TestFunctional/parallel/DashboardCmd (8.18s)\n"}
{"Time":"2023-05-31T11:48:00.640066-07:00","Action":"pass","Test":"TestFunctional/parallel/DashboardCmd","Elapsed":8.18}
{"Time":"2023-05-31T11:48:00.640068-07:00","Action":"fail","Test":"TestFunctional/parallel","Elapsed":0}
{"Time":"2023-05-31T11:48:00.640071-07:00","Action":"output","Test":"TestFunctional/delete_addon-resizer_images","Output":"    --- PASS: TestFunctional/delete_addon-resizer_images (0.18s)\n"}
{"Time":"2023-05-31T11:48:00.640072-07:00","Action":"pass","Test":"TestFunctional/delete_addon-resizer_images","Elapsed":0.18}
{"Time":"2023-05-31T11:48:00.640074-07:00","Action":"output","Test":"TestFunctional/delete_my-image_image","Output":"    --- PASS: TestFunctional/delete_my-image_image (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.640075-07:00","Action":"pass","Test":"TestFunctional/delete_my-image_image","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.640076-07:00","Action":"output","Test":"TestFunctional/delete_minikube_cached_images","Output":"    --- PASS: TestFunctional/delete_minikube_cached_images (0.04s)\n"}
{"Time":"2023-05-31T11:48:00.640079-07:00","Action":"pass","Test":"TestFunctional/delete_minikube_cached_images","Elapsed":0.04}
{"Time":"2023-05-31T11:48:00.64008-07:00","Action":"fail","Test":"TestFunctional","Elapsed":187.22}
{"Time":"2023-05-31T11:48:00.640082-07:00","Action":"run","Test":"TestGvisorAddon"}
{"Time":"2023-05-31T11:48:00.640083-07:00","Action":"output","Test":"TestGvisorAddon","Output":"=== RUN   TestGvisorAddon\n"}
{"Time":"2023-05-31T11:48:00.640084-07:00","Action":"output","Test":"TestGvisorAddon","Output":"    gvisor_addon_test.go:34: skipping test because --gvisor=false\n"}
{"Time":"2023-05-31T11:48:00.640086-07:00","Action":"output","Test":"TestGvisorAddon","Output":"--- SKIP: TestGvisorAddon (0.00s)\n"}
{"Time":"2023-05-31T11:48:00.640088-07:00","Action":"skip","Test":"TestGvisorAddon","Elapsed":0}
{"Time":"2023-05-31T11:48:00.64009-07:00","Action":"run","Test":"TestImageBuild"}
{"Time":"2023-05-31T11:48:00.640091-07:00","Action":"output","Test":"TestImageBuild","Output":"=== RUN   TestImageBuild\n"}
{"Time":"2023-05-31T11:48:00.640092-07:00","Action":"run","Test":"TestImageBuild/serial"}
{"Time":"2023-05-31T11:48:00.640094-07:00","Action":"output","Test":"TestImageBuild/serial","Output":"=== RUN   TestImageBuild/serial\n"}
{"Time":"2023-05-31T11:48:00.640095-07:00","Action":"run","Test":"TestImageBuild/serial/Setup"}
{"Time":"2023-05-31T11:48:00.640096-07:00","Action":"output","Test":"TestImageBuild/serial/Setup","Output":"=== RUN   TestImageBuild/serial/Setup\n"}
{"Time":"2023-05-31T11:48:00.640098-07:00","Action":"output","Test":"TestImageBuild/serial/Setup","Output":"    image_test.go:69: (dbg) Run:  out/minikube-darwin-arm64 start -p image-844000 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:48:30.2457-07:00","Action":"output","Test":"TestImageBuild/serial/Setup","Output":"    image_test.go:69: (dbg) Done: out/minikube-darwin-arm64 start -p image-844000 --driver=qemu2 : (29.606145958s)\n"}
{"Time":"2023-05-31T11:48:30.245718-07:00","Action":"run","Test":"TestImageBuild/serial/NormalBuild"}
{"Time":"2023-05-31T11:48:30.245721-07:00","Action":"output","Test":"TestImageBuild/serial/NormalBuild","Output":"=== RUN   TestImageBuild/serial/NormalBuild\n"}
{"Time":"2023-05-31T11:48:30.245736-07:00","Action":"output","Test":"TestImageBuild/serial/NormalBuild","Output":"    image_test.go:78: (dbg) Run:  out/minikube-darwin-arm64 image build -t aaa:latest ./testdata/image-build/test-normal -p image-844000\n"}
{"Time":"2023-05-31T11:48:32.082392-07:00","Action":"output","Test":"TestImageBuild/serial/NormalBuild","Output":"    image_test.go:78: (dbg) Done: out/minikube-darwin-arm64 image build -t aaa:latest ./testdata/image-build/test-normal -p image-844000: (1.836611s)\n"}
{"Time":"2023-05-31T11:48:32.082446-07:00","Action":"run","Test":"TestImageBuild/serial/BuildWithBuildArg"}
{"Time":"2023-05-31T11:48:32.082461-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"=== RUN   TestImageBuild/serial/BuildWithBuildArg\n"}
{"Time":"2023-05-31T11:48:32.082498-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    image_test.go:99: (dbg) Run:  out/minikube-darwin-arm64 image build -t aaa:latest --build-opt=build-arg=ENV_A=test_env_str --build-opt=no-cache ./testdata/image-build/test-arg -p image-844000\n"}
{"Time":"2023-05-31T11:48:32.451071-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    image_test.go:105: failed to pass build-args with args: \"out/minikube-darwin-arm64 image build -t aaa:latest --build-opt=build-arg=ENV_A=test_env_str --build-opt=no-cache ./testdata/image-build/test-arg -p image-844000\" : \n"}
{"Time":"2023-05-31T11:48:32.451084-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:48:32.451087-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tSending build context to Docker daemon  2.048kB\r\n"}
{"Time":"2023-05-31T11:48:32.451088-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStep 1/5 : FROM gcr.io/google-containers/alpine-with-bash:1.0\n"}
{"Time":"2023-05-31T11:48:32.45109-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e 822c13824dc2\n"}
{"Time":"2023-05-31T11:48:32.451092-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStep 2/5 : ARG ENV_A\n"}
{"Time":"2023-05-31T11:48:32.451093-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e [Warning] The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested\n"}
{"Time":"2023-05-31T11:48:32.451095-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e Running in ea50917ed91e\n"}
{"Time":"2023-05-31T11:48:32.451097-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRemoving intermediate container ea50917ed91e\n"}
{"Time":"2023-05-31T11:48:32.45111-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e 4cdeb10823de\n"}
{"Time":"2023-05-31T11:48:32.451111-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStep 3/5 : ARG ENV_B\n"}
{"Time":"2023-05-31T11:48:32.451112-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e [Warning] The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested\n"}
{"Time":"2023-05-31T11:48:32.451114-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e Running in 0cdc4c670be7\n"}
{"Time":"2023-05-31T11:48:32.451115-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRemoving intermediate container 0cdc4c670be7\n"}
{"Time":"2023-05-31T11:48:32.451116-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e 5c5d1fcb636e\n"}
{"Time":"2023-05-31T11:48:32.451118-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStep 4/5 : RUN echo \"test-build-arg\" $ENV_A $ENV_B\n"}
{"Time":"2023-05-31T11:48:32.45112-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e [Warning] The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested\n"}
{"Time":"2023-05-31T11:48:32.451121-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t ---\u003e Running in 3d146fa79121\n"}
{"Time":"2023-05-31T11:48:32.451122-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\u001b[91mexec /bin/sh: exec format error\n"}
{"Time":"2023-05-31T11:48:32.451123-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\u001b[0m\n"}
{"Time":"2023-05-31T11:48:32.451125-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \n"}
{"Time":"2023-05-31T11:48:32.451126-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:48:32.451127-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:48:32.451128-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDEPRECATED: The legacy builder is deprecated and will be removed in a future release.\n"}
{"Time":"2023-05-31T11:48:32.45113-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t            Install the buildx component to build images with BuildKit:\n"}
{"Time":"2023-05-31T11:48:32.451131-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t            https://docs.docker.com/go/buildx/\n"}
{"Time":"2023-05-31T11:48:32.451132-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.451134-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tThe command '/bin/sh -c echo \"test-build-arg\" $ENV_A $ENV_B' returned a non-zero code: 1\n"}
{"Time":"2023-05-31T11:48:32.451136-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \n"}
{"Time":"2023-05-31T11:48:32.451138-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:48:32.45114-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:48:32.451143-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p image-844000 -n image-844000\n"}
{"Time":"2023-05-31T11:48:32.529247-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:244: \u003c\u003c\u003c TestImageBuild/serial/BuildWithBuildArg FAILED: start of post-mortem logs \u003c\u003c\u003c\n"}
{"Time":"2023-05-31T11:48:32.529261-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:245: ======\u003e  post-mortem[TestImageBuild/serial/BuildWithBuildArg]: minikube logs \u003c======\n"}
{"Time":"2023-05-31T11:48:32.529265-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:247: (dbg) Run:  out/minikube-darwin-arm64 -p image-844000 logs -n 25\n"}
{"Time":"2023-05-31T11:48:32.938926-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:252: TestImageBuild/serial/BuildWithBuildArg logs: \n"}
{"Time":"2023-05-31T11:48:32.938939-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:48:32.938942-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.938949-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T11:48:32.938951-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* |----------------|--------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:48:32.938953-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|    Command     |                                                        Args                                                        |      Profile      |  User   | Version |     Start Time      |      End Time       |\n"}
{"Time":"2023-05-31T11:48:32.938954-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|----------------|--------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:48:32.938956-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| mount          | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938958-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount3 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938959-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=1                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938961-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| ssh            | functional-730000 ssh findmnt                                                                                      | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938963-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -T /mount1                                                                                                         |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938964-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| mount          | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938966-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestFunctionalparallelMountCmdVerifyCleanup2736934691/001:/mount1 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938967-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=1                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938969-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| ssh            | functional-730000 ssh findmnt                                                                                      | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.938971-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -T /mount1                                                                                                         |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938972-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| ssh            | functional-730000 ssh findmnt                                                                                      | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.938974-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -T /mount2                                                                                                         |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938975-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| ssh            | functional-730000 ssh findmnt                                                                                      | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.938977-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -T /mount3                                                                                                         |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938979-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| mount          | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.93898-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --kill=true                                                                                                        |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938982-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| start          | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938984-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --dry-run --memory                                                                                                 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.93899-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | 250MB --alsologtostderr                                                                                            |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938992-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --driver=qemu2                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938993-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| start          | -p functional-730000 --dry-run                                                                                     | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938995-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=1                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938996-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --driver=qemu2                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.938998-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| start          | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.938999-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --dry-run --memory                                                                                                 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939001-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | 250MB --alsologtostderr                                                                                            |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939003-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --driver=qemu2                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939004-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| dashboard      | --url --port 36195                                                                                                 | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939006-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -p functional-730000                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939007-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=1                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939009-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| update-context | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939011-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | update-context                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939012-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=2                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939014-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| update-context | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939015-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | update-context                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939017-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=2                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939018-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| update-context | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.93902-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | update-context                                                                                                     |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939022-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr -v=2                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939023-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939025-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | image ls --format short                                                                                            |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939027-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939028-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.93903-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | image ls --format json                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939032-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939033-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939035-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | image ls --format table                                                                                            |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939036-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939038-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000                                                                                                  | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.93904-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | image ls --format yaml                                                                                             |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939041-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --alsologtostderr                                                                                                  |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939043-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| ssh            | functional-730000 ssh pgrep                                                                                        | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:48:32.939045-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | buildkitd                                                                                                          |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939046-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000 image build -t                                                                                   | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939048-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | localhost/my-image:functional-730000                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939049-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | testdata/build --alsologtostderr                                                                                   |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939051-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | functional-730000 image ls                                                                                         | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939053-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| delete         | -p functional-730000                                                                                               | functional-730000 | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939054-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| start          | -p image-844000 --driver=qemu2                                                                                     | image-844000      | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939056-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                |                                                                                                                    |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939057-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | build -t aaa:latest                                                                                                | image-844000      | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939059-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | ./testdata/image-build/test-normal                                                                                 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939061-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | -p image-844000                                                                                                    |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939062-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t| image          | build -t aaa:latest                                                                                                | image-844000      | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:48:32.939066-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --build-opt=build-arg=ENV_A=test_env_str                                                                           |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939068-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | --build-opt=no-cache                                                                                               |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.93907-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | ./testdata/image-build/test-arg -p                                                                                 |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939071-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|                | image-844000                                                                                                       |                   |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:48:32.939073-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t|----------------|--------------------------------------------------------------------------------------------------------------------|-------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:48:32.939074-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939076-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.939077-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T11:48:32.939078-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* Log file created at: 2023/05/31 11:48:00\n"}
{"Time":"2023-05-31T11:48:32.93908-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T11:48:32.939081-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T11:48:32.939082-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T11:48:32.939084-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.671627    2201 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:48:32.939085-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.671758    2201 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:48:32.939086-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.671760    2201 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:48:32.939088-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.671762    2201 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:48:32.939089-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.671835    2201 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:48:32.939092-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.672933    2201 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:48:32.939093-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.689953    2201 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1051,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:48:32.939096-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 11:48:00.690021    2201 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:48:32.939097-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.693644    2201 out.go:177] * [image-844000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:48:32.939099-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.697637    2201 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:48:32.9391-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.700656    2201 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:48:32.939101-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.697695    2201 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:48:32.939103-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.707626    2201 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:48:32.939104-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.710594    2201 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:48:32.939106-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.713622    2201 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:48:32.939107-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.716519    2201 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:48:32.939109-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.719745    2201 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:48:32.93911-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.723629    2201 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:48:32.939112-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.730645    2201 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:48:32.939113-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.730647    2201 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:48:32.939115-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.730653    2201 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:48:32.939116-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.730728    2201 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:48:32.93912-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.733619    2201 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:48:32.939122-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736794    2201 start_flags.go:382] Using suggested 4000MB memory alloc based on sys=16384MB, container=0MB\n"}
{"Time":"2023-05-31T11:48:32.939123-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736871    2201 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T11:48:32.939125-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736883    2201 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:48:32.939126-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736889    2201 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:48:32.939128-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736893    2201 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:48:32.939129-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736900    2201 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:48:32.939132-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{Name:image-844000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:image-844000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRIS"}
{"Time":"2023-05-31T11:48:32.939136-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"ocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:48:32.939138-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.736988    2201 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.93914-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.743649    2201 out.go:177] * Starting control plane node image-844000 in cluster image-844000\n"}
{"Time":"2023-05-31T11:48:32.939141-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747567    2201 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:48:32.939143-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747589    2201 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:48:32.939145-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747601    2201 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:48:32.939146-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747662    2201 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:48:32.939148-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747667    2201 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:48:32.939149-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747862    2201 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/config.json ...\n"}
{"Time":"2023-05-31T11:48:32.939151-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.747872    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/config.json: {Name:mk6e254fe19cad0285ceda0a4a385f2aa86fde6a Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939152-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.748063    2201 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:48:32.939154-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.748073    2201 start.go:364] acquiring machines lock for image-844000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939155-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.748100    2201 start.go:368] acquired machines lock for \"image-844000\" in 23.208µs\n"}
{"Time":"2023-05-31T11:48:32.939159-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.748109    2201 start.go:93] Provisioning new machine with config: \u0026{Name:image-844000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig"}
{"Time":"2023-05-31T11:48:32.939164-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":":{KubernetesVersion:v1.27.2 ClusterName:image-844000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: D"}
{"Time":"2023-05-31T11:48:32.939167-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"isableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:48:32.939168-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.748133    2201 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:48:32.93917-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.755614    2201 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:48:32.939171-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778139    2201 start.go:159] libmachine.API.Create for \"image-844000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:48:32.939173-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778163    2201 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:48:32.939174-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778218    2201 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:48:32.939176-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778368    2201 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:48:32.939177-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778380    2201 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:48:32.939178-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778427    2201 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:48:32.93918-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778521    2201 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:48:32.939181-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778532    2201 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:48:32.939182-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:00.778844    2201 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:48:32.939184-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.132912    2201 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:48:32.939188-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.187666    2201 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:48:32.93919-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.187671    2201 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:48:32.939192-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.187816    2201 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2\n"}
{"Time":"2023-05-31T11:48:32.939193-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.259514    2201 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:48:32.939195-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.259530    2201 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:48:32.939196-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.259594    2201 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:48:32.939198-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.266815    2201 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:48:32.939199-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.9392-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.266824    2201 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:48:32.939202-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.266844    2201 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2\n"}
{"Time":"2023-05-31T11:48:32.939203-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.266850    2201 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:48:32.939205-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.266888    2201 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 4000 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/qemu.pid -device virtio-net-pci,netdev=net0,mac=8e:ee:eb:07:18:3e -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/disk.qcow2\n"}
{"Time":"2023-05-31T11:48:32.939208-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.321737    2201 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:48:32.939209-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.321757    2201 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:48:32.93921-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.321761    2201 main.go:141] libmachine: Attempt 0\n"}
{"Time":"2023-05-31T11:48:32.939212-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.321785    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939213-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.325953    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939214-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.325970    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939216-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.325979    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939218-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:01.325983    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.939219-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328107    2201 main.go:141] libmachine: Attempt 1\n"}
{"Time":"2023-05-31T11:48:32.93922-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328165    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939222-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328635    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939223-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328678    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939225-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328705    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939226-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:03.328752    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.939229-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329522    2201 main.go:141] libmachine: Attempt 2\n"}
{"Time":"2023-05-31T11:48:32.93923-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329539    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939232-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329660    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939233-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329670    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939235-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329675    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939236-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:05.329680    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.939238-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331683    2201 main.go:141] libmachine: Attempt 3\n"}
{"Time":"2023-05-31T11:48:32.939242-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331688    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939244-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331749    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939245-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331760    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939247-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331766    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939248-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:07.331769    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.93925-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333780    2201 main.go:141] libmachine: Attempt 4\n"}
{"Time":"2023-05-31T11:48:32.939251-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333790    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939253-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333838    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939254-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333845    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939255-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333858    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939257-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:09.333863    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.939258-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.335883    2201 main.go:141] libmachine: Attempt 5\n"}
{"Time":"2023-05-31T11:48:32.93926-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.335894    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.939261-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.335982    2201 main.go:141] libmachine: Found 3 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939263-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.335990    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:48:32.939264-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.336003    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:48:32.939266-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:11.336008    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:48:32.939267-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338050    2201 main.go:141] libmachine: Attempt 6\n"}
{"Time":"2023-05-31T11:48:32.939268-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338068    2201 main.go:141] libmachine: Searching for 8e:ee:eb:7:18:3e in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:48:32.93927-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338191    2201 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:48:32.939271-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338207    2201 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:48:32.939273-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338210    2201 main.go:141] libmachine: Found match: 8e:ee:eb:7:18:3e\n"}
{"Time":"2023-05-31T11:48:32.939274-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338220    2201 main.go:141] libmachine: IP: 192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.939276-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:13.338224    2201 main.go:141] libmachine: Waiting for VM to start (ssh -p 22 docker@192.168.105.5)...\n"}
{"Time":"2023-05-31T11:48:32.939284-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.357456    2201 machine.go:88] provisioning docker machine ...\n"}
{"Time":"2023-05-31T11:48:32.939286-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.357494    2201 buildroot.go:166] provisioning hostname \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.939287-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.357774    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939289-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.358779    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.93929-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.358795    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939291-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tsudo hostname image-844000 \u0026\u0026 echo \"image-844000\" | sudo tee /etc/hostname\n"}
{"Time":"2023-05-31T11:48:32.939293-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.444886    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: image-844000\n"}
{"Time":"2023-05-31T11:48:32.939295-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939296-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.445004    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939298-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.445471    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939299-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.445482    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939303-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939304-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\tif ! grep -xq '.*\\simage-844000' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:48:32.939305-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\t\tif grep -xq '127.0.1.1\\s.*' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:48:32.939307-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\t\t\tsudo sed -i 's/^127.0.1.1\\s.*/127.0.1.1 image-844000/g' /etc/hosts;\n"}
{"Time":"2023-05-31T11:48:32.939308-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\t\telse \n"}
{"Time":"2023-05-31T11:48:32.93931-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\t\t\techo '127.0.1.1 image-844000' | sudo tee -a /etc/hosts; \n"}
{"Time":"2023-05-31T11:48:32.939311-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\t\tfi\n"}
{"Time":"2023-05-31T11:48:32.939312-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\t\tfi\n"}
{"Time":"2023-05-31T11:48:32.939314-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511422    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: \n"}
{"Time":"2023-05-31T11:48:32.939316-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511437    2201 buildroot.go:172] set auth options {CertDir:/Users/jenkins/minikube-integration/16569-1035/.minikube CaCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ServerKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem ClientKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/jenkins/minikube-integration/16569-1035/.minikube}\n"}
{"Time":"2023-05-31T11:48:32.939318-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511449    2201 buildroot.go:174] setting up certificates\n"}
{"Time":"2023-05-31T11:48:32.939319-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511460    2201 provision.go:83] configureAuth start\n"}
{"Time":"2023-05-31T11:48:32.939321-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511465    2201 provision.go:138] copyHostCerts\n"}
{"Time":"2023-05-31T11:48:32.939322-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511596    2201 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem, removing ...\n"}
{"Time":"2023-05-31T11:48:32.939324-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511604    2201 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem\n"}
{"Time":"2023-05-31T11:48:32.939325-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.511783    2201 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939327-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512082    2201 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem, removing ...\n"}
{"Time":"2023-05-31T11:48:32.939329-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512085    2201 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem\n"}
{"Time":"2023-05-31T11:48:32.93933-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512137    2201 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939332-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512282    2201 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem, removing ...\n"}
{"Time":"2023-05-31T11:48:32.939333-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512284    2201 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem\n"}
{"Time":"2023-05-31T11:48:32.939335-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512340    2201 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939337-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.512906    2201 provision.go:112] generating server cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ca-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem private-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem org=jenkins.image-844000 san=[192.168.105.5 192.168.105.5 localhost 127.0.0.1 minikube image-844000]\n"}
{"Time":"2023-05-31T11:48:32.939339-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.624339    2201 provision.go:172] copyRemoteCerts\n"}
{"Time":"2023-05-31T11:48:32.939341-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.624378    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker\n"}
{"Time":"2023-05-31T11:48:32.939342-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.624386    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.939346-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.652667    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem --\u003e /etc/docker/server-key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939347-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.659495    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /etc/docker/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939349-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.666054    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem --\u003e /etc/docker/server.pem (1216 bytes)\n"}
{"Time":"2023-05-31T11:48:32.93935-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.673116    2201 provision.go:86] duration metric: configureAuth took 161.648542ms\n"}
{"Time":"2023-05-31T11:48:32.939352-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.676264    2201 buildroot.go:189] setting minikube options for container-runtime\n"}
{"Time":"2023-05-31T11:48:32.939354-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.676405    2201 config.go:182] Loaded profile config \"image-844000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.939355-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.676444    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939356-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.676657    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939358-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.676660    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939359-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tdf --output=fstype / | tail -n 1\n"}
{"Time":"2023-05-31T11:48:32.939361-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.726955    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: tmpfs\n"}
{"Time":"2023-05-31T11:48:32.939362-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939363-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.726958    2201 buildroot.go:70] root file system type: tmpfs\n"}
{"Time":"2023-05-31T11:48:32.939365-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.727025    2201 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...\n"}
{"Time":"2023-05-31T11:48:32.939366-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.727078    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939368-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.727320    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.93937-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.727354    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939371-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tsudo mkdir -p /lib/systemd/system \u0026\u0026 printf %!s(MISSING) \"[Unit]\n"}
{"Time":"2023-05-31T11:48:32.939373-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:48:32.939374-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:48:32.939375-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:48:32.939377-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:48:32.939378-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:48:32.939379-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:48:32.939382-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939383-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:48:32.939385-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:48:32.939386-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:48:32.939387-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939388-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939389-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939391-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:48:32.939392-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:48:32.939394-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:48:32.939395-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:48:32.939396-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:48:32.939398-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:48:32.939399-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:48:32.9394-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939402-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:48:32.939404-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:48:32.939405-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:48:32.939407-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:48:32.939409-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecReload=/bin/kill -s HUP \\$MAINPID\n"}
{"Time":"2023-05-31T11:48:32.93941-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939412-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:48:32.939413-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:48:32.939414-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:48:32.939416-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:48:32.939417-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:48:32.939418-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939419-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:48:32.939421-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:48:32.939422-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:48:32.939423-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:48:32.939425-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939426-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:48:32.939427-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:48:32.939428-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.93943-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:48:32.939431-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:48:32.939432-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939433-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:48:32.939434-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:48:32.939436-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\" | sudo tee /lib/systemd/system/docker.service.new\n"}
{"Time":"2023-05-31T11:48:32.939437-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.783231    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: [Unit]\n"}
{"Time":"2023-05-31T11:48:32.939438-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:48:32.93944-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:48:32.939441-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:48:32.939443-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:48:32.939444-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:48:32.939445-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:48:32.939446-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939448-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:48:32.939451-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:48:32.939452-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:48:32.939453-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939455-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939456-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939457-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:48:32.939458-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:48:32.939461-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:48:32.939462-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:48:32.939463-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:48:32.939481-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:48:32.939485-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:48:32.939487-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939489-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:48:32.93949-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:48:32.939492-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:48:32.939493-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:48:32.939495-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecReload=/bin/kill -s HUP $MAINPID\n"}
{"Time":"2023-05-31T11:48:32.939496-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939498-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:48:32.939499-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:48:32.939501-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:48:32.939502-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:48:32.939503-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:48:32.939505-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939506-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:48:32.939507-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:48:32.93951-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:48:32.939511-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:48:32.939512-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939514-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:48:32.939569-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:48:32.939571-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939573-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:48:32.939574-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:48:32.939575-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939576-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:48:32.939578-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:48:32.939579-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.93958-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.783271    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939582-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.783494    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939583-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:15.783500    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939585-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tsudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload \u0026\u0026 sudo systemctl -f enable docker \u0026\u0026 sudo systemctl -f restart docker; }\n"}
{"Time":"2023-05-31T11:48:32.939586-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110122    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: diff: can't stat '/lib/systemd/system/docker.service': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.939588-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tCreated symlink /etc/systemd/system/multi-user.target.wants/docker.service → /usr/lib/systemd/system/docker.service.\n"}
{"Time":"2023-05-31T11:48:32.939589-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939591-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110130    2201 machine.go:91] provisioned docker machine in 752.670125ms\n"}
{"Time":"2023-05-31T11:48:32.939592-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110134    2201 client.go:171] LocalClient.Create took 15.332185208s\n"}
{"Time":"2023-05-31T11:48:32.939594-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110146    2201 start.go:167] duration metric: libmachine.API.Create for \"image-844000\" took 15.332226417s\n"}
{"Time":"2023-05-31T11:48:32.939718-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110152    2201 start.go:300] post-start starting for \"image-844000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:48:32.93974-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110154    2201 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]\n"}
{"Time":"2023-05-31T11:48:32.939742-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110213    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:48:32.939744-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.110221    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.939745-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.141441    2201 ssh_runner.go:195] Run: cat /etc/os-release\n"}
{"Time":"2023-05-31T11:48:32.939747-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.142851    2201 info.go:137] Remote host: Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:48:32.939748-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.142860    2201 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/addons for local assets ...\n"}
{"Time":"2023-05-31T11:48:32.93975-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.142929    2201 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/files for local assets ...\n"}
{"Time":"2023-05-31T11:48:32.939751-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.143029    2201 filesync.go:149] local asset: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem -\u003e 14772.pem in /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:48:32.939753-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.143143    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:48:32.939754-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.145560    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem --\u003e /etc/ssl/certs/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939759-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.152497    2201 start.go:303] post-start completed in 42.342708ms\n"}
{"Time":"2023-05-31T11:48:32.939761-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.152825    2201 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/config.json ...\n"}
{"Time":"2023-05-31T11:48:32.939763-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.152968    2201 start.go:128] duration metric: createHost completed in 15.405050375s\n"}
{"Time":"2023-05-31T11:48:32.939809-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.152994    2201 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:48:32.939813-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.153218    2201 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x1011bc6d0] 0x1011bf130 \u003cnil\u003e  [] 0s} 192.168.105.5 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.939815-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.153221    2201 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:48:32.939817-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tdate +%!s(MISSING).%!N(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.939818-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202408    2201 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: 1685558896.494325585\n"}
{"Time":"2023-05-31T11:48:32.93982-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939825-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202411    2201 fix.go:207] guest clock: 1685558896.494325585\n"}
{"Time":"2023-05-31T11:48:32.939827-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202414    2201 fix.go:220] Guest: 2023-05-31 11:48:16.494325585 -0700 PDT Remote: 2023-05-31 11:48:16.15297 -0700 PDT m=+15.503039793 (delta=341.355585ms)\n"}
{"Time":"2023-05-31T11:48:32.939828-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202423    2201 fix.go:191] guest clock delta is within tolerance: 341.355585ms\n"}
{"Time":"2023-05-31T11:48:32.93983-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202425    2201 start.go:83] releasing machines lock for \"image-844000\", held for 15.454541083s\n"}
{"Time":"2023-05-31T11:48:32.939831-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202748    2201 ssh_runner.go:195] Run: cat /version.json\n"}
{"Time":"2023-05-31T11:48:32.939833-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202754    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.939834-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202763    2201 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/\n"}
{"Time":"2023-05-31T11:48:32.939836-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.202782    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.939837-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.277319    2201 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:48:32.939839-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.279680    2201 ssh_runner.go:195] Run: sh -c \"stat /etc/cni/net.d/*loopback.conf*\"\n"}
{"Time":"2023-05-31T11:48:32.939881-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 11:48:16.281670    2201 cni.go:208] loopback cni configuration skipped: \"/etc/cni/net.d/*loopback.conf*\" not found\n"}
{"Time":"2023-05-31T11:48:32.939884-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.281701    2201 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf \"%!p(MISSING), \" -exec sh -c \"sudo mv {} {}.mk_disabled\" ;\n"}
{"Time":"2023-05-31T11:48:32.939885-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.287157    2201 cni.go:261] disabled [/etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)\n"}
{"Time":"2023-05-31T11:48:32.939887-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.287164    2201 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:48:32.939888-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.287241    2201 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:48:32.93989-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.295707    2201 docker.go:633] Got preloaded images: \n"}
{"Time":"2023-05-31T11:48:32.939891-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.295711    2201 docker.go:639] registry.k8s.io/kube-apiserver:v1.27.2 wasn't preloaded\n"}
{"Time":"2023-05-31T11:48:32.939892-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.295759    2201 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:48:32.939894-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.298796    2201 ssh_runner.go:195] Run: which lz4\n"}
{"Time":"2023-05-31T11:48:32.939895-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.300091    2201 ssh_runner.go:195] Run: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:48:32.939897-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.301415    2201 ssh_runner.go:352] existence check for /preloaded.tar.lz4: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4: Process exited with status 1\n"}
{"Time":"2023-05-31T11:48:32.939898-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:48:32.9399-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.939901-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:48:32.939902-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstat: cannot statx '/preloaded.tar.lz4': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.939904-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:16.301425    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 --\u003e /preloaded.tar.lz4 (343635669 bytes)\n"}
{"Time":"2023-05-31T11:48:32.939906-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:17.603843    2201 docker.go:597] Took 1.303811 seconds to copy over tarball\n"}
{"Time":"2023-05-31T11:48:32.939982-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:17.603899    2201 ssh_runner.go:195] Run: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:48:32.939984-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.635267    2201 ssh_runner.go:235] Completed: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4: (1.031371625s)\n"}
{"Time":"2023-05-31T11:48:32.939986-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.635276    2201 ssh_runner.go:146] rm: /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:48:32.939987-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.650361    2201 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:48:32.939989-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.653354    2201 ssh_runner.go:362] scp memory --\u003e /var/lib/docker/image/overlay2/repositories.json (2629 bytes)\n"}
{"Time":"2023-05-31T11:48:32.93999-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.658356    2201 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:48:32.939993-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:18.723470    2201 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:48:32.939994-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.138263    2201 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.414801958s)\n"}
{"Time":"2023-05-31T11:48:32.939996-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.138280    2201 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:48:32.939997-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.138356    2201 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %!s(MISSING) \"runtime-endpoint: unix:///run/containerd/containerd.sock\n"}
{"Time":"2023-05-31T11:48:32.940001-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:48:32.940003-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.143544    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)sandbox_image = .*$|\\1sandbox_image = \"registry.k8s.io/pause:3.9\"|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.940004-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.146276    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\\1restrict_oom_score_adj = false|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.940006-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.149262    2201 containerd.go:145] configuring containerd to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:48:32.940054-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.149287    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\\1SystemdCgroup = false|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.940081-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.152579    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runtime.v1.linux\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.94009-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.155853    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.94012-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.158757    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runc.v1\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.940122-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.161594    2201 ssh_runner.go:195] Run: sh -c \"sudo rm -rf /etc/cni/net.mk\"\n"}
{"Time":"2023-05-31T11:48:32.940124-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.165034    2201 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)conf_dir = .*$|\\1conf_dir = \"/etc/cni/net.d\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:48:32.940126-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.168394    2201 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables\n"}
{"Time":"2023-05-31T11:48:32.940127-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.171214    2201 ssh_runner.go:195] Run: sudo sh -c \"echo 1 \u003e /proc/sys/net/ipv4/ip_forward\"\n"}
{"Time":"2023-05-31T11:48:32.940129-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.173803    2201 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:48:32.94013-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.236262    2201 ssh_runner.go:195] Run: sudo systemctl restart containerd\n"}
{"Time":"2023-05-31T11:48:32.940133-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.242352    2201 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:48:32.940134-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.242413    2201 ssh_runner.go:195] Run: sudo systemctl cat docker.service\n"}
{"Time":"2023-05-31T11:48:32.940135-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.247659    2201 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:48:32.940137-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.252687    2201 ssh_runner.go:195] Run: sudo systemctl stop -f containerd\n"}
{"Time":"2023-05-31T11:48:32.940138-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.263844    2201 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:48:32.940164-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.268407    2201 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:48:32.940166-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.273105    2201 ssh_runner.go:195] Run: sudo systemctl stop -f crio\n"}
{"Time":"2023-05-31T11:48:32.940167-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.336704    2201 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:48:32.940169-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.342553    2201 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %!s(MISSING) \"runtime-endpoint: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:48:32.940171-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:48:32.940172-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.348503    2201 ssh_runner.go:195] Run: which cri-dockerd\n"}
{"Time":"2023-05-31T11:48:32.940173-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.350034    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d\n"}
{"Time":"2023-05-31T11:48:32.940175-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.353089    2201 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)\n"}
{"Time":"2023-05-31T11:48:32.940177-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.358328    2201 ssh_runner.go:195] Run: sudo systemctl unmask docker.service\n"}
{"Time":"2023-05-31T11:48:32.940178-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.420812    2201 ssh_runner.go:195] Run: sudo systemctl enable docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940179-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.484474    2201 docker.go:532] configuring docker to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:48:32.940184-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.484484    2201 ssh_runner.go:362] scp memory --\u003e /etc/docker/daemon.json (144 bytes)\n"}
{"Time":"2023-05-31T11:48:32.940185-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.489926    2201 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:48:32.940188-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:20.542924    2201 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:48:32.940189-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.705583    2201 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.162662875s)\n"}
{"Time":"2023-05-31T11:48:32.940191-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.705631    2201 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940192-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.762976    2201 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940247-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.827269    2201 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940254-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.887946    2201 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:48:32.940269-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.949759    2201 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940271-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:21.957529    2201 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:48:32.940273-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.016439    2201 ssh_runner.go:195] Run: sudo systemctl restart cri-docker\n"}
{"Time":"2023-05-31T11:48:32.940274-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.039461    2201 start.go:528] Will wait 60s for socket path /var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:48:32.940275-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.039539    2201 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:48:32.940277-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.041722    2201 start.go:549] Will wait 60s for crictl version\n"}
{"Time":"2023-05-31T11:48:32.940281-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.041761    2201 ssh_runner.go:195] Run: which crictl\n"}
{"Time":"2023-05-31T11:48:32.940282-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.043996    2201 ssh_runner.go:195] Run: sudo /usr/bin/crictl version\n"}
{"Time":"2023-05-31T11:48:32.940283-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.067660    2201 start.go:565] Version:  0.1.0\n"}
{"Time":"2023-05-31T11:48:32.940285-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRuntimeName:  docker\n"}
{"Time":"2023-05-31T11:48:32.940286-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRuntimeVersion:  24.0.1\n"}
{"Time":"2023-05-31T11:48:32.940287-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRuntimeApiVersion:  v1alpha2\n"}
{"Time":"2023-05-31T11:48:32.940289-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.067724    2201 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:48:32.94029-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.075079    2201 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:48:32.940292-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.090615    2201 out.go:204] * Preparing Kubernetes v1.27.2 on Docker 24.0.1 ...\n"}
{"Time":"2023-05-31T11:48:32.940293-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.090761    2201 ssh_runner.go:195] Run: grep 192.168.105.1\thost.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:48:32.940295-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.092178    2201 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\thost.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.1\thost.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:48:32.940344-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.096319    2201 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:48:32.940362-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.096357    2201 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:48:32.940364-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.107494    2201 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:48:32.940366-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940367-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940369-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.94037-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940371-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:48:32.940372-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:48:32.940374-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:48:32.940375-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:48:32.940376-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.940378-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:48:32.94038-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.107499    2201 docker.go:563] Images already preloaded, skipping extraction\n"}
{"Time":"2023-05-31T11:48:32.940382-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.107550    2201 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:48:32.940383-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.113022    2201 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:48:32.940384-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940386-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940387-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940388-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.94039-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T11:48:32.940428-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T11:48:32.940432-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tregistry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T11:48:32.940434-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:48:32.940436-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.940438-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:48:32.940439-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.113033    2201 cache_images.go:84] Images are preloaded, skipping loading\n"}
{"Time":"2023-05-31T11:48:32.94044-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.113076    2201 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}\n"}
{"Time":"2023-05-31T11:48:32.940442-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120584    2201 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:48:32.940443-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120589    2201 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:48:32.940445-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120593    2201 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16\n"}
{"Time":"2023-05-31T11:48:32.940448-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120600    2201 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.105.5 APIServerPort:8443 KubernetesVersion:v1.27.2 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:image-844000 NodeName:image-844000 DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:[\"127.0.0.1\", \"localhost\", \"192.168.105.5\"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.105.5 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kube"}
{"Time":"2023-05-31T11:48:32.940451-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"rnetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}\n"}
{"Time":"2023-05-31T11:48:32.940452-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120658    2201 kubeadm.go:181] kubeadm config:\n"}
{"Time":"2023-05-31T11:48:32.940454-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta3\n"}
{"Time":"2023-05-31T11:48:32.940455-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tkind: InitConfiguration\n"}
{"Time":"2023-05-31T11:48:32.940512-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tlocalAPIEndpoint:\n"}
{"Time":"2023-05-31T11:48:32.940518-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  advertiseAddress: 192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.940519-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  bindPort: 8443\n"}
{"Time":"2023-05-31T11:48:32.940521-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tbootstrapTokens:\n"}
{"Time":"2023-05-31T11:48:32.940522-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  - groups:\n"}
{"Time":"2023-05-31T11:48:32.940523-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t      - system:bootstrappers:kubeadm:default-node-token\n"}
{"Time":"2023-05-31T11:48:32.940524-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    ttl: 24h0m0s\n"}
{"Time":"2023-05-31T11:48:32.940529-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    usages:\n"}
{"Time":"2023-05-31T11:48:32.94053-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t      - signing\n"}
{"Time":"2023-05-31T11:48:32.940531-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t      - authentication\n"}
{"Time":"2023-05-31T11:48:32.940538-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tnodeRegistration:\n"}
{"Time":"2023-05-31T11:48:32.940539-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  criSocket: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:48:32.94054-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  name: \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.940542-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  kubeletExtraArgs:\n"}
{"Time":"2023-05-31T11:48:32.940543-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    node-ip: 192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.940544-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  taints: []\n"}
{"Time":"2023-05-31T11:48:32.940546-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t---\n"}
{"Time":"2023-05-31T11:48:32.940547-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta3\n"}
{"Time":"2023-05-31T11:48:32.940548-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tkind: ClusterConfiguration\n"}
{"Time":"2023-05-31T11:48:32.94055-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tapiServer:\n"}
{"Time":"2023-05-31T11:48:32.940551-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  certSANs: [\"127.0.0.1\", \"localhost\", \"192.168.105.5\"]\n"}
{"Time":"2023-05-31T11:48:32.940552-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:48:32.940554-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    enable-admission-plugins: \"NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\"\n"}
{"Time":"2023-05-31T11:48:32.940555-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tcontrollerManager:\n"}
{"Time":"2023-05-31T11:48:32.940556-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:48:32.940614-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    allocate-node-cidrs: \"true\"\n"}
{"Time":"2023-05-31T11:48:32.94062-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:48:32.940624-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tscheduler:\n"}
{"Time":"2023-05-31T11:48:32.94063-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:48:32.940634-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:48:32.940637-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tcertificatesDir: /var/lib/minikube/certs\n"}
{"Time":"2023-05-31T11:48:32.94064-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tclusterName: mk\n"}
{"Time":"2023-05-31T11:48:32.940644-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tcontrolPlaneEndpoint: control-plane.minikube.internal:8443\n"}
{"Time":"2023-05-31T11:48:32.940648-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tetcd:\n"}
{"Time":"2023-05-31T11:48:32.940663-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  local:\n"}
{"Time":"2023-05-31T11:48:32.940665-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    dataDir: /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:48:32.940666-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    extraArgs:\n"}
{"Time":"2023-05-31T11:48:32.940668-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t      proxy-refresh-interval: \"70000\"\n"}
{"Time":"2023-05-31T11:48:32.940669-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tkubernetesVersion: v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.94067-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tnetworking:\n"}
{"Time":"2023-05-31T11:48:32.940672-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  dnsDomain: cluster.local\n"}
{"Time":"2023-05-31T11:48:32.940674-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  podSubnet: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:48:32.940675-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  serviceSubnet: 10.96.0.0/12\n"}
{"Time":"2023-05-31T11:48:32.940676-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t---\n"}
{"Time":"2023-05-31T11:48:32.940678-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tapiVersion: kubelet.config.k8s.io/v1beta1\n"}
{"Time":"2023-05-31T11:48:32.940679-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tkind: KubeletConfiguration\n"}
{"Time":"2023-05-31T11:48:32.94068-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tauthentication:\n"}
{"Time":"2023-05-31T11:48:32.940682-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  x509:\n"}
{"Time":"2023-05-31T11:48:32.940683-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t    clientCAFile: /var/lib/minikube/certs/ca.crt\n"}
{"Time":"2023-05-31T11:48:32.940685-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tcgroupDriver: cgroupfs\n"}
{"Time":"2023-05-31T11:48:32.940686-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \thairpinMode: hairpin-veth\n"}
{"Time":"2023-05-31T11:48:32.940688-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \truntimeRequestTimeout: 15m\n"}
{"Time":"2023-05-31T11:48:32.940689-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tclusterDomain: \"cluster.local\"\n"}
{"Time":"2023-05-31T11:48:32.940691-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# disable disk resource management by default\n"}
{"Time":"2023-05-31T11:48:32.940692-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \timageGCHighThresholdPercent: 100\n"}
{"Time":"2023-05-31T11:48:32.940693-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tevictionHard:\n"}
{"Time":"2023-05-31T11:48:32.940695-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  nodefs.available: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.940696-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  nodefs.inodesFree: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.940698-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  imagefs.available: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.940699-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tfailSwapOn: false\n"}
{"Time":"2023-05-31T11:48:32.9407-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstaticPodPath: /etc/kubernetes/manifests\n"}
{"Time":"2023-05-31T11:48:32.940701-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t---\n"}
{"Time":"2023-05-31T11:48:32.940703-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tapiVersion: kubeproxy.config.k8s.io/v1alpha1\n"}
{"Time":"2023-05-31T11:48:32.940704-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tkind: KubeProxyConfiguration\n"}
{"Time":"2023-05-31T11:48:32.940705-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tclusterCIDR: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:48:32.940707-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tmetricsBindAddress: 0.0.0.0:10249\n"}
{"Time":"2023-05-31T11:48:32.940708-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tconntrack:\n"}
{"Time":"2023-05-31T11:48:32.940709-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  maxPerCore: 0\n"}
{"Time":"2023-05-31T11:48:32.940711-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_established\"\n"}
{"Time":"2023-05-31T11:48:32.940712-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  tcpEstablishedTimeout: 0s\n"}
{"Time":"2023-05-31T11:48:32.940714-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_close\"\n"}
{"Time":"2023-05-31T11:48:32.940718-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  tcpCloseWaitTimeout: 0s\n"}
{"Time":"2023-05-31T11:48:32.940719-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.94072-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120696    2201 kubeadm.go:971] kubelet [Unit]\n"}
{"Time":"2023-05-31T11:48:32.940791-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tWants=docker.socket\n"}
{"Time":"2023-05-31T11:48:32.940798-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.940801-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:48:32.940804-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:48:32.940808-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tExecStart=/var/lib/minikube/binaries/v1.27.2/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=image-844000 --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.940812-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.940815-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:48:32.940819-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t config:\n"}
{"Time":"2023-05-31T11:48:32.940846-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{KubernetesVersion:v1.27.2 ClusterName:image-844000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}\n"}
{"Time":"2023-05-31T11:48:32.940848-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.120737    2201 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.940851-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.124102    2201 binaries.go:44] Found k8s binaries, skipping transfer\n"}
{"Time":"2023-05-31T11:48:32.940852-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.124133    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube\n"}
{"Time":"2023-05-31T11:48:32.940854-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.126670    2201 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (374 bytes)\n"}
{"Time":"2023-05-31T11:48:32.940856-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.131474    2201 ssh_runner.go:362] scp memory --\u003e /lib/systemd/system/kubelet.service (352 bytes)\n"}
{"Time":"2023-05-31T11:48:32.940858-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.136664    2201 ssh_runner.go:362] scp memory --\u003e /var/tmp/minikube/kubeadm.yaml.new (2098 bytes)\n"}
{"Time":"2023-05-31T11:48:32.94086-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.141677    2201 ssh_runner.go:195] Run: grep 192.168.105.5\tcontrol-plane.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:48:32.940861-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.142872    2201 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\tcontrol-plane.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.5\tcontrol-plane.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:48:32.940896-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.146148    2201 certs.go:56] Setting up /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000 for IP: 192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.940899-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.146156    2201 certs.go:190] acquiring lock for shared ca certs: {Name:mk5d2be9e1df042d7290b2e1516090ac43150ffe Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.940902-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.146284    2201 certs.go:199] skipping minikubeCA CA generation: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key\n"}
{"Time":"2023-05-31T11:48:32.940905-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.146987    2201 certs.go:199] skipping proxyClientCA CA generation: /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key\n"}
{"Time":"2023-05-31T11:48:32.940906-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.147016    2201 certs.go:319] generating minikube-user signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.key\n"}
{"Time":"2023-05-31T11:48:32.940908-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.147022    2201 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:48:32.94091-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.221785    2201 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.crt ...\n"}
{"Time":"2023-05-31T11:48:32.940912-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.221792    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.crt: {Name:mk0ce128781059615a2ed365e385c04440eb011d Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.940914-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.222051    2201 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.key ...\n"}
{"Time":"2023-05-31T11:48:32.940916-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.222053    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/client.key: {Name:mk16fb36ef4c1c9bf5c82608a8c5049e3d74542f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.940919-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.222171    2201 certs.go:319] generating minikube signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key.e69b33ca\n"}
{"Time":"2023-05-31T11:48:32.940921-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.222176    2201 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt.e69b33ca with IP's: [192.168.105.5 10.96.0.1 127.0.0.1 10.0.0.1]\n"}
{"Time":"2023-05-31T11:48:32.941019-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279215    2201 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt.e69b33ca ...\n"}
{"Time":"2023-05-31T11:48:32.941027-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279217    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt.e69b33ca: {Name:mke1c4a0d39d04f2166b73755697f88886874ec1 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.941046-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279329    2201 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key.e69b33ca ...\n"}
{"Time":"2023-05-31T11:48:32.941048-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279331    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key.e69b33ca: {Name:mk181de0af5488288e185981342599830f15fe84 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.94105-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279417    2201 certs.go:337] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt.e69b33ca -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt\n"}
{"Time":"2023-05-31T11:48:32.941052-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279536    2201 certs.go:341] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key.e69b33ca -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key\n"}
{"Time":"2023-05-31T11:48:32.941057-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279609    2201 certs.go:319] generating aggregator signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.key\n"}
{"Time":"2023-05-31T11:48:32.941058-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.279613    2201 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:48:32.94106-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.310943    2201 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.crt ...\n"}
{"Time":"2023-05-31T11:48:32.941062-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.310945    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.crt: {Name:mk19e6afe24e7ac9de3cf0bfa24c8e46ca1fef8f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.941063-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311055    2201 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.key ...\n"}
{"Time":"2023-05-31T11:48:32.941065-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311056    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.key: {Name:mk5b9e053c9093d7020319bf51c8eabb23d8e479 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.941139-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311285    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477.pem (1338 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941141-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 11:48:22.311496    2201 certs.go:433] ignoring /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477_empty.pem, impossibly tiny 0 bytes\n"}
{"Time":"2023-05-31T11:48:32.941143-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311504    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941145-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311528    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941147-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311546    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941148-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311565    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.94115-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311604    2201 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941152-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.311889    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.crt --\u003e /var/lib/minikube/certs/apiserver.crt (1399 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941153-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.319560    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/apiserver.key --\u003e /var/lib/minikube/certs/apiserver.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941155-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.326273    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.crt --\u003e /var/lib/minikube/certs/proxy-client.crt (1147 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941157-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.333049    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/image-844000/proxy-client.key --\u003e /var/lib/minikube/certs/proxy-client.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.94125-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.340446    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /var/lib/minikube/certs/ca.crt (1111 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941253-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.347534    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key --\u003e /var/lib/minikube/certs/ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941254-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.354313    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt --\u003e /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941259-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.361104    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key --\u003e /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:48:32.94126-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.368367    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem --\u003e /usr/share/ca-certificates/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941262-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.375557    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941265-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.382236    2201 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477.pem --\u003e /usr/share/ca-certificates/1477.pem (1338 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941267-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.389066    2201 ssh_runner.go:362] scp memory --\u003e /var/lib/minikube/kubeconfig (738 bytes)\n"}
{"Time":"2023-05-31T11:48:32.941268-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.394135    2201 ssh_runner.go:195] Run: openssl version\n"}
{"Time":"2023-05-31T11:48:32.94127-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.396187    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/14772.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/14772.pem /etc/ssl/certs/14772.pem\"\n"}
{"Time":"2023-05-31T11:48:32.941271-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.399532    2201 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:48:32.941273-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.401267    2201 certs.go:480] hashing: -rw-r--r-- 1 root root 1708 May 31 18:44 /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:48:32.941274-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.401285    2201 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:48:32.941276-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.403127    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/3ec20f2e.0 || ln -fs /etc/ssl/certs/14772.pem /etc/ssl/certs/3ec20f2e.0\"\n"}
{"Time":"2023-05-31T11:48:32.941315-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.406006    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/minikubeCA.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem\"\n"}
{"Time":"2023-05-31T11:48:32.941317-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.409248    2201 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:48:32.941319-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.410930    2201 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 May 31 18:43 /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:48:32.94132-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.410947    2201 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:48:32.941322-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.412860    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0\"\n"}
{"Time":"2023-05-31T11:48:32.941324-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.416090    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/1477.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/1477.pem /etc/ssl/certs/1477.pem\"\n"}
{"Time":"2023-05-31T11:48:32.941326-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.419063    2201 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:48:32.941327-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.420528    2201 certs.go:480] hashing: -rw-r--r-- 1 root root 1338 May 31 18:44 /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:48:32.941328-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.420548    2201 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:48:32.94133-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.422677    2201 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/51391683.0 || ln -fs /etc/ssl/certs/1477.pem /etc/ssl/certs/51391683.0\"\n"}
{"Time":"2023-05-31T11:48:32.941332-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.425632    2201 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd\n"}
{"Time":"2023-05-31T11:48:32.941333-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.427189    2201 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2\n"}
{"Time":"2023-05-31T11:48:32.941335-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:48:32.941336-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.941337-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:48:32.941404-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.941435-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.427219    2201 kubeadm.go:404] StartCluster: {Name:image-844000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1"}
{"Time":"2023-05-31T11:48:32.941453-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":".27.2 ClusterName:image-844000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.105.5 Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOpt"}
{"Time":"2023-05-31T11:48:32.941457-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"imizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:48:32.941459-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.427287    2201 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}\n"}
{"Time":"2023-05-31T11:48:32.941461-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.432759    2201 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:48:32.941462-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.436155    2201 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml\n"}
{"Time":"2023-05-31T11:48:32.941464-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.438881    2201 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf\n"}
{"Time":"2023-05-31T11:48:32.941466-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.441579    2201 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2\n"}
{"Time":"2023-05-31T11:48:32.941519-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:48:32.941521-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.941523-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:48:32.941524-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tls: cannot access '/etc/kubernetes/admin.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.941525-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.941527-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.941528-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:48:32.94153-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.441591    2201 ssh_runner.go:286] Start: /bin/bash -c \"sudo env PATH=\"/var/lib/minikube/binaries/v1.27.2:$PATH\" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem\"\n"}
{"Time":"2023-05-31T11:48:32.941533-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.462356    2201 kubeadm.go:322] [init] Using Kubernetes version: v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.941534-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.462380    2201 kubeadm.go:322] [preflight] Running pre-flight checks\n"}
{"Time":"2023-05-31T11:48:32.941535-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.515770    2201 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster\n"}
{"Time":"2023-05-31T11:48:32.941537-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.515817    2201 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection\n"}
{"Time":"2023-05-31T11:48:32.941538-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.515871    2201 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n"}
{"Time":"2023-05-31T11:48:32.94154-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.571985    2201 kubeadm.go:322] [certs] Using certificateDir folder \"/var/lib/minikube/certs\"\n"}
{"Time":"2023-05-31T11:48:32.941541-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.580192    2201 out.go:204]   - Generating certificates and keys ...\n"}
{"Time":"2023-05-31T11:48:32.941544-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.580233    2201 kubeadm.go:322] [certs] Using existing ca certificate authority\n"}
{"Time":"2023-05-31T11:48:32.941634-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.580267    2201 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk\n"}
{"Time":"2023-05-31T11:48:32.94164-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.647690    2201 kubeadm.go:322] [certs] Generating \"apiserver-kubelet-client\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941644-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.825751    2201 kubeadm.go:322] [certs] Generating \"front-proxy-ca\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941648-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:22.950435    2201 kubeadm.go:322] [certs] Generating \"front-proxy-client\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941652-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.156438    2201 kubeadm.go:322] [certs] Generating \"etcd/ca\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941656-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.265979    2201 kubeadm.go:322] [certs] Generating \"etcd/server\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941659-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.266046    2201 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [image-844000 localhost] and IPs [192.168.105.5 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:48:32.941663-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.454162    2201 kubeadm.go:322] [certs] Generating \"etcd/peer\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941667-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.454235    2201 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [image-844000 localhost] and IPs [192.168.105.5 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:48:32.941671-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:23.583185    2201 kubeadm.go:322] [certs] Generating \"etcd/healthcheck-client\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941685-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.007078    2201 kubeadm.go:322] [certs] Generating \"apiserver-etcd-client\" certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941705-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.065303    2201 kubeadm.go:322] [certs] Generating \"sa\" key and public key\n"}
{"Time":"2023-05-31T11:48:32.941708-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.065333    2201 kubeadm.go:322] [kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n"}
{"Time":"2023-05-31T11:48:32.941709-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.145985    2201 kubeadm.go:322] [kubeconfig] Writing \"admin.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:48:32.941711-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.205187    2201 kubeadm.go:322] [kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:48:32.941712-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.378741    2201 kubeadm.go:322] [kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:48:32.941714-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.504209    2201 kubeadm.go:322] [kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:48:32.941715-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.511044    2201 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n"}
{"Time":"2023-05-31T11:48:32.941717-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.511094    2201 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n"}
{"Time":"2023-05-31T11:48:32.941718-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.511124    2201 kubeadm.go:322] [kubelet-start] Starting the kubelet\n"}
{"Time":"2023-05-31T11:48:32.94172-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.579748    2201 kubeadm.go:322] [control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:48:32.941721-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.582969    2201 out.go:204]   - Booting up control plane ...\n"}
{"Time":"2023-05-31T11:48:32.941723-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.583022    2201 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-apiserver\"\n"}
{"Time":"2023-05-31T11:48:32.941725-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.583099    2201 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n"}
{"Time":"2023-05-31T11:48:32.941726-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.583138    2201 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-scheduler\"\n"}
{"Time":"2023-05-31T11:48:32.941728-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.583181    2201 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:48:32.94173-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:24.583278    2201 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n"}
{"Time":"2023-05-31T11:48:32.941731-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:28.085036    2201 kubeadm.go:322] [apiclient] All control plane components are healthy after 3.501705 seconds\n"}
{"Time":"2023-05-31T11:48:32.941733-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:28.085098    2201 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n"}
{"Time":"2023-05-31T11:48:32.941734-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:28.092797    2201 kubeadm.go:322] [kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster\n"}
{"Time":"2023-05-31T11:48:32.941736-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:28.614486    2201 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs\n"}
{"Time":"2023-05-31T11:48:32.941832-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:28.614792    2201 kubeadm.go:322] [mark-control-plane] Marking the node image-844000 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]\n"}
{"Time":"2023-05-31T11:48:32.941858-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.119633    2201 kubeadm.go:322] [bootstrap-token] Using token: 3fn1x3.gh357o86s01mv5ry\n"}
{"Time":"2023-05-31T11:48:32.94186-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.125768    2201 out.go:204]   - Configuring RBAC rules ...\n"}
{"Time":"2023-05-31T11:48:32.941861-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.125828    2201 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n"}
{"Time":"2023-05-31T11:48:32.941863-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.126627    2201 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes\n"}
{"Time":"2023-05-31T11:48:32.941864-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.131748    2201 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n"}
{"Time":"2023-05-31T11:48:32.941866-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.133002    2201 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n"}
{"Time":"2023-05-31T11:48:32.941868-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.134331    2201 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n"}
{"Time":"2023-05-31T11:48:32.941869-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.135864    2201 kubeadm.go:322] [bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n"}
{"Time":"2023-05-31T11:48:32.941871-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.139852    2201 kubeadm.go:322] [kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n"}
{"Time":"2023-05-31T11:48:32.941872-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.320674    2201 kubeadm.go:322] [addons] Applied essential addon: CoreDNS\n"}
{"Time":"2023-05-31T11:48:32.941874-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.530587    2201 kubeadm.go:322] [addons] Applied essential addon: kube-proxy\n"}
{"Time":"2023-05-31T11:48:32.941875-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.530951    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941877-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.530984    2201 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!\n"}
{"Time":"2023-05-31T11:48:32.941878-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.530986    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941925-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531023    2201 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:\n"}
{"Time":"2023-05-31T11:48:32.941932-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531025    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941947-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531036    2201 kubeadm.go:322]   mkdir -p $HOME/.kube\n"}
{"Time":"2023-05-31T11:48:32.941951-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531067    2201 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:48:32.941952-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531107    2201 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:48:32.941954-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531110    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941955-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531140    2201 kubeadm.go:322] Alternatively, if you are the root user, you can run:\n"}
{"Time":"2023-05-31T11:48:32.941957-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531143    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941959-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531169    2201 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf\n"}
{"Time":"2023-05-31T11:48:32.94196-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531171    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941961-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531193    2201 kubeadm.go:322] You should now deploy a pod network to the cluster.\n"}
{"Time":"2023-05-31T11:48:32.941963-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531235    2201 kubeadm.go:322] Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n"}
{"Time":"2023-05-31T11:48:32.941964-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531268    2201 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/\n"}
{"Time":"2023-05-31T11:48:32.941966-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531269    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941967-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531316    2201 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities\n"}
{"Time":"2023-05-31T11:48:32.941968-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531353    2201 kubeadm.go:322] and service account keys on each node and then running the following as root:\n"}
{"Time":"2023-05-31T11:48:32.94197-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531354    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.941971-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531395    2201 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token 3fn1x3.gh357o86s01mv5ry \\\n"}
{"Time":"2023-05-31T11:48:32.941973-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531446    2201 kubeadm.go:322] \t--discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \\\n"}
{"Time":"2023-05-31T11:48:32.942011-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531457    2201 kubeadm.go:322] \t--control-plane \n"}
{"Time":"2023-05-31T11:48:32.942013-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531459    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.942014-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531507    2201 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:\n"}
{"Time":"2023-05-31T11:48:32.942015-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531509    2201 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:48:32.942017-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531552    2201 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token 3fn1x3.gh357o86s01mv5ry \\\n"}
{"Time":"2023-05-31T11:48:32.942018-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531604    2201 kubeadm.go:322] \t--discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \n"}
{"Time":"2023-05-31T11:48:32.94202-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531668    2201 kubeadm.go:322] \t[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'\n"}
{"Time":"2023-05-31T11:48:32.942021-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531751    2201 kubeadm.go:322] W0531 18:48:22.807625    1333 images.go:80] could not find officially supported version of etcd for Kubernetes v1.27.2, falling back to the nearest etcd version (3.5.7-0)\n"}
{"Time":"2023-05-31T11:48:32.942023-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531838    2201 kubeadm.go:322] W0531 18:48:24.873873    1333 images.go:80] could not find officially supported version of etcd for Kubernetes v1.27.2, falling back to the nearest etcd version (3.5.7-0)\n"}
{"Time":"2023-05-31T11:48:32.942024-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531846    2201 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:48:32.942026-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.531852    2201 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:48:32.942027-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.540167    2201 out.go:177] * Configuring bridge CNI (Container Networking Interface) ...\n"}
{"Time":"2023-05-31T11:48:32.942029-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.544071    2201 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d\n"}
{"Time":"2023-05-31T11:48:32.94203-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.547352    2201 ssh_runner.go:362] scp memory --\u003e /etc/cni/net.d/1-k8s.conflist (457 bytes)\n"}
{"Time":"2023-05-31T11:48:32.942032-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.552177    2201 ssh_runner.go:195] Run: /bin/bash -c \"cat /proc/$(pgrep kube-apiserver)/oom_adj\"\n"}
{"Time":"2023-05-31T11:48:32.94213-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.552214    2201 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:48:32.942161-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.552246    2201 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.2/kubectl label nodes minikube.k8s.io/version=v1.30.1 minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140 minikube.k8s.io/name=image-844000 minikube.k8s.io/updated_at=2023_05_31T11_48_29_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:48:32.942164-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.611779    2201 ops.go:34] apiserver oom_adj: -16\n"}
{"Time":"2023-05-31T11:48:32.942165-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.611777    2201 kubeadm.go:1076] duration metric: took 59.597625ms to wait for elevateKubeSystemPrivileges.\n"}
{"Time":"2023-05-31T11:48:32.942171-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.611791    2201 kubeadm.go:406] StartCluster complete in 7.184671625s\n"}
{"Time":"2023-05-31T11:48:32.942172-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.611804    2201 settings.go:142] acquiring lock: {Name:mk21b0706c1b317cf69100362f2296fa879c00d7 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.942174-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.611888    2201 settings.go:150] Updating kubeconfig:  /Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:48:32.942176-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612273    2201 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/kubeconfig: {Name:mk798616fa7d82f2defe425781279f8a2840bc7d Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:48:32.942179-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612435    2201 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml\"\n"}
{"Time":"2023-05-31T11:48:32.942183-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612468    2201 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]\n"}
{"Time":"2023-05-31T11:48:32.942186-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612499    2201 addons.go:66] Setting storage-provisioner=true in profile \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.942235-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612502    2201 addons.go:66] Setting default-storageclass=true in profile \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.942252-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612508    2201 addons.go:228] Setting addon storage-provisioner=true in \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.942255-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612509    2201 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.942257-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612529    2201 host.go:66] Checking if \"image-844000\" exists ...\n"}
{"Time":"2023-05-31T11:48:32.942259-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.612541    2201 config.go:182] Loaded profile config \"image-844000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.94226-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.617142    2201 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:48:32.942262-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.621172    2201 addons.go:420] installing /etc/kubernetes/addons/storage-provisioner.yaml\n"}
{"Time":"2023-05-31T11:48:32.942263-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.621177    2201 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)\n"}
{"Time":"2023-05-31T11:48:32.942268-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.621184    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.942269-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.625060    2201 addons.go:228] Setting addon default-storageclass=true in \"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.942271-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.625075    2201 host.go:66] Checking if \"image-844000\" exists ...\n"}
{"Time":"2023-05-31T11:48:32.942272-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.625772    2201 addons.go:420] installing /etc/kubernetes/addons/storageclass.yaml\n"}
{"Time":"2023-05-31T11:48:32.942274-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.625775    2201 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/storageclass.yaml (271 bytes)\n"}
{"Time":"2023-05-31T11:48:32.942275-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.625780    2201 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.5 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/image-844000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:48:32.942277-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.662463    2201 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \\/etc\\/resolv.conf.*/i \\        hosts {\\n           192.168.105.1 host.minikube.internal\\n           fallthrough\\n        }' -e '/^        errors *$/i \\        log' | sudo /var/lib/minikube/binaries/v1.27.2/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -\"\n"}
{"Time":"2023-05-31T11:48:32.942389-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.668597    2201 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.2/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml\n"}
{"Time":"2023-05-31T11:48:32.942426-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:29.671710    2201 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.2/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml\n"}
{"Time":"2023-05-31T11:48:32.94243-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.078158    2201 start.go:916] {\"host.minikube.internal\": 192.168.105.1} host record injected into CoreDNS's ConfigMap\n"}
{"Time":"2023-05-31T11:48:32.942432-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.130731    2201 kapi.go:248] \"coredns\" deployment in \"kube-system\" namespace and \"image-844000\" context rescaled to 1 replicas\n"}
{"Time":"2023-05-31T11:48:32.942433-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.130744    2201 start.go:223] Will wait 6m0s for node \u0026{Name: IP:192.168.105.5 Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:48:32.942435-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.138600    2201 out.go:177] * Verifying Kubernetes components...\n"}
{"Time":"2023-05-31T11:48:32.942437-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.144658    2201 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet\n"}
{"Time":"2023-05-31T11:48:32.942438-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.168555    2201 out.go:177] * Enabled addons: storage-provisioner, default-storageclass\n"}
{"Time":"2023-05-31T11:48:32.94244-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.161499    2201 api_server.go:52] waiting for apiserver process to appear ...\n"}
{"Time":"2023-05-31T11:48:32.942441-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.172677    2201 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*\n"}
{"Time":"2023-05-31T11:48:32.942443-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.172675    2201 addons.go:499] enable addons completed in 560.217625ms: enabled=[storage-provisioner default-storageclass]\n"}
{"Time":"2023-05-31T11:48:32.942444-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.176741    2201 api_server.go:72] duration metric: took 45.988333ms to wait for apiserver process to appear ...\n"}
{"Time":"2023-05-31T11:48:32.942446-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.176744    2201 api_server.go:88] waiting for apiserver healthz status ...\n"}
{"Time":"2023-05-31T11:48:32.942447-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.176748    2201 api_server.go:253] Checking apiserver healthz at https://192.168.105.5:8443/healthz ...\n"}
{"Time":"2023-05-31T11:48:32.9425-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.180135    2201 api_server.go:279] https://192.168.105.5:8443/healthz returned 200:\n"}
{"Time":"2023-05-31T11:48:32.942502-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tok\n"}
{"Time":"2023-05-31T11:48:32.942504-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.180869    2201 api_server.go:141] control plane version: v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.942505-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.180874    2201 api_server.go:131] duration metric: took 4.128292ms to wait for apiserver health ...\n"}
{"Time":"2023-05-31T11:48:32.942507-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.180878    2201 system_pods.go:43] waiting for kube-system pods to appear ...\n"}
{"Time":"2023-05-31T11:48:32.942509-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183723    2201 system_pods.go:59] 5 kube-system pods found\n"}
{"Time":"2023-05-31T11:48:32.942511-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183730    2201 system_pods.go:61] \"etcd-image-844000\" [d8e83a9e-afc6-4823-a54a-9ed82bd13eb0] Pending\n"}
{"Time":"2023-05-31T11:48:32.942512-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183732    2201 system_pods.go:61] \"kube-apiserver-image-844000\" [0d43e2b2-e599-4e84-b3f9-cd1821cdbd57] Pending\n"}
{"Time":"2023-05-31T11:48:32.942514-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183734    2201 system_pods.go:61] \"kube-controller-manager-image-844000\" [512b0191-0957-414f-8aa9-913ad11310da] Pending\n"}
{"Time":"2023-05-31T11:48:32.942515-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183736    2201 system_pods.go:61] \"kube-scheduler-image-844000\" [baf85789-d550-4463-8c34-8e50ba753354] Pending\n"}
{"Time":"2023-05-31T11:48:32.942517-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183738    2201 system_pods.go:61] \"storage-provisioner\" [83f34eb7-d7bb-4983-b69b-0b6f10716039] Pending\n"}
{"Time":"2023-05-31T11:48:32.942518-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183740    2201 system_pods.go:74] duration metric: took 2.860125ms to wait for pod list to return data ...\n"}
{"Time":"2023-05-31T11:48:32.94252-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183743    2201 kubeadm.go:581] duration metric: took 52.991041ms to wait for : map[apiserver:true system_pods:true] ...\n"}
{"Time":"2023-05-31T11:48:32.942524-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.183748    2201 node_conditions.go:102] verifying NodePressure condition ...\n"}
{"Time":"2023-05-31T11:48:32.942525-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185249    2201 node_conditions.go:122] node storage ephemeral capacity is 17784760Ki\n"}
{"Time":"2023-05-31T11:48:32.942527-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185256    2201 node_conditions.go:123] node cpu capacity is 2\n"}
{"Time":"2023-05-31T11:48:32.942528-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185260    2201 node_conditions.go:105] duration metric: took 1.510666ms to run NodePressure ...\n"}
{"Time":"2023-05-31T11:48:32.942653-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185264    2201 start.go:228] waiting for startup goroutines ...\n"}
{"Time":"2023-05-31T11:48:32.942655-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185266    2201 start.go:233] waiting for cluster config update ...\n"}
{"Time":"2023-05-31T11:48:32.942657-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185270    2201 start.go:242] writing updated cluster config ...\n"}
{"Time":"2023-05-31T11:48:32.942658-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.185585    2201 ssh_runner.go:195] Run: rm -f paused\n"}
{"Time":"2023-05-31T11:48:32.94266-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.213834    2201 start.go:573] kubectl: 1.25.9, cluster: 1.27.2 (minor skew: 2)\n"}
{"Time":"2023-05-31T11:48:32.942661-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.217605    2201 out.go:177] \n"}
{"Time":"2023-05-31T11:48:32.942663-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 11:48:30.221712    2201 out.go:239] ! /usr/local/bin/kubectl is version 1.25.9, which may have incompatibilities with Kubernetes 1.27.2.\n"}
{"Time":"2023-05-31T11:48:32.942664-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.224507    2201 out.go:177]   - Want kubectl v1.27.2? Try 'minikube kubectl -- get pods -A'\n"}
{"Time":"2023-05-31T11:48:32.942665-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 11:48:30.232640    2201 out.go:177] * Done! kubectl is now configured to use \"image-844000\" cluster and \"default\" namespace by default\n"}
{"Time":"2023-05-31T11:48:32.942667-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.942668-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.94267-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e Docker \u003c==\n"}
{"Time":"2023-05-31T11:48:32.942671-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:48:12 UTC, ends at Wed 2023-05-31 18:48:32 UTC. --\n"}
{"Time":"2023-05-31T11:48:32.942673-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.784118631Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:48:32.942675-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.784123298Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942677-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.796322715Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:48:32.942679-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.796394881Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942708-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.796405090Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:48:32.942711-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.796417506Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942713-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.802401590Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:48:32.942715-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.802454465Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942718-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.802460631Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:48:32.94272-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.803979881Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942722-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.852352131Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:48:32.942723-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.852381715Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942725-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.852389256Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:48:32.942727-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:25 image-844000 dockerd[943]: time=\"2023-05-31T18:48:25.852393673Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942729-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[937]: time=\"2023-05-31T18:48:32.352619718Z\" level=info msg=\"Layer sha256:5e5d01bb2a8d3e34816f24ff1a055b5d084e5a5a1919cd77684120916d61c3eb cleaned up\"\n"}
{"Time":"2023-05-31T11:48:32.942778-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[937]: time=\"2023-05-31T18:48:32.468695343Z\" level=info msg=\"Layer sha256:5e5d01bb2a8d3e34816f24ff1a055b5d084e5a5a1919cd77684120916d61c3eb cleaned up\"\n"}
{"Time":"2023-05-31T11:48:32.942781-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[937]: time=\"2023-05-31T18:48:32.483309635Z\" level=info msg=\"Layer sha256:5e5d01bb2a8d3e34816f24ff1a055b5d084e5a5a1919cd77684120916d61c3eb cleaned up\"\n"}
{"Time":"2023-05-31T11:48:32.942783-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.509578051Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:48:32.942785-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.509604426Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.942787-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.509613551Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:48:32.942789-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.509695135Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:48:32.94279-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[937]: time=\"2023-05-31T18:48:32.653713343Z\" level=info msg=\"ignoring event\" container=3d146fa79121c78d0d2338bcd2a321107d319647a0591528f154820d120294bd module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:48:32.942792-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.653798801Z\" level=info msg=\"shim disconnected\" id=3d146fa79121c78d0d2338bcd2a321107d319647a0591528f154820d120294bd namespace=moby\n"}
{"Time":"2023-05-31T11:48:32.942794-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.653834426Z\" level=warning msg=\"cleaning up after shim disconnected\" id=3d146fa79121c78d0d2338bcd2a321107d319647a0591528f154820d120294bd namespace=moby\n"}
{"Time":"2023-05-31T11:48:32.942795-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 dockerd[943]: time=\"2023-05-31T18:48:32.653839010Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:48:32.942797-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.942798-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.942799-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e container status \u003c==\n"}
{"Time":"2023-05-31T11:48:32.942865-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID\n"}
{"Time":"2023-05-31T11:48:32.942884-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t81c9246269886       305d7ed1dae28       8 seconds ago       Running             kube-scheduler            0                   689d8d0083022\n"}
{"Time":"2023-05-31T11:48:32.942901-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t5ac954bb67b23       72c9df6be7f1b       8 seconds ago       Running             kube-apiserver            0                   32885a0f3e54e\n"}
{"Time":"2023-05-31T11:48:32.942903-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t8ee7ff34b0318       2ee705380c3c5       8 seconds ago       Running             kube-controller-manager   0                   57f95041d2a46\n"}
{"Time":"2023-05-31T11:48:32.942905-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tfc6adc4987c23       24bc64e911039       8 seconds ago       Running             etcd                      0                   339b30019c67a\n"}
{"Time":"2023-05-31T11:48:32.942906-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.942907-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.942909-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e describe nodes \u003c==\n"}
{"Time":"2023-05-31T11:48:32.94291-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* Name:               image-844000\n"}
{"Time":"2023-05-31T11:48:32.942911-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tRoles:              control-plane\n"}
{"Time":"2023-05-31T11:48:32.942913-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLabels:             beta.kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:48:32.942917-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    beta.kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:48:32.942919-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:48:32.94292-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    kubernetes.io/hostname=image-844000\n"}
{"Time":"2023-05-31T11:48:32.942922-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:48:32.942923-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140\n"}
{"Time":"2023-05-31T11:48:32.942924-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    minikube.k8s.io/name=image-844000\n"}
{"Time":"2023-05-31T11:48:32.942926-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    minikube.k8s.io/primary=true\n"}
{"Time":"2023-05-31T11:48:32.942927-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    minikube.k8s.io/updated_at=2023_05_31T11_48_29_0700\n"}
{"Time":"2023-05-31T11:48:32.942928-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    minikube.k8s.io/version=v1.30.1\n"}
{"Time":"2023-05-31T11:48:32.94293-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    node-role.kubernetes.io/control-plane=\n"}
{"Time":"2023-05-31T11:48:32.942931-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    node.kubernetes.io/exclude-from-external-load-balancers=\n"}
{"Time":"2023-05-31T11:48:32.942933-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n"}
{"Time":"2023-05-31T11:48:32.942934-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t                    volumes.kubernetes.io/controller-managed-attach-detach: true\n"}
{"Time":"2023-05-31T11:48:32.942935-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tCreationTimestamp:  Wed, 31 May 2023 18:48:27 +0000\n"}
{"Time":"2023-05-31T11:48:32.942937-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tTaints:             node.kubernetes.io/not-ready:NoSchedule\n"}
{"Time":"2023-05-31T11:48:32.942938-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tUnschedulable:      false\n"}
{"Time":"2023-05-31T11:48:32.942939-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLease:\n"}
{"Time":"2023-05-31T11:48:32.94294-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  HolderIdentity:  image-844000\n"}
{"Time":"2023-05-31T11:48:32.942942-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  AcquireTime:     \u003cunset\u003e\n"}
{"Time":"2023-05-31T11:48:32.942943-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  RenewTime:       Wed, 31 May 2023 18:48:29 +0000\n"}
{"Time":"2023-05-31T11:48:32.942945-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tConditions:\n"}
{"Time":"2023-05-31T11:48:32.942946-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n"}
{"Time":"2023-05-31T11:48:32.942948-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ----             ------  -----------------                 ------------------                ------                       -------\n"}
{"Time":"2023-05-31T11:48:32.942949-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  MemoryPressure   False   Wed, 31 May 2023 18:48:32 +0000   Wed, 31 May 2023 18:48:26 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n"}
{"Time":"2023-05-31T11:48:32.942951-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  DiskPressure     False   Wed, 31 May 2023 18:48:32 +0000   Wed, 31 May 2023 18:48:26 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n"}
{"Time":"2023-05-31T11:48:32.942953-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  PIDPressure      False   Wed, 31 May 2023 18:48:32 +0000   Wed, 31 May 2023 18:48:26 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n"}
{"Time":"2023-05-31T11:48:32.942955-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Ready            True    Wed, 31 May 2023 18:48:32 +0000   Wed, 31 May 2023 18:48:32 +0000   KubeletReady                 kubelet is posting ready status\n"}
{"Time":"2023-05-31T11:48:32.942956-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAddresses:\n"}
{"Time":"2023-05-31T11:48:32.943012-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  InternalIP:  192.168.105.5\n"}
{"Time":"2023-05-31T11:48:32.943018-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Hostname:    image-844000\n"}
{"Time":"2023-05-31T11:48:32.943021-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tCapacity:\n"}
{"Time":"2023-05-31T11:48:32.943043-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:48:32.943045-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:48:32.943047-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:48:32.943048-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:48:32.943049-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:48:32.94305-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:48:32.943052-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  memory:             3905972Ki\n"}
{"Time":"2023-05-31T11:48:32.943053-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:48:32.943054-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAllocatable:\n"}
{"Time":"2023-05-31T11:48:32.943055-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:48:32.943057-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:48:32.943058-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:48:32.943059-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:48:32.943061-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:48:32.943062-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:48:32.943064-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  memory:             3905972Ki\n"}
{"Time":"2023-05-31T11:48:32.943065-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:48:32.943066-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tSystem Info:\n"}
{"Time":"2023-05-31T11:48:32.943068-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Machine ID:                 c053348c688f44b7b69564f1baf55df9\n"}
{"Time":"2023-05-31T11:48:32.943069-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  System UUID:                c053348c688f44b7b69564f1baf55df9\n"}
{"Time":"2023-05-31T11:48:32.94307-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Boot ID:                    d4d155b4-dcab-425b-90a0-70e112518b6e\n"}
{"Time":"2023-05-31T11:48:32.943072-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Kernel Version:             5.10.57\n"}
{"Time":"2023-05-31T11:48:32.943073-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  OS Image:                   Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:48:32.943074-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Operating System:           linux\n"}
{"Time":"2023-05-31T11:48:32.943076-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Architecture:               arm64\n"}
{"Time":"2023-05-31T11:48:32.943077-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Container Runtime Version:  docker://24.0.1\n"}
{"Time":"2023-05-31T11:48:32.943079-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Kubelet Version:            v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.94308-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Kube-Proxy Version:         v1.27.2\n"}
{"Time":"2023-05-31T11:48:32.943081-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tNon-terminated Pods:          (4 in total)\n"}
{"Time":"2023-05-31T11:48:32.943083-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Namespace                   Name                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n"}
{"Time":"2023-05-31T11:48:32.943084-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ---------                   ----                                    ------------  ----------  ---------------  -------------  ---\n"}
{"Time":"2023-05-31T11:48:32.943085-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  kube-system                 etcd-image-844000                       100m (5%!)(MISSING)     0 (0%!)(MISSING)      100Mi (2%!)(MISSING)       0 (0%!)(MISSING)         4s\n"}
{"Time":"2023-05-31T11:48:32.943087-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  kube-system                 kube-apiserver-image-844000             250m (12%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         4s\n"}
{"Time":"2023-05-31T11:48:32.943089-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  kube-system                 kube-controller-manager-image-844000    200m (10%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         5s\n"}
{"Time":"2023-05-31T11:48:32.943091-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  kube-system                 kube-scheduler-image-844000             100m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         4s\n"}
{"Time":"2023-05-31T11:48:32.943094-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tAllocated resources:\n"}
{"Time":"2023-05-31T11:48:32.943175-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  (Total limits may be over 100 percent, i.e., overcommitted.)\n"}
{"Time":"2023-05-31T11:48:32.943178-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Resource           Requests    Limits\n"}
{"Time":"2023-05-31T11:48:32.943179-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  --------           --------    ------\n"}
{"Time":"2023-05-31T11:48:32.94318-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  cpu                650m (32%!)(MISSING)  0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943182-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  memory             100Mi (2%!)(MISSING)  0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943183-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943185-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943186-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943187-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.943188-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:48:32.94319-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tEvents:\n"}
{"Time":"2023-05-31T11:48:32.943191-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Type    Reason                   Age   From     Message\n"}
{"Time":"2023-05-31T11:48:32.943192-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  ----    ------                   ----  ----     -------\n"}
{"Time":"2023-05-31T11:48:32.943195-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  Starting                 4s    kubelet  Starting kubelet.\n"}
{"Time":"2023-05-31T11:48:32.943196-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  NodeAllocatableEnforced  4s    kubelet  Updated Node Allocatable limit across pods\n"}
{"Time":"2023-05-31T11:48:32.943198-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  NodeHasSufficientMemory  4s    kubelet  Node image-844000 status is now: NodeHasSufficientMemory\n"}
{"Time":"2023-05-31T11:48:32.943199-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  NodeHasNoDiskPressure    4s    kubelet  Node image-844000 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2023-05-31T11:48:32.943201-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  NodeHasSufficientPID     4s    kubelet  Node image-844000 status is now: NodeHasSufficientPID\n"}
{"Time":"2023-05-31T11:48:32.943203-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t  Normal  NodeReady                1s    kubelet  Node image-844000 status is now: NodeReady\n"}
{"Time":"2023-05-31T11:48:32.943204-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.943205-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.943243-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e dmesg \u003c==\n"}
{"Time":"2023-05-31T11:48:32.943245-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* [May31 18:48] ACPI: SRAT not present\n"}
{"Time":"2023-05-31T11:48:32.943246-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.000000] KASLR disabled due to lack of seed\n"}
{"Time":"2023-05-31T11:48:32.943248-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.636930] EINJ: EINJ table not found.\n"}
{"Time":"2023-05-31T11:48:32.943249-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.515837] systemd-fstab-generator[114]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943251-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.044293] systemd[1]: systemd-journald.service: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.\n"}
{"Time":"2023-05-31T11:48:32.943252-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.000797] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)\n"}
{"Time":"2023-05-31T11:48:32.943254-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +4.130490] systemd-fstab-generator[473]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943255-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.062937] systemd-fstab-generator[484]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943257-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +2.754022] systemd-fstab-generator[698]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943258-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +1.513871] systemd-fstab-generator[870]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943259-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.186911] systemd-fstab-generator[906]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943261-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.062423] systemd-fstab-generator[917]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943262-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.059164] systemd-fstab-generator[930]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943263-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +1.146503] kauditd_printk_skb: 53 callbacks suppressed\n"}
{"Time":"2023-05-31T11:48:32.943265-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.074750] systemd-fstab-generator[1089]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943266-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.062458] systemd-fstab-generator[1100]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943268-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.062515] systemd-fstab-generator[1111]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943269-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.061079] systemd-fstab-generator[1122]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943367-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +0.064583] systemd-fstab-generator[1148]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943374-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +2.560663] systemd-fstab-generator[1421]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943378-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +4.626695] systemd-fstab-generator[2265]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:48:32.943381-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t[  +3.038308] kauditd_printk_skb: 41 callbacks suppressed\n"}
{"Time":"2023-05-31T11:48:32.943385-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.943388-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.943391-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e etcd [fc6adc4987c2] \u003c==\n"}
{"Time":"2023-05-31T11:48:32.943415-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* {\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.034Z\",\"caller\":\"fileutil/purge.go:44\",\"msg\":\"started to purge file\",\"dir\":\"/var/lib/minikube/etcd/member/snap\",\"suffix\":\"snap\",\"max\":5,\"interval\":\"30s\"}\n"}
{"Time":"2023-05-31T11:48:32.943427-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.034Z\",\"caller\":\"fileutil/purge.go:44\",\"msg\":\"started to purge file\",\"dir\":\"/var/lib/minikube/etcd/member/wal\",\"suffix\":\"wal\",\"max\":5,\"interval\":\"30s\"}\n"}
{"Time":"2023-05-31T11:48:32.943433-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.038Z\",\"caller\":\"embed/etcd.go:687\",\"msg\":\"starting with client TLS\",\"tls-info\":\"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = \",\"cipher-suites\":[]}\n"}
{"Time":"2023-05-31T11:48:32.943466-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.038Z\",\"caller\":\"embed/etcd.go:586\",\"msg\":\"serving peer traffic\",\"address\":\"192.168.105.5:2380\"}\n"}
{"Time":"2023-05-31T11:48:32.943474-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.038Z\",\"caller\":\"embed/etcd.go:558\",\"msg\":\"cmux::serve\",\"address\":\"192.168.105.5:2380\"}\n"}
{"Time":"2023-05-31T11:48:32.943477-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.038Z\",\"caller\":\"embed/etcd.go:275\",\"msg\":\"now serving peer/client/metrics\",\"local-member-id\":\"58de0efec1d86300\",\"initial-advertise-peer-urls\":[\"https://192.168.105.5:2380\"],\"listen-peer-urls\":[\"https://192.168.105.5:2380\"],\"advertise-client-urls\":[\"https://192.168.105.5:2379\"],\"listen-client-urls\":[\"https://127.0.0.1:2379\",\"https://192.168.105.5:2379\"],\"listen-metrics-urls\":[\"http://127.0.0.1:2381\"]}\n"}
{"Time":"2023-05-31T11:48:32.94348-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.038Z\",\"caller\":\"embed/etcd.go:762\",\"msg\":\"serving metrics\",\"address\":\"http://127.0.0.1:2381\"}\n"}
{"Time":"2023-05-31T11:48:32.943482-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 is starting a new election at term 1\"}\n"}
{"Time":"2023-05-31T11:48:32.943484-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 became pre-candidate at term 1\"}\n"}
{"Time":"2023-05-31T11:48:32.943486-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 received MsgPreVoteResp from 58de0efec1d86300 at term 1\"}\n"}
{"Time":"2023-05-31T11:48:32.943488-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 became candidate at term 2\"}\n"}
{"Time":"2023-05-31T11:48:32.94349-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 received MsgVoteResp from 58de0efec1d86300 at term 2\"}\n"}
{"Time":"2023-05-31T11:48:32.943492-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"58de0efec1d86300 became leader at term 2\"}\n"}
{"Time":"2023-05-31T11:48:32.943493-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.198Z\",\"logger\":\"raft\",\"caller\":\"etcdserver/zap_raft.go:77\",\"msg\":\"raft.node: 58de0efec1d86300 elected leader 58de0efec1d86300 at term 2\"}\n"}
{"Time":"2023-05-31T11:48:32.943495-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.200Z\",\"caller\":\"etcdserver/server.go:2062\",\"msg\":\"published local member to cluster through raft\",\"local-member-id\":\"58de0efec1d86300\",\"local-member-attributes\":\"{Name:image-844000 ClientURLs:[https://192.168.105.5:2379]}\",\"request-path\":\"/0/members/58de0efec1d86300/attributes\",\"cluster-id\":\"cd5c0afff2184bea\",\"publish-timeout\":\"7s\"}\n"}
{"Time":"2023-05-31T11:48:32.943498-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.200Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:48:32.943499-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.201Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"127.0.0.1:2379\"}\n"}
{"Time":"2023-05-31T11:48:32.943501-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.201Z\",\"caller\":\"etcdserver/server.go:2571\",\"msg\":\"setting up initial cluster version using v2 API\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:48:32.943503-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.202Z\",\"caller\":\"membership/cluster.go:584\",\"msg\":\"set initial cluster version\",\"cluster-id\":\"cd5c0afff2184bea\",\"local-member-id\":\"58de0efec1d86300\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:48:32.943675-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.202Z\",\"caller\":\"api/capability.go:75\",\"msg\":\"enabled capabilities for version\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:48:32.943678-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.202Z\",\"caller\":\"etcdserver/server.go:2595\",\"msg\":\"cluster version is updated\",\"cluster-version\":\"3.5\"}\n"}
{"Time":"2023-05-31T11:48:32.94368-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.206Z\",\"caller\":\"embed/serve.go:100\",\"msg\":\"ready to serve client requests\"}\n"}
{"Time":"2023-05-31T11:48:32.943681-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.206Z\",\"caller\":\"embed/serve.go:198\",\"msg\":\"serving client traffic securely\",\"address\":\"192.168.105.5:2379\"}\n"}
{"Time":"2023-05-31T11:48:32.943683-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.206Z\",\"caller\":\"etcdmain/main.go:44\",\"msg\":\"notifying init daemon\"}\n"}
{"Time":"2023-05-31T11:48:32.943685-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t{\"level\":\"info\",\"ts\":\"2023-05-31T18:48:26.206Z\",\"caller\":\"etcdmain/main.go:50\",\"msg\":\"successfully notified init daemon\"}\n"}
{"Time":"2023-05-31T11:48:32.943686-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.943688-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.943689-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e kernel \u003c==\n"}
{"Time":"2023-05-31T11:48:32.94369-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t*  18:48:33 up 0 min,  0 users,  load average: 1.40, 0.31, 0.10\n"}
{"Time":"2023-05-31T11:48:32.943692-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tLinux image-844000 5.10.57 #1 SMP PREEMPT Wed May 24 00:44:44 UTC 2023 aarch64 GNU/Linux\n"}
{"Time":"2023-05-31T11:48:32.943696-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tPRETTY_NAME=\"Buildroot 2021.02.12\"\n"}
{"Time":"2023-05-31T11:48:32.943697-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.943699-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.9437-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e kube-apiserver [5ac954bb67b2] \u003c==\n"}
{"Time":"2023-05-31T11:48:32.943702-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* I0531 18:48:27.215165       1 cache.go:39] Caches are synced for autoregister controller\n"}
{"Time":"2023-05-31T11:48:32.943704-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215248       1 cache.go:39] Caches are synced for AvailableConditionController controller\n"}
{"Time":"2023-05-31T11:48:32.943705-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215291       1 apf_controller.go:366] Running API Priority and Fairness config worker\n"}
{"Time":"2023-05-31T11:48:32.943707-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215308       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process\n"}
{"Time":"2023-05-31T11:48:32.943754-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215334       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller\n"}
{"Time":"2023-05-31T11:48:32.94376-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215363       1 shared_informer.go:318] Caches are synced for configmaps\n"}
{"Time":"2023-05-31T11:48:32.943764-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.215970       1 controller.go:624] quota admission added evaluator for: namespaces\n"}
{"Time":"2023-05-31T11:48:32.943778-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.216128       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller\n"}
{"Time":"2023-05-31T11:48:32.943794-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.216264       1 shared_informer.go:318] Caches are synced for crd-autoregister\n"}
{"Time":"2023-05-31T11:48:32.943798-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.229953       1 shared_informer.go:318] Caches are synced for node_authorizer\n"}
{"Time":"2023-05-31T11:48:32.943799-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.410330       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io\n"}
{"Time":"2023-05-31T11:48:32.943801-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:27.973762       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).\n"}
{"Time":"2023-05-31T11:48:32.943802-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.121984       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000\n"}
{"Time":"2023-05-31T11:48:32.943804-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.126165       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000\n"}
{"Time":"2023-05-31T11:48:32.943805-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.126196       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.\n"}
{"Time":"2023-05-31T11:48:32.943807-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.305451       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:48:32.943808-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.316144       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:48:32.94381-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.346724       1 alloc.go:330] \"allocated clusterIPs\" service=\"default/kubernetes\" clusterIPs=map[IPv4:10.96.0.1]\n"}
{"Time":"2023-05-31T11:48:32.943811-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.348743       1 lease.go:251] Resetting endpoints for master service \"kubernetes\" to [192.168.105.5]\n"}
{"Time":"2023-05-31T11:48:32.943826-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.349157       1 controller.go:624] quota admission added evaluator for: endpoints\n"}
{"Time":"2023-05-31T11:48:32.943852-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:28.350545       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io\n"}
{"Time":"2023-05-31T11:48:32.943888-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.149671       1 controller.go:624] quota admission added evaluator for: serviceaccounts\n"}
{"Time":"2023-05-31T11:48:32.943923-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.608742       1 controller.go:624] quota admission added evaluator for: deployments.apps\n"}
{"Time":"2023-05-31T11:48:32.943937-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.612390       1 alloc.go:330] \"allocated clusterIPs\" service=\"kube-system/kube-dns\" clusterIPs=map[IPv4:10.96.0.10]\n"}
{"Time":"2023-05-31T11:48:32.943954-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.616038       1 controller.go:624] quota admission added evaluator for: daemonsets.apps\n"}
{"Time":"2023-05-31T11:48:32.943956-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.943957-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.943959-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e kube-controller-manager [8ee7ff34b031] \u003c==\n"}
{"Time":"2023-05-31T11:48:32.94396-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* I0531 18:48:29.182615       1 resource_quota_monitor.go:223] \"QuotaMonitor created object count evaluator\" resource=\"horizontalpodautoscalers.autoscaling\"\n"}
{"Time":"2023-05-31T11:48:32.943962-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182622       1 resource_quota_monitor.go:223] \"QuotaMonitor created object count evaluator\" resource=\"leases.coordination.k8s.io\"\n"}
{"Time":"2023-05-31T11:48:32.943964-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182629       1 resource_quota_monitor.go:223] \"QuotaMonitor created object count evaluator\" resource=\"roles.rbac.authorization.k8s.io\"\n"}
{"Time":"2023-05-31T11:48:32.943965-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182650       1 resource_quota_monitor.go:223] \"QuotaMonitor created object count evaluator\" resource=\"csistoragecapacities.storage.k8s.io\"\n"}
{"Time":"2023-05-31T11:48:32.943967-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182662       1 controllermanager.go:638] \"Started controller\" controller=\"resourcequota\"\n"}
{"Time":"2023-05-31T11:48:32.943969-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182723       1 resource_quota_controller.go:295] \"Starting resource quota controller\"\n"}
{"Time":"2023-05-31T11:48:32.94397-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182729       1 shared_informer.go:311] Waiting for caches to sync for resource quota\n"}
{"Time":"2023-05-31T11:48:32.943971-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.182772       1 resource_quota_monitor.go:304] \"QuotaMonitor running\"\n"}
{"Time":"2023-05-31T11:48:32.943973-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.245476       1 shared_informer.go:318] Caches are synced for tokens\n"}
{"Time":"2023-05-31T11:48:32.943974-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.246928       1 controllermanager.go:638] \"Started controller\" controller=\"serviceaccount\"\n"}
{"Time":"2023-05-31T11:48:32.943976-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.247008       1 serviceaccounts_controller.go:111] \"Starting service account controller\"\n"}
{"Time":"2023-05-31T11:48:32.943977-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.247015       1 shared_informer.go:311] Waiting for caches to sync for service account\n"}
{"Time":"2023-05-31T11:48:32.943979-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400888       1 controllermanager.go:638] \"Started controller\" controller=\"csrsigning\"\n"}
{"Time":"2023-05-31T11:48:32.94398-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400935       1 certificate_controller.go:112] Starting certificate controller \"csrsigning-legacy-unknown\"\n"}
{"Time":"2023-05-31T11:48:32.943982-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400943       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown\n"}
{"Time":"2023-05-31T11:48:32.943984-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400978       1 certificate_controller.go:112] Starting certificate controller \"csrsigning-kubelet-serving\"\n"}
{"Time":"2023-05-31T11:48:32.943985-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400980       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving\n"}
{"Time":"2023-05-31T11:48:32.943988-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400990       1 certificate_controller.go:112] Starting certificate controller \"csrsigning-kubelet-client\"\n"}
{"Time":"2023-05-31T11:48:32.94399-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.400993       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client\n"}
{"Time":"2023-05-31T11:48:32.943994-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401002       1 certificate_controller.go:112] Starting certificate controller \"csrsigning-kube-apiserver-client\"\n"}
{"Time":"2023-05-31T11:48:32.943996-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401015       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client\n"}
{"Time":"2023-05-31T11:48:32.943997-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401033       1 dynamic_serving_content.go:132] \"Starting controller\" name=\"csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key\"\n"}
{"Time":"2023-05-31T11:48:32.943999-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401068       1 dynamic_serving_content.go:132] \"Starting controller\" name=\"csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key\"\n"}
{"Time":"2023-05-31T11:48:32.944-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401091       1 dynamic_serving_content.go:132] \"Starting controller\" name=\"csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key\"\n"}
{"Time":"2023-05-31T11:48:32.944002-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:29.401113       1 dynamic_serving_content.go:132] \"Starting controller\" name=\"csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key\"\n"}
{"Time":"2023-05-31T11:48:32.944003-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.944005-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.944006-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e kube-scheduler [81c924626988] \u003c==\n"}
{"Time":"2023-05-31T11:48:32.944007-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* W0531 18:48:27.188225       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944009-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188246       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944012-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:27.188257       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944014-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:27.188300       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944016-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188310       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944018-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188301       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.94402-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:27.188333       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944022-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188341       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944086-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:27.188238       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.94409-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188347       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944092-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:27.188413       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944094-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:27.188438       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944096-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.012217       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944098-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.012285       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944102-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.039085       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944103-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.039149       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944105-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.051257       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944218-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.051298       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944221-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.064145       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944223-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.064175       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944225-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.207834       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944227-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.207854       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:48:32.944232-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tW0531 18:48:28.262797       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:48:32.944234-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tE0531 18:48:28.262886       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:48:32.944236-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tI0531 18:48:31.384454       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:48:32.944237-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.944238-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* \n"}
{"Time":"2023-05-31T11:48:32.944239-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* ==\u003e kubelet \u003c==\n"}
{"Time":"2023-05-31T11:48:32.944299-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:48:12 UTC, ends at Wed 2023-05-31 18:48:33 UTC. --\n"}
{"Time":"2023-05-31T11:48:32.944301-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.802971    2284 kubelet_node_status.go:108] \"Node was previously registered\" node=\"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944303-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.803069    2284 kubelet_node_status.go:73] \"Successfully registered node\" node=\"image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944305-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851726    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"kubeconfig\\\" (UniqueName: \\\"kubernetes.io/host-path/734f4f918a14e3d27cfbf2b12fc195b3-kubeconfig\\\") pod \\\"kube-controller-manager-image-844000\\\" (UID: \\\"734f4f918a14e3d27cfbf2b12fc195b3\\\") \" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944308-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851757    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"kubeconfig\\\" (UniqueName: \\\"kubernetes.io/host-path/191bf0b5d0f8914e602be8569e0de3e2-kubeconfig\\\") pod \\\"kube-scheduler-image-844000\\\" (UID: \\\"191bf0b5d0f8914e602be8569e0de3e2\\\") \" pod=\"kube-system/kube-scheduler-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944311-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851770    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"etcd-certs\\\" (UniqueName: \\\"kubernetes.io/host-path/e86860e48585e3621467bb8e5144284e-etcd-certs\\\") pod \\\"etcd-image-844000\\\" (UID: \\\"e86860e48585e3621467bb8e5144284e\\\") \" pod=\"kube-system/etcd-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944313-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851779    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"k8s-certs\\\" (UniqueName: \\\"kubernetes.io/host-path/8da251045f5778636e403a21a1675b48-k8s-certs\\\") pod \\\"kube-apiserver-image-844000\\\" (UID: \\\"8da251045f5778636e403a21a1675b48\\\") \" pod=\"kube-system/kube-apiserver-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944315-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851791    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"flexvolume-dir\\\" (UniqueName: \\\"kubernetes.io/host-path/734f4f918a14e3d27cfbf2b12fc195b3-flexvolume-dir\\\") pod \\\"kube-controller-manager-image-844000\\\" (UID: \\\"734f4f918a14e3d27cfbf2b12fc195b3\\\") \" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944317-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851800    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"k8s-certs\\\" (UniqueName: \\\"kubernetes.io/host-path/734f4f918a14e3d27cfbf2b12fc195b3-k8s-certs\\\") pod \\\"kube-controller-manager-image-844000\\\" (UID: \\\"734f4f918a14e3d27cfbf2b12fc195b3\\\") \" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944393-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851810    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"usr-share-ca-certificates\\\" (UniqueName: \\\"kubernetes.io/host-path/734f4f918a14e3d27cfbf2b12fc195b3-usr-share-ca-certificates\\\") pod \\\"kube-controller-manager-image-844000\\\" (UID: \\\"734f4f918a14e3d27cfbf2b12fc195b3\\\") \" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944402-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851819    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"etcd-data\\\" (UniqueName: \\\"kubernetes.io/host-path/e86860e48585e3621467bb8e5144284e-etcd-data\\\") pod \\\"etcd-image-844000\\\" (UID: \\\"e86860e48585e3621467bb8e5144284e\\\") \" pod=\"kube-system/etcd-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944408-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851829    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"ca-certs\\\" (UniqueName: \\\"kubernetes.io/host-path/8da251045f5778636e403a21a1675b48-ca-certs\\\") pod \\\"kube-apiserver-image-844000\\\" (UID: \\\"8da251045f5778636e403a21a1675b48\\\") \" pod=\"kube-system/kube-apiserver-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944414-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851839    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"usr-share-ca-certificates\\\" (UniqueName: \\\"kubernetes.io/host-path/8da251045f5778636e403a21a1675b48-usr-share-ca-certificates\\\") pod \\\"kube-apiserver-image-844000\\\" (UID: \\\"8da251045f5778636e403a21a1675b48\\\") \" pod=\"kube-system/kube-apiserver-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944419-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:29 image-844000 kubelet[2284]: I0531 18:48:29.851849    2284 reconciler_common.go:258] \"operationExecutor.VerifyControllerAttachedVolume started for volume \\\"ca-certs\\\" (UniqueName: \\\"kubernetes.io/host-path/734f4f918a14e3d27cfbf2b12fc195b3-ca-certs\\\") pod \\\"kube-controller-manager-image-844000\\\" (UID: \\\"734f4f918a14e3d27cfbf2b12fc195b3\\\") \" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944435-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.637083    2284 apiserver.go:52] \"Watching apiserver\"\n"}
{"Time":"2023-05-31T11:48:32.944437-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.650538    2284 desired_state_of_world_populator.go:153] \"Finished populating initial desired state of world\"\n"}
{"Time":"2023-05-31T11:48:32.944439-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.654745    2284 reconciler.go:41] \"Reconciler: start to sync state\"\n"}
{"Time":"2023-05-31T11:48:32.944497-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: E0531 18:48:30.707260    2284 kubelet.go:1856] \"Failed creating a mirror pod for\" err=\"pods \\\"kube-controller-manager-image-844000\\\" already exists\" pod=\"kube-system/kube-controller-manager-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944503-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: E0531 18:48:30.707322    2284 kubelet.go:1856] \"Failed creating a mirror pod for\" err=\"pods \\\"kube-apiserver-image-844000\\\" already exists\" pod=\"kube-system/kube-apiserver-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944505-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: E0531 18:48:30.707684    2284 kubelet.go:1856] \"Failed creating a mirror pod for\" err=\"pods \\\"etcd-image-844000\\\" already exists\" pod=\"kube-system/etcd-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944507-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: E0531 18:48:30.707722    2284 kubelet.go:1856] \"Failed creating a mirror pod for\" err=\"pods \\\"kube-scheduler-image-844000\\\" already exists\" pod=\"kube-system/kube-scheduler-image-844000\"\n"}
{"Time":"2023-05-31T11:48:32.944509-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.714415    2284 pod_startup_latency_tracker.go:102] \"Observed pod startup duration\" pod=\"kube-system/kube-controller-manager-image-844000\" podStartSLOduration=2.7143948 podCreationTimestamp=\"2023-05-31 18:48:28 +0000 UTC\" firstStartedPulling=\"0001-01-01 00:00:00 +0000 UTC\" lastFinishedPulling=\"0001-01-01 00:00:00 +0000 UTC\" observedRunningTime=\"2023-05-31 18:48:30.714332425 +0000 UTC m=+1.126031877\" watchObservedRunningTime=\"2023-05-31 18:48:30.7143948 +0000 UTC m=+1.126094252\"\n"}
{"Time":"2023-05-31T11:48:32.944512-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.718492    2284 pod_startup_latency_tracker.go:102] \"Observed pod startup duration\" pod=\"kube-system/etcd-image-844000\" podStartSLOduration=1.718451592 podCreationTimestamp=\"2023-05-31 18:48:29 +0000 UTC\" firstStartedPulling=\"0001-01-01 00:00:00 +0000 UTC\" lastFinishedPulling=\"0001-01-01 00:00:00 +0000 UTC\" observedRunningTime=\"2023-05-31 18:48:30.7183738 +0000 UTC m=+1.130073252\" watchObservedRunningTime=\"2023-05-31 18:48:30.718451592 +0000 UTC m=+1.130151044\"\n"}
{"Time":"2023-05-31T11:48:32.944515-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.727029    2284 pod_startup_latency_tracker.go:102] \"Observed pod startup duration\" pod=\"kube-system/kube-scheduler-image-844000\" podStartSLOduration=1.727007884 podCreationTimestamp=\"2023-05-31 18:48:29 +0000 UTC\" firstStartedPulling=\"0001-01-01 00:00:00 +0000 UTC\" lastFinishedPulling=\"0001-01-01 00:00:00 +0000 UTC\" observedRunningTime=\"2023-05-31 18:48:30.722595425 +0000 UTC m=+1.134294835\" watchObservedRunningTime=\"2023-05-31 18:48:30.727007884 +0000 UTC m=+1.138707294\"\n"}
{"Time":"2023-05-31T11:48:32.944517-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:30 image-844000 kubelet[2284]: I0531 18:48:30.731165    2284 pod_startup_latency_tracker.go:102] \"Observed pod startup duration\" pod=\"kube-system/kube-apiserver-image-844000\" podStartSLOduration=1.7311524249999999 podCreationTimestamp=\"2023-05-31 18:48:29 +0000 UTC\" firstStartedPulling=\"0001-01-01 00:00:00 +0000 UTC\" lastFinishedPulling=\"0001-01-01 00:00:00 +0000 UTC\" observedRunningTime=\"2023-05-31 18:48:30.727173925 +0000 UTC m=+1.138873377\" watchObservedRunningTime=\"2023-05-31 18:48:30.731152425 +0000 UTC m=+1.142851877\"\n"}
{"Time":"2023-05-31T11:48:32.944569-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tMay 31 18:48:32 image-844000 kubelet[2284]: I0531 18:48:32.416317    2284 kubelet_node_status.go:493] \"Fast updating node status as it just became ready\"\n"}
{"Time":"2023-05-31T11:48:32.944571-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \t\n"}
{"Time":"2023-05-31T11:48:32.944572-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \n"}
{"Time":"2023-05-31T11:48:32.944574-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:48:32.944575-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:254: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.APIServer}} -p image-844000 -n image-844000\n"}
{"Time":"2023-05-31T11:48:33.016517-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:261: (dbg) Run:  kubectl --context image-844000 get po -o=jsonpath={.items[*].metadata.name} -A --field-selector=status.phase!=Running\n"}
{"Time":"2023-05-31T11:48:33.053731-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:272: non-running pods: storage-provisioner\n"}
{"Time":"2023-05-31T11:48:33.053744-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:274: ======\u003e post-mortem[TestImageBuild/serial/BuildWithBuildArg]: describe non-running pods \u003c======\n"}
{"Time":"2023-05-31T11:48:33.053817-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:277: (dbg) Run:  kubectl --context image-844000 describe pod storage-provisioner\n"}
{"Time":"2023-05-31T11:48:33.0916-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:277: (dbg) Non-zero exit: kubectl --context image-844000 describe pod storage-provisioner: exit status 1 (37.7125ms)\n"}
{"Time":"2023-05-31T11:48:33.091615-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \n"}
{"Time":"2023-05-31T11:48:33.091626-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:48:33.091628-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \tError from server (NotFound): pods \"storage-provisioner\" not found\n"}
{"Time":"2023-05-31T11:48:33.09163-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        \n"}
{"Time":"2023-05-31T11:48:33.091632-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:48:33.091634-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"    helpers_test.go:279: kubectl --context image-844000 describe pod storage-provisioner: exit status 1\n"}
{"Time":"2023-05-31T11:48:33.091637-07:00","Action":"run","Test":"TestImageBuild/serial/BuildWithDockerIgnore"}
{"Time":"2023-05-31T11:48:33.091639-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithDockerIgnore","Output":"=== RUN   TestImageBuild/serial/BuildWithDockerIgnore\n"}
{"Time":"2023-05-31T11:48:33.091711-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithDockerIgnore","Output":"    image_test.go:133: (dbg) Run:  out/minikube-darwin-arm64 image build -t aaa:latest ./testdata/image-build/test-normal --build-opt=no-cache -p image-844000\n"}
{"Time":"2023-05-31T11:48:33.199852-07:00","Action":"run","Test":"TestImageBuild/serial/BuildWithSpecifiedDockerfile"}
{"Time":"2023-05-31T11:48:33.199864-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithSpecifiedDockerfile","Output":"=== RUN   TestImageBuild/serial/BuildWithSpecifiedDockerfile\n"}
{"Time":"2023-05-31T11:48:33.199916-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithSpecifiedDockerfile","Output":"    image_test.go:88: (dbg) Run:  out/minikube-darwin-arm64 image build -t aaa:latest -f inner/Dockerfile ./testdata/image-build/test-f -p image-844000\n"}
{"Time":"2023-05-31T11:48:33.295711-07:00","Action":"run","Test":"TestImageBuild/serial/validateImageBuildWithBuildEnv"}
{"Time":"2023-05-31T11:48:33.295725-07:00","Action":"output","Test":"TestImageBuild/serial/validateImageBuildWithBuildEnv","Output":"=== RUN   TestImageBuild/serial/validateImageBuildWithBuildEnv\n"}
{"Time":"2023-05-31T11:48:33.295729-07:00","Action":"output","Test":"TestImageBuild/serial/validateImageBuildWithBuildEnv","Output":"    image_test.go:114: skipping due to https://github.com/kubernetes/minikube/issues/12431\n"}
{"Time":"2023-05-31T11:48:33.295793-07:00","Action":"output","Test":"TestImageBuild","Output":"    helpers_test.go:175: Cleaning up \"image-844000\" profile ...\n"}
{"Time":"2023-05-31T11:48:33.295814-07:00","Action":"output","Test":"TestImageBuild","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p image-844000\n"}
{"Time":"2023-05-31T11:48:33.407772-07:00","Action":"output","Test":"TestImageBuild","Output":"--- FAIL: TestImageBuild (32.77s)\n"}
{"Time":"2023-05-31T11:48:33.407787-07:00","Action":"output","Test":"TestImageBuild/serial","Output":"    --- FAIL: TestImageBuild/serial (32.66s)\n"}
{"Time":"2023-05-31T11:48:33.40779-07:00","Action":"output","Test":"TestImageBuild/serial/Setup","Output":"        --- PASS: TestImageBuild/serial/Setup (29.61s)\n"}
{"Time":"2023-05-31T11:48:33.407792-07:00","Action":"pass","Test":"TestImageBuild/serial/Setup","Elapsed":29.61}
{"Time":"2023-05-31T11:48:33.407796-07:00","Action":"output","Test":"TestImageBuild/serial/NormalBuild","Output":"        --- PASS: TestImageBuild/serial/NormalBuild (1.84s)\n"}
{"Time":"2023-05-31T11:48:33.407799-07:00","Action":"pass","Test":"TestImageBuild/serial/NormalBuild","Elapsed":1.84}
{"Time":"2023-05-31T11:48:33.407801-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithBuildArg","Output":"        --- FAIL: TestImageBuild/serial/BuildWithBuildArg (1.01s)\n"}
{"Time":"2023-05-31T11:48:33.407802-07:00","Action":"fail","Test":"TestImageBuild/serial/BuildWithBuildArg","Elapsed":1.01}
{"Time":"2023-05-31T11:48:33.407804-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithDockerIgnore","Output":"        --- PASS: TestImageBuild/serial/BuildWithDockerIgnore (0.11s)\n"}
{"Time":"2023-05-31T11:48:33.407806-07:00","Action":"pass","Test":"TestImageBuild/serial/BuildWithDockerIgnore","Elapsed":0.11}
{"Time":"2023-05-31T11:48:33.407807-07:00","Action":"output","Test":"TestImageBuild/serial/BuildWithSpecifiedDockerfile","Output":"        --- PASS: TestImageBuild/serial/BuildWithSpecifiedDockerfile (0.10s)\n"}
{"Time":"2023-05-31T11:48:33.407809-07:00","Action":"pass","Test":"TestImageBuild/serial/BuildWithSpecifiedDockerfile","Elapsed":0.1}
{"Time":"2023-05-31T11:48:33.40781-07:00","Action":"output","Test":"TestImageBuild/serial/validateImageBuildWithBuildEnv","Output":"        --- SKIP: TestImageBuild/serial/validateImageBuildWithBuildEnv (0.00s)\n"}
{"Time":"2023-05-31T11:48:33.407813-07:00","Action":"skip","Test":"TestImageBuild/serial/validateImageBuildWithBuildEnv","Elapsed":0}
{"Time":"2023-05-31T11:48:33.407814-07:00","Action":"fail","Test":"TestImageBuild/serial","Elapsed":32.66}
{"Time":"2023-05-31T11:48:33.407815-07:00","Action":"fail","Test":"TestImageBuild","Elapsed":32.77}
{"Time":"2023-05-31T11:48:33.407816-07:00","Action":"run","Test":"TestIngressAddonLegacy"}
{"Time":"2023-05-31T11:48:33.407818-07:00","Action":"output","Test":"TestIngressAddonLegacy","Output":"=== RUN   TestIngressAddonLegacy\n"}
{"Time":"2023-05-31T11:48:33.407819-07:00","Action":"run","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster"}
{"Time":"2023-05-31T11:48:33.407821-07:00","Action":"output","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster","Output":"=== RUN   TestIngressAddonLegacy/StartLegacyK8sCluster\n"}
{"Time":"2023-05-31T11:48:33.407888-07:00","Action":"output","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster","Output":"    ingress_addon_legacy_test.go:39: (dbg) Run:  out/minikube-darwin-arm64 start -p ingress-addon-legacy-798000 --kubernetes-version=v1.18.20 --memory=4096 --wait=true --alsologtostderr -v=5 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:50:00.407564-07:00","Action":"output","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster","Output":"    ingress_addon_legacy_test.go:39: (dbg) Done: out/minikube-darwin-arm64 start -p ingress-addon-legacy-798000 --kubernetes-version=v1.18.20 --memory=4096 --wait=true --alsologtostderr -v=5 --driver=qemu2 : (1m27.000869667s)\n"}
{"Time":"2023-05-31T11:50:00.407585-07:00","Action":"run","Test":"TestIngressAddonLegacy/serial"}
{"Time":"2023-05-31T11:50:00.407587-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial","Output":"=== RUN   TestIngressAddonLegacy/serial\n"}
{"Time":"2023-05-31T11:50:00.407608-07:00","Action":"run","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation"}
{"Time":"2023-05-31T11:50:00.407612-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation","Output":"=== RUN   TestIngressAddonLegacy/serial/ValidateIngressAddonActivation\n"}
{"Time":"2023-05-31T11:50:00.407638-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation","Output":"    ingress_addon_legacy_test.go:70: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons enable ingress --alsologtostderr -v=5\n"}
{"Time":"2023-05-31T11:50:18.252635-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation","Output":"    ingress_addon_legacy_test.go:70: (dbg) Done: out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons enable ingress --alsologtostderr -v=5: (17.845075167s)\n"}
{"Time":"2023-05-31T11:50:18.253001-07:00","Action":"run","Test":"TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation"}
{"Time":"2023-05-31T11:50:18.253011-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation","Output":"=== RUN   TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation\n"}
{"Time":"2023-05-31T11:50:18.253018-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation","Output":"    ingress_addon_legacy_test.go:79: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons enable ingress-dns --alsologtostderr -v=5\n"}
{"Time":"2023-05-31T11:50:18.45422-07:00","Action":"run","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons"}
{"Time":"2023-05-31T11:50:18.454236-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"=== RUN   TestIngressAddonLegacy/serial/ValidateIngressAddons\n"}
{"Time":"2023-05-31T11:50:18.455127-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:183: (dbg) Run:  kubectl --context ingress-addon-legacy-798000 wait --for=condition=ready --namespace=ingress-nginx pod --selector=app.kubernetes.io/component=controller --timeout=90s\n"}
{"Time":"2023-05-31T11:50:35.878341-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:183: (dbg) Done: kubectl --context ingress-addon-legacy-798000 wait --for=condition=ready --namespace=ingress-nginx pod --selector=app.kubernetes.io/component=controller --timeout=90s: (17.423275125s)\n"}
{"Time":"2023-05-31T11:50:35.893731-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:208: (dbg) Run:  kubectl --context ingress-addon-legacy-798000 replace --force -f testdata/nginx-ingress-v1beta1.yaml\n"}
{"Time":"2023-05-31T11:50:36.051274-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:221: (dbg) Run:  kubectl --context ingress-addon-legacy-798000 replace --force -f testdata/nginx-pod-svc.yaml\n"}
{"Time":"2023-05-31T11:50:36.133188-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:226: (dbg) TestIngressAddonLegacy/serial/ValidateIngressAddons: waiting 8m0s for pods matching \"run=nginx\" in namespace \"default\" ...\n"}
{"Time":"2023-05-31T11:50:36.135948-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:344: \"nginx\" [c031b6d9-1ad1-4fe1-ba62-4f541133408d] Pending / Ready:ContainersNotReady (containers with unready status: [nginx]) / ContainersReady:ContainersNotReady (containers with unready status: [nginx])\n"}
{"Time":"2023-05-31T11:50:41.146217-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:344: \"nginx\" [c031b6d9-1ad1-4fe1-ba62-4f541133408d] Running\n"}
{"Time":"2023-05-31T11:50:47.147426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:226: (dbg) TestIngressAddonLegacy/serial/ValidateIngressAddons: run=nginx healthy within 11.014317417s\n"}
{"Time":"2023-05-31T11:50:47.151096-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:238: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 ssh \"curl -s http://127.0.0.1/ -H 'Host: nginx.example.com'\"\n"}
{"Time":"2023-05-31T11:50:47.255459-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:262: (dbg) Run:  kubectl --context ingress-addon-legacy-798000 replace --force -f testdata/ingress-dns-example-v1beta1.yaml\n"}
{"Time":"2023-05-31T11:50:47.370141-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:267: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 ip\n"}
{"Time":"2023-05-31T11:50:47.420546-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:273: (dbg) Run:  nslookup hello-john.test 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:02.461359-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:273: (dbg) Non-zero exit: nslookup hello-john.test 192.168.105.6: exit status 1 (15.040665541s)\n"}
{"Time":"2023-05-31T11:51:02.461416-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \n"}
{"Time":"2023-05-31T11:51:02.461426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:51:02.461469-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t;; connection timed out; no servers could be reached\n"}
{"Time":"2023-05-31T11:51:02.461477-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:02.461483-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \n"}
{"Time":"2023-05-31T11:51:02.46149-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:51:02.461497-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:275: failed to nslookup hello-john.test host. args \"nslookup hello-john.test 192.168.105.6\" : exit status 1\n"}
{"Time":"2023-05-31T11:51:02.461514-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:279: unexpected output from nslookup. stdout: ;; connection timed out; no servers could be reached\n"}
{"Time":"2023-05-31T11:51:02.461521-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \n"}
{"Time":"2023-05-31T11:51:02.461528-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \n"}
{"Time":"2023-05-31T11:51:02.461535-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        stderr: \n"}
{"Time":"2023-05-31T11:51:02.461542-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:282: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons disable ingress-dns --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T11:51:10.592427-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:282: (dbg) Done: out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons disable ingress-dns --alsologtostderr -v=1: (8.131016208s)\n"}
{"Time":"2023-05-31T11:51:10.592452-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:287: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons disable ingress --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T11:51:17.652868-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    addons_test.go:287: (dbg) Done: out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 addons disable ingress --alsologtostderr -v=1: (7.060365583s)\n"}
{"Time":"2023-05-31T11:51:17.652913-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:51:17.65292-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p ingress-addon-legacy-798000 -n ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:17.761744-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:244: \u003c\u003c\u003c TestIngressAddonLegacy/serial/ValidateIngressAddons FAILED: start of post-mortem logs \u003c\u003c\u003c\n"}
{"Time":"2023-05-31T11:51:17.76176-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:245: ======\u003e  post-mortem[TestIngressAddonLegacy/serial/ValidateIngressAddons]: minikube logs \u003c======\n"}
{"Time":"2023-05-31T11:51:17.761762-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:247: (dbg) Run:  out/minikube-darwin-arm64 -p ingress-addon-legacy-798000 logs -n 25\n"}
{"Time":"2023-05-31T11:51:18.264708-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:252: TestIngressAddonLegacy/serial/ValidateIngressAddons logs: \n"}
{"Time":"2023-05-31T11:51:18.264733-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:51:18.264735-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.264736-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T11:51:18.264738-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* |----------------|------------------------------------------|-----------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:51:18.26474-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|    Command     |                   Args                   |           Profile           |  User   | Version |     Start Time      |      End Time       |\n"}
{"Time":"2023-05-31T11:51:18.264741-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|----------------|------------------------------------------|-----------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:51:18.264743-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| dashboard      | --url --port 36195                       | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264745-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | -p functional-730000                     |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264746-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=1                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264748-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| update-context | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264749-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | update-context                           |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.26475-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=2                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264752-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| update-context | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264754-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | update-context                           |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264755-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=2                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264757-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| update-context | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264758-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | update-context                           |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264759-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=2                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264761-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264762-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image ls --format short                  |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264764-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr                        |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264765-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264767-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image ls --format json                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264768-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr                        |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.26477-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264772-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image ls --format table                  |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264775-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr                        |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264776-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000                        | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264778-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image ls --format yaml                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264779-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr                        |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264781-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| ssh            | functional-730000 ssh pgrep              | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT |                     |\n"}
{"Time":"2023-05-31T11:51:18.264782-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | buildkitd                                |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264783-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000 image build -t         | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264785-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | localhost/my-image:functional-730000     |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264786-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | testdata/build --alsologtostderr         |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264788-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | functional-730000 image ls               | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:47 PDT | 31 May 23 11:47 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264789-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| delete         | -p functional-730000                     | functional-730000           | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264791-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| start          | -p image-844000 --driver=qemu2           | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264792-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                |                                          |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264794-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | build -t aaa:latest                      | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264795-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | ./testdata/image-build/test-normal       |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264797-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | -p image-844000                          |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264798-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | build -t aaa:latest                      | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264799-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --build-opt=build-arg=ENV_A=test_env_str |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264801-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --build-opt=no-cache                     |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264802-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | ./testdata/image-build/test-arg -p       |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264804-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image-844000                             |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264805-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | build -t aaa:latest                      | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264807-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | ./testdata/image-build/test-normal       |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264808-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --build-opt=no-cache -p                  |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264812-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | image-844000                             |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264821-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| image          | build -t aaa:latest                      | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264823-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | -f inner/Dockerfile                      |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264824-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | ./testdata/image-build/test-f            |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264826-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | -p image-844000                          |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264827-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| delete         | -p image-844000                          | image-844000                | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:48 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264829-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| start          | -p ingress-addon-legacy-798000           | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:48 PDT | 31 May 23 11:50 PDT |\n"}
{"Time":"2023-05-31T11:51:18.26483-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --kubernetes-version=v1.18.20            |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264832-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --memory=4096 --wait=true                |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264833-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=5                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264835-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --driver=qemu2                           |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264836-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| addons         | ingress-addon-legacy-798000              | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:50 PDT | 31 May 23 11:50 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264838-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | addons enable ingress                    |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264839-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=5                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264842-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| addons         | ingress-addon-legacy-798000              | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:50 PDT | 31 May 23 11:50 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264846-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | addons enable ingress-dns                |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264848-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=5                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.26485-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| ssh            | ingress-addon-legacy-798000              | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:50 PDT | 31 May 23 11:50 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264851-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | ssh curl -s http://127.0.0.1/            |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264853-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | -H 'Host: nginx.example.com'             |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264854-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| ip             | ingress-addon-legacy-798000 ip           | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:50 PDT | 31 May 23 11:50 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264856-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| addons         | ingress-addon-legacy-798000              | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:51 PDT | 31 May 23 11:51 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264857-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | addons disable ingress-dns               |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264859-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=1                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.26486-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t| addons         | ingress-addon-legacy-798000              | ingress-addon-legacy-798000 | jenkins | v1.30.1 | 31 May 23 11:51 PDT | 31 May 23 11:51 PDT |\n"}
{"Time":"2023-05-31T11:51:18.264862-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | addons disable ingress                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264864-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|                | --alsologtostderr -v=1                   |                             |         |         |                     |                     |\n"}
{"Time":"2023-05-31T11:51:18.264865-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t|----------------|------------------------------------------|-----------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T11:51:18.264867-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.264868-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.264869-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T11:51:18.264871-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* Log file created at: 2023/05/31 11:48:33\n"}
{"Time":"2023-05-31T11:51:18.264873-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T11:51:18.264874-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T11:51:18.264876-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T11:51:18.264877-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.436495    2237 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:51:18.264879-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.436624    2237 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:51:18.26488-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.436627    2237 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:51:18.264882-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.436630    2237 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:51:18.264883-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.436696    2237 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:51:18.264885-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.437707    2237 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:51:18.264886-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.453082    2237 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1084,\"bootTime\":1685557829,\"procs\":397,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:51:18.264894-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:48:33.453152    2237 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:51:18.264896-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.455931    2237 out.go:177] * [ingress-addon-legacy-798000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:51:18.264897-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.462721    2237 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:51:18.264899-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.466859    2237 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.2649-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.462811    2237 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:51:18.264901-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.483855    2237 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:51:18.264903-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.487004    2237 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:51:18.264904-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.489935    2237 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:51:18.264905-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.491098    2237 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:51:18.264907-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.494049    2237 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:51:18.264911-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.497897    2237 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:51:18.264914-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.502878    2237 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:51:18.264915-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.502883    2237 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:51:18.264917-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.502890    2237 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:51:18.264918-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.504817    2237 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:51:18.26492-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.507886    2237 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:51:18.264921-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.511018    2237 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:51:18.264923-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.511039    2237 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:51:18.264924-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.511049    2237 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T11:51:18.264926-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.511054    2237 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:51:18.264929-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t{Name:ingress-addon-legacy-798000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.18.20 ClusterName:ingress-addon-legacy-798000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.loc"}
{"Time":"2023-05-31T11:51:18.264933-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"al ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP"}
{"Time":"2023-05-31T11:51:18.264935-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":":}\n"}
{"Time":"2023-05-31T11:51:18.264937-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.511161    2237 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.264938-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.518874    2237 out.go:177] * Starting control plane node ingress-addon-legacy-798000 in cluster ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.26494-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.522877    2237 preload.go:132] Checking if preload exists for k8s version v1.18.20 and runtime docker\n"}
{"Time":"2023-05-31T11:51:18.264941-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.645537    2237 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.18.20/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.264943-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.645575    2237 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:51:18.264945-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.645939    2237 preload.go:132] Checking if preload exists for k8s version v1.18.20 and runtime docker\n"}
{"Time":"2023-05-31T11:51:18.264946-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.650676    2237 out.go:177] * Downloading Kubernetes v1.18.20 preload ...\n"}
{"Time":"2023-05-31T11:51:18.264948-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.657516    2237 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:51:18.264949-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:33.794668    2237 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.18.20/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4?checksum=md5:c8c260b886393123ce9d312d8ac2379e -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.264951-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.150451    2237 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:51:18.264953-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.150575    2237 preload.go:256] verifying checksum of /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 ...\n"}
{"Time":"2023-05-31T11:51:18.264954-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899023    2237 cache.go:60] Finished verifying existence of preloaded tar for  v1.18.20 on docker\n"}
{"Time":"2023-05-31T11:51:18.264956-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899201    2237 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/config.json ...\n"}
{"Time":"2023-05-31T11:51:18.264958-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899222    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/config.json: {Name:mkcc876d570b2eeefeb48541bafbaf1c7de48e27 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.264959-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899457    2237 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:51:18.264961-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899469    2237 start.go:364] acquiring machines lock for ingress-addon-legacy-798000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.264966-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899496    2237 start.go:368] acquired machines lock for \"ingress-addon-legacy-798000\" in 23µs\n"}
{"Time":"2023-05-31T11:51:18.264969-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899506    2237 start.go:93] Provisioning new machine with config: \u0026{Name:ingress-addon-legacy-798000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 K"}
{"Time":"2023-05-31T11:51:18.264972-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"ubernetesConfig:{KubernetesVersion:v1.18.20 ClusterName:ingress-addon-legacy-798000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.18.20 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:doc"}
{"Time":"2023-05-31T11:51:18.264975-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"ker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.18.20 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:51:18.264977-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.899547    2237 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:51:18.264979-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.908248    2237 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=4096MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:51:18.26498-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.922953    2237 start.go:159] libmachine.API.Create for \"ingress-addon-legacy-798000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:51:18.264982-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.922971    2237 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:51:18.264983-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923062    2237 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:51:18.264985-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923080    2237 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:51:18.264986-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923093    2237 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:51:18.264988-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923133    2237 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:51:18.264989-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923147    2237 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:51:18.264991-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923157    2237 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:51:18.264992-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:50.923528    2237 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:51:18.264994-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.153466    2237 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:51:18.264995-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.183503    2237 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:51:18.264997-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.183509    2237 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:51:18.264998-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.183648    2237 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2\n"}
{"Time":"2023-05-31T11:51:18.265-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.192053    2237 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:51:18.265001-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.192070    2237 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:51:18.265003-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.192123    2237 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:51:18.265004-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.199231    2237 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:51:18.265005-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265006-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.199257    2237 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:51:18.265008-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.199280    2237 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2\n"}
{"Time":"2023-05-31T11:51:18.26501-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.199286    2237 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:51:18.265012-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.199325    2237 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 4096 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/qemu.pid -device virtio-net-pci,netdev=net0,mac=ae:3b:87:5d:47:b2 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/disk.qcow2\n"}
{"Time":"2023-05-31T11:51:18.265014-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234027    2237 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:51:18.265018-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234054    2237 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:51:18.265019-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234067    2237 main.go:141] libmachine: Attempt 0\n"}
{"Time":"2023-05-31T11:51:18.265021-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234082    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265022-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234153    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265024-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234185    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265025-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234191    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265027-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234198    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.265028-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:51.234204    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.26503-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236323    2237 main.go:141] libmachine: Attempt 1\n"}
{"Time":"2023-05-31T11:51:18.265031-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236405    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265033-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236764    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265035-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236810    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265036-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236923    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265038-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236955    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.265039-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:53.236983    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.265041-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239154    2237 main.go:141] libmachine: Attempt 2\n"}
{"Time":"2023-05-31T11:51:18.265042-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239182    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265043-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239302    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265045-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239314    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265046-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239319    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265048-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239335    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.265049-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:55.239356    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.265051-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241363    2237 main.go:141] libmachine: Attempt 3\n"}
{"Time":"2023-05-31T11:51:18.265052-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241375    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265053-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241406    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265055-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241413    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265056-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241418    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265058-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241423    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.26506-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:57.241429    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.265061-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243420    2237 main.go:141] libmachine: Attempt 4\n"}
{"Time":"2023-05-31T11:51:18.265062-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243432    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265064-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243464    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265065-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243469    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265067-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243474    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265069-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243480    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.265071-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:48:59.243486    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.265072-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245499    2237 main.go:141] libmachine: Attempt 5\n"}
{"Time":"2023-05-31T11:51:18.265073-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245519    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.265075-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245603    2237 main.go:141] libmachine: Found 4 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265079-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245612    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.5 HWAddress:8e:ee:eb:7:18:3e ID:1,8e:ee:eb:7:18:3e Lease:0x6478e7ec}\n"}
{"Time":"2023-05-31T11:51:18.265081-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245616    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.4 HWAddress:96:fd:9e:f9:3:60 ID:1,96:fd:9e:f9:3:60 Lease:0x6478e731}\n"}
{"Time":"2023-05-31T11:51:18.265082-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245624    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.3 HWAddress:8a:b4:e0:d9:40:4 ID:1,8a:b4:e0:d9:40:4 Lease:0x647795a4}\n"}
{"Time":"2023-05-31T11:51:18.265084-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:01.245638    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.2 HWAddress:56:da:28:8:b0:67 ID:1,56:da:28:8:b0:67 Lease:0x6478e6d9}\n"}
{"Time":"2023-05-31T11:51:18.265085-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247702    2237 main.go:141] libmachine: Attempt 6\n"}
{"Time":"2023-05-31T11:51:18.265089-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247751    2237 main.go:141] libmachine: Searching for ae:3b:87:5d:47:b2 in /var/db/dhcpd_leases ...\n"}
{"Time":"2023-05-31T11:51:18.26509-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247903    2237 main.go:141] libmachine: Found 5 entries in /var/db/dhcpd_leases!\n"}
{"Time":"2023-05-31T11:51:18.265092-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247913    2237 main.go:141] libmachine: dhcp entry: {Name:minikube IPAddress:192.168.105.6 HWAddress:ae:3b:87:5d:47:b2 ID:1,ae:3b:87:5d:47:b2 Lease:0x6478e81e}\n"}
{"Time":"2023-05-31T11:51:18.265093-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247917    2237 main.go:141] libmachine: Found match: ae:3b:87:5d:47:b2\n"}
{"Time":"2023-05-31T11:51:18.265095-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247929    2237 main.go:141] libmachine: IP: 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.265096-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:03.247935    2237 main.go:141] libmachine: Waiting for VM to start (ssh -p 22 docker@192.168.105.6)...\n"}
{"Time":"2023-05-31T11:51:18.265098-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.255455    2237 machine.go:88] provisioning docker machine ...\n"}
{"Time":"2023-05-31T11:51:18.265099-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.255480    2237 buildroot.go:166] provisioning hostname \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.265101-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.255536    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.265102-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.255864    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265104-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.255871    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265105-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tsudo hostname ingress-addon-legacy-798000 \u0026\u0026 echo \"ingress-addon-legacy-798000\" | sudo tee /etc/hostname\n"}
{"Time":"2023-05-31T11:51:18.265107-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.314182    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.265108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.26511-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.314241    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.265111-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.314516    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265113-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.314526    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265114-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265115-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\tif ! grep -xq '.*\\singress-addon-legacy-798000' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:51:18.265116-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\t\tif grep -xq '127.0.1.1\\s.*' /etc/hosts; then\n"}
{"Time":"2023-05-31T11:51:18.265118-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\t\t\tsudo sed -i 's/^127.0.1.1\\s.*/127.0.1.1 ingress-addon-legacy-798000/g' /etc/hosts;\n"}
{"Time":"2023-05-31T11:51:18.265119-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\t\telse \n"}
{"Time":"2023-05-31T11:51:18.265121-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\t\t\techo '127.0.1.1 ingress-addon-legacy-798000' | sudo tee -a /etc/hosts; \n"}
{"Time":"2023-05-31T11:51:18.265122-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\t\tfi\n"}
{"Time":"2023-05-31T11:51:18.265123-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\t\tfi\n"}
{"Time":"2023-05-31T11:51:18.265124-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370532    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: \n"}
{"Time":"2023-05-31T11:51:18.265127-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370546    2237 buildroot.go:172] set auth options {CertDir:/Users/jenkins/minikube-integration/16569-1035/.minikube CaCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ServerKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem ClientKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/jenkins/minikube-integration/16569-1035/.minikube}\n"}
{"Time":"2023-05-31T11:51:18.265131-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370554    2237 buildroot.go:174] setting up certificates\n"}
{"Time":"2023-05-31T11:51:18.265133-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370562    2237 provision.go:83] configureAuth start\n"}
{"Time":"2023-05-31T11:51:18.265134-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370569    2237 provision.go:138] copyHostCerts\n"}
{"Time":"2023-05-31T11:51:18.265136-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370596    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem\n"}
{"Time":"2023-05-31T11:51:18.265139-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370640    2237 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem, removing ...\n"}
{"Time":"2023-05-31T11:51:18.26514-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370645    2237 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem\n"}
{"Time":"2023-05-31T11:51:18.265142-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370777    2237 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265144-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370953    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem\n"}
{"Time":"2023-05-31T11:51:18.265145-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370981    2237 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem, removing ...\n"}
{"Time":"2023-05-31T11:51:18.265147-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.370984    2237 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem\n"}
{"Time":"2023-05-31T11:51:18.265148-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371036    2237 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:51:18.26515-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371119    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem\n"}
{"Time":"2023-05-31T11:51:18.265152-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371148    2237 exec_runner.go:144] found /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem, removing ...\n"}
{"Time":"2023-05-31T11:51:18.265153-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371152    2237 exec_runner.go:203] rm: /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem\n"}
{"Time":"2023-05-31T11:51:18.265155-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371202    2237 exec_runner.go:151] cp: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem --\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265157-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.371280    2237 provision.go:112] generating server cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem ca-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem private-key=/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem org=jenkins.ingress-addon-legacy-798000 san=[192.168.105.6 192.168.105.6 localhost 127.0.0.1 minikube ingress-addon-legacy-798000]\n"}
{"Time":"2023-05-31T11:51:18.265159-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.447082    2237 provision.go:172] copyRemoteCerts\n"}
{"Time":"2023-05-31T11:51:18.26516-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.447121    2237 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker\n"}
{"Time":"2023-05-31T11:51:18.265162-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.447128    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.265164-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.474749    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem -\u003e /etc/docker/ca.pem\n"}
{"Time":"2023-05-31T11:51:18.265165-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.474803    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem --\u003e /etc/docker/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265167-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.481657    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem -\u003e /etc/docker/server.pem\n"}
{"Time":"2023-05-31T11:51:18.265168-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.481694    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server.pem --\u003e /etc/docker/server.pem (1253 bytes)\n"}
{"Time":"2023-05-31T11:51:18.26517-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.488212    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem -\u003e /etc/docker/server-key.pem\n"}
{"Time":"2023-05-31T11:51:18.265172-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.488246    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/server-key.pem --\u003e /etc/docker/server-key.pem (1679 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265173-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495531    2237 provision.go:86] duration metric: configureAuth took 124.959167ms\n"}
{"Time":"2023-05-31T11:51:18.265175-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495538    2237 buildroot.go:189] setting minikube options for container-runtime\n"}
{"Time":"2023-05-31T11:51:18.265176-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495635    2237 config.go:182] Loaded profile config \"ingress-addon-legacy-798000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.265178-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495665    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.265179-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495890    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265181-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.495895    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265182-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tdf --output=fstype / | tail -n 1\n"}
{"Time":"2023-05-31T11:51:18.265183-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548127    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: tmpfs\n"}
{"Time":"2023-05-31T11:51:18.265185-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265186-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548135    2237 buildroot.go:70] root file system type: tmpfs\n"}
{"Time":"2023-05-31T11:51:18.265187-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548188    2237 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...\n"}
{"Time":"2023-05-31T11:51:18.265189-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548232    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.26519-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548459    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265192-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.548511    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265193-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tsudo mkdir -p /lib/systemd/system \u0026\u0026 printf %!s(MISSING) \"[Unit]\n"}
{"Time":"2023-05-31T11:51:18.265195-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:51:18.265196-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:51:18.265197-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:51:18.265199-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:51:18.265203-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:51:18.265204-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:51:18.265205-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265207-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:51:18.265224-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:51:18.265228-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:51:18.26523-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265231-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265232-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265233-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:51:18.265235-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:51:18.265237-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:51:18.265238-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:51:18.26524-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:51:18.265241-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:51:18.265243-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:51:18.265244-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265245-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:51:18.265246-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:51:18.265248-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:51:18.265249-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:51:18.265251-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecReload=/bin/kill -s HUP \\$MAINPID\n"}
{"Time":"2023-05-31T11:51:18.265252-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265313-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:51:18.265317-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:51:18.265319-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:51:18.26532-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:51:18.265321-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:51:18.265323-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265324-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:51:18.265325-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:51:18.265328-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:51:18.265329-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:51:18.265331-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265332-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:51:18.265333-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:51:18.265335-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265336-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:51:18.265337-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:51:18.265338-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.26534-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:51:18.265341-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:51:18.265342-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\" | sudo tee /lib/systemd/system/docker.service.new\n"}
{"Time":"2023-05-31T11:51:18.265344-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.605903    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: [Unit]\n"}
{"Time":"2023-05-31T11:51:18.265345-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDescription=Docker Application Container Engine\n"}
{"Time":"2023-05-31T11:51:18.265437-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDocumentation=https://docs.docker.com\n"}
{"Time":"2023-05-31T11:51:18.26544-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAfter=network.target  minikube-automount.service docker.socket\n"}
{"Time":"2023-05-31T11:51:18.265441-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRequires= minikube-automount.service docker.socket \n"}
{"Time":"2023-05-31T11:51:18.265442-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tStartLimitBurst=3\n"}
{"Time":"2023-05-31T11:51:18.265444-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tStartLimitIntervalSec=60\n"}
{"Time":"2023-05-31T11:51:18.265445-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265446-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:51:18.265448-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tType=notify\n"}
{"Time":"2023-05-31T11:51:18.265449-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRestart=on-failure\n"}
{"Time":"2023-05-31T11:51:18.26545-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265451-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265453-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265454-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# This file is a systemd drop-in unit that inherits from the base dockerd configuration.\n"}
{"Time":"2023-05-31T11:51:18.265455-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# The base configuration already specifies an 'ExecStart=...' command. The first directive\n"}
{"Time":"2023-05-31T11:51:18.265457-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# here is to clear out that command inherited from the base configuration. Without this,\n"}
{"Time":"2023-05-31T11:51:18.265458-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# the command from the base configuration and the command specified here are treated as\n"}
{"Time":"2023-05-31T11:51:18.265462-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd\n"}
{"Time":"2023-05-31T11:51:18.265464-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# will catch this invalid input and refuse to start the service with an error like:\n"}
{"Time":"2023-05-31T11:51:18.265465-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.\n"}
{"Time":"2023-05-31T11:51:18.265466-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265468-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other\n"}
{"Time":"2023-05-31T11:51:18.265526-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# container runtimes. If left unlimited, it may result in OOM issues with MySQL.\n"}
{"Time":"2023-05-31T11:51:18.265546-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:51:18.265547-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 \n"}
{"Time":"2023-05-31T11:51:18.265549-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecReload=/bin/kill -s HUP $MAINPID\n"}
{"Time":"2023-05-31T11:51:18.26555-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265552-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Having non-zero Limit*s causes performance problems due to accounting overhead\n"}
{"Time":"2023-05-31T11:51:18.265553-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# in the kernel. We recommend using cgroups to do container-local accounting.\n"}
{"Time":"2023-05-31T11:51:18.265555-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitNOFILE=infinity\n"}
{"Time":"2023-05-31T11:51:18.265556-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitNPROC=infinity\n"}
{"Time":"2023-05-31T11:51:18.265557-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLimitCORE=infinity\n"}
{"Time":"2023-05-31T11:51:18.265558-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265559-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Uncomment TasksMax if your systemd version supports it.\n"}
{"Time":"2023-05-31T11:51:18.265561-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Only systemd 226 and above support this version.\n"}
{"Time":"2023-05-31T11:51:18.265562-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tTasksMax=infinity\n"}
{"Time":"2023-05-31T11:51:18.265563-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tTimeoutStartSec=0\n"}
{"Time":"2023-05-31T11:51:18.265564-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265566-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# set delegate yes so that systemd does not reset the cgroups of docker containers\n"}
{"Time":"2023-05-31T11:51:18.265567-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tDelegate=yes\n"}
{"Time":"2023-05-31T11:51:18.265568-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.26557-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# kill only the docker process, not all processes in the cgroup\n"}
{"Time":"2023-05-31T11:51:18.265571-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tKillMode=process\n"}
{"Time":"2023-05-31T11:51:18.265625-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265627-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:51:18.265629-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tWantedBy=multi-user.target\n"}
{"Time":"2023-05-31T11:51:18.26563-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265631-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.605944    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.265633-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.606187    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265635-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.606196    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265636-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tsudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload \u0026\u0026 sudo systemctl -f enable docker \u0026\u0026 sudo systemctl -f restart docker; }\n"}
{"Time":"2023-05-31T11:51:18.265638-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957414    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: diff: can't stat '/lib/systemd/system/docker.service': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.26564-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tCreated symlink /etc/systemd/system/multi-user.target.wants/docker.service → /usr/lib/systemd/system/docker.service.\n"}
{"Time":"2023-05-31T11:51:18.265641-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265642-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957430    2237 machine.go:91] provisioned docker machine in 701.974125ms\n"}
{"Time":"2023-05-31T11:51:18.265644-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957435    2237 client.go:171] LocalClient.Create took 14.034664083s\n"}
{"Time":"2023-05-31T11:51:18.265646-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957455    2237 start.go:167] duration metric: libmachine.API.Create for \"ingress-addon-legacy-798000\" took 14.03470575s\n"}
{"Time":"2023-05-31T11:51:18.265647-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957461    2237 start.go:300] post-start starting for \"ingress-addon-legacy-798000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:51:18.265689-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957465    2237 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]\n"}
{"Time":"2023-05-31T11:51:18.26571-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957529    2237 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:51:18.265717-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.957538    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.265718-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.987093    2237 ssh_runner.go:195] Run: cat /etc/os-release\n"}
{"Time":"2023-05-31T11:51:18.26572-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988406    2237 info.go:137] Remote host: Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:51:18.265721-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988416    2237 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/addons for local assets ...\n"}
{"Time":"2023-05-31T11:51:18.265723-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988483    2237 filesync.go:126] Scanning /Users/jenkins/minikube-integration/16569-1035/.minikube/files for local assets ...\n"}
{"Time":"2023-05-31T11:51:18.265724-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988584    2237 filesync.go:149] local asset: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem -\u003e 14772.pem in /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:51:18.265726-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988589    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem -\u003e /etc/ssl/certs/14772.pem\n"}
{"Time":"2023-05-31T11:51:18.265727-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.988695    2237 ssh_runner.go:195] Run: sudo mkdir -p /etc/ssl/certs\n"}
{"Time":"2023-05-31T11:51:18.265729-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.991305    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem --\u003e /etc/ssl/certs/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:51:18.26573-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998062    2237 start.go:303] post-start completed in 40.596125ms\n"}
{"Time":"2023-05-31T11:51:18.265732-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998476    2237 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/config.json ...\n"}
{"Time":"2023-05-31T11:51:18.26577-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998638    2237 start.go:128] duration metric: createHost completed in 14.099291209s\n"}
{"Time":"2023-05-31T11:51:18.265773-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998660    2237 main.go:141] libmachine: Using SSH client type: native\n"}
{"Time":"2023-05-31T11:51:18.265775-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998892    2237 main.go:141] libmachine: \u0026{{{\u003cnil\u003e 0 [] [] []} docker [0x10117c6d0] 0x10117f130 \u003cnil\u003e  [] 0s} 192.168.105.6 22 \u003cnil\u003e \u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.265776-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:04.998896    2237 main.go:141] libmachine: About to run SSH command:\n"}
{"Time":"2023-05-31T11:51:18.265778-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tdate +%!s(MISSING).%!N(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.265779-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049139    2237 main.go:141] libmachine: SSH cmd err, output: \u003cnil\u003e: 1685558945.458723376\n"}
{"Time":"2023-05-31T11:51:18.265781-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.265782-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049149    2237 fix.go:207] guest clock: 1685558945.458723376\n"}
{"Time":"2023-05-31T11:51:18.265784-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049153    2237 fix.go:220] Guest: 2023-05-31 11:49:05.458723376 -0700 PDT Remote: 2023-05-31 11:49:04.99864 -0700 PDT m=+31.582336376 (delta=460.083376ms)\n"}
{"Time":"2023-05-31T11:51:18.265785-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049165    2237 fix.go:191] guest clock delta is within tolerance: 460.083376ms\n"}
{"Time":"2023-05-31T11:51:18.265786-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049168    2237 start.go:83] releasing machines lock for \"ingress-addon-legacy-798000\", held for 14.149872709s\n"}
{"Time":"2023-05-31T11:51:18.265788-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049504    2237 ssh_runner.go:195] Run: cat /version.json\n"}
{"Time":"2023-05-31T11:51:18.265789-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049512    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.265791-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049566    2237 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/\n"}
{"Time":"2023-05-31T11:51:18.265793-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.049591    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.265853-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.120658    2237 ssh_runner.go:195] Run: systemctl --version\n"}
{"Time":"2023-05-31T11:51:18.265876-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.122815    2237 ssh_runner.go:195] Run: sh -c \"stat /etc/cni/net.d/*loopback.conf*\"\n"}
{"Time":"2023-05-31T11:51:18.265884-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:05.124731    2237 cni.go:208] loopback cni configuration skipped: \"/etc/cni/net.d/*loopback.conf*\" not found\n"}
{"Time":"2023-05-31T11:51:18.265899-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.124763    2237 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *bridge* -not -name *podman* -not -name *.mk_disabled -printf \"%!p(MISSING), \" -exec sh -c \"sudo sed -i -r -e '/\"dst\": \".*:.*\"/d' -e 's|^(.*)\"dst\": (.*)[,*]$|\\1\"dst\": \\2|g' -e '/\"subnet\": \".*:.*\"/d' -e 's|^(.*)\"subnet\": \".*\"(.*)[,*]$|\\1\"subnet\": \"10.244.0.0/16\"\\2|g' {}\" ;\n"}
{"Time":"2023-05-31T11:51:18.265918-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.128133    2237 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *podman* -not -name *.mk_disabled -printf \"%!p(MISSING), \" -exec sh -c \"sudo sed -i -r -e 's|^(.*)\"subnet\": \".*\"(.*)$|\\1\"subnet\": \"10.244.0.0/16\"\\2|g' -e 's|^(.*)\"gateway\": \".*\"(.*)$|\\1\"gateway\": \"10.244.0.1\"\\2|g' {}\" ;\n"}
{"Time":"2023-05-31T11:51:18.265923-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.133265    2237 cni.go:307] configured [/etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)\n"}
{"Time":"2023-05-31T11:51:18.265925-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.133273    2237 preload.go:132] Checking if preload exists for k8s version v1.18.20 and runtime docker\n"}
{"Time":"2023-05-31T11:51:18.265926-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.133344    2237 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:51:18.265928-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.150104    2237 docker.go:633] Got preloaded images: \n"}
{"Time":"2023-05-31T11:51:18.265929-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.150116    2237 docker.go:639] registry.k8s.io/kube-apiserver:v1.18.20 wasn't preloaded\n"}
{"Time":"2023-05-31T11:51:18.265931-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.150169    2237 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:51:18.265932-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.153186    2237 ssh_runner.go:195] Run: which lz4\n"}
{"Time":"2023-05-31T11:51:18.265934-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.154420    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 -\u003e /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.265944-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.154516    2237 ssh_runner.go:195] Run: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.265946-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.155740    2237 ssh_runner.go:352] existence check for /preloaded.tar.lz4: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4: Process exited with status 1\n"}
{"Time":"2023-05-31T11:51:18.265947-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:51:18.265949-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.26595-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:51:18.265951-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstat: cannot statx '/preloaded.tar.lz4': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.265953-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:05.155751    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 --\u003e /preloaded.tar.lz4 (459739018 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265955-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:06.859692    2237 docker.go:597] Took 1.705238 seconds to copy over tarball\n"}
{"Time":"2023-05-31T11:51:18.265957-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:06.859749    2237 ssh_runner.go:195] Run: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.26596-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.182679    2237 ssh_runner.go:235] Completed: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4: (1.322933708s)\n"}
{"Time":"2023-05-31T11:51:18.265962-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.182693    2237 ssh_runner.go:146] rm: /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.265963-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.203714    2237 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:51:18.265965-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.208142    2237 ssh_runner.go:362] scp memory --\u003e /var/lib/docker/image/overlay2/repositories.json (2502 bytes)\n"}
{"Time":"2023-05-31T11:51:18.265966-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.215917    2237 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:51:18.265968-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:08.302591    2237 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:51:18.265969-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.850303    2237 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.54771825s)\n"}
{"Time":"2023-05-31T11:51:18.266037-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.850331    2237 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:51:18.266055-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.850402    2237 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %!s(MISSING) \"runtime-endpoint: unix:///run/containerd/containerd.sock\n"}
{"Time":"2023-05-31T11:51:18.266057-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:51:18.266059-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.855938    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)sandbox_image = .*$|\\1sandbox_image = \"registry.k8s.io/pause:3.2\"|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266061-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.859465    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\\1restrict_oom_score_adj = false|' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266062-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.862921    2237 containerd.go:145] configuring containerd to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:51:18.266064-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.862955    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\\1SystemdCgroup = false|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266066-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.865934    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runtime.v1.linux\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266067-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.868744    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266069-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.871974    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i 's|\"io.containerd.runc.v1\"|\"io.containerd.runc.v2\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.26607-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.875475    2237 ssh_runner.go:195] Run: sh -c \"sudo rm -rf /etc/cni/net.mk\"\n"}
{"Time":"2023-05-31T11:51:18.266072-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.879115    2237 ssh_runner.go:195] Run: sh -c \"sudo sed -i -r 's|^( *)conf_dir = .*$|\\1conf_dir = \"/etc/cni/net.d\"|g' /etc/containerd/config.toml\"\n"}
{"Time":"2023-05-31T11:51:18.266073-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.882389    2237 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables\n"}
{"Time":"2023-05-31T11:51:18.266075-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.884978    2237 ssh_runner.go:195] Run: sudo sh -c \"echo 1 \u003e /proc/sys/net/ipv4/ip_forward\"\n"}
{"Time":"2023-05-31T11:51:18.266149-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.887944    2237 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:51:18.266152-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.945227    2237 ssh_runner.go:195] Run: sudo systemctl restart containerd\n"}
{"Time":"2023-05-31T11:51:18.266154-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.955346    2237 start.go:481] detecting cgroup driver to use...\n"}
{"Time":"2023-05-31T11:51:18.266155-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.955411    2237 ssh_runner.go:195] Run: sudo systemctl cat docker.service\n"}
{"Time":"2023-05-31T11:51:18.266157-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.961603    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:51:18.266158-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.969416    2237 ssh_runner.go:195] Run: sudo systemctl stop -f containerd\n"}
{"Time":"2023-05-31T11:51:18.26616-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.975287    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd\n"}
{"Time":"2023-05-31T11:51:18.266161-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.979915    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:51:18.266162-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:09.984679    2237 ssh_runner.go:195] Run: sudo systemctl stop -f crio\n"}
{"Time":"2023-05-31T11:51:18.266164-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.036412    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio\n"}
{"Time":"2023-05-31T11:51:18.266165-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.042107    2237 ssh_runner.go:195] Run: /bin/bash -c \"sudo mkdir -p /etc \u0026\u0026 printf %!s(MISSING) \"runtime-endpoint: unix:///var/run/dockershim.sock\n"}
{"Time":"2023-05-31T11:51:18.266167-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\" | sudo tee /etc/crictl.yaml\"\n"}
{"Time":"2023-05-31T11:51:18.266168-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.047687    2237 ssh_runner.go:195] Run: which cri-dockerd\n"}
{"Time":"2023-05-31T11:51:18.26617-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.049055    2237 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d\n"}
{"Time":"2023-05-31T11:51:18.266171-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.051877    2237 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)\n"}
{"Time":"2023-05-31T11:51:18.266173-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.056928    2237 ssh_runner.go:195] Run: sudo systemctl unmask docker.service\n"}
{"Time":"2023-05-31T11:51:18.266214-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.123360    2237 ssh_runner.go:195] Run: sudo systemctl enable docker.socket\n"}
{"Time":"2023-05-31T11:51:18.266216-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.209615    2237 docker.go:532] configuring docker to use \"cgroupfs\" as cgroup driver...\n"}
{"Time":"2023-05-31T11:51:18.266218-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.209632    2237 ssh_runner.go:362] scp memory --\u003e /etc/docker/daemon.json (144 bytes)\n"}
{"Time":"2023-05-31T11:51:18.266219-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.214813    2237 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:51:18.266221-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:10.278186    2237 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:51:18.266222-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.443744    2237 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.165559083s)\n"}
{"Time":"2023-05-31T11:51:18.266223-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.443813    2237 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:51:18.266225-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.451381    2237 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}\n"}
{"Time":"2023-05-31T11:51:18.266226-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.462512    2237 out.go:204] * Preparing Kubernetes v1.18.20 on Docker 24.0.1 ...\n"}
{"Time":"2023-05-31T11:51:18.266228-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.462607    2237 ssh_runner.go:195] Run: grep 192.168.105.1\thost.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:51:18.26623-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.464002    2237 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\thost.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.1\thost.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:51:18.266232-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.467824    2237 preload.go:132] Checking if preload exists for k8s version v1.18.20 and runtime docker\n"}
{"Time":"2023-05-31T11:51:18.266233-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.467865    2237 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:51:18.266235-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.473618    2237 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:51:18.266236-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266238-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266239-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266327-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.26633-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266331-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266333-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266334-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266335-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.266337-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:51:18.266339-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.473624    2237 docker.go:639] registry.k8s.io/kube-apiserver:v1.18.20 wasn't preloaded\n"}
{"Time":"2023-05-31T11:51:18.26634-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.473662    2237 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:51:18.266342-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.476667    2237 ssh_runner.go:195] Run: which lz4\n"}
{"Time":"2023-05-31T11:51:18.266343-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.477895    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 -\u003e /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.266346-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.477982    2237 ssh_runner.go:195] Run: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.266348-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.479141    2237 ssh_runner.go:352] existence check for /preloaded.tar.lz4: stat -c \"%!s(MISSING) %!y(MISSING)\" /preloaded.tar.lz4: Process exited with status 1\n"}
{"Time":"2023-05-31T11:51:18.266349-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:51:18.266351-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.266352-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:51:18.266353-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstat: cannot statx '/preloaded.tar.lz4': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.266355-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:11.479152    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.18.20-docker-overlay2-arm64.tar.lz4 --\u003e /preloaded.tar.lz4 (459739018 bytes)\n"}
{"Time":"2023-05-31T11:51:18.266415-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:13.171853    2237 docker.go:597] Took 1.693942 seconds to copy over tarball\n"}
{"Time":"2023-05-31T11:51:18.266418-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:13.171909    2237 ssh_runner.go:195] Run: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.266419-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.614111    2237 ssh_runner.go:235] Completed: sudo tar -I lz4 -C /var -xf /preloaded.tar.lz4: (1.442209s)\n"}
{"Time":"2023-05-31T11:51:18.266423-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.614127    2237 ssh_runner.go:146] rm: /preloaded.tar.lz4\n"}
{"Time":"2023-05-31T11:51:18.266425-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.637258    2237 ssh_runner.go:195] Run: sudo cat /var/lib/docker/image/overlay2/repositories.json\n"}
{"Time":"2023-05-31T11:51:18.266426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.640812    2237 ssh_runner.go:362] scp memory --\u003e /var/lib/docker/image/overlay2/repositories.json (2502 bytes)\n"}
{"Time":"2023-05-31T11:51:18.266428-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.645878    2237 ssh_runner.go:195] Run: sudo systemctl daemon-reload\n"}
{"Time":"2023-05-31T11:51:18.266429-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:14.714181    2237 ssh_runner.go:195] Run: sudo systemctl restart docker\n"}
{"Time":"2023-05-31T11:51:18.266431-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.285490    2237 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.57131575s)\n"}
{"Time":"2023-05-31T11:51:18.266432-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.285577    2237 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}\n"}
{"Time":"2023-05-31T11:51:18.266434-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.291386    2237 docker.go:633] Got preloaded images: -- stdout --\n"}
{"Time":"2023-05-31T11:51:18.266437-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266439-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.26644-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266442-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266443-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tgcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266445-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266446-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266519-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tk8s.gcr.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266543-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.266545-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t-- /stdout --\n"}
{"Time":"2023-05-31T11:51:18.266547-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.291393    2237 docker.go:639] registry.k8s.io/kube-apiserver:v1.18.20 wasn't preloaded\n"}
{"Time":"2023-05-31T11:51:18.266549-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.291397    2237 cache_images.go:88] LoadImages start: [registry.k8s.io/kube-apiserver:v1.18.20 registry.k8s.io/kube-controller-manager:v1.18.20 registry.k8s.io/kube-scheduler:v1.18.20 registry.k8s.io/kube-proxy:v1.18.20 registry.k8s.io/pause:3.2 registry.k8s.io/etcd:3.4.3-0 registry.k8s.io/coredns:1.6.7 gcr.io/k8s-minikube/storage-provisioner:v5]\n"}
{"Time":"2023-05-31T11:51:18.266551-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300159    2237 image.go:134] retrieving image: registry.k8s.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266552-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300211    2237 image.go:134] retrieving image: registry.k8s.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266557-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300269    2237 image.go:134] retrieving image: registry.k8s.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266559-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300310    2237 image.go:134] retrieving image: registry.k8s.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.26656-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300392    2237 image.go:134] retrieving image: registry.k8s.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266562-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300818    2237 image.go:134] retrieving image: registry.k8s.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266563-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.300865    2237 image.go:134] retrieving image: registry.k8s.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266569-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.301135    2237 image.go:134] retrieving image: gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266571-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.311084    2237 image.go:177] daemon lookup for registry.k8s.io/kube-scheduler:v1.18.20: Error response from daemon: No such image: registry.k8s.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266572-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312079    2237 image.go:177] daemon lookup for registry.k8s.io/etcd:3.4.3-0: Error response from daemon: No such image: registry.k8s.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266598-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312084    2237 image.go:177] daemon lookup for registry.k8s.io/kube-controller-manager:v1.18.20: Error response from daemon: No such image: registry.k8s.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266603-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312445    2237 image.go:177] daemon lookup for gcr.io/k8s-minikube/storage-provisioner:v5: Error response from daemon: No such image: gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266604-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312480    2237 image.go:177] daemon lookup for registry.k8s.io/pause:3.2: Error response from daemon: No such image: registry.k8s.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266606-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312535    2237 image.go:177] daemon lookup for registry.k8s.io/coredns:1.6.7: Error response from daemon: No such image: registry.k8s.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266607-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312617    2237 image.go:177] daemon lookup for registry.k8s.io/kube-proxy:v1.18.20: Error response from daemon: No such image: registry.k8s.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266609-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:16.312714    2237 image.go:177] daemon lookup for registry.k8s.io/kube-apiserver:v1.18.20: Error response from daemon: No such image: registry.k8s.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266611-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:17.620147    2237 image.go:265] image registry.k8s.io/etcd:3.4.3-0 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266614-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.620264    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266615-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.626082    2237 cache_images.go:116] \"registry.k8s.io/etcd:3.4.3-0\" needs transfer: \"registry.k8s.io/etcd:3.4.3-0\" does not exist at hash \"29dd247b2572efbe28fcaea3fef1c5d72593da59f7350e3f6d2e6618983f9c03\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266617-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.626102    2237 docker.go:313] Removing image: registry.k8s.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266619-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.626146    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/etcd:3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.26662-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.631227    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.4.3-0\n"}
{"Time":"2023-05-31T11:51:18.266622-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:17.680746    2237 image.go:265] image registry.k8s.io/kube-scheduler:v1.18.20 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266684-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.680853    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266686-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.693969    2237 cache_images.go:116] \"registry.k8s.io/kube-scheduler:v1.18.20\" needs transfer: \"registry.k8s.io/kube-scheduler:v1.18.20\" does not exist at hash \"177548d745cb87f773d02f41d453af2f2a1479dbe3c32e749cf6d8145c005e79\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266688-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.693993    2237 docker.go:313] Removing image: registry.k8s.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.26669-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.694040    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/kube-scheduler:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266691-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.705817    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266693-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:17.734546    2237 image.go:265] image registry.k8s.io/kube-controller-manager:v1.18.20 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266695-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.734647    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266696-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.740634    2237 cache_images.go:116] \"registry.k8s.io/kube-controller-manager:v1.18.20\" needs transfer: \"registry.k8s.io/kube-controller-manager:v1.18.20\" does not exist at hash \"297c79afbdb81ceb4cf857e0c54a0de7b6ce7ebe01e6cab68fc8baf342be3ea7\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266698-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.740656    2237 docker.go:313] Removing image: registry.k8s.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.2667-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.740696    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/kube-controller-manager:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266701-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.746434    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266703-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.879294    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266704-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.885826    2237 cache_images.go:116] \"registry.k8s.io/pause:3.2\" needs transfer: \"registry.k8s.io/pause:3.2\" does not exist at hash \"2a060e2e7101d419352bf82c613158587400be743482d9a537ec4a9d1b4eb93c\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266817-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.885851    2237 docker.go:313] Removing image: registry.k8s.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.26682-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.885896    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/pause:3.2\n"}
{"Time":"2023-05-31T11:51:18.266822-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:17.891946    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.2\n"}
{"Time":"2023-05-31T11:51:18.266825-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.081564    2237 image.go:265] image registry.k8s.io/coredns:1.6.7 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266826-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.081704    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266828-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.087838    2237 cache_images.go:116] \"registry.k8s.io/coredns:1.6.7\" needs transfer: \"registry.k8s.io/coredns:1.6.7\" does not exist at hash \"ff3af22d8878afc6985d3fec3e066d00ef431aa166c3a01ac58f1990adc92a2c\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.26683-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.087858    2237 docker.go:313] Removing image: registry.k8s.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266831-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.087913    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/coredns:1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266833-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.093245    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns_1.6.7\n"}
{"Time":"2023-05-31T11:51:18.266835-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.131273    2237 image.go:265] image gcr.io/k8s-minikube/storage-provisioner:v5 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266836-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.131368    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266838-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.137395    2237 cache_images.go:116] \"gcr.io/k8s-minikube/storage-provisioner:v5\" needs transfer: \"gcr.io/k8s-minikube/storage-provisioner:v5\" does not exist at hash \"66749159455b3f08c8318fe0233122f54d0f5889f9c5fdfb73c3fd9d99895b51\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266839-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.137414    2237 docker.go:313] Removing image: gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.266841-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.137455    2237 ssh_runner.go:195] Run: docker rmi gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.26692-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.147431    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5\n"}
{"Time":"2023-05-31T11:51:18.266923-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.265216    2237 image.go:265] image registry.k8s.io/kube-proxy:v1.18.20 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266924-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.265453    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266929-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.276491    2237 cache_images.go:116] \"registry.k8s.io/kube-proxy:v1.18.20\" needs transfer: \"registry.k8s.io/kube-proxy:v1.18.20\" does not exist at hash \"b11cdc97ac6ac4ef2b3b0662edbe16597084b17cbc8e3d61fcaf4ef827a7ed18\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266931-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.276519    2237 docker.go:313] Removing image: registry.k8s.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266935-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.276579    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/kube-proxy:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266936-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.285044    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266938-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.454881    2237 image.go:265] image registry.k8s.io/kube-apiserver:v1.18.20 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:51:18.266939-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.455359    2237 ssh_runner.go:195] Run: docker image inspect --format {{.Id}} registry.k8s.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266941-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.477416    2237 cache_images.go:116] \"registry.k8s.io/kube-apiserver:v1.18.20\" needs transfer: \"registry.k8s.io/kube-apiserver:v1.18.20\" does not exist at hash \"d353007847ec85700463981309a5846c8d9c93fbcd1323104266212926d68257\" in container runtime\n"}
{"Time":"2023-05-31T11:51:18.266942-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.477486    2237 docker.go:313] Removing image: registry.k8s.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266944-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.477713    2237 ssh_runner.go:195] Run: docker rmi registry.k8s.io/kube-apiserver:v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266945-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.493542    2237 cache_images.go:286] Loading image from: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.266947-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.493615    2237 cache_images.go:92] LoadImages completed in 2.202242125s\n"}
{"Time":"2023-05-31T11:51:18.267047-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.493708    2237 out.go:239] X Unable to load cached images: loading cached images: stat /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.4.3-0: no such file or directory\n"}
{"Time":"2023-05-31T11:51:18.26705-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.493811    2237 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}\n"}
{"Time":"2023-05-31T11:51:18.267051-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511115    2237 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:51:18.267054-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511133    2237 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T11:51:18.267055-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511141    2237 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16\n"}
{"Time":"2023-05-31T11:51:18.267058-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511156    2237 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.105.6 APIServerPort:8443 KubernetesVersion:v1.18.20 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:ingress-addon-legacy-798000 NodeName:ingress-addon-legacy-798000 DNSDomain:cluster.local CRISocket:/var/run/dockershim.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:[\"127.0.0.1\", \"localhost\", \"192.168.105.6\"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.105.6 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/"}
{"Time":"2023-05-31T11:51:18.26706-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:false}\n"}
{"Time":"2023-05-31T11:51:18.267062-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511333    2237 kubeadm.go:181] kubeadm config:\n"}
{"Time":"2023-05-31T11:51:18.267063-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta2\n"}
{"Time":"2023-05-31T11:51:18.267064-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tkind: InitConfiguration\n"}
{"Time":"2023-05-31T11:51:18.26707-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tlocalAPIEndpoint:\n"}
{"Time":"2023-05-31T11:51:18.267071-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  advertiseAddress: 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.267157-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  bindPort: 8443\n"}
{"Time":"2023-05-31T11:51:18.267159-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tbootstrapTokens:\n"}
{"Time":"2023-05-31T11:51:18.26716-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  - groups:\n"}
{"Time":"2023-05-31T11:51:18.267162-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t      - system:bootstrappers:kubeadm:default-node-token\n"}
{"Time":"2023-05-31T11:51:18.267163-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    ttl: 24h0m0s\n"}
{"Time":"2023-05-31T11:51:18.267164-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    usages:\n"}
{"Time":"2023-05-31T11:51:18.267166-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t      - signing\n"}
{"Time":"2023-05-31T11:51:18.267167-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t      - authentication\n"}
{"Time":"2023-05-31T11:51:18.267168-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tnodeRegistration:\n"}
{"Time":"2023-05-31T11:51:18.26717-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  criSocket: /var/run/dockershim.sock\n"}
{"Time":"2023-05-31T11:51:18.267171-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  name: \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.267172-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kubeletExtraArgs:\n"}
{"Time":"2023-05-31T11:51:18.267174-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    node-ip: 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.267175-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  taints: []\n"}
{"Time":"2023-05-31T11:51:18.267179-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t---\n"}
{"Time":"2023-05-31T11:51:18.267181-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tapiVersion: kubeadm.k8s.io/v1beta2\n"}
{"Time":"2023-05-31T11:51:18.267182-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tkind: ClusterConfiguration\n"}
{"Time":"2023-05-31T11:51:18.267183-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tapiServer:\n"}
{"Time":"2023-05-31T11:51:18.267185-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  certSANs: [\"127.0.0.1\", \"localhost\", \"192.168.105.6\"]\n"}
{"Time":"2023-05-31T11:51:18.267186-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:51:18.267188-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    enable-admission-plugins: \"NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\"\n"}
{"Time":"2023-05-31T11:51:18.267189-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tcontrollerManager:\n"}
{"Time":"2023-05-31T11:51:18.267191-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:51:18.267193-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    allocate-node-cidrs: \"true\"\n"}
{"Time":"2023-05-31T11:51:18.267304-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:51:18.267307-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tscheduler:\n"}
{"Time":"2023-05-31T11:51:18.267308-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  extraArgs:\n"}
{"Time":"2023-05-31T11:51:18.267309-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    leader-elect: \"false\"\n"}
{"Time":"2023-05-31T11:51:18.267311-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tcertificatesDir: /var/lib/minikube/certs\n"}
{"Time":"2023-05-31T11:51:18.267312-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tclusterName: mk\n"}
{"Time":"2023-05-31T11:51:18.267313-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tcontrolPlaneEndpoint: control-plane.minikube.internal:8443\n"}
{"Time":"2023-05-31T11:51:18.267315-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tdns:\n"}
{"Time":"2023-05-31T11:51:18.267316-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  type: CoreDNS\n"}
{"Time":"2023-05-31T11:51:18.267317-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tetcd:\n"}
{"Time":"2023-05-31T11:51:18.267318-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  local:\n"}
{"Time":"2023-05-31T11:51:18.26732-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    dataDir: /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:51:18.267321-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    extraArgs:\n"}
{"Time":"2023-05-31T11:51:18.267322-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t      proxy-refresh-interval: \"70000\"\n"}
{"Time":"2023-05-31T11:51:18.267324-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tkubernetesVersion: v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.267325-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tnetworking:\n"}
{"Time":"2023-05-31T11:51:18.267326-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  dnsDomain: cluster.local\n"}
{"Time":"2023-05-31T11:51:18.267327-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  podSubnet: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:51:18.267329-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  serviceSubnet: 10.96.0.0/12\n"}
{"Time":"2023-05-31T11:51:18.26733-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t---\n"}
{"Time":"2023-05-31T11:51:18.267331-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tapiVersion: kubelet.config.k8s.io/v1beta1\n"}
{"Time":"2023-05-31T11:51:18.267333-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tkind: KubeletConfiguration\n"}
{"Time":"2023-05-31T11:51:18.267334-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tauthentication:\n"}
{"Time":"2023-05-31T11:51:18.267335-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  x509:\n"}
{"Time":"2023-05-31T11:51:18.2674-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t    clientCAFile: /var/lib/minikube/certs/ca.crt\n"}
{"Time":"2023-05-31T11:51:18.267403-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tcgroupDriver: cgroupfs\n"}
{"Time":"2023-05-31T11:51:18.267404-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \thairpinMode: hairpin-veth\n"}
{"Time":"2023-05-31T11:51:18.267406-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \truntimeRequestTimeout: 15m\n"}
{"Time":"2023-05-31T11:51:18.267407-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tclusterDomain: \"cluster.local\"\n"}
{"Time":"2023-05-31T11:51:18.267408-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# disable disk resource management by default\n"}
{"Time":"2023-05-31T11:51:18.26741-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \timageGCHighThresholdPercent: 100\n"}
{"Time":"2023-05-31T11:51:18.267411-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tevictionHard:\n"}
{"Time":"2023-05-31T11:51:18.267412-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  nodefs.available: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.267413-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  nodefs.inodesFree: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.267415-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  imagefs.available: \"0%!\"(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.267416-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tfailSwapOn: false\n"}
{"Time":"2023-05-31T11:51:18.267417-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstaticPodPath: /etc/kubernetes/manifests\n"}
{"Time":"2023-05-31T11:51:18.267419-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t---\n"}
{"Time":"2023-05-31T11:51:18.26742-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tapiVersion: kubeproxy.config.k8s.io/v1alpha1\n"}
{"Time":"2023-05-31T11:51:18.267421-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tkind: KubeProxyConfiguration\n"}
{"Time":"2023-05-31T11:51:18.267423-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tclusterCIDR: \"10.244.0.0/16\"\n"}
{"Time":"2023-05-31T11:51:18.267424-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tmetricsBindAddress: 0.0.0.0:10249\n"}
{"Time":"2023-05-31T11:51:18.267425-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tconntrack:\n"}
{"Time":"2023-05-31T11:51:18.267426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  maxPerCore: 0\n"}
{"Time":"2023-05-31T11:51:18.267428-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_established\"\n"}
{"Time":"2023-05-31T11:51:18.267429-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  tcpEstablishedTimeout: 0s\n"}
{"Time":"2023-05-31T11:51:18.26743-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t# Skip setting \"net.netfilter.nf_conntrack_tcp_timeout_close\"\n"}
{"Time":"2023-05-31T11:51:18.267493-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  tcpCloseWaitTimeout: 0s\n"}
{"Time":"2023-05-31T11:51:18.267496-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.267498-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511418    2237 kubeadm.go:971] kubelet [Unit]\n"}
{"Time":"2023-05-31T11:51:18.267499-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tWants=docker.socket\n"}
{"Time":"2023-05-31T11:51:18.2675-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.267502-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Service]\n"}
{"Time":"2023-05-31T11:51:18.267503-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=\n"}
{"Time":"2023-05-31T11:51:18.267504-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tExecStart=/var/lib/minikube/binaries/v1.18.20/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=docker --hostname-override=ingress-addon-legacy-798000 --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.267506-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.267507-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[Install]\n"}
{"Time":"2023-05-31T11:51:18.267509-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t config:\n"}
{"Time":"2023-05-31T11:51:18.26751-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t{KubernetesVersion:v1.18.20 ClusterName:ingress-addon-legacy-798000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}\n"}
{"Time":"2023-05-31T11:51:18.267512-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.511505    2237 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.267513-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.516834    2237 binaries.go:44] Found k8s binaries, skipping transfer\n"}
{"Time":"2023-05-31T11:51:18.267515-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.516872    2237 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube\n"}
{"Time":"2023-05-31T11:51:18.267516-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.520879    2237 ssh_runner.go:362] scp memory --\u003e /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (355 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267518-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.528125    2237 ssh_runner.go:362] scp memory --\u003e /lib/systemd/system/kubelet.service (353 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267568-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.534712    2237 ssh_runner.go:362] scp memory --\u003e /var/tmp/minikube/kubeadm.yaml.new (2127 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267571-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.540804    2237 ssh_runner.go:195] Run: grep 192.168.105.6\tcontrol-plane.minikube.internal$ /etc/hosts\n"}
{"Time":"2023-05-31T11:51:18.267572-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.542198    2237 ssh_runner.go:195] Run: /bin/bash -c \"{ grep -v $'\\tcontrol-plane.minikube.internal$' \"/etc/hosts\"; echo \"192.168.105.6\tcontrol-plane.minikube.internal\"; } \u003e /tmp/h.$$; sudo cp /tmp/h.$$ \"/etc/hosts\"\"\n"}
{"Time":"2023-05-31T11:51:18.267574-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546146    2237 certs.go:56] Setting up /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000 for IP: 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.267576-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546164    2237 certs.go:190] acquiring lock for shared ca certs: {Name:mk5d2be9e1df042d7290b2e1516090ac43150ffe Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267578-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546536    2237 certs.go:199] skipping minikubeCA CA generation: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key\n"}
{"Time":"2023-05-31T11:51:18.267579-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546675    2237 certs.go:199] skipping proxyClientCA CA generation: /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key\n"}
{"Time":"2023-05-31T11:51:18.267581-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546706    2237 certs.go:319] generating minikube-user signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key\n"}
{"Time":"2023-05-31T11:51:18.267582-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.546716    2237 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:51:18.267584-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.623852    2237 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt ...\n"}
{"Time":"2023-05-31T11:51:18.267586-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.623858    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: {Name:mk4ff10302fa13422a35432eca247680ca2b6530 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267587-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.624074    2237 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key ...\n"}
{"Time":"2023-05-31T11:51:18.267676-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.624078    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key: {Name:mk03ff16b91ea2a680c7a800c85188f5a06ab6c2 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267679-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.624196    2237 certs.go:319] generating minikube signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key.b354f644\n"}
{"Time":"2023-05-31T11:51:18.267681-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.624205    2237 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt.b354f644 with IP's: [192.168.105.6 10.96.0.1 127.0.0.1 10.0.0.1]\n"}
{"Time":"2023-05-31T11:51:18.267683-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673179    2237 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt.b354f644 ...\n"}
{"Time":"2023-05-31T11:51:18.267685-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673183    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt.b354f644: {Name:mkc226043e8d7635a5cd5ff58965cbcdfe214ce7 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267686-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673318    2237 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key.b354f644 ...\n"}
{"Time":"2023-05-31T11:51:18.267688-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673321    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key.b354f644: {Name:mkbbdc9612b296854cb72351bcfacd7b5a1d2bc9 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267693-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673443    2237 certs.go:337] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt.b354f644 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt\n"}
{"Time":"2023-05-31T11:51:18.267695-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673530    2237 certs.go:341] copying /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key.b354f644 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key\n"}
{"Time":"2023-05-31T11:51:18.267696-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673617    2237 certs.go:319] generating aggregator signed cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.key\n"}
{"Time":"2023-05-31T11:51:18.267698-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.673623    2237 crypto.go:68] Generating cert /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.crt with IP's: []\n"}
{"Time":"2023-05-31T11:51:18.26778-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.749856    2237 crypto.go:156] Writing cert to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.crt ...\n"}
{"Time":"2023-05-31T11:51:18.267782-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.749860    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.crt: {Name:mk3d44d3f7b57ed10956256a37198f9a00ad47c8 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267784-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750011    2237 crypto.go:164] Writing key to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.key ...\n"}
{"Time":"2023-05-31T11:51:18.267786-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750014    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.key: {Name:mk4740ff80aaccfc58a76713b476cb557c62d91a Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.267788-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750117    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt -\u003e /var/lib/minikube/certs/apiserver.crt\n"}
{"Time":"2023-05-31T11:51:18.267791-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750133    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key -\u003e /var/lib/minikube/certs/apiserver.key\n"}
{"Time":"2023-05-31T11:51:18.267792-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750144    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.crt -\u003e /var/lib/minikube/certs/proxy-client.crt\n"}
{"Time":"2023-05-31T11:51:18.267794-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750156    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.key -\u003e /var/lib/minikube/certs/proxy-client.key\n"}
{"Time":"2023-05-31T11:51:18.267796-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750168    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt -\u003e /var/lib/minikube/certs/ca.crt\n"}
{"Time":"2023-05-31T11:51:18.267797-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750179    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key -\u003e /var/lib/minikube/certs/ca.key\n"}
{"Time":"2023-05-31T11:51:18.267799-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750190    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt -\u003e /var/lib/minikube/certs/proxy-client-ca.crt\n"}
{"Time":"2023-05-31T11:51:18.267877-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750203    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key -\u003e /var/lib/minikube/certs/proxy-client-ca.key\n"}
{"Time":"2023-05-31T11:51:18.267879-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750263    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477.pem (1338 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267884-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:49:18.750637    2237 certs.go:433] ignoring /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477_empty.pem, impossibly tiny 0 bytes\n"}
{"Time":"2023-05-31T11:51:18.267886-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750650    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca-key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267887-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750676    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem (1078 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267889-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750696    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem (1123 bytes)\n"}
{"Time":"2023-05-31T11:51:18.26789-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750716    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/certs/key.pem (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267892-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750767    2237 certs.go:437] found cert: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267894-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750790    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt -\u003e /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:51:18.267895-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750801    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477.pem -\u003e /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:51:18.267897-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.750812    2237 vm_assets.go:163] NewFileAsset: /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem -\u003e /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:51:18.267899-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.751122    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.crt --\u003e /var/lib/minikube/certs/apiserver.crt (1399 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267979-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.758855    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/apiserver.key --\u003e /var/lib/minikube/certs/apiserver.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267982-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.765806    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.crt --\u003e /var/lib/minikube/certs/proxy-client.crt (1147 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267984-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.772506    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/proxy-client.key --\u003e /var/lib/minikube/certs/proxy-client.key (1679 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267986-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.779613    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /var/lib/minikube/certs/ca.crt (1111 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267987-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.787092    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.key --\u003e /var/lib/minikube/certs/ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267989-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.794262    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.crt --\u003e /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267991-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.801158    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/proxy-client-ca.key --\u003e /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267992-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.807898    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt --\u003e /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267994-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.815177    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/1477.pem --\u003e /usr/share/ca-certificates/1477.pem (1338 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267995-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.822334    2237 ssh_runner.go:362] scp /Users/jenkins/minikube-integration/16569-1035/.minikube/files/etc/ssl/certs/14772.pem --\u003e /usr/share/ca-certificates/14772.pem (1708 bytes)\n"}
{"Time":"2023-05-31T11:51:18.267997-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.828925    2237 ssh_runner.go:362] scp memory --\u003e /var/lib/minikube/kubeconfig (738 bytes)\n"}
{"Time":"2023-05-31T11:51:18.268108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.833672    2237 ssh_runner.go:195] Run: openssl version\n"}
{"Time":"2023-05-31T11:51:18.268111-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.835486    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/14772.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/14772.pem /etc/ssl/certs/14772.pem\"\n"}
{"Time":"2023-05-31T11:51:18.268114-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.838819    2237 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:51:18.268118-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.840304    2237 certs.go:480] hashing: -rw-r--r-- 1 root root 1708 May 31 18:44 /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:51:18.26812-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.840329    2237 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/14772.pem\n"}
{"Time":"2023-05-31T11:51:18.268121-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.842256    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/3ec20f2e.0 || ln -fs /etc/ssl/certs/14772.pem /etc/ssl/certs/3ec20f2e.0\"\n"}
{"Time":"2023-05-31T11:51:18.268123-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.845024    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/minikubeCA.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem\"\n"}
{"Time":"2023-05-31T11:51:18.268124-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.848088    2237 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:51:18.268126-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.849496    2237 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 May 31 18:43 /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:51:18.268127-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.849533    2237 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem\n"}
{"Time":"2023-05-31T11:51:18.26813-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.851170    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0\"\n"}
{"Time":"2023-05-31T11:51:18.268131-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.854096    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -s /usr/share/ca-certificates/1477.pem \u0026\u0026 ln -fs /usr/share/ca-certificates/1477.pem /etc/ssl/certs/1477.pem\"\n"}
{"Time":"2023-05-31T11:51:18.268133-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.856975    2237 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:51:18.268187-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.858371    2237 certs.go:480] hashing: -rw-r--r-- 1 root root 1338 May 31 18:44 /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:51:18.268189-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.858393    2237 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/1477.pem\n"}
{"Time":"2023-05-31T11:51:18.26819-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.860267    2237 ssh_runner.go:195] Run: sudo /bin/bash -c \"test -L /etc/ssl/certs/51391683.0 || ln -fs /etc/ssl/certs/1477.pem /etc/ssl/certs/51391683.0\"\n"}
{"Time":"2023-05-31T11:51:18.268192-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.863551    2237 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd\n"}
{"Time":"2023-05-31T11:51:18.268193-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.864833    2237 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2\n"}
{"Time":"2023-05-31T11:51:18.268195-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:51:18.268196-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.268197-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:51:18.268198-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.268206-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.864860    2237 kubeadm.go:404] StartCluster: {Name:ingress-addon-legacy-798000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{Kuber"}
{"Time":"2023-05-31T11:51:18.268208-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"netesVersion:v1.18.20 ClusterName:ingress-addon-legacy-798000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.105.6 Port:8443 KubernetesVersion:v1.18.20 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker Mount"}
{"Time":"2023-05-31T11:51:18.26831-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"IP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:51:18.268317-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.864926    2237 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}\n"}
{"Time":"2023-05-31T11:51:18.268322-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.873898    2237 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd\n"}
{"Time":"2023-05-31T11:51:18.268338-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.876831    2237 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml\n"}
{"Time":"2023-05-31T11:51:18.268342-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.879768    2237 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf\n"}
{"Time":"2023-05-31T11:51:18.268344-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.882790    2237 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2\n"}
{"Time":"2023-05-31T11:51:18.268346-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstdout:\n"}
{"Time":"2023-05-31T11:51:18.268347-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.268348-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tstderr:\n"}
{"Time":"2023-05-31T11:51:18.26835-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tls: cannot access '/etc/kubernetes/admin.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.268351-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.268353-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.268354-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory\n"}
{"Time":"2023-05-31T11:51:18.268357-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.882809    2237 ssh_runner.go:286] Start: /bin/bash -c \"sudo env PATH=\"/var/lib/minikube/binaries/v1.18.20:$PATH\" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU\"\n"}
{"Time":"2023-05-31T11:51:18.268405-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.908676    2237 kubeadm.go:322] [init] Using Kubernetes version: v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.268411-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.908738    2237 kubeadm.go:322] [preflight] Running pre-flight checks\n"}
{"Time":"2023-05-31T11:51:18.268426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.989987    2237 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster\n"}
{"Time":"2023-05-31T11:51:18.268428-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.990046    2237 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection\n"}
{"Time":"2023-05-31T11:51:18.26843-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:18.990095    2237 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n"}
{"Time":"2023-05-31T11:51:18.268431-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.035049    2237 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n"}
{"Time":"2023-05-31T11:51:18.268433-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.036620    2237 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n"}
{"Time":"2023-05-31T11:51:18.268435-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.036697    2237 kubeadm.go:322] [kubelet-start] Starting the kubelet\n"}
{"Time":"2023-05-31T11:51:18.268436-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.123194    2237 kubeadm.go:322] [certs] Using certificateDir folder \"/var/lib/minikube/certs\"\n"}
{"Time":"2023-05-31T11:51:18.268438-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.129334    2237 out.go:204]   - Generating certificates and keys ...\n"}
{"Time":"2023-05-31T11:51:18.268439-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.129378    2237 kubeadm.go:322] [certs] Using existing ca certificate authority\n"}
{"Time":"2023-05-31T11:51:18.26844-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.129411    2237 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk\n"}
{"Time":"2023-05-31T11:51:18.268442-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.227320    2237 kubeadm.go:322] [certs] Generating \"apiserver-kubelet-client\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268444-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.297965    2237 kubeadm.go:322] [certs] Generating \"front-proxy-ca\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268494-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.402210    2237 kubeadm.go:322] [certs] Generating \"front-proxy-client\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268497-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.470053    2237 kubeadm.go:322] [certs] Generating \"etcd/ca\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268499-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.559649    2237 kubeadm.go:322] [certs] Generating \"etcd/server\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268501-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.559739    2237 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [ingress-addon-legacy-798000 localhost] and IPs [192.168.105.6 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:51:18.268502-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.647588    2237 kubeadm.go:322] [certs] Generating \"etcd/peer\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268506-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.647760    2237 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [ingress-addon-legacy-798000 localhost] and IPs [192.168.105.6 127.0.0.1 ::1]\n"}
{"Time":"2023-05-31T11:51:18.268508-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:19.820297    2237 kubeadm.go:322] [certs] Generating \"etcd/healthcheck-client\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268509-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.076389    2237 kubeadm.go:322] [certs] Generating \"apiserver-etcd-client\" certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268511-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.236957    2237 kubeadm.go:322] [certs] Generating \"sa\" key and public key\n"}
{"Time":"2023-05-31T11:51:18.268512-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.237051    2237 kubeadm.go:322] [kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n"}
{"Time":"2023-05-31T11:51:18.268514-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.280992    2237 kubeadm.go:322] [kubeconfig] Writing \"admin.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:51:18.268515-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.328391    2237 kubeadm.go:322] [kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:51:18.268516-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.451054    2237 kubeadm.go:322] [kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:51:18.268518-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.516730    2237 kubeadm.go:322] [kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n"}
{"Time":"2023-05-31T11:51:18.26852-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.517011    2237 kubeadm.go:322] [control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:51:18.268575-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.521398    2237 out.go:204]   - Booting up control plane ...\n"}
{"Time":"2023-05-31T11:51:18.268578-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.521466    2237 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-apiserver\"\n"}
{"Time":"2023-05-31T11:51:18.268579-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.521510    2237 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n"}
{"Time":"2023-05-31T11:51:18.268581-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.521593    2237 kubeadm.go:322] [control-plane] Creating static Pod manifest for \"kube-scheduler\"\n"}
{"Time":"2023-05-31T11:51:18.268583-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.522081    2237 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n"}
{"Time":"2023-05-31T11:51:18.268584-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:20.523459    2237 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n"}
{"Time":"2023-05-31T11:51:18.26859-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:32.529298    2237 kubeadm.go:322] [apiclient] All control plane components are healthy after 12.005328 seconds\n"}
{"Time":"2023-05-31T11:51:18.268592-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:32.529468    2237 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n"}
{"Time":"2023-05-31T11:51:18.268593-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:32.551432    2237 kubeadm.go:322] [kubelet] Creating a ConfigMap \"kubelet-config-1.18\" in namespace kube-system with the configuration for the kubelets in the cluster\n"}
{"Time":"2023-05-31T11:51:18.268595-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.096377    2237 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs\n"}
{"Time":"2023-05-31T11:51:18.268596-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.096647    2237 kubeadm.go:322] [mark-control-plane] Marking the node ingress-addon-legacy-798000 as control-plane by adding the label \"node-role.kubernetes.io/master=''\"\n"}
{"Time":"2023-05-31T11:51:18.268598-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.600775    2237 kubeadm.go:322] [bootstrap-token] Using token: pal1im.n0kp7sc78d4pvs5q\n"}
{"Time":"2023-05-31T11:51:18.268599-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.603558    2237 out.go:204]   - Configuring RBAC rules ...\n"}
{"Time":"2023-05-31T11:51:18.268601-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.603621    2237 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n"}
{"Time":"2023-05-31T11:51:18.268683-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.603985    2237 kubeadm.go:322] [bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes\n"}
{"Time":"2023-05-31T11:51:18.26869-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.609495    2237 kubeadm.go:322] [bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n"}
{"Time":"2023-05-31T11:51:18.268694-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.610534    2237 kubeadm.go:322] [bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n"}
{"Time":"2023-05-31T11:51:18.268715-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.612025    2237 kubeadm.go:322] [bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n"}
{"Time":"2023-05-31T11:51:18.268731-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.613398    2237 kubeadm.go:322] [bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n"}
{"Time":"2023-05-31T11:51:18.268733-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.617451    2237 kubeadm.go:322] [kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n"}
{"Time":"2023-05-31T11:51:18.268735-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:33.817997    2237 kubeadm.go:322] [addons] Applied essential addon: CoreDNS\n"}
{"Time":"2023-05-31T11:51:18.268736-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.011749    2237 kubeadm.go:322] [addons] Applied essential addon: kube-proxy\n"}
{"Time":"2023-05-31T11:51:18.268737-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012423    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268739-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012460    2237 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!\n"}
{"Time":"2023-05-31T11:51:18.26874-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012463    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268742-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012536    2237 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:\n"}
{"Time":"2023-05-31T11:51:18.268743-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012542    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268744-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012568    2237 kubeadm.go:322]   mkdir -p $HOME/.kube\n"}
{"Time":"2023-05-31T11:51:18.268746-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012614    2237 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:51:18.268778-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012648    2237 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n"}
{"Time":"2023-05-31T11:51:18.26878-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012654    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268782-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012687    2237 kubeadm.go:322] You should now deploy a pod network to the cluster.\n"}
{"Time":"2023-05-31T11:51:18.268783-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012749    2237 kubeadm.go:322] Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n"}
{"Time":"2023-05-31T11:51:18.268785-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012802    2237 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/\n"}
{"Time":"2023-05-31T11:51:18.268786-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012812    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268788-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012861    2237 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities\n"}
{"Time":"2023-05-31T11:51:18.268789-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012914    2237 kubeadm.go:322] and service account keys on each node and then running the following as root:\n"}
{"Time":"2023-05-31T11:51:18.268791-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012918    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268792-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.012990    2237 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token pal1im.n0kp7sc78d4pvs5q \\\n"}
{"Time":"2023-05-31T11:51:18.268794-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013067    2237 kubeadm.go:322]     --discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \\\n"}
{"Time":"2023-05-31T11:51:18.268795-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013082    2237 kubeadm.go:322]     --control-plane \n"}
{"Time":"2023-05-31T11:51:18.268796-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013086    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268799-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013169    2237 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:\n"}
{"Time":"2023-05-31T11:51:18.2688-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013172    2237 kubeadm.go:322] \n"}
{"Time":"2023-05-31T11:51:18.268948-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013250    2237 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token pal1im.n0kp7sc78d4pvs5q \\\n"}
{"Time":"2023-05-31T11:51:18.268951-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013355    2237 kubeadm.go:322]     --discovery-token-ca-cert-hash sha256:c0b872ca59dfdea0de4508a70b7bc5477f2020e7d748dccf465015401d65b410 \n"}
{"Time":"2023-05-31T11:51:18.268953-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013477    2237 kubeadm.go:322] W0531 18:49:19.318340    1586 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]\n"}
{"Time":"2023-05-31T11:51:18.268954-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013631    2237 kubeadm.go:322] \t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n"}
{"Time":"2023-05-31T11:51:18.268956-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013725    2237 kubeadm.go:322] \t[WARNING SystemVerification]: this Docker version is not on the list of validated versions: 24.0.1. Latest validated version: 19.03\n"}
{"Time":"2023-05-31T11:51:18.268961-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013801    2237 kubeadm.go:322] \t[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'\n"}
{"Time":"2023-05-31T11:51:18.268963-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013884    2237 kubeadm.go:322] W0531 18:49:20.930605    1586 manifests.go:225] the default kube-apiserver authorization-mode is \"Node,RBAC\"; using \"Node,RBAC\"\n"}
{"Time":"2023-05-31T11:51:18.268964-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013961    2237 kubeadm.go:322] W0531 18:49:20.931465    1586 manifests.go:225] the default kube-apiserver authorization-mode is \"Node,RBAC\"; using \"Node,RBAC\"\n"}
{"Time":"2023-05-31T11:51:18.268966-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013969    2237 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:51:18.268967-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.013978    2237 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T11:51:18.268969-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.014001    2237 ssh_runner.go:195] Run: /bin/bash -c \"cat /proc/$(pgrep kube-apiserver)/oom_adj\"\n"}
{"Time":"2023-05-31T11:51:18.268971-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.014070    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.268973-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.014070    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl label nodes minikube.k8s.io/version=v1.30.1 minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140 minikube.k8s.io/name=ingress-addon-legacy-798000 minikube.k8s.io/updated_at=2023_05_31T11_49_34_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269084-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.018169    2237 ops.go:34] apiserver oom_adj: -16\n"}
{"Time":"2023-05-31T11:51:18.269088-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.128006    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269094-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:34.665546    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269096-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:35.165522    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269098-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:35.665501    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269099-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:36.165514    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269101-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:36.663703    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269102-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:37.165242    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269104-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:37.665600    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269105-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:38.165487    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269107-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:38.665479    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:39.165288    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.26911-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:39.665446    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269246-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:40.165522    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269265-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:40.663437    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269267-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:41.165455    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269269-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:41.665488    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269271-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:42.165416    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269272-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:42.664092    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269274-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:43.165417    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269275-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:43.665387    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269277-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:44.165373    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269278-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:44.665427    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.26928-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:45.165367    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269281-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:45.665348    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269283-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:46.165320    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.26941-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:46.665382    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269413-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:47.165352    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269415-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:47.665389    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269417-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:48.165382    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269418-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:48.665281    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.26942-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:49.165313    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269421-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:49.665372    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269423-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.165308    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269424-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.664715    2237 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.18.20/kubectl get sa default --kubeconfig=/var/lib/minikube/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269426-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.721271    2237 kubeadm.go:1076] duration metric: took 16.707509042s to wait for elevateKubeSystemPrivileges.\n"}
{"Time":"2023-05-31T11:51:18.269427-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.721291    2237 kubeadm.go:406] StartCluster complete in 31.8568875s\n"}
{"Time":"2023-05-31T11:51:18.269429-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.721303    2237 settings.go:142] acquiring lock: {Name:mk21b0706c1b317cf69100362f2296fa879c00d7 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.269431-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.721389    2237 settings.go:150] Updating kubeconfig:  /Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:51:18.269493-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.721926    2237 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/kubeconfig: {Name:mk798616fa7d82f2defe425781279f8a2840bc7d Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:51:18.269496-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722093    2237 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.18.20/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml\"\n"}
{"Time":"2023-05-31T11:51:18.269498-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722124    2237 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]\n"}
{"Time":"2023-05-31T11:51:18.269501-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722177    2237 addons.go:66] Setting storage-provisioner=true in profile \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.269502-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722184    2237 addons.go:228] Setting addon storage-provisioner=true in \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.269504-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722213    2237 host.go:66] Checking if \"ingress-addon-legacy-798000\" exists ...\n"}
{"Time":"2023-05-31T11:51:18.269505-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722223    2237 addons.go:66] Setting default-storageclass=true in profile \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.269507-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722250    2237 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.26951-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722336    2237 kapi.go:59] client config for ingress-addon-legacy-798000: \u0026rest.Config{Host:\"https://192.168.105.6:8443\", APIPath:\"\", ContentConfig:rest.ContentConfig{AcceptContentTypes:\"\", ContentType:\"\", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:\"\", Password:\"\", BearerToken:\"\", BearerTokenFile:\"\", Impersonate:rest.ImpersonationConfig{UserName:\"\", UID:\"\", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:\u003cnil\u003e, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:\u003cnil\u003e, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:\"\", CertFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt\", KeyFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key\", CAFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt\", CertData:[]uint8(nil), KeyData:[]uint"}
{"Time":"2023-05-31T11:51:18.269582-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:\"\", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1021d1550), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}\n"}
{"Time":"2023-05-31T11:51:18.269607-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722480    2237 config.go:182] Loaded profile config \"ingress-addon-legacy-798000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.269611-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.722708    2237 cert_rotation.go:137] Starting client certificate rotation controller\n"}
{"Time":"2023-05-31T11:51:18.269617-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.723291    2237 kapi.go:59] client config for ingress-addon-legacy-798000: \u0026rest.Config{Host:\"https://192.168.105.6:8443\", APIPath:\"\", ContentConfig:rest.ContentConfig{AcceptContentTypes:\"\", ContentType:\"\", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:\"\", Password:\"\", BearerToken:\"\", BearerTokenFile:\"\", Impersonate:rest.ImpersonationConfig{UserName:\"\", UID:\"\", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:\u003cnil\u003e, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:\u003cnil\u003e, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:\"\", CertFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt\", KeyFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key\", CAFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt\", CertData:[]uint8(nil), KeyData:[]uint"}
{"Time":"2023-05-31T11:51:18.269621-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:\"\", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1021d1550), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}\n"}
{"Time":"2023-05-31T11:51:18.269623-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.728125    2237 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:51:18.269625-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.732035    2237 addons.go:420] installing /etc/kubernetes/addons/storage-provisioner.yaml\n"}
{"Time":"2023-05-31T11:51:18.269626-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.732043    2237 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)\n"}
{"Time":"2023-05-31T11:51:18.269628-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.732057    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.269637-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.736988    2237 addons.go:228] Setting addon default-storageclass=true in \"ingress-addon-legacy-798000\"\n"}
{"Time":"2023-05-31T11:51:18.269638-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.737008    2237 host.go:66] Checking if \"ingress-addon-legacy-798000\" exists ...\n"}
{"Time":"2023-05-31T11:51:18.26964-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.737711    2237 addons.go:420] installing /etc/kubernetes/addons/storageclass.yaml\n"}
{"Time":"2023-05-31T11:51:18.269641-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.737719    2237 ssh_runner.go:362] scp memory --\u003e /etc/kubernetes/addons/storageclass.yaml (271 bytes)\n"}
{"Time":"2023-05-31T11:51:18.269643-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.737726    2237 sshutil.go:53] new ssh client: \u0026{IP:192.168.105.6 Port:22 SSHKeyPath:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/ingress-addon-legacy-798000/id_rsa Username:docker}\n"}
{"Time":"2023-05-31T11:51:18.269645-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.848476    2237 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.18.20/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml\n"}
{"Time":"2023-05-31T11:51:18.269646-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.850811    2237 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.18.20/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml\n"}
{"Time":"2023-05-31T11:51:18.269648-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:50.899111    2237 ssh_runner.go:195] Run: /bin/bash -c \"sudo /var/lib/minikube/binaries/v1.18.20/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \\/etc\\/resolv.conf.*/i \\        hosts {\\n           192.168.105.1 host.minikube.internal\\n           fallthrough\\n        }' -e '/^        errors *$/i \\        log' | sudo /var/lib/minikube/binaries/v1.18.20/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -\"\n"}
{"Time":"2023-05-31T11:51:18.269651-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.242793    2237 kapi.go:248] \"coredns\" deployment in \"kube-system\" namespace and \"ingress-addon-legacy-798000\" context rescaled to 1 replicas\n"}
{"Time":"2023-05-31T11:51:18.269652-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.242814    2237 start.go:223] Will wait 6m0s for node \u0026{Name: IP:192.168.105.6 Port:8443 KubernetesVersion:v1.18.20 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:51:18.269654-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.246291    2237 out.go:177] * Verifying Kubernetes components...\n"}
{"Time":"2023-05-31T11:51:18.26972-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.257370    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet\n"}
{"Time":"2023-05-31T11:51:18.269722-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.287339    2237 out.go:177] * Enabled addons: default-storageclass, storage-provisioner\n"}
{"Time":"2023-05-31T11:51:18.269723-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.295257    2237 addons.go:499] enable addons completed in 573.15075ms: enabled=[default-storageclass storage-provisioner]\n"}
{"Time":"2023-05-31T11:51:18.269725-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.305100    2237 start.go:916] {\"host.minikube.internal\": 192.168.105.1} host record injected into CoreDNS's ConfigMap\n"}
{"Time":"2023-05-31T11:51:18.269728-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.305455    2237 kapi.go:59] client config for ingress-addon-legacy-798000: \u0026rest.Config{Host:\"https://192.168.105.6:8443\", APIPath:\"\", ContentConfig:rest.ContentConfig{AcceptContentTypes:\"\", ContentType:\"\", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:\"\", Password:\"\", BearerToken:\"\", BearerTokenFile:\"\", Impersonate:rest.ImpersonationConfig{UserName:\"\", UID:\"\", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:\u003cnil\u003e, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:\u003cnil\u003e, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:\"\", CertFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt\", KeyFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.key\", CAFile:\"/Users/jenkins/minikube-integration/16569-1035/.minikube/ca.crt\", CertData:[]uint8(nil), KeyData:[]uint"}
{"Time":"2023-05-31T11:51:18.269733-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:\"\", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1021d1550), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}\n"}
{"Time":"2023-05-31T11:51:18.269735-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.305585    2237 node_ready.go:35] waiting up to 6m0s for node \"ingress-addon-legacy-798000\" to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269736-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.306885    2237 node_ready.go:49] node \"ingress-addon-legacy-798000\" has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269738-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.306890    2237 node_ready.go:38] duration metric: took 1.297916ms waiting for node \"ingress-addon-legacy-798000\" to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.26974-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.306893    2237 pod_ready.go:35] extra waiting up to 6m0s for all system-critical pods including labels [k8s-app=kube-dns component=etcd component=kube-apiserver component=kube-controller-manager k8s-app=kube-proxy component=kube-scheduler] to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.2698-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:51.310529    2237 pod_ready.go:78] waiting up to 6m0s for pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269803-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:53.328336    2237 pod_ready.go:102] pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace has status \"Ready\":\"False\"\n"}
{"Time":"2023-05-31T11:51:18.269805-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:55.826727    2237 pod_ready.go:102] pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace has status \"Ready\":\"False\"\n"}
{"Time":"2023-05-31T11:51:18.269806-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:57.827150    2237 pod_ready.go:102] pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace has status \"Ready\":\"False\"\n"}
{"Time":"2023-05-31T11:51:18.269808-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.827305    2237 pod_ready.go:92] pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269809-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.827340    2237 pod_ready.go:81] duration metric: took 7.5169105s waiting for pod \"coredns-66bff467f8-c2tzr\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269811-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.827356    2237 pod_ready.go:78] waiting up to 6m0s for pod \"coredns-66bff467f8-r6flc\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269813-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.830141    2237 pod_ready.go:97] error getting pod \"coredns-66bff467f8-r6flc\" in \"kube-system\" namespace (skipping!): pods \"coredns-66bff467f8-r6flc\" not found\n"}
{"Time":"2023-05-31T11:51:18.269814-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.830164    2237 pod_ready.go:81] duration metric: took 2.799833ms waiting for pod \"coredns-66bff467f8-r6flc\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269816-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 11:49:58.830175    2237 pod_ready.go:66] WaitExtra: waitPodCondition: error getting pod \"coredns-66bff467f8-r6flc\" in \"kube-system\" namespace (skipping!): pods \"coredns-66bff467f8-r6flc\" not found\n"}
{"Time":"2023-05-31T11:51:18.269817-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.830184    2237 pod_ready.go:78] waiting up to 6m0s for pod \"etcd-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269819-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.836606    2237 pod_ready.go:92] pod \"etcd-ingress-addon-legacy-798000\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269929-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.836639    2237 pod_ready.go:81] duration metric: took 6.4435ms waiting for pod \"etcd-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269932-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.836653    2237 pod_ready.go:78] waiting up to 6m0s for pod \"kube-apiserver-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269933-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.843388    2237 pod_ready.go:92] pod \"kube-apiserver-ingress-addon-legacy-798000\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269935-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.843402    2237 pod_ready.go:81] duration metric: took 6.736042ms waiting for pod \"kube-apiserver-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269937-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.843412    2237 pod_ready.go:78] waiting up to 6m0s for pod \"kube-controller-manager-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.26994-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.848290    2237 pod_ready.go:92] pod \"kube-controller-manager-ingress-addon-legacy-798000\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269942-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.848301    2237 pod_ready.go:81] duration metric: took 4.880625ms waiting for pod \"kube-controller-manager-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269944-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:58.848311    2237 pod_ready.go:78] waiting up to 6m0s for pod \"kube-proxy-x7hkk\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.269945-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.016867    2237 request.go:628] Waited for 166.085417ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/nodes/ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.269947-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.023240    2237 pod_ready.go:92] pod \"kube-proxy-x7hkk\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.269949-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.023272    2237 pod_ready.go:81] duration metric: took 174.954209ms waiting for pod \"kube-proxy-x7hkk\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.26995-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.023297    2237 pod_ready.go:78] waiting up to 6m0s for pod \"kube-scheduler-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.270014-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.216823    2237 request.go:628] Waited for 193.443125ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/namespaces/kube-system/pods/kube-scheduler-ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.270017-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.416841    2237 request.go:628] Waited for 194.332666ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/nodes/ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.270019-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.423389    2237 pod_ready.go:92] pod \"kube-scheduler-ingress-addon-legacy-798000\" in \"kube-system\" namespace has status \"Ready\":\"True\"\n"}
{"Time":"2023-05-31T11:51:18.270021-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.423418    2237 pod_ready.go:81] duration metric: took 400.109208ms waiting for pod \"kube-scheduler-ingress-addon-legacy-798000\" in \"kube-system\" namespace to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.270022-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.423446    2237 pod_ready.go:38] duration metric: took 8.116659833s for extra waiting for all system-critical and pods with labels [k8s-app=kube-dns component=etcd component=kube-apiserver component=kube-controller-manager k8s-app=kube-proxy component=kube-scheduler] to be \"Ready\" ...\n"}
{"Time":"2023-05-31T11:51:18.270024-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.423493    2237 api_server.go:52] waiting for apiserver process to appear ...\n"}
{"Time":"2023-05-31T11:51:18.270026-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.423807    2237 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*\n"}
{"Time":"2023-05-31T11:51:18.270027-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.442251    2237 api_server.go:72] duration metric: took 8.199537625s to wait for apiserver process to appear ...\n"}
{"Time":"2023-05-31T11:51:18.270028-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.442279    2237 api_server.go:88] waiting for apiserver healthz status ...\n"}
{"Time":"2023-05-31T11:51:18.27003-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.442297    2237 api_server.go:253] Checking apiserver healthz at https://192.168.105.6:8443/healthz ...\n"}
{"Time":"2023-05-31T11:51:18.270031-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.451525    2237 api_server.go:279] https://192.168.105.6:8443/healthz returned 200:\n"}
{"Time":"2023-05-31T11:51:18.270033-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tok\n"}
{"Time":"2023-05-31T11:51:18.270034-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.452487    2237 api_server.go:141] control plane version: v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.270035-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.452502    2237 api_server.go:131] duration metric: took 10.215334ms to wait for apiserver health ...\n"}
{"Time":"2023-05-31T11:51:18.270102-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.452508    2237 system_pods.go:43] waiting for kube-system pods to appear ...\n"}
{"Time":"2023-05-31T11:51:18.270108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.616841    2237 request.go:628] Waited for 164.254667ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/namespaces/kube-system/pods\n"}
{"Time":"2023-05-31T11:51:18.270112-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634592    2237 system_pods.go:59] 7 kube-system pods found\n"}
{"Time":"2023-05-31T11:51:18.270116-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634630    2237 system_pods.go:61] \"coredns-66bff467f8-c2tzr\" [f824f930-47ac-4c0b-8a96-b1cc88d8b678] Running\n"}
{"Time":"2023-05-31T11:51:18.27012-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634638    2237 system_pods.go:61] \"etcd-ingress-addon-legacy-798000\" [6391cee3-0c0e-4461-ab8f-cd2c0f894ba2] Running\n"}
{"Time":"2023-05-31T11:51:18.270124-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634646    2237 system_pods.go:61] \"kube-apiserver-ingress-addon-legacy-798000\" [bd936996-fb98-4a02-a995-2636d60f4d15] Running\n"}
{"Time":"2023-05-31T11:51:18.270129-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634654    2237 system_pods.go:61] \"kube-controller-manager-ingress-addon-legacy-798000\" [a6886036-c2c7-4f1e-a50e-7b5f94cef17a] Running\n"}
{"Time":"2023-05-31T11:51:18.270133-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634667    2237 system_pods.go:61] \"kube-proxy-x7hkk\" [75eb3b99-f85d-42e9-a6fe-bc25ee0b5718] Running\n"}
{"Time":"2023-05-31T11:51:18.270148-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634677    2237 system_pods.go:61] \"kube-scheduler-ingress-addon-legacy-798000\" [152599fd-aba4-4c42-886e-861ac760b89b] Running\n"}
{"Time":"2023-05-31T11:51:18.27015-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634684    2237 system_pods.go:61] \"storage-provisioner\" [c4d46756-76e1-4de4-a766-bd266102f174] Running\n"}
{"Time":"2023-05-31T11:51:18.270151-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634698    2237 system_pods.go:74] duration metric: took 182.185791ms to wait for pod list to return data ...\n"}
{"Time":"2023-05-31T11:51:18.270153-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.634714    2237 default_sa.go:34] waiting for default service account to be created ...\n"}
{"Time":"2023-05-31T11:51:18.270155-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.816824    2237 request.go:628] Waited for 182.010458ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/namespaces/default/serviceaccounts\n"}
{"Time":"2023-05-31T11:51:18.270156-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.823580    2237 default_sa.go:45] found service account: \"default\"\n"}
{"Time":"2023-05-31T11:51:18.270158-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.823612    2237 default_sa.go:55] duration metric: took 188.888209ms for default service account to be created ...\n"}
{"Time":"2023-05-31T11:51:18.270162-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:49:59.823629    2237 system_pods.go:116] waiting for k8s-apps to be running ...\n"}
{"Time":"2023-05-31T11:51:18.270164-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.016269    2237 request.go:628] Waited for 192.541167ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/namespaces/kube-system/pods\n"}
{"Time":"2023-05-31T11:51:18.270166-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030171    2237 system_pods.go:86] 7 kube-system pods found\n"}
{"Time":"2023-05-31T11:51:18.270167-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030201    2237 system_pods.go:89] \"coredns-66bff467f8-c2tzr\" [f824f930-47ac-4c0b-8a96-b1cc88d8b678] Running\n"}
{"Time":"2023-05-31T11:51:18.270169-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030213    2237 system_pods.go:89] \"etcd-ingress-addon-legacy-798000\" [6391cee3-0c0e-4461-ab8f-cd2c0f894ba2] Running\n"}
{"Time":"2023-05-31T11:51:18.27017-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030222    2237 system_pods.go:89] \"kube-apiserver-ingress-addon-legacy-798000\" [bd936996-fb98-4a02-a995-2636d60f4d15] Running\n"}
{"Time":"2023-05-31T11:51:18.270172-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030232    2237 system_pods.go:89] \"kube-controller-manager-ingress-addon-legacy-798000\" [a6886036-c2c7-4f1e-a50e-7b5f94cef17a] Running\n"}
{"Time":"2023-05-31T11:51:18.270173-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030243    2237 system_pods.go:89] \"kube-proxy-x7hkk\" [75eb3b99-f85d-42e9-a6fe-bc25ee0b5718] Running\n"}
{"Time":"2023-05-31T11:51:18.270175-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030265    2237 system_pods.go:89] \"kube-scheduler-ingress-addon-legacy-798000\" [152599fd-aba4-4c42-886e-861ac760b89b] Running\n"}
{"Time":"2023-05-31T11:51:18.270177-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030278    2237 system_pods.go:89] \"storage-provisioner\" [c4d46756-76e1-4de4-a766-bd266102f174] Running\n"}
{"Time":"2023-05-31T11:51:18.270178-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030293    2237 system_pods.go:126] duration metric: took 206.658167ms to wait for k8s-apps to be running ...\n"}
{"Time":"2023-05-31T11:51:18.27018-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030315    2237 system_svc.go:44] waiting for kubelet service to be running ....\n"}
{"Time":"2023-05-31T11:51:18.270181-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.030476    2237 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet\n"}
{"Time":"2023-05-31T11:51:18.270183-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.046926    2237 system_svc.go:56] duration metric: took 16.608875ms WaitForService to wait for kubelet.\n"}
{"Time":"2023-05-31T11:51:18.270309-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.046953    2237 kubeadm.go:581] duration metric: took 8.804249791s to wait for : map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] ...\n"}
{"Time":"2023-05-31T11:51:18.270312-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.046981    2237 node_conditions.go:102] verifying NodePressure condition ...\n"}
{"Time":"2023-05-31T11:51:18.270314-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.216824    2237 request.go:628] Waited for 169.74775ms due to client-side throttling, not priority and fairness, request: GET:https://192.168.105.6:8443/api/v1/nodes\n"}
{"Time":"2023-05-31T11:51:18.270315-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224516    2237 node_conditions.go:122] node storage ephemeral capacity is 17784760Ki\n"}
{"Time":"2023-05-31T11:51:18.270317-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224562    2237 node_conditions.go:123] node cpu capacity is 2\n"}
{"Time":"2023-05-31T11:51:18.270318-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224589    2237 node_conditions.go:105] duration metric: took 177.598709ms to run NodePressure ...\n"}
{"Time":"2023-05-31T11:51:18.27032-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224610    2237 start.go:228] waiting for startup goroutines ...\n"}
{"Time":"2023-05-31T11:51:18.270322-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224626    2237 start.go:233] waiting for cluster config update ...\n"}
{"Time":"2023-05-31T11:51:18.270324-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.224660    2237 start.go:242] writing updated cluster config ...\n"}
{"Time":"2023-05-31T11:51:18.270326-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.226080    2237 ssh_runner.go:195] Run: rm -f paused\n"}
{"Time":"2023-05-31T11:51:18.270327-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.372183    2237 start.go:573] kubectl: 1.25.9, cluster: 1.18.20 (minor skew: 7)\n"}
{"Time":"2023-05-31T11:51:18.270328-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.375021    2237 out.go:177] \n"}
{"Time":"2023-05-31T11:51:18.27033-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 11:50:00.378999    2237 out.go:239] ! /usr/local/bin/kubectl is version 1.25.9, which may have incompatibilities with Kubernetes 1.18.20.\n"}
{"Time":"2023-05-31T11:51:18.270332-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.382852    2237 out.go:177]   - Want kubectl v1.18.20? Try 'minikube kubectl -- get pods -A'\n"}
{"Time":"2023-05-31T11:51:18.270333-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 11:50:00.390948    2237 out.go:177] * Done! kubectl is now configured to use \"ingress-addon-legacy-798000\" cluster and \"default\" namespace by default\n"}
{"Time":"2023-05-31T11:51:18.270432-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.270439-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.270457-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e Docker \u003c==\n"}
{"Time":"2023-05-31T11:51:18.270465-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:49:02 UTC, ends at Wed 2023-05-31 18:51:18 UTC. --\n"}
{"Time":"2023-05-31T11:51:18.270504-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:50:50 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:50:50.513368787Z\" level=warning msg=\"cleaning up after shim disconnected\" id=f574a77ef1d3c9bc42345e3d5fea9ab0e7ff8a70a5d77d9ebd6459c24e828cc2 namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270526-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:50:50 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:50:50.513372995Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270529-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:04 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:04.701860783Z\" level=info msg=\"ignoring event\" container=1e200e6dc3eadbe55797a599cc8cf3ae236678e9ce8c63788a07a3ba47e5cb1d module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:51:18.270531-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:04 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:04.702796588Z\" level=info msg=\"shim disconnected\" id=1e200e6dc3eadbe55797a599cc8cf3ae236678e9ce8c63788a07a3ba47e5cb1d namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270532-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:04 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:04.702943298Z\" level=warning msg=\"cleaning up after shim disconnected\" id=1e200e6dc3eadbe55797a599cc8cf3ae236678e9ce8c63788a07a3ba47e5cb1d namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270534-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:04 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:04.702957882Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270536-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.710317511Z\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\n"}
{"Time":"2023-05-31T11:51:18.270538-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.710385929Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.pause\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:51:18.27054-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.710405137Z\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\n"}
{"Time":"2023-05-31T11:51:18.270542-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.710418763Z\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\n"}
{"Time":"2023-05-31T11:51:18.270544-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:05.767255875Z\" level=info msg=\"ignoring event\" container=764f1b0ff29b34a3ac470d99253bcd3d68ec74b3cd72794005372cadc312fdca module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:51:18.270545-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.767395085Z\" level=info msg=\"shim disconnected\" id=764f1b0ff29b34a3ac470d99253bcd3d68ec74b3cd72794005372cadc312fdca namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270547-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.767423169Z\" level=warning msg=\"cleaning up after shim disconnected\" id=764f1b0ff29b34a3ac470d99253bcd3d68ec74b3cd72794005372cadc312fdca namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270549-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:05.767427169Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270551-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:13.097766824Z\" level=info msg=\"Container failed to exit within 2s of signal 15 - using the force\" container=e3ee3494147366b9823bb9104d9be7247e0563e89a17a1c2a80c83d7d3943aee\n"}
{"Time":"2023-05-31T11:51:18.270554-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:13.103345044Z\" level=info msg=\"Container failed to exit within 2s of signal 15 - using the force\" container=e3ee3494147366b9823bb9104d9be7247e0563e89a17a1c2a80c83d7d3943aee\n"}
{"Time":"2023-05-31T11:51:18.270556-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:13.176352272Z\" level=info msg=\"ignoring event\" container=e3ee3494147366b9823bb9104d9be7247e0563e89a17a1c2a80c83d7d3943aee module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:51:18.270558-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.176669598Z\" level=info msg=\"shim disconnected\" id=e3ee3494147366b9823bb9104d9be7247e0563e89a17a1c2a80c83d7d3943aee namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.27056-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.176714681Z\" level=warning msg=\"cleaning up after shim disconnected\" id=e3ee3494147366b9823bb9104d9be7247e0563e89a17a1c2a80c83d7d3943aee namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270683-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.176723472Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.27069-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1239]: time=\"2023-05-31T18:51:13.215975593Z\" level=info msg=\"ignoring event\" container=6626de1d842f52700cee997a3463a605892cc67cb20b1af79f7e4269c4b2a1b4 module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"}
{"Time":"2023-05-31T11:51:18.270715-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.216432792Z\" level=info msg=\"shim disconnected\" id=6626de1d842f52700cee997a3463a605892cc67cb20b1af79f7e4269c4b2a1b4 namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270719-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.216482958Z\" level=warning msg=\"cleaning up after shim disconnected\" id=6626de1d842f52700cee997a3463a605892cc67cb20b1af79f7e4269c4b2a1b4 namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.27072-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.216489833Z\" level=info msg=\"cleaning up dead shim\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270722-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 dockerd[1245]: time=\"2023-05-31T18:51:13.223715353Z\" level=warning msg=\"cleanup warnings time=\\\"2023-05-31T18:51:13Z\\\" level=warning msg=\\\"failed to remove runc container\\\" error=\\\"runc did not terminate successfully: exit status 255: \\\" runtime=io.containerd.runc.v2\\n\" namespace=moby\n"}
{"Time":"2023-05-31T11:51:18.270724-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.270726-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.270727-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e container status \u003c==\n"}
{"Time":"2023-05-31T11:51:18.270729-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* CONTAINER           IMAGE                                                                                                              CREATED              STATE               NAME                      ATTEMPT             POD ID\n"}
{"Time":"2023-05-31T11:51:18.27073-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t764f1b0ff29b3       13753a81eccfd                                                                                                      13 seconds ago       Exited              hello-world-app           2                   99552f2a79768\n"}
{"Time":"2023-05-31T11:51:18.270732-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t9a035b6c6e0aa       nginx@sha256:2e776a66a3556f001aba13431b26e448fe8acba277bf93d2ab1a785571a46d90                                      39 seconds ago       Running             nginx                     0                   2361429af26cd\n"}
{"Time":"2023-05-31T11:51:18.270861-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \te3ee349414736       registry.k8s.io/ingress-nginx/controller@sha256:35fe394c82164efa8f47f3ed0be981b3f23da77175bbb8268a9ae438851c8324   About a minute ago   Exited              controller                0                   6626de1d842f5\n"}
{"Time":"2023-05-31T11:51:18.270864-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \te5a61adc9725e       jettech/kube-webhook-certgen@sha256:950833e19ade18cd389d647efb88992a7cc077abedef343fa59e012d376d79b7               About a minute ago   Exited              patch                     0                   8bd1a6631b6c5\n"}
{"Time":"2023-05-31T11:51:18.270866-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t56d6a641dc644       jettech/kube-webhook-certgen@sha256:950833e19ade18cd389d647efb88992a7cc077abedef343fa59e012d376d79b7               About a minute ago   Exited              create                    0                   30e8fe119498e\n"}
{"Time":"2023-05-31T11:51:18.270868-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tb6fc3d2ad50cc       gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944    About a minute ago   Running             storage-provisioner       0                   8211d3af3e96f\n"}
{"Time":"2023-05-31T11:51:18.27087-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t1cde38c3bc15d       6e17ba78cf3eb                                                                                                      About a minute ago   Running             coredns                   0                   bf35d2b694ebf\n"}
{"Time":"2023-05-31T11:51:18.270871-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tf53b0f28a3e7b       565297bc6f7d4                                                                                                      About a minute ago   Running             kube-proxy                0                   4a297288bcadb\n"}
{"Time":"2023-05-31T11:51:18.270873-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t6516182cabeab       095f37015706d                                                                                                      About a minute ago   Running             kube-scheduler            0                   c253c7fe705de\n"}
{"Time":"2023-05-31T11:51:18.270875-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tca93f9807f1b3       2694cf044d665                                                                                                      About a minute ago   Running             kube-apiserver            0                   d9ce6995429f8\n"}
{"Time":"2023-05-31T11:51:18.270877-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t83654b4c59cdc       ab707b0a0ea33                                                                                                      About a minute ago   Running             etcd                      0                   c20027bde5b5b\n"}
{"Time":"2023-05-31T11:51:18.270878-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t5ef230356113f       68a4fac29a865                                                                                                      About a minute ago   Running             kube-controller-manager   0                   07a8bf1ea6425\n"}
{"Time":"2023-05-31T11:51:18.270996-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271001-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.271005-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e coredns [1cde38c3bc15] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.271009-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* [INFO] 172.17.0.1:4776 - 62460 \"A IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000045584s\n"}
{"Time":"2023-05-31T11:51:18.271013-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 50457 \"AAAA IN hello-world-app.default.svc.cluster.local.ingress-nginx.svc.cluster.local. udp 91 false 512\" NXDOMAIN qr,aa,rd 184 0.000016167s\n"}
{"Time":"2023-05-31T11:51:18.271017-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:4776 - 48631 \"AAAA IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000106044s\n"}
{"Time":"2023-05-31T11:51:18.271021-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 28356 \"A IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000014541s\n"}
{"Time":"2023-05-31T11:51:18.271025-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 14908 \"AAAA IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000017625s\n"}
{"Time":"2023-05-31T11:51:18.271029-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:4776 - 49706 \"A IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000043s\n"}
{"Time":"2023-05-31T11:51:18.271032-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:4776 - 46447 \"AAAA IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000034583s\n"}
{"Time":"2023-05-31T11:51:18.271036-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 19653 \"A IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000009584s\n"}
{"Time":"2023-05-31T11:51:18.27104-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 1911 \"A IN hello-world-app.default.svc.cluster.local.ingress-nginx.svc.cluster.local. udp 91 false 512\" NXDOMAIN qr,aa,rd 184 0.000023667s\n"}
{"Time":"2023-05-31T11:51:18.271043-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:4776 - 52457 \"A IN hello-world-app.default.svc.cluster.local. udp 59 false 512\" NOERROR qr,aa,rd 116 0.000040417s\n"}
{"Time":"2023-05-31T11:51:18.271051-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 8679 \"AAAA IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000018751s\n"}
{"Time":"2023-05-31T11:51:18.271055-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 21065 \"AAAA IN hello-world-app.default.svc.cluster.local.ingress-nginx.svc.cluster.local. udp 91 false 512\" NXDOMAIN qr,aa,rd 184 0.000015709s\n"}
{"Time":"2023-05-31T11:51:18.27108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:13170 - 36514 \"A IN hello-world-app.default.svc.cluster.local. udp 59 false 512\" NOERROR qr,aa,rd 116 0.000012501s\n"}
{"Time":"2023-05-31T11:51:18.271097-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 42887 \"A IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000013792s\n"}
{"Time":"2023-05-31T11:51:18.271105-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 56743 \"AAAA IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000012917s\n"}
{"Time":"2023-05-31T11:51:18.27111-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 54083 \"A IN hello-world-app.default.svc.cluster.local.ingress-nginx.svc.cluster.local. udp 91 false 512\" NXDOMAIN qr,aa,rd 184 0.000043501s\n"}
{"Time":"2023-05-31T11:51:18.271114-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 63647 \"A IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000010667s\n"}
{"Time":"2023-05-31T11:51:18.271118-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 34804 \"AAAA IN hello-world-app.default.svc.cluster.local.ingress-nginx.svc.cluster.local. udp 91 false 512\" NXDOMAIN qr,aa,rd 184 0.000009208s\n"}
{"Time":"2023-05-31T11:51:18.271125-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 41851 \"AAAA IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000008334s\n"}
{"Time":"2023-05-31T11:51:18.271129-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 37441 \"A IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000009709s\n"}
{"Time":"2023-05-31T11:51:18.271133-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:49011 - 19235 \"A IN hello-world-app.default.svc.cluster.local. udp 59 false 512\" NOERROR qr,aa,rd 116 0.00000975s\n"}
{"Time":"2023-05-31T11:51:18.271136-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 14982 \"AAAA IN hello-world-app.default.svc.cluster.local.svc.cluster.local. udp 77 false 512\" NXDOMAIN qr,aa,rd 170 0.000011792s\n"}
{"Time":"2023-05-31T11:51:18.271153-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 33058 \"A IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000012251s\n"}
{"Time":"2023-05-31T11:51:18.271169-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 3936 \"AAAA IN hello-world-app.default.svc.cluster.local.cluster.local. udp 73 false 512\" NXDOMAIN qr,aa,rd 166 0.000008959s\n"}
{"Time":"2023-05-31T11:51:18.271173-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[INFO] 172.17.0.1:50193 - 57225 \"A IN hello-world-app.default.svc.cluster.local. udp 59 false 512\" NOERROR qr,aa,rd 116 0.000008958s\n"}
{"Time":"2023-05-31T11:51:18.271188-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271193-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.271197-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e describe nodes \u003c==\n"}
{"Time":"2023-05-31T11:51:18.271214-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* Name:               ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.271216-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tRoles:              master\n"}
{"Time":"2023-05-31T11:51:18.271218-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLabels:             beta.kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:51:18.271219-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    beta.kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:51:18.271221-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    kubernetes.io/arch=arm64\n"}
{"Time":"2023-05-31T11:51:18.271222-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    kubernetes.io/hostname=ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.271224-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    kubernetes.io/os=linux\n"}
{"Time":"2023-05-31T11:51:18.271225-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    minikube.k8s.io/commit=7022875d4a054c2d518e5e5a7b9d500799d50140\n"}
{"Time":"2023-05-31T11:51:18.271227-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    minikube.k8s.io/name=ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.271228-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    minikube.k8s.io/primary=true\n"}
{"Time":"2023-05-31T11:51:18.27123-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    minikube.k8s.io/updated_at=2023_05_31T11_49_34_0700\n"}
{"Time":"2023-05-31T11:51:18.271231-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    minikube.k8s.io/version=v1.30.1\n"}
{"Time":"2023-05-31T11:51:18.271233-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    node-role.kubernetes.io/master=\n"}
{"Time":"2023-05-31T11:51:18.271234-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock\n"}
{"Time":"2023-05-31T11:51:18.271235-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    node.alpha.kubernetes.io/ttl: 0\n"}
{"Time":"2023-05-31T11:51:18.271237-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t                    volumes.kubernetes.io/controller-managed-attach-detach: true\n"}
{"Time":"2023-05-31T11:51:18.271238-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tCreationTimestamp:  Wed, 31 May 2023 18:49:31 +0000\n"}
{"Time":"2023-05-31T11:51:18.271315-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tTaints:             \u003cnone\u003e\n"}
{"Time":"2023-05-31T11:51:18.271317-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tUnschedulable:      false\n"}
{"Time":"2023-05-31T11:51:18.271322-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLease:\n"}
{"Time":"2023-05-31T11:51:18.271323-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  HolderIdentity:  ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.271324-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  AcquireTime:     \u003cunset\u003e\n"}
{"Time":"2023-05-31T11:51:18.271326-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  RenewTime:       Wed, 31 May 2023 18:51:10 +0000\n"}
{"Time":"2023-05-31T11:51:18.271327-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tConditions:\n"}
{"Time":"2023-05-31T11:51:18.271328-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n"}
{"Time":"2023-05-31T11:51:18.27133-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ----             ------  -----------------                 ------------------                ------                       -------\n"}
{"Time":"2023-05-31T11:51:18.271332-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  MemoryPressure   False   Wed, 31 May 2023 18:51:10 +0000   Wed, 31 May 2023 18:49:29 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n"}
{"Time":"2023-05-31T11:51:18.271334-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  DiskPressure     False   Wed, 31 May 2023 18:51:10 +0000   Wed, 31 May 2023 18:49:29 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n"}
{"Time":"2023-05-31T11:51:18.271335-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  PIDPressure      False   Wed, 31 May 2023 18:51:10 +0000   Wed, 31 May 2023 18:49:29 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n"}
{"Time":"2023-05-31T11:51:18.271337-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Ready            True    Wed, 31 May 2023 18:51:10 +0000   Wed, 31 May 2023 18:49:40 +0000   KubeletReady                 kubelet is posting ready status\n"}
{"Time":"2023-05-31T11:51:18.271338-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAddresses:\n"}
{"Time":"2023-05-31T11:51:18.271339-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  InternalIP:  192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.27134-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Hostname:    ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.271342-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tCapacity:\n"}
{"Time":"2023-05-31T11:51:18.271343-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:51:18.271395-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:51:18.271397-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:51:18.271398-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:51:18.2714-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:51:18.271401-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:51:18.271402-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  memory:             4004084Ki\n"}
{"Time":"2023-05-31T11:51:18.271404-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:51:18.271406-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAllocatable:\n"}
{"Time":"2023-05-31T11:51:18.271434-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  cpu:                2\n"}
{"Time":"2023-05-31T11:51:18.271436-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ephemeral-storage:  17784760Ki\n"}
{"Time":"2023-05-31T11:51:18.271437-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-1Gi:      0\n"}
{"Time":"2023-05-31T11:51:18.271438-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-2Mi:      0\n"}
{"Time":"2023-05-31T11:51:18.271439-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-32Mi:     0\n"}
{"Time":"2023-05-31T11:51:18.271441-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-64Ki:     0\n"}
{"Time":"2023-05-31T11:51:18.271442-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  memory:             4004084Ki\n"}
{"Time":"2023-05-31T11:51:18.271443-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  pods:               110\n"}
{"Time":"2023-05-31T11:51:18.271444-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tSystem Info:\n"}
{"Time":"2023-05-31T11:51:18.271446-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Machine ID:                 2999d8bae6934aaa9f1b60ec5ace70b2\n"}
{"Time":"2023-05-31T11:51:18.271447-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  System UUID:                2999d8bae6934aaa9f1b60ec5ace70b2\n"}
{"Time":"2023-05-31T11:51:18.271449-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Boot ID:                    a9e19d70-666c-4510-aa71-36b12f00dd3a\n"}
{"Time":"2023-05-31T11:51:18.27145-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Kernel Version:             5.10.57\n"}
{"Time":"2023-05-31T11:51:18.271451-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  OS Image:                   Buildroot 2021.02.12\n"}
{"Time":"2023-05-31T11:51:18.271453-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Operating System:           linux\n"}
{"Time":"2023-05-31T11:51:18.271483-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Architecture:               arm64\n"}
{"Time":"2023-05-31T11:51:18.271488-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Container Runtime Version:  docker://24.0.1\n"}
{"Time":"2023-05-31T11:51:18.271492-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Kubelet Version:            v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.271495-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Kube-Proxy Version:         v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.271498-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tPodCIDR:                      10.244.0.0/24\n"}
{"Time":"2023-05-31T11:51:18.271502-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tPodCIDRs:                     10.244.0.0/24\n"}
{"Time":"2023-05-31T11:51:18.271518-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tNon-terminated Pods:          (9 in total)\n"}
{"Time":"2023-05-31T11:51:18.271521-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Namespace                   Name                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE\n"}
{"Time":"2023-05-31T11:51:18.271523-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ---------                   ----                                                   ------------  ----------  ---------------  -------------  ---\n"}
{"Time":"2023-05-31T11:51:18.271525-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  default                     hello-world-app-5f5d8b66bb-d5gjf                       0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         31s\n"}
{"Time":"2023-05-31T11:51:18.271526-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  default                     nginx                                                  0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         42s\n"}
{"Time":"2023-05-31T11:51:18.271528-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 coredns-66bff467f8-c2tzr                               100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     88s\n"}
{"Time":"2023-05-31T11:51:18.271529-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 etcd-ingress-addon-legacy-798000                       0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         98s\n"}
{"Time":"2023-05-31T11:51:18.271531-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 kube-apiserver-ingress-addon-legacy-798000             250m (12%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         98s\n"}
{"Time":"2023-05-31T11:51:18.271533-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 kube-controller-manager-ingress-addon-legacy-798000    200m (10%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         98s\n"}
{"Time":"2023-05-31T11:51:18.271562-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 kube-proxy-x7hkk                                       0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         88s\n"}
{"Time":"2023-05-31T11:51:18.271565-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 kube-scheduler-ingress-addon-legacy-798000             100m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         97s\n"}
{"Time":"2023-05-31T11:51:18.271568-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  kube-system                 storage-provisioner                                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         87s\n"}
{"Time":"2023-05-31T11:51:18.27157-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tAllocated resources:\n"}
{"Time":"2023-05-31T11:51:18.271571-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  (Total limits may be over 100 percent, i.e., overcommitted.)\n"}
{"Time":"2023-05-31T11:51:18.271572-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Resource           Requests    Limits\n"}
{"Time":"2023-05-31T11:51:18.271574-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  --------           --------    ------\n"}
{"Time":"2023-05-31T11:51:18.271575-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  cpu                650m (32%!)(MISSING)  0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271576-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  memory             70Mi (1%!)(MISSING)   170Mi (4%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271578-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271579-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.27158-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271582-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271583-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)\n"}
{"Time":"2023-05-31T11:51:18.271584-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tEvents:\n"}
{"Time":"2023-05-31T11:51:18.271585-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Type    Reason                   Age   From        Message\n"}
{"Time":"2023-05-31T11:51:18.271587-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  ----    ------                   ----  ----        -------\n"}
{"Time":"2023-05-31T11:51:18.271588-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  Starting                 98s   kubelet     Starting kubelet.\n"}
{"Time":"2023-05-31T11:51:18.271697-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  NodeAllocatableEnforced  98s   kubelet     Updated Node Allocatable limit across pods\n"}
{"Time":"2023-05-31T11:51:18.271731-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  NodeHasSufficientMemory  98s   kubelet     Node ingress-addon-legacy-798000 status is now: NodeHasSufficientMemory\n"}
{"Time":"2023-05-31T11:51:18.271734-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  NodeHasNoDiskPressure    98s   kubelet     Node ingress-addon-legacy-798000 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2023-05-31T11:51:18.271736-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  NodeHasSufficientPID     98s   kubelet     Node ingress-addon-legacy-798000 status is now: NodeHasSufficientPID\n"}
{"Time":"2023-05-31T11:51:18.271737-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  NodeReady                98s   kubelet     Node ingress-addon-legacy-798000 status is now: NodeReady\n"}
{"Time":"2023-05-31T11:51:18.271739-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t  Normal  Starting                 87s   kube-proxy  Starting kube-proxy.\n"}
{"Time":"2023-05-31T11:51:18.271741-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271742-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.271743-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e dmesg \u003c==\n"}
{"Time":"2023-05-31T11:51:18.271745-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* [May31 18:49] ACPI: SRAT not present\n"}
{"Time":"2023-05-31T11:51:18.271746-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.000000] KASLR disabled due to lack of seed\n"}
{"Time":"2023-05-31T11:51:18.271747-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.630831] EINJ: EINJ table not found.\n"}
{"Time":"2023-05-31T11:51:18.271749-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.501597] systemd-fstab-generator[114]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.27175-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.044305] systemd[1]: systemd-journald.service: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.\n"}
{"Time":"2023-05-31T11:51:18.271752-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.000794] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)\n"}
{"Time":"2023-05-31T11:51:18.271753-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +3.106346] systemd-fstab-generator[472]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271755-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.079146] systemd-fstab-generator[483]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271802-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +3.475377] systemd-fstab-generator[782]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271808-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +1.526862] kauditd_printk_skb: 17 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.271812-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.117066] systemd-fstab-generator[954]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271816-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.176552] systemd-fstab-generator[990]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271819-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.088287] systemd-fstab-generator[1001]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271823-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.066837] systemd-fstab-generator[1014]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271843-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +4.437418] systemd-fstab-generator[1232]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271846-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +1.551168] kauditd_printk_skb: 68 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.271851-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +2.848221] systemd-fstab-generator[1704]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271852-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +8.212706] kauditd_printk_skb: 29 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.271854-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +0.093174] kmem.limit_in_bytes is deprecated and will be removed. Please report your usecase to linux-mm@kvack.org if you depend on this functionality.\n"}
{"Time":"2023-05-31T11:51:18.271855-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +6.266801] systemd-fstab-generator[2778]: Ignoring \"noauto\" for root device\n"}
{"Time":"2023-05-31T11:51:18.271857-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[ +17.147728] kauditd_printk_skb: 7 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.271859-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[  +7.586295] kauditd_printk_skb: 11 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.27186-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[May31 18:50] TCP: eth0: Driver has suspect GRO implementation, TCP performance may be compromised.\n"}
{"Time":"2023-05-31T11:51:18.271861-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t[ +41.357107] kauditd_printk_skb: 1 callbacks suppressed\n"}
{"Time":"2023-05-31T11:51:18.271863-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271864-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.271865-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e etcd [83654b4c59cd] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.271873-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* raft2023/05/31 18:49:29 INFO: ed054832bd1917e1 became follower at term 0\n"}
{"Time":"2023-05-31T11:51:18.271874-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: newRaft ed054832bd1917e1 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]\n"}
{"Time":"2023-05-31T11:51:18.271876-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 became follower at term 1\n"}
{"Time":"2023-05-31T11:51:18.271877-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 switched to configuration voters=(17079136544630577121)\n"}
{"Time":"2023-05-31T11:51:18.271879-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.023131 W | auth: simple token is not cryptographically signed\n"}
{"Time":"2023-05-31T11:51:18.27188-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.059246 I | etcdserver: starting server... [version: 3.4.3, cluster version: to_be_decided]\n"}
{"Time":"2023-05-31T11:51:18.271884-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.066643 I | embed: ClientTLS: cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = \n"}
{"Time":"2023-05-31T11:51:18.271885-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.066719 I | embed: listening for metrics on http://127.0.0.1:2381\n"}
{"Time":"2023-05-31T11:51:18.271887-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.066775 I | etcdserver: ed054832bd1917e1 as single-node; fast-forwarding 9 ticks (election ticks 10)\n"}
{"Time":"2023-05-31T11:51:18.271888-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.066961 I | embed: listening for peers on 192.168.105.6:2380\n"}
{"Time":"2023-05-31T11:51:18.27189-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 switched to configuration voters=(17079136544630577121)\n"}
{"Time":"2023-05-31T11:51:18.271891-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.067159 I | etcdserver/membership: added member ed054832bd1917e1 [https://192.168.105.6:2380] to cluster 45a39c2c59b0edf4\n"}
{"Time":"2023-05-31T11:51:18.271892-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 is starting a new election at term 1\n"}
{"Time":"2023-05-31T11:51:18.271894-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 became candidate at term 2\n"}
{"Time":"2023-05-31T11:51:18.271895-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 received MsgVoteResp from ed054832bd1917e1 at term 2\n"}
{"Time":"2023-05-31T11:51:18.271897-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: ed054832bd1917e1 became leader at term 2\n"}
{"Time":"2023-05-31T11:51:18.271972-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \traft2023/05/31 18:49:29 INFO: raft.node: ed054832bd1917e1 elected leader ed054832bd1917e1 at term 2\n"}
{"Time":"2023-05-31T11:51:18.271974-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.904304 I | etcdserver: published {Name:ingress-addon-legacy-798000 ClientURLs:[https://192.168.105.6:2379]} to cluster 45a39c2c59b0edf4\n"}
{"Time":"2023-05-31T11:51:18.271976-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.904576 I | embed: ready to serve client requests\n"}
{"Time":"2023-05-31T11:51:18.271977-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.906139 I | embed: serving client requests on 127.0.0.1:2379\n"}
{"Time":"2023-05-31T11:51:18.271978-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.906199 I | embed: ready to serve client requests\n"}
{"Time":"2023-05-31T11:51:18.27198-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.906347 I | etcdserver: setting up the initial cluster version to 3.4\n"}
{"Time":"2023-05-31T11:51:18.271981-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.906828 N | etcdserver/membership: set the initial cluster version to 3.4\n"}
{"Time":"2023-05-31T11:51:18.271982-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.906942 I | etcdserver/api: enabled capabilities for version 3.4\n"}
{"Time":"2023-05-31T11:51:18.271984-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t2023-05-31 18:49:29.907410 I | embed: serving client requests on 192.168.105.6:2379\n"}
{"Time":"2023-05-31T11:51:18.271987-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271989-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.27199-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kernel \u003c==\n"}
{"Time":"2023-05-31T11:51:18.271992-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t*  18:51:18 up 2 min,  0 users,  load average: 0.90, 0.35, 0.13\n"}
{"Time":"2023-05-31T11:51:18.271993-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tLinux ingress-addon-legacy-798000 5.10.57 #1 SMP PREEMPT Wed May 24 00:44:44 UTC 2023 aarch64 GNU/Linux\n"}
{"Time":"2023-05-31T11:51:18.271995-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tPRETTY_NAME=\"Buildroot 2021.02.12\"\n"}
{"Time":"2023-05-31T11:51:18.271996-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.271997-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.271998-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kube-apiserver [ca93f9807f1b] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.272-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* I0531 18:49:31.490732       1 dynamic_cafile_content.go:167] Starting request-header::/var/lib/minikube/certs/front-proxy-ca.crt\n"}
{"Time":"2023-05-31T11:51:18.272094-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.511716       1 controller.go:152] Unable to remove old endpoints from kubernetes service: StorageError: key not found, Code: 1, Key: /registry/masterleases/192.168.105.6, ResourceVersion: 0, AdditionalErrorMsg: \n"}
{"Time":"2023-05-31T11:51:18.272097-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.588986       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller\n"}
{"Time":"2023-05-31T11:51:18.272099-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.589031       1 shared_informer.go:230] Caches are synced for cluster_authentication_trust_controller \n"}
{"Time":"2023-05-31T11:51:18.2721-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.589051       1 cache.go:39] Caches are synced for AvailableConditionController controller\n"}
{"Time":"2023-05-31T11:51:18.272102-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.591062       1 shared_informer.go:230] Caches are synced for crd-autoregister \n"}
{"Time":"2023-05-31T11:51:18.272103-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.591098       1 cache.go:39] Caches are synced for autoregister controller\n"}
{"Time":"2023-05-31T11:51:18.272105-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.487016       1 controller.go:130] OpenAPI AggregationController: action for item : Nothing (removed from the queue).\n"}
{"Time":"2023-05-31T11:51:18.272106-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.487189       1 controller.go:130] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).\n"}
{"Time":"2023-05-31T11:51:18.272108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.498052       1 storage_scheduling.go:134] created PriorityClass system-node-critical with value 2000001000\n"}
{"Time":"2023-05-31T11:51:18.272109-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.504072       1 storage_scheduling.go:134] created PriorityClass system-cluster-critical with value 2000000000\n"}
{"Time":"2023-05-31T11:51:18.272111-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.504101       1 storage_scheduling.go:143] all system priority classes are created successfully or already exist.\n"}
{"Time":"2023-05-31T11:51:18.272115-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.665619       1 controller.go:609] quota admission added evaluator for: roles.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:51:18.272117-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.676040       1 controller.go:609] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io\n"}
{"Time":"2023-05-31T11:51:18.272118-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 18:49:32.753213       1 lease.go:224] Resetting endpoints for master service \"kubernetes\" to [192.168.105.6]\n"}
{"Time":"2023-05-31T11:51:18.272163-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.753755       1 controller.go:609] quota admission added evaluator for: endpoints\n"}
{"Time":"2023-05-31T11:51:18.272165-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:32.755500       1 controller.go:609] quota admission added evaluator for: endpointslices.discovery.k8s.io\n"}
{"Time":"2023-05-31T11:51:18.272167-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:33.784972       1 controller.go:609] quota admission added evaluator for: serviceaccounts\n"}
{"Time":"2023-05-31T11:51:18.272168-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:34.215249       1 controller.go:609] quota admission added evaluator for: deployments.apps\n"}
{"Time":"2023-05-31T11:51:18.27217-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:34.416958       1 controller.go:609] quota admission added evaluator for: daemonsets.apps\n"}
{"Time":"2023-05-31T11:51:18.272171-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:40.612519       1 controller.go:609] quota admission added evaluator for: leases.coordination.k8s.io\n"}
{"Time":"2023-05-31T11:51:18.272173-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.488015       1 controller.go:609] quota admission added evaluator for: controllerrevisions.apps\n"}
{"Time":"2023-05-31T11:51:18.272174-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.542177       1 controller.go:609] quota admission added evaluator for: replicasets.apps\n"}
{"Time":"2023-05-31T11:51:18.272176-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:00.752951       1 controller.go:609] quota admission added evaluator for: jobs.batch\n"}
{"Time":"2023-05-31T11:51:18.272177-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:36.143900       1 controller.go:609] quota admission added evaluator for: ingresses.networking.k8s.io\n"}
{"Time":"2023-05-31T11:51:18.272178-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.27218-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.272181-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kube-controller-manager [5ef230356113] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.272182-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* I0531 18:49:50.531321       1 disruption.go:339] Sending events to api server.\n"}
{"Time":"2023-05-31T11:51:18.272184-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.541001       1 shared_informer.go:230] Caches are synced for deployment \n"}
{"Time":"2023-05-31T11:51:18.272185-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.543754       1 event.go:278] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"kube-system\", Name:\"coredns\", UID:\"61cea30b-191d-44ba-9a38-b0d93909bf85\", APIVersion:\"apps/v1\", ResourceVersion:\"200\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set coredns-66bff467f8 to 2\n"}
{"Time":"2023-05-31T11:51:18.272286-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.546340       1 event.go:278] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"kube-system\", Name:\"coredns-66bff467f8\", UID:\"bd4822a4-f97a-489e-a44e-9a2fb6c18774\", APIVersion:\"apps/v1\", ResourceVersion:\"321\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: coredns-66bff467f8-c2tzr\n"}
{"Time":"2023-05-31T11:51:18.272288-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.551365       1 event.go:278] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"kube-system\", Name:\"coredns-66bff467f8\", UID:\"bd4822a4-f97a-489e-a44e-9a2fb6c18774\", APIVersion:\"apps/v1\", ResourceVersion:\"321\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: coredns-66bff467f8-r6flc\n"}
{"Time":"2023-05-31T11:51:18.272291-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.637024       1 shared_informer.go:230] Caches are synced for HPA \n"}
{"Time":"2023-05-31T11:51:18.272292-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.692314       1 shared_informer.go:230] Caches are synced for persistent volume \n"}
{"Time":"2023-05-31T11:51:18.272294-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.730939       1 shared_informer.go:230] Caches are synced for bootstrap_signer \n"}
{"Time":"2023-05-31T11:51:18.272295-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.877253       1 event.go:278] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"kube-system\", Name:\"coredns\", UID:\"61cea30b-191d-44ba-9a38-b0d93909bf85\", APIVersion:\"apps/v1\", ResourceVersion:\"340\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled down replica set coredns-66bff467f8 to 1\n"}
{"Time":"2023-05-31T11:51:18.272298-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.881216       1 shared_informer.go:230] Caches are synced for endpoint \n"}
{"Time":"2023-05-31T11:51:18.2723-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.881825       1 shared_informer.go:230] Caches are synced for endpoint_slice \n"}
{"Time":"2023-05-31T11:51:18.272302-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.885706       1 event.go:278] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"kube-system\", Name:\"coredns-66bff467f8\", UID:\"bd4822a4-f97a-489e-a44e-9a2fb6c18774\", APIVersion:\"apps/v1\", ResourceVersion:\"341\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulDelete' Deleted pod: coredns-66bff467f8-r6flc\n"}
{"Time":"2023-05-31T11:51:18.272304-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.996840       1 shared_informer.go:230] Caches are synced for garbage collector \n"}
{"Time":"2023-05-31T11:51:18.272305-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.997629       1 shared_informer.go:230] Caches are synced for garbage collector \n"}
{"Time":"2023-05-31T11:51:18.272309-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:50.997634       1 garbagecollector.go:142] Garbage collector: all resource monitors have synced. Proceeding to collect garbage\n"}
{"Time":"2023-05-31T11:51:18.272361-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.082413       1 shared_informer.go:230] Caches are synced for resource quota \n"}
{"Time":"2023-05-31T11:51:18.272368-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.092321       1 shared_informer.go:230] Caches are synced for resource quota \n"}
{"Time":"2023-05-31T11:51:18.272372-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:00.741134       1 event.go:278] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-controller\", UID:\"584e8796-557e-49e9-9fce-b1ac5657ac9e\", APIVersion:\"apps/v1\", ResourceVersion:\"434\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set ingress-nginx-controller-7fcf777cb7 to 1\n"}
{"Time":"2023-05-31T11:51:18.272382-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:00.745391       1 event.go:278] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-controller-7fcf777cb7\", UID:\"b1943739-4d5d-4852-9d4e-2b2277e58e2f\", APIVersion:\"apps/v1\", ResourceVersion:\"435\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: ingress-nginx-controller-7fcf777cb7-grs57\n"}
{"Time":"2023-05-31T11:51:18.272388-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:00.761872       1 event.go:278] Event(v1.ObjectReference{Kind:\"Job\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-admission-create\", UID:\"7afa2847-c18a-497a-bd5b-5d28b3958391\", APIVersion:\"batch/v1\", ResourceVersion:\"442\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: ingress-nginx-admission-create-4jld9\n"}
{"Time":"2023-05-31T11:51:18.272393-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:00.790174       1 event.go:278] Event(v1.ObjectReference{Kind:\"Job\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-admission-patch\", UID:\"28ab319f-fa1c-4d2f-a146-785ca63d0810\", APIVersion:\"batch/v1\", ResourceVersion:\"453\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: ingress-nginx-admission-patch-rlffn\n"}
{"Time":"2023-05-31T11:51:18.272421-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:03.874243       1 event.go:278] Event(v1.ObjectReference{Kind:\"Job\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-admission-patch\", UID:\"28ab319f-fa1c-4d2f-a146-785ca63d0810\", APIVersion:\"batch/v1\", ResourceVersion:\"460\", FieldPath:\"\"}): type: 'Normal' reason: 'Completed' Job completed\n"}
{"Time":"2023-05-31T11:51:18.272439-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:03.888603       1 event.go:278] Event(v1.ObjectReference{Kind:\"Job\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-admission-create\", UID:\"7afa2847-c18a-497a-bd5b-5d28b3958391\", APIVersion:\"batch/v1\", ResourceVersion:\"451\", FieldPath:\"\"}): type: 'Normal' reason: 'Completed' Job completed\n"}
{"Time":"2023-05-31T11:51:18.272446-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:47.429007       1 event.go:278] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"default\", Name:\"hello-world-app\", UID:\"40aa7949-8648-441c-9e05-69ca648e1499\", APIVersion:\"apps/v1\", ResourceVersion:\"582\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set hello-world-app-5f5d8b66bb to 1\n"}
{"Time":"2023-05-31T11:51:18.272451-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:50:47.441594       1 event.go:278] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"default\", Name:\"hello-world-app-5f5d8b66bb\", UID:\"3f3c48de-0322-49f8-bdcd-95c2567b34d7\", APIVersion:\"apps/v1\", ResourceVersion:\"583\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: hello-world-app-5f5d8b66bb-d5gjf\n"}
{"Time":"2023-05-31T11:51:18.272467-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.272472-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.272475-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kube-proxy [f53b0f28a3e7] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.272479-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* W0531 18:49:51.137794       1 server_others.go:559] Unknown proxy mode \"\", assuming iptables proxy\n"}
{"Time":"2023-05-31T11:51:18.272483-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145070       1 node.go:136] Successfully retrieved node IP: 192.168.105.6\n"}
{"Time":"2023-05-31T11:51:18.272486-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145084       1 server_others.go:186] Using iptables Proxier.\n"}
{"Time":"2023-05-31T11:51:18.27249-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145212       1 server.go:583] Version: v1.18.20\n"}
{"Time":"2023-05-31T11:51:18.272494-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145657       1 config.go:133] Starting endpoints config controller\n"}
{"Time":"2023-05-31T11:51:18.272497-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145662       1 shared_informer.go:223] Waiting for caches to sync for endpoints config\n"}
{"Time":"2023-05-31T11:51:18.272508-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145722       1 config.go:315] Starting service config controller\n"}
{"Time":"2023-05-31T11:51:18.272513-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.145724       1 shared_informer.go:223] Waiting for caches to sync for service config\n"}
{"Time":"2023-05-31T11:51:18.272516-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.251116       1 shared_informer.go:230] Caches are synced for service config \n"}
{"Time":"2023-05-31T11:51:18.27252-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:51.251176       1 shared_informer.go:230] Caches are synced for endpoints config \n"}
{"Time":"2023-05-31T11:51:18.272523-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.272526-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.272529-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kube-scheduler [6516182cabea] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.272533-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* W0531 18:49:31.513976       1 authentication.go:349] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'\n"}
{"Time":"2023-05-31T11:51:18.272537-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 18:49:31.513987       1 authentication.go:297] Error looking up in-cluster authentication configuration: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot get resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:51:18.272541-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 18:49:31.513991       1 authentication.go:298] Continuing without authentication configuration. This may treat all requests as anonymous.\n"}
{"Time":"2023-05-31T11:51:18.272545-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tW0531 18:49:31.513994       1 authentication.go:299] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false\n"}
{"Time":"2023-05-31T11:51:18.272549-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.524912       1 registry.go:150] Registering EvenPodsSpread predicate and priority function\n"}
{"Time":"2023-05-31T11:51:18.272552-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.524998       1 registry.go:150] Registering EvenPodsSpread predicate and priority function\n"}
{"Time":"2023-05-31T11:51:18.272565-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.527471       1 secure_serving.go:178] Serving securely on 127.0.0.1:10259\n"}
{"Time":"2023-05-31T11:51:18.272569-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.528248       1 configmap_cafile_content.go:202] Starting client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:51:18.272572-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.528281       1 shared_informer.go:223] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2023-05-31T11:51:18.272576-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:31.528318       1 tlsconfig.go:240] Starting DynamicServingCertificateController\n"}
{"Time":"2023-05-31T11:51:18.27258-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533246       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272584-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533342       1 reflector.go:178] k8s.io/kubernetes/cmd/kube-scheduler/app/server.go:233: Failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272616-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533392       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272622-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533446       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272627-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533509       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272631-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533558       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272637-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533608       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1beta1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272648-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533651       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272663-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.533701       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272665-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.540415       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272667-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.540484       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.27271-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:31.540568       1 reflector.go:178] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2023-05-31T11:51:18.272713-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:32.524201       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272715-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tE0531 18:49:32.600096       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope\n"}
{"Time":"2023-05-31T11:51:18.272717-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:33.228514       1 shared_informer.go:230] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file \n"}
{"Time":"2023-05-31T11:51:18.272718-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.27272-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.272721-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e kubelet \u003c==\n"}
{"Time":"2023-05-31T11:51:18.272723-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* -- Journal begins at Wed 2023-05-31 18:49:02 UTC, ends at Wed 2023-05-31 18:51:18 UTC. --\n"}
{"Time":"2023-05-31T11:51:18.272724-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:50:52 ingress-addon-legacy-798000 kubelet[2784]: E0531 18:50:52.483949    2784 pod_workers.go:191] Error syncing pod 0959bc71-9880-4367-a221-4306bb1c0ccc (\"hello-world-app-5f5d8b66bb-d5gjf_default(0959bc71-9880-4367-a221-4306bb1c0ccc)\"), skipping: failed to \"StartContainer\" for \"hello-world-app\" with CrashLoopBackOff: \"back-off 10s restarting failed container=hello-world-app pod=hello-world-app-5f5d8b66bb-d5gjf_default(0959bc71-9880-4367-a221-4306bb1c0ccc)\"\n"}
{"Time":"2023-05-31T11:51:18.272727-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:50:53 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:50:53.635396    2784 topology_manager.go:221] [topologymanager] RemoveContainer - Container ID: 668f0bc568ded3016a66b31402b12a487cd25a1f0377d1d83efc6afd493a659c\n"}
{"Time":"2023-05-31T11:51:18.272729-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:50:53 ingress-addon-legacy-798000 kubelet[2784]: E0531 18:50:53.636176    2784 pod_workers.go:191] Error syncing pod 3ac20b44-3cd5-49cf-a46e-59e79bf77285 (\"kube-ingress-dns-minikube_kube-system(3ac20b44-3cd5-49cf-a46e-59e79bf77285)\"), skipping: failed to \"StartContainer\" for \"minikube-ingress-dns\" with CrashLoopBackOff: \"back-off 20s restarting failed container=minikube-ingress-dns pod=kube-ingress-dns-minikube_kube-system(3ac20b44-3cd5-49cf-a46e-59e79bf77285)\"\n"}
{"Time":"2023-05-31T11:51:18.272856-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:02 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:02.845079    2784 reconciler.go:196] operationExecutor.UnmountVolume started for volume \"minikube-ingress-dns-token-mdrtn\" (UniqueName: \"kubernetes.io/secret/3ac20b44-3cd5-49cf-a46e-59e79bf77285-minikube-ingress-dns-token-mdrtn\") pod \"3ac20b44-3cd5-49cf-a46e-59e79bf77285\" (UID: \"3ac20b44-3cd5-49cf-a46e-59e79bf77285\")\n"}
{"Time":"2023-05-31T11:51:18.272859-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:02 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:02.846801    2784 operation_generator.go:782] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/secret/3ac20b44-3cd5-49cf-a46e-59e79bf77285-minikube-ingress-dns-token-mdrtn\" (OuterVolumeSpecName: \"minikube-ingress-dns-token-mdrtn\") pod \"3ac20b44-3cd5-49cf-a46e-59e79bf77285\" (UID: \"3ac20b44-3cd5-49cf-a46e-59e79bf77285\"). InnerVolumeSpecName \"minikube-ingress-dns-token-mdrtn\". PluginName \"kubernetes.io/secret\", VolumeGidValue \"\"\n"}
{"Time":"2023-05-31T11:51:18.272862-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:02 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:02.946578    2784 reconciler.go:319] Volume detached for volume \"minikube-ingress-dns-token-mdrtn\" (UniqueName: \"kubernetes.io/secret/3ac20b44-3cd5-49cf-a46e-59e79bf77285-minikube-ingress-dns-token-mdrtn\") on node \"ingress-addon-legacy-798000\" DevicePath \"\"\n"}
{"Time":"2023-05-31T11:51:18.272864-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:05.635434    2784 topology_manager.go:221] [topologymanager] RemoveContainer - Container ID: f574a77ef1d3c9bc42345e3d5fea9ab0e7ff8a70a5d77d9ebd6459c24e828cc2\n"}
{"Time":"2023-05-31T11:51:18.272866-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:05.706662    2784 topology_manager.go:221] [topologymanager] RemoveContainer - Container ID: 668f0bc568ded3016a66b31402b12a487cd25a1f0377d1d83efc6afd493a659c\n"}
{"Time":"2023-05-31T11:51:18.272868-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:05.709496    2784 docker_sandbox.go:400] failed to read pod IP from plugin/docker: Couldn't find network status for default/hello-world-app-5f5d8b66bb-d5gjf through plugin: invalid network status for\n"}
{"Time":"2023-05-31T11:51:18.27287-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:05 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:05.778126    2784 container.go:412] Failed to create summary reader for \"/kubepods/besteffort/pod0959bc71-9880-4367-a221-4306bb1c0ccc/764f1b0ff29b34a3ac470d99253bcd3d68ec74b3cd72794005372cadc312fdca\": none of the resources are being tracked.\n"}
{"Time":"2023-05-31T11:51:18.272872-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:06 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:06.789725    2784 docker_sandbox.go:400] failed to read pod IP from plugin/docker: Couldn't find network status for default/hello-world-app-5f5d8b66bb-d5gjf through plugin: invalid network status for\n"}
{"Time":"2023-05-31T11:51:18.27298-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:06 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:06.797827    2784 topology_manager.go:221] [topologymanager] RemoveContainer - Container ID: f574a77ef1d3c9bc42345e3d5fea9ab0e7ff8a70a5d77d9ebd6459c24e828cc2\n"}
{"Time":"2023-05-31T11:51:18.273013-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:06 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:06.798174    2784 topology_manager.go:221] [topologymanager] RemoveContainer - Container ID: 764f1b0ff29b34a3ac470d99253bcd3d68ec74b3cd72794005372cadc312fdca\n"}
{"Time":"2023-05-31T11:51:18.27302-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:06 ingress-addon-legacy-798000 kubelet[2784]: E0531 18:51:06.798462    2784 pod_workers.go:191] Error syncing pod 0959bc71-9880-4367-a221-4306bb1c0ccc (\"hello-world-app-5f5d8b66bb-d5gjf_default(0959bc71-9880-4367-a221-4306bb1c0ccc)\"), skipping: failed to \"StartContainer\" for \"hello-world-app\" with CrashLoopBackOff: \"back-off 20s restarting failed container=hello-world-app pod=hello-world-app-5f5d8b66bb-d5gjf_default(0959bc71-9880-4367-a221-4306bb1c0ccc)\"\n"}
{"Time":"2023-05-31T11:51:18.273026-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:07 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:07.832554    2784 docker_sandbox.go:400] failed to read pod IP from plugin/docker: Couldn't find network status for default/hello-world-app-5f5d8b66bb-d5gjf through plugin: invalid network status for\n"}
{"Time":"2023-05-31T11:51:18.273034-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:11 ingress-addon-legacy-798000 kubelet[2784]: E0531 18:51:11.090569    2784 event.go:260] Server rejected event '\u0026v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"ingress-nginx-controller-7fcf777cb7-grs57.17644f0b703b95d8\", GenerateName:\"\", Namespace:\"ingress-nginx\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:\"Pod\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-controller-7fcf777cb7-grs57\", UID:\"f31a3724-6513-446f-b096-76dabcddde1c\", APIVersion:\"v1\", ResourceVersion:\"439\", FieldPath:\"spec.containers{controller}\"}, Reason:\"Killing\", Message:\"Stoppi"}
{"Time":"2023-05-31T11:51:18.273042-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"ng container controller\", Source:v1.EventSource{Component:\"kubelet\", Host:\"ingress-addon-legacy-798000\"}, FirstTimestamp:v1.Time{Time:time.Time{wall:0xc11603a7c5571fd8, ext:96900915184, loc:(*time.Location)(0x6a0ef20)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc11603a7c5571fd8, ext:96900915184, loc:(*time.Location)(0x6a0ef20)}}, Count:1, Type:\"Normal\", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:\"\", Related:(*v1.ObjectReference)(nil), ReportingController:\"\", ReportingInstance:\"\"}': 'events \"ingress-nginx-controller-7fcf777cb7-grs57.17644f0b703b95d8\" is forbidden: unable to create new content in namespace ingress-nginx because it is being terminated' (will not retry!)\n"}
{"Time":"2023-05-31T11:51:18.273051-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:11 ingress-addon-legacy-798000 kubelet[2784]: E0531 18:51:11.097505    2784 event.go:260] Server rejected event '\u0026v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"ingress-nginx-controller-7fcf777cb7-grs57.17644f0b703b95d8\", GenerateName:\"\", Namespace:\"ingress-nginx\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:\"Pod\", Namespace:\"ingress-nginx\", Name:\"ingress-nginx-controller-7fcf777cb7-grs57\", UID:\"f31a3724-6513-446f-b096-76dabcddde1c\", APIVersion:\"v1\", ResourceVersion:\"439\", FieldPath:\"spec.containers{controller}\"}, Reason:\"Killing\", Message:\"Stoppi"}
{"Time":"2023-05-31T11:51:18.273108-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"ng container controller\", Source:v1.EventSource{Component:\"kubelet\", Host:\"ingress-addon-legacy-798000\"}, FirstTimestamp:v1.Time{Time:time.Time{wall:0xc11603a7c5571fd8, ext:96900915184, loc:(*time.Location)(0x6a0ef20)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc11603a7c59527c8, ext:96904980489, loc:(*time.Location)(0x6a0ef20)}}, Count:2, Type:\"Normal\", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:\"\", Related:(*v1.ObjectReference)(nil), ReportingController:\"\", ReportingInstance:\"\"}': 'events \"ingress-nginx-controller-7fcf777cb7-grs57.17644f0b703b95d8\" is forbidden: unable to create new content in namespace ingress-nginx because it is being terminated' (will not retry!)\n"}
{"Time":"2023-05-31T11:51:18.273117-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.300705    2784 reconciler.go:196] operationExecutor.UnmountVolume started for volume \"ingress-nginx-token-j8jzr\" (UniqueName: \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-ingress-nginx-token-j8jzr\") pod \"f31a3724-6513-446f-b096-76dabcddde1c\" (UID: \"f31a3724-6513-446f-b096-76dabcddde1c\")\n"}
{"Time":"2023-05-31T11:51:18.273122-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.300729    2784 reconciler.go:196] operationExecutor.UnmountVolume started for volume \"webhook-cert\" (UniqueName: \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-webhook-cert\") pod \"f31a3724-6513-446f-b096-76dabcddde1c\" (UID: \"f31a3724-6513-446f-b096-76dabcddde1c\")\n"}
{"Time":"2023-05-31T11:51:18.273128-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.305702    2784 operation_generator.go:782] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-webhook-cert\" (OuterVolumeSpecName: \"webhook-cert\") pod \"f31a3724-6513-446f-b096-76dabcddde1c\" (UID: \"f31a3724-6513-446f-b096-76dabcddde1c\"). InnerVolumeSpecName \"webhook-cert\". PluginName \"kubernetes.io/secret\", VolumeGidValue \"\"\n"}
{"Time":"2023-05-31T11:51:18.273135-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.305855    2784 operation_generator.go:782] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-ingress-nginx-token-j8jzr\" (OuterVolumeSpecName: \"ingress-nginx-token-j8jzr\") pod \"f31a3724-6513-446f-b096-76dabcddde1c\" (UID: \"f31a3724-6513-446f-b096-76dabcddde1c\"). InnerVolumeSpecName \"ingress-nginx-token-j8jzr\". PluginName \"kubernetes.io/secret\", VolumeGidValue \"\"\n"}
{"Time":"2023-05-31T11:51:18.273286-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.404264    2784 reconciler.go:319] Volume detached for volume \"webhook-cert\" (UniqueName: \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-webhook-cert\") on node \"ingress-addon-legacy-798000\" DevicePath \"\"\n"}
{"Time":"2023-05-31T11:51:18.273293-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: I0531 18:51:13.404287    2784 reconciler.go:319] Volume detached for volume \"ingress-nginx-token-j8jzr\" (UniqueName: \"kubernetes.io/secret/f31a3724-6513-446f-b096-76dabcddde1c-ingress-nginx-token-j8jzr\") on node \"ingress-addon-legacy-798000\" DevicePath \"\"\n"}
{"Time":"2023-05-31T11:51:18.273298-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:13 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:13.931886    2784 pod_container_deletor.go:77] Container \"6626de1d842f52700cee997a3463a605892cc67cb20b1af79f7e4269c4b2a1b4\" not found in pod's containers\n"}
{"Time":"2023-05-31T11:51:18.273302-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tMay 31 18:51:14 ingress-addon-legacy-798000 kubelet[2784]: W0531 18:51:14.661239    2784 kubelet_getters.go:297] Path \"/var/lib/kubelet/pods/f31a3724-6513-446f-b096-76dabcddde1c/volumes\" does not exist\n"}
{"Time":"2023-05-31T11:51:18.273306-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.273309-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* \n"}
{"Time":"2023-05-31T11:51:18.273312-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* ==\u003e storage-provisioner [b6fc3d2ad50c] \u003c==\n"}
{"Time":"2023-05-31T11:51:18.273315-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t* I0531 18:49:54.653454       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...\n"}
{"Time":"2023-05-31T11:51:18.273331-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.658323       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!\n"}
{"Time":"2023-05-31T11:51:18.273337-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.658340       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...\n"}
{"Time":"2023-05-31T11:51:18.273341-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.660943       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath\n"}
{"Time":"2023-05-31T11:51:18.273345-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.661026       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_ingress-addon-legacy-798000_b3966c1c-7cfb-42ae-a1ca-cd881144a5f2!\n"}
{"Time":"2023-05-31T11:51:18.273362-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.661459       1 event.go:282] Event(v1.ObjectReference{Kind:\"Endpoints\", Namespace:\"kube-system\", Name:\"k8s.io-minikube-hostpath\", UID:\"430358a2-44fc-48af-b293-84743ea4630a\", APIVersion:\"v1\", ResourceVersion:\"389\", FieldPath:\"\"}): type: 'Normal' reason: 'LeaderElection' ingress-addon-legacy-798000_b3966c1c-7cfb-42ae-a1ca-cd881144a5f2 became leader\n"}
{"Time":"2023-05-31T11:51:18.273367-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \tI0531 18:49:54.761980       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_ingress-addon-legacy-798000_b3966c1c-7cfb-42ae-a1ca-cd881144a5f2!\n"}
{"Time":"2023-05-31T11:51:18.273371-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \t\n"}
{"Time":"2023-05-31T11:51:18.273388-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        \n"}
{"Time":"2023-05-31T11:51:18.27339-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:51:18.273392-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:254: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.APIServer}} -p ingress-addon-legacy-798000 -n ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.349088-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:261: (dbg) Run:  kubectl --context ingress-addon-legacy-798000 get po -o=jsonpath={.items[*].metadata.name} -A --field-selector=status.phase!=Running\n"}
{"Time":"2023-05-31T11:51:18.385257-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:285: \u003c\u003c\u003c TestIngressAddonLegacy/serial/ValidateIngressAddons FAILED: end of post-mortem logs \u003c\u003c\u003c\n"}
{"Time":"2023-05-31T11:51:18.385273-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"    helpers_test.go:286: ---------------------/post-mortem---------------------------------\n"}
{"Time":"2023-05-31T11:51:18.385311-07:00","Action":"output","Test":"TestIngressAddonLegacy","Output":"    helpers_test.go:175: Cleaning up \"ingress-addon-legacy-798000\" profile ...\n"}
{"Time":"2023-05-31T11:51:18.385392-07:00","Action":"output","Test":"TestIngressAddonLegacy","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p ingress-addon-legacy-798000\n"}
{"Time":"2023-05-31T11:51:18.561985-07:00","Action":"output","Test":"TestIngressAddonLegacy","Output":"--- FAIL: TestIngressAddonLegacy (165.16s)\n"}
{"Time":"2023-05-31T11:51:18.562002-07:00","Action":"output","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster","Output":"    --- PASS: TestIngressAddonLegacy/StartLegacyK8sCluster (87.00s)\n"}
{"Time":"2023-05-31T11:51:18.562004-07:00","Action":"pass","Test":"TestIngressAddonLegacy/StartLegacyK8sCluster","Elapsed":87}
{"Time":"2023-05-31T11:51:18.562007-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial","Output":"    --- FAIL: TestIngressAddonLegacy/serial (77.98s)\n"}
{"Time":"2023-05-31T11:51:18.56201-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation","Output":"        --- PASS: TestIngressAddonLegacy/serial/ValidateIngressAddonActivation (17.85s)\n"}
{"Time":"2023-05-31T11:51:18.562013-07:00","Action":"pass","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddonActivation","Elapsed":17.85}
{"Time":"2023-05-31T11:51:18.562015-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation","Output":"        --- PASS: TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation (0.20s)\n"}
{"Time":"2023-05-31T11:51:18.562017-07:00","Action":"pass","Test":"TestIngressAddonLegacy/serial/ValidateIngressDNSAddonActivation","Elapsed":0.2}
{"Time":"2023-05-31T11:51:18.562019-07:00","Action":"output","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Output":"        --- FAIL: TestIngressAddonLegacy/serial/ValidateIngressAddons (59.93s)\n"}
{"Time":"2023-05-31T11:51:18.562029-07:00","Action":"fail","Test":"TestIngressAddonLegacy/serial/ValidateIngressAddons","Elapsed":59.93}
{"Time":"2023-05-31T11:51:18.562031-07:00","Action":"fail","Test":"TestIngressAddonLegacy/serial","Elapsed":77.98}
{"Time":"2023-05-31T11:51:18.562032-07:00","Action":"fail","Test":"TestIngressAddonLegacy","Elapsed":165.16}
{"Time":"2023-05-31T11:51:18.562034-07:00","Action":"run","Test":"TestJSONOutput"}
{"Time":"2023-05-31T11:51:18.562035-07:00","Action":"output","Test":"TestJSONOutput","Output":"=== RUN   TestJSONOutput\n"}
{"Time":"2023-05-31T11:51:18.562037-07:00","Action":"run","Test":"TestJSONOutput/start"}
{"Time":"2023-05-31T11:51:18.56204-07:00","Action":"output","Test":"TestJSONOutput/start","Output":"=== RUN   TestJSONOutput/start\n"}
{"Time":"2023-05-31T11:51:18.562077-07:00","Action":"run","Test":"TestJSONOutput/start/Command"}
{"Time":"2023-05-31T11:51:18.56208-07:00","Action":"output","Test":"TestJSONOutput/start/Command","Output":"=== RUN   TestJSONOutput/start/Command\n"}
{"Time":"2023-05-31T11:51:18.562128-07:00","Action":"output","Test":"TestJSONOutput/start/Command","Output":"    json_output_test.go:63: (dbg) Run:  out/minikube-darwin-arm64 start -p json-output-012000 --output=json --user=testUser --memory=2200 --wait=true --driver=qemu2 \n"}
{"Time":"2023-05-31T11:52:03.941256-07:00","Action":"output","Test":"TestJSONOutput/start/Command","Output":"    json_output_test.go:63: (dbg) Done: out/minikube-darwin-arm64 start -p json-output-012000 --output=json --user=testUser --memory=2200 --wait=true --driver=qemu2 : (45.379731042s)\n"}
{"Time":"2023-05-31T11:52:03.941639-07:00","Action":"run","Test":"TestJSONOutput/start/Audit"}
{"Time":"2023-05-31T11:52:03.941645-07:00","Action":"output","Test":"TestJSONOutput/start/Audit","Output":"=== RUN   TestJSONOutput/start/Audit\n"}
{"Time":"2023-05-31T11:52:03.941838-07:00","Action":"run","Test":"TestJSONOutput/start/parallel"}
{"Time":"2023-05-31T11:52:03.941842-07:00","Action":"output","Test":"TestJSONOutput/start/parallel","Output":"=== RUN   TestJSONOutput/start/parallel\n"}
{"Time":"2023-05-31T11:52:03.941845-07:00","Action":"run","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941847-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps","Output":"=== RUN   TestJSONOutput/start/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941855-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps","Output":"=== PAUSE TestJSONOutput/start/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941856-07:00","Action":"pause","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941859-07:00","Action":"run","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941861-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps","Output":"=== RUN   TestJSONOutput/start/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941863-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps","Output":"=== PAUSE TestJSONOutput/start/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941865-07:00","Action":"pause","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941868-07:00","Action":"cont","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941869-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps","Output":"=== CONT  TestJSONOutput/start/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941917-07:00","Action":"cont","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:03.941931-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps","Output":"=== CONT  TestJSONOutput/start/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:03.941939-07:00","Action":"run","Test":"TestJSONOutput/pause"}
{"Time":"2023-05-31T11:52:03.941943-07:00","Action":"output","Test":"TestJSONOutput/pause","Output":"=== RUN   TestJSONOutput/pause\n"}
{"Time":"2023-05-31T11:52:03.941949-07:00","Action":"run","Test":"TestJSONOutput/pause/Command"}
{"Time":"2023-05-31T11:52:03.941952-07:00","Action":"output","Test":"TestJSONOutput/pause/Command","Output":"=== RUN   TestJSONOutput/pause/Command\n"}
{"Time":"2023-05-31T11:52:03.941993-07:00","Action":"output","Test":"TestJSONOutput/pause/Command","Output":"    json_output_test.go:63: (dbg) Run:  out/minikube-darwin-arm64 pause -p json-output-012000 --output=json --user=testUser\n"}
{"Time":"2023-05-31T11:52:04.271923-07:00","Action":"run","Test":"TestJSONOutput/pause/Audit"}
{"Time":"2023-05-31T11:52:04.271937-07:00","Action":"output","Test":"TestJSONOutput/pause/Audit","Output":"=== RUN   TestJSONOutput/pause/Audit\n"}
{"Time":"2023-05-31T11:52:04.272097-07:00","Action":"run","Test":"TestJSONOutput/pause/parallel"}
{"Time":"2023-05-31T11:52:04.272114-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel","Output":"=== RUN   TestJSONOutput/pause/parallel\n"}
{"Time":"2023-05-31T11:52:04.272119-07:00","Action":"run","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.272122-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps","Output":"=== RUN   TestJSONOutput/pause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272129-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps","Output":"=== PAUSE TestJSONOutput/pause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272132-07:00","Action":"pause","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.272135-07:00","Action":"run","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.272138-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps","Output":"=== RUN   TestJSONOutput/pause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272142-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps","Output":"=== PAUSE TestJSONOutput/pause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272144-07:00","Action":"pause","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.272147-07:00","Action":"cont","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.27215-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps","Output":"=== CONT  TestJSONOutput/pause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272169-07:00","Action":"cont","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.272172-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps","Output":"=== CONT  TestJSONOutput/pause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.272176-07:00","Action":"run","Test":"TestJSONOutput/unpause"}
{"Time":"2023-05-31T11:52:04.272178-07:00","Action":"output","Test":"TestJSONOutput/unpause","Output":"=== RUN   TestJSONOutput/unpause\n"}
{"Time":"2023-05-31T11:52:04.27218-07:00","Action":"run","Test":"TestJSONOutput/unpause/Command"}
{"Time":"2023-05-31T11:52:04.272182-07:00","Action":"output","Test":"TestJSONOutput/unpause/Command","Output":"=== RUN   TestJSONOutput/unpause/Command\n"}
{"Time":"2023-05-31T11:52:04.272184-07:00","Action":"output","Test":"TestJSONOutput/unpause/Command","Output":"    json_output_test.go:63: (dbg) Run:  out/minikube-darwin-arm64 unpause -p json-output-012000 --output=json --user=testUser\n"}
{"Time":"2023-05-31T11:52:04.501755-07:00","Action":"run","Test":"TestJSONOutput/unpause/Audit"}
{"Time":"2023-05-31T11:52:04.501771-07:00","Action":"output","Test":"TestJSONOutput/unpause/Audit","Output":"=== RUN   TestJSONOutput/unpause/Audit\n"}
{"Time":"2023-05-31T11:52:04.501952-07:00","Action":"run","Test":"TestJSONOutput/unpause/parallel"}
{"Time":"2023-05-31T11:52:04.501992-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel","Output":"=== RUN   TestJSONOutput/unpause/parallel\n"}
{"Time":"2023-05-31T11:52:04.502017-07:00","Action":"run","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.50202-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps","Output":"=== RUN   TestJSONOutput/unpause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502023-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps","Output":"=== PAUSE TestJSONOutput/unpause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502025-07:00","Action":"pause","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.502026-07:00","Action":"run","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.502027-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps","Output":"=== RUN   TestJSONOutput/unpause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502074-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps","Output":"=== PAUSE TestJSONOutput/unpause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502144-07:00","Action":"pause","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.502153-07:00","Action":"cont","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:04.502157-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps","Output":"=== CONT  TestJSONOutput/unpause/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502161-07:00","Action":"cont","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:04.502164-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps","Output":"=== CONT  TestJSONOutput/unpause/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:04.502182-07:00","Action":"run","Test":"TestJSONOutput/stop"}
{"Time":"2023-05-31T11:52:04.502185-07:00","Action":"output","Test":"TestJSONOutput/stop","Output":"=== RUN   TestJSONOutput/stop\n"}
{"Time":"2023-05-31T11:52:04.502187-07:00","Action":"run","Test":"TestJSONOutput/stop/Command"}
{"Time":"2023-05-31T11:52:04.502189-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"=== RUN   TestJSONOutput/stop/Command\n"}
{"Time":"2023-05-31T11:52:04.502212-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"    json_output_test.go:63: (dbg) Run:  out/minikube-darwin-arm64 stop -p json-output-012000 --output=json --user=testUser\n"}
{"Time":"2023-05-31T11:52:04.965094-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:04.965013    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:04.972349-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:04.972323    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:04.984435-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:04.984406    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:05.006575-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:05.006515    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:05.048766-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:05.048673    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:05.130068-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:05.130008    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:05.292204-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:05.292131    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:05.614378-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:05.614307    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:06.256444-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:06.256362    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:07.537404-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:07.537284    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:10.099703-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:10.099597    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:15.222077-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"E0531 11:52:15.221968    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:16.579133-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"    json_output_test.go:63: (dbg) Done: out/minikube-darwin-arm64 stop -p json-output-012000 --output=json --user=testUser: (12.076917917s)\n"}
{"Time":"2023-05-31T11:52:16.579334-07:00","Action":"run","Test":"TestJSONOutput/stop/Audit"}
{"Time":"2023-05-31T11:52:16.579342-07:00","Action":"output","Test":"TestJSONOutput/stop/Audit","Output":"=== RUN   TestJSONOutput/stop/Audit\n"}
{"Time":"2023-05-31T11:52:16.579918-07:00","Action":"run","Test":"TestJSONOutput/stop/parallel"}
{"Time":"2023-05-31T11:52:16.579929-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel","Output":"=== RUN   TestJSONOutput/stop/parallel\n"}
{"Time":"2023-05-31T11:52:16.579953-07:00","Action":"run","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:16.579959-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps","Output":"=== RUN   TestJSONOutput/stop/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.579992-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps","Output":"=== PAUSE TestJSONOutput/stop/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.579997-07:00","Action":"pause","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:16.580055-07:00","Action":"run","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:16.580062-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps","Output":"=== RUN   TestJSONOutput/stop/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.58007-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps","Output":"=== PAUSE TestJSONOutput/stop/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.580075-07:00","Action":"pause","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:16.58008-07:00","Action":"cont","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps"}
{"Time":"2023-05-31T11:52:16.580084-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps","Output":"=== CONT  TestJSONOutput/stop/parallel/DistinctCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.580089-07:00","Action":"cont","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps"}
{"Time":"2023-05-31T11:52:16.580093-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps","Output":"=== CONT  TestJSONOutput/stop/parallel/IncreasingCurrentSteps\n"}
{"Time":"2023-05-31T11:52:16.580152-07:00","Action":"output","Test":"TestJSONOutput","Output":"    helpers_test.go:175: Cleaning up \"json-output-012000\" profile ...\n"}
{"Time":"2023-05-31T11:52:16.580242-07:00","Action":"output","Test":"TestJSONOutput","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p json-output-012000\n"}
{"Time":"2023-05-31T11:52:16.730586-07:00","Action":"output","Test":"TestJSONOutput","Output":"--- PASS: TestJSONOutput (58.17s)\n"}
{"Time":"2023-05-31T11:52:16.730599-07:00","Action":"output","Test":"TestJSONOutput/start","Output":"    --- PASS: TestJSONOutput/start (45.38s)\n"}
{"Time":"2023-05-31T11:52:16.730602-07:00","Action":"output","Test":"TestJSONOutput/start/Command","Output":"        --- PASS: TestJSONOutput/start/Command (45.38s)\n"}
{"Time":"2023-05-31T11:52:16.730611-07:00","Action":"pass","Test":"TestJSONOutput/start/Command","Elapsed":45.38}
{"Time":"2023-05-31T11:52:16.730615-07:00","Action":"output","Test":"TestJSONOutput/start/Audit","Output":"        --- PASS: TestJSONOutput/start/Audit (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730616-07:00","Action":"pass","Test":"TestJSONOutput/start/Audit","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730618-07:00","Action":"output","Test":"TestJSONOutput/start/parallel","Output":"        --- PASS: TestJSONOutput/start/parallel (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.73062-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps","Output":"            --- PASS: TestJSONOutput/start/parallel/DistinctCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730622-07:00","Action":"pass","Test":"TestJSONOutput/start/parallel/DistinctCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730623-07:00","Action":"output","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps","Output":"            --- PASS: TestJSONOutput/start/parallel/IncreasingCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730625-07:00","Action":"pass","Test":"TestJSONOutput/start/parallel/IncreasingCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730626-07:00","Action":"pass","Test":"TestJSONOutput/start/parallel","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730627-07:00","Action":"pass","Test":"TestJSONOutput/start","Elapsed":45.38}
{"Time":"2023-05-31T11:52:16.730628-07:00","Action":"output","Test":"TestJSONOutput/pause","Output":"    --- PASS: TestJSONOutput/pause (0.33s)\n"}
{"Time":"2023-05-31T11:52:16.73063-07:00","Action":"output","Test":"TestJSONOutput/pause/Command","Output":"        --- PASS: TestJSONOutput/pause/Command (0.33s)\n"}
{"Time":"2023-05-31T11:52:16.730633-07:00","Action":"pass","Test":"TestJSONOutput/pause/Command","Elapsed":0.33}
{"Time":"2023-05-31T11:52:16.730634-07:00","Action":"output","Test":"TestJSONOutput/pause/Audit","Output":"        --- PASS: TestJSONOutput/pause/Audit (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730636-07:00","Action":"pass","Test":"TestJSONOutput/pause/Audit","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730637-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel","Output":"        --- PASS: TestJSONOutput/pause/parallel (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730639-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps","Output":"            --- PASS: TestJSONOutput/pause/parallel/DistinctCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.73064-07:00","Action":"pass","Test":"TestJSONOutput/pause/parallel/DistinctCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730641-07:00","Action":"output","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps","Output":"            --- PASS: TestJSONOutput/pause/parallel/IncreasingCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730643-07:00","Action":"pass","Test":"TestJSONOutput/pause/parallel/IncreasingCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730644-07:00","Action":"pass","Test":"TestJSONOutput/pause/parallel","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730645-07:00","Action":"pass","Test":"TestJSONOutput/pause","Elapsed":0.33}
{"Time":"2023-05-31T11:52:16.730647-07:00","Action":"output","Test":"TestJSONOutput/unpause","Output":"    --- PASS: TestJSONOutput/unpause (0.23s)\n"}
{"Time":"2023-05-31T11:52:16.730648-07:00","Action":"output","Test":"TestJSONOutput/unpause/Command","Output":"        --- PASS: TestJSONOutput/unpause/Command (0.23s)\n"}
{"Time":"2023-05-31T11:52:16.73065-07:00","Action":"pass","Test":"TestJSONOutput/unpause/Command","Elapsed":0.23}
{"Time":"2023-05-31T11:52:16.730651-07:00","Action":"output","Test":"TestJSONOutput/unpause/Audit","Output":"        --- PASS: TestJSONOutput/unpause/Audit (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730653-07:00","Action":"pass","Test":"TestJSONOutput/unpause/Audit","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730654-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel","Output":"        --- PASS: TestJSONOutput/unpause/parallel (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730655-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps","Output":"            --- PASS: TestJSONOutput/unpause/parallel/DistinctCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730657-07:00","Action":"pass","Test":"TestJSONOutput/unpause/parallel/DistinctCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730658-07:00","Action":"output","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps","Output":"            --- PASS: TestJSONOutput/unpause/parallel/IncreasingCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.73066-07:00","Action":"pass","Test":"TestJSONOutput/unpause/parallel/IncreasingCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730661-07:00","Action":"pass","Test":"TestJSONOutput/unpause/parallel","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730662-07:00","Action":"pass","Test":"TestJSONOutput/unpause","Elapsed":0.23}
{"Time":"2023-05-31T11:52:16.730664-07:00","Action":"output","Test":"TestJSONOutput/stop","Output":"    --- PASS: TestJSONOutput/stop (12.08s)\n"}
{"Time":"2023-05-31T11:52:16.730665-07:00","Action":"output","Test":"TestJSONOutput/stop/Command","Output":"        --- PASS: TestJSONOutput/stop/Command (12.08s)\n"}
{"Time":"2023-05-31T11:52:16.730667-07:00","Action":"pass","Test":"TestJSONOutput/stop/Command","Elapsed":12.08}
{"Time":"2023-05-31T11:52:16.730668-07:00","Action":"output","Test":"TestJSONOutput/stop/Audit","Output":"        --- PASS: TestJSONOutput/stop/Audit (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.73067-07:00","Action":"pass","Test":"TestJSONOutput/stop/Audit","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730671-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel","Output":"        --- PASS: TestJSONOutput/stop/parallel (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730673-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps","Output":"            --- PASS: TestJSONOutput/stop/parallel/DistinctCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730674-07:00","Action":"pass","Test":"TestJSONOutput/stop/parallel/DistinctCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730676-07:00","Action":"output","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps","Output":"            --- PASS: TestJSONOutput/stop/parallel/IncreasingCurrentSteps (0.00s)\n"}
{"Time":"2023-05-31T11:52:16.730678-07:00","Action":"pass","Test":"TestJSONOutput/stop/parallel/IncreasingCurrentSteps","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730679-07:00","Action":"pass","Test":"TestJSONOutput/stop/parallel","Elapsed":0}
{"Time":"2023-05-31T11:52:16.730681-07:00","Action":"pass","Test":"TestJSONOutput/stop","Elapsed":12.08}
{"Time":"2023-05-31T11:52:16.730682-07:00","Action":"pass","Test":"TestJSONOutput","Elapsed":58.17}
{"Time":"2023-05-31T11:52:16.730683-07:00","Action":"run","Test":"TestErrorJSONOutput"}
{"Time":"2023-05-31T11:52:16.730685-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"=== RUN   TestErrorJSONOutput\n"}
{"Time":"2023-05-31T11:52:16.730686-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"    json_output_test.go:160: (dbg) Run:  out/minikube-darwin-arm64 start -p json-output-error-614000 --memory=2200 --output=json --wait=true --driver=fail\n"}
{"Time":"2023-05-31T11:52:16.820689-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"    json_output_test.go:160: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p json-output-error-614000 --memory=2200 --output=json --wait=true --driver=fail: exit status 56 (89.904417ms)\n"}
{"Time":"2023-05-31T11:52:16.820702-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \n"}
{"Time":"2023-05-31T11:52:16.820705-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:52:16.820707-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"6ef89ca1-7f00-4b9b-9de2-d13bb6555a22\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.step\",\"datacontenttype\":\"application/json\",\"data\":{\"currentstep\":\"0\",\"message\":\"[json-output-error-614000] minikube v1.30.1 on Darwin 13.4 (arm64)\",\"name\":\"Initial Minikube Setup\",\"totalsteps\":\"19\"}}\n"}
{"Time":"2023-05-31T11:52:16.82071-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"af2f5106-b72a-4981-9bcf-cfa2caae3377\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_LOCATION=16569\"}}\n"}
{"Time":"2023-05-31T11:52:16.82072-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"f0a25387-6103-48aa-b28e-fd3e71f10890\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\"}}\n"}
{"Time":"2023-05-31T11:52:16.820724-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"5014db0f-c129-4b06-838b-4c86c8e2612d\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_BIN=out/minikube-darwin-arm64\"}}\n"}
{"Time":"2023-05-31T11:52:16.820726-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"1d7b7b39-2fd2-49ac-84be-f6e94389a8d8\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\"}}\n"}
{"Time":"2023-05-31T11:52:16.820728-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"846a06a4-70a8-4103-8d3a-baba093ae48b\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\"}}\n"}
{"Time":"2023-05-31T11:52:16.82073-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"1e82b24b-8320-4389-aab8-c0d3082d1f15\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.info\",\"datacontenttype\":\"application/json\",\"data\":{\"message\":\"MINIKUBE_FORCE_SYSTEMD=\"}}\n"}
{"Time":"2023-05-31T11:52:16.820733-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \t{\"specversion\":\"1.0\",\"id\":\"4989f327-2411-437f-956a-722ff826fcb1\",\"source\":\"https://minikube.sigs.k8s.io/\",\"type\":\"io.k8s.sigs.minikube.error\",\"datacontenttype\":\"application/json\",\"data\":{\"advice\":\"\",\"exitcode\":\"56\",\"issues\":\"\",\"message\":\"The driver 'fail' is not supported on darwin/arm64\",\"name\":\"DRV_UNSUPPORTED_OS\",\"url\":\"\"}}\n"}
{"Time":"2023-05-31T11:52:16.820735-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        \n"}
{"Time":"2023-05-31T11:52:16.820737-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:52:16.820766-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"    helpers_test.go:175: Cleaning up \"json-output-error-614000\" profile ...\n"}
{"Time":"2023-05-31T11:52:16.820794-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p json-output-error-614000\n"}
{"Time":"2023-05-31T11:52:17.059484-07:00","Action":"output","Test":"TestErrorJSONOutput","Output":"--- PASS: TestErrorJSONOutput (0.33s)\n"}
{"Time":"2023-05-31T11:52:17.059514-07:00","Action":"pass","Test":"TestErrorJSONOutput","Elapsed":0.33}
{"Time":"2023-05-31T11:52:17.05952-07:00","Action":"run","Test":"TestKicCustomNetwork"}
{"Time":"2023-05-31T11:52:17.059522-07:00","Action":"output","Test":"TestKicCustomNetwork","Output":"=== RUN   TestKicCustomNetwork\n"}
{"Time":"2023-05-31T11:52:17.059552-07:00","Action":"output","Test":"TestKicCustomNetwork","Output":"    kic_custom_network_test.go:34: only runs with docker driver\n"}
{"Time":"2023-05-31T11:52:17.059564-07:00","Action":"output","Test":"TestKicCustomNetwork","Output":"--- SKIP: TestKicCustomNetwork (0.00s)\n"}
{"Time":"2023-05-31T11:52:17.059578-07:00","Action":"skip","Test":"TestKicCustomNetwork","Elapsed":0}
{"Time":"2023-05-31T11:52:17.05958-07:00","Action":"run","Test":"TestKicExistingNetwork"}
{"Time":"2023-05-31T11:52:17.059581-07:00","Action":"output","Test":"TestKicExistingNetwork","Output":"=== RUN   TestKicExistingNetwork\n"}
{"Time":"2023-05-31T11:52:17.059609-07:00","Action":"output","Test":"TestKicExistingNetwork","Output":"    kic_custom_network_test.go:73: only runs with docker driver\n"}
{"Time":"2023-05-31T11:52:17.059612-07:00","Action":"output","Test":"TestKicExistingNetwork","Output":"--- SKIP: TestKicExistingNetwork (0.00s)\n"}
{"Time":"2023-05-31T11:52:17.059614-07:00","Action":"skip","Test":"TestKicExistingNetwork","Elapsed":0}
{"Time":"2023-05-31T11:52:17.059615-07:00","Action":"run","Test":"TestKicCustomSubnet"}
{"Time":"2023-05-31T11:52:17.059616-07:00","Action":"output","Test":"TestKicCustomSubnet","Output":"=== RUN   TestKicCustomSubnet\n"}
{"Time":"2023-05-31T11:52:17.059618-07:00","Action":"output","Test":"TestKicCustomSubnet","Output":"    kic_custom_network_test.go:102: only runs with docker/podman driver\n"}
{"Time":"2023-05-31T11:52:17.059627-07:00","Action":"output","Test":"TestKicCustomSubnet","Output":"--- SKIP: TestKicCustomSubnet (0.00s)\n"}
{"Time":"2023-05-31T11:52:17.059629-07:00","Action":"skip","Test":"TestKicCustomSubnet","Elapsed":0}
{"Time":"2023-05-31T11:52:17.05963-07:00","Action":"run","Test":"TestKicStaticIP"}
{"Time":"2023-05-31T11:52:17.059631-07:00","Action":"output","Test":"TestKicStaticIP","Output":"=== RUN   TestKicStaticIP\n"}
{"Time":"2023-05-31T11:52:17.059633-07:00","Action":"output","Test":"TestKicStaticIP","Output":"    kic_custom_network_test.go:123: only run with docker/podman driver\n"}
{"Time":"2023-05-31T11:52:17.059636-07:00","Action":"output","Test":"TestKicStaticIP","Output":"--- SKIP: TestKicStaticIP (0.00s)\n"}
{"Time":"2023-05-31T11:52:17.059637-07:00","Action":"skip","Test":"TestKicStaticIP","Elapsed":0}
{"Time":"2023-05-31T11:52:17.059639-07:00","Action":"run","Test":"TestMainNoArgs"}
{"Time":"2023-05-31T11:52:17.05964-07:00","Action":"output","Test":"TestMainNoArgs","Output":"=== RUN   TestMainNoArgs\n"}
{"Time":"2023-05-31T11:52:17.059672-07:00","Action":"output","Test":"TestMainNoArgs","Output":"    main_test.go:68: (dbg) Run:  out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:52:17.092409-07:00","Action":"output","Test":"TestMainNoArgs","Output":"--- PASS: TestMainNoArgs (0.03s)\n"}
{"Time":"2023-05-31T11:52:17.092423-07:00","Action":"pass","Test":"TestMainNoArgs","Elapsed":0.03}
{"Time":"2023-05-31T11:52:17.092427-07:00","Action":"run","Test":"TestMinikubeProfile"}
{"Time":"2023-05-31T11:52:17.092429-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"=== RUN   TestMinikubeProfile\n"}
{"Time":"2023-05-31T11:52:17.092507-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:44: (dbg) Run:  out/minikube-darwin-arm64 start -p first-438000 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:52:25.46411-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"E0531 11:52:25.464061    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:52:45.73794-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:44: (dbg) Done: out/minikube-darwin-arm64 start -p first-438000 --driver=qemu2 : (28.645805s)\n"}
{"Time":"2023-05-31T11:52:45.737959-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:44: (dbg) Run:  out/minikube-darwin-arm64 start -p second-440000 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:52:45.946005-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"E0531 11:52:45.945975    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:53:18.363099-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:44: (dbg) Done: out/minikube-darwin-arm64 start -p second-440000 --driver=qemu2 : (32.625563125s)\n"}
{"Time":"2023-05-31T11:53:18.363115-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:51: (dbg) Run:  out/minikube-darwin-arm64 profile first-438000\n"}
{"Time":"2023-05-31T11:53:18.500285-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:55: (dbg) Run:  out/minikube-darwin-arm64 profile list -ojson\n"}
{"Time":"2023-05-31T11:53:18.668105-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:51: (dbg) Run:  out/minikube-darwin-arm64 profile second-440000\n"}
{"Time":"2023-05-31T11:53:18.747703-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    minikube_profile_test.go:55: (dbg) Run:  out/minikube-darwin-arm64 profile list -ojson\n"}
{"Time":"2023-05-31T11:53:18.921857-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    helpers_test.go:175: Cleaning up \"second-440000\" profile ...\n"}
{"Time":"2023-05-31T11:53:18.921884-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p second-440000\n"}
{"Time":"2023-05-31T11:53:19.01947-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    helpers_test.go:175: Cleaning up \"first-438000\" profile ...\n"}
{"Time":"2023-05-31T11:53:19.019487-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p first-438000\n"}
{"Time":"2023-05-31T11:53:19.116768-07:00","Action":"output","Test":"TestMinikubeProfile","Output":"--- PASS: TestMinikubeProfile (62.03s)\n"}
{"Time":"2023-05-31T11:53:19.116787-07:00","Action":"pass","Test":"TestMinikubeProfile","Elapsed":62.03}
{"Time":"2023-05-31T11:53:19.11679-07:00","Action":"run","Test":"TestMountStart"}
{"Time":"2023-05-31T11:53:19.116793-07:00","Action":"output","Test":"TestMountStart","Output":"=== RUN   TestMountStart\n"}
{"Time":"2023-05-31T11:53:19.116865-07:00","Action":"run","Test":"TestMountStart/serial"}
{"Time":"2023-05-31T11:53:19.116867-07:00","Action":"output","Test":"TestMountStart/serial","Output":"=== RUN   TestMountStart/serial\n"}
{"Time":"2023-05-31T11:53:19.116869-07:00","Action":"run","Test":"TestMountStart/serial/StartWithMountFirst"}
{"Time":"2023-05-31T11:53:19.11687-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"=== RUN   TestMountStart/serial/StartWithMountFirst\n"}
{"Time":"2023-05-31T11:53:19.11694-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    mount_start_test.go:98: (dbg) Run:  out/minikube-darwin-arm64 start -p mount-start-1-810000 --memory=2048 --mount --mount-gid 0 --mount-msize 6543 --mount-port 46464 --mount-uid 0 --no-kubernetes --driver=qemu2 \n"}
{"Time":"2023-05-31T11:53:26.907722-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"E0531 11:53:26.907605    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:53:29.39541-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    mount_start_test.go:98: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p mount-start-1-810000 --memory=2048 --mount --mount-gid 0 --mount-msize 6543 --mount-port 46464 --mount-uid 0 --no-kubernetes --driver=qemu2 : exit status 80 (10.277990208s)\n"}
{"Time":"2023-05-31T11:53:29.395467-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \n"}
{"Time":"2023-05-31T11:53:29.395476-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:53:29.395485-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* [mount-start-1-810000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:53:29.395492-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:53:29.3955-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:53:29.395508-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:53:29.395516-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:53:29.395523-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:53:29.395531-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:53:29.395538-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:53:29.395545-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:53:29.395552-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Starting minikube without Kubernetes in cluster mount-start-1-810000\n"}
{"Time":"2023-05-31T11:53:29.395559-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:29.395566-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:53:29.395573-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:29.39558-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:29.395587-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Deleting \"mount-start-1-810000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:53:29.395594-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:29.395601-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:53:29.395608-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:29.395615-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:29.395621-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:29.395627-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:29.395633-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \n"}
{"Time":"2023-05-31T11:53:29.395639-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:53:29.395645-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:29.395653-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:29.395666-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p mount-start-1-810000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:29.395675-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:29.395683-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t* \n"}
{"Time":"2023-05-31T11:53:29.39569-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:53:29.395704-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:29.395713-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:53:29.39572-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:53:29.395727-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:29.395734-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:53:29.395742-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:29.39575-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:53:29.395758-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \n"}
{"Time":"2023-05-31T11:53:29.395767-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:29.395778-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    mount_start_test.go:100: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p mount-start-1-810000 --memory=2048 --mount --mount-gid 0 --mount-msize 6543 --mount-port 46464 --mount-uid 0 --no-kubernetes --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:53:29.39579-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:53:29.395798-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p mount-start-1-810000 -n mount-start-1-810000\n"}
{"Time":"2023-05-31T11:53:29.46509-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p mount-start-1-810000 -n mount-start-1-810000: exit status 7 (69.449667ms)\n"}
{"Time":"2023-05-31T11:53:29.465112-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \n"}
{"Time":"2023-05-31T11:53:29.465115-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:53:29.465117-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:53:29.465119-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        \n"}
{"Time":"2023-05-31T11:53:29.465121-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:53:29.465123-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:53:29.465125-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"    helpers_test.go:241: \"mount-start-1-810000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:53:29.46513-07:00","Action":"output","Test":"TestMountStart/serial","Output":"    mount_start_test.go:79: Previous test failed, not running dependent tests\n"}
{"Time":"2023-05-31T11:53:29.465157-07:00","Action":"output","Test":"TestMountStart","Output":"    helpers_test.go:175: Cleaning up \"mount-start-2-813000\" profile ...\n"}
{"Time":"2023-05-31T11:53:29.465193-07:00","Action":"output","Test":"TestMountStart","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p mount-start-2-813000\n"}
{"Time":"2023-05-31T11:53:29.707001-07:00","Action":"output","Test":"TestMountStart","Output":"    helpers_test.go:175: Cleaning up \"mount-start-1-810000\" profile ...\n"}
{"Time":"2023-05-31T11:53:29.707016-07:00","Action":"output","Test":"TestMountStart","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p mount-start-1-810000\n"}
{"Time":"2023-05-31T11:53:29.796037-07:00","Action":"output","Test":"TestMountStart","Output":"--- FAIL: TestMountStart (10.68s)\n"}
{"Time":"2023-05-31T11:53:29.796049-07:00","Action":"output","Test":"TestMountStart/serial","Output":"    --- FAIL: TestMountStart/serial (10.35s)\n"}
{"Time":"2023-05-31T11:53:29.796052-07:00","Action":"output","Test":"TestMountStart/serial/StartWithMountFirst","Output":"        --- FAIL: TestMountStart/serial/StartWithMountFirst (10.35s)\n"}
{"Time":"2023-05-31T11:53:29.796055-07:00","Action":"fail","Test":"TestMountStart/serial/StartWithMountFirst","Elapsed":10.35}
{"Time":"2023-05-31T11:53:29.796058-07:00","Action":"fail","Test":"TestMountStart/serial","Elapsed":10.35}
{"Time":"2023-05-31T11:53:29.796059-07:00","Action":"fail","Test":"TestMountStart","Elapsed":10.68}
{"Time":"2023-05-31T11:53:29.796064-07:00","Action":"run","Test":"TestMultiNode"}
{"Time":"2023-05-31T11:53:29.796065-07:00","Action":"output","Test":"TestMultiNode","Output":"=== RUN   TestMultiNode\n"}
{"Time":"2023-05-31T11:53:29.796089-07:00","Action":"run","Test":"TestMultiNode/serial"}
{"Time":"2023-05-31T11:53:29.796091-07:00","Action":"output","Test":"TestMultiNode/serial","Output":"=== RUN   TestMultiNode/serial\n"}
{"Time":"2023-05-31T11:53:29.796106-07:00","Action":"run","Test":"TestMultiNode/serial/FreshStart2Nodes"}
{"Time":"2023-05-31T11:53:29.796111-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"=== RUN   TestMultiNode/serial/FreshStart2Nodes\n"}
{"Time":"2023-05-31T11:53:29.796166-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:85: (dbg) Run:  out/minikube-darwin-arm64 start -p multinode-073000 --wait=true --memory=2200 --nodes=2 -v=8 --alsologtostderr --driver=qemu2 \n"}
{"Time":"2023-05-31T11:53:39.870353-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:85: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p multinode-073000 --wait=true --memory=2200 --nodes=2 -v=8 --alsologtostderr --driver=qemu2 : exit status 80 (10.072063916s)\n"}
{"Time":"2023-05-31T11:53:39.870407-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:39.870417-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:53:39.870454-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:53:39.870463-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:53:39.870474-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:53:39.870482-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:53:39.870489-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:53:39.870496-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:53:39.870503-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:53:39.87051-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:53:39.870517-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:53:39.870523-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:53:39.87053-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:39.870548-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:53:39.870555-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:39.870562-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.870572-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Deleting \"multinode-073000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:53:39.87058-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:39.870587-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:53:39.870594-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:39.8706-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.870606-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.870612-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.870618-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:39.870624-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:53:39.87063-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:39.870636-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.823246    2551 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:53:39.870644-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.823382    2551 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:53:39.870652-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.823385    2551 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:53:39.870658-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.823388    2551 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:53:39.870666-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.823458    2551 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:53:39.870676-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.824475    2551 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:53:39.870684-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.839525    2551 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1380,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:53:39.870698-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:29.839593    2551 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:53:39.870705-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.844423    2551 out.go:177] * [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:53:39.870722-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.850338    2551 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:53:39.87073-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.854337    2551 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:53:39.870738-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.850393    2551 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:53:39.870744-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.860349    2551 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:53:39.870753-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.863348    2551 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:53:39.87076-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.864742    2551 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:53:39.870767-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.868341    2551 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:53:39.870774-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.871514    2551 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:53:39.870781-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.875190    2551 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:53:39.870789-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.882325    2551 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:53:39.870796-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.882330    2551 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:53:39.870804-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.882337    2551 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:53:39.870812-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.884209    2551 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:53:39.870819-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.887324    2551 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:53:39.87083-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890444    2551 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:53:39.870837-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890462    2551 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:53:39.870844-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890470    2551 cni.go:136] 0 nodes found, recommending kindnet\n"}
{"Time":"2023-05-31T11:53:39.870851-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890476    2551 start_flags.go:314] Found \"CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:53:39.870858-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890482    2551 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:53:39.870871-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:doc"}
{"Time":"2023-05-31T11:53:39.870886-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"ker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:53:39.870898-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.890573    2551 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:53:39.870905-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.897220    2551 out.go:177] * Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:53:39.870912-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905355    2551 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:53:39.87092-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905379    2551 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:53:39.870928-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905394    2551 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:53:39.870935-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905449    2551 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:53:39.870943-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905455    2551 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:53:39.87095-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905672    2551 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/multinode-073000/config.json ...\n"}
{"Time":"2023-05-31T11:53:39.870958-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905687    2551 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/multinode-073000/config.json: {Name:mkb1f7254c091065ff9491988bf2b20d12d2f716 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:53:39.870968-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905901    2551 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:53:39.870975-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905915    2551 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:53:39.870983-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905945    2551 start.go:368] acquired machines lock for \"multinode-073000\" in 24.667µs\n"}
{"Time":"2023-05-31T11:53:39.871001-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905956    2551 start.go:93] Provisioning new machine with config: \u0026{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesCo"}
{"Time":"2023-05-31T11:53:39.871014-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"nfig:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSiz"}
{"Time":"2023-05-31T11:53:39.871043-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"e:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:53:39.871053-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.905988    2551 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:53:39.871061-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.914340    2551 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:39.871073-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931581    2551 start.go:159] libmachine.API.Create for \"multinode-073000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:53:39.87108-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931612    2551 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:53:39.871088-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931676    2551 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:53:39.871096-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931696    2551 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:53:39.871103-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931706    2551 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:53:39.87111-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931749    2551 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:53:39.871118-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931763    2551 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:53:39.871125-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.931770    2551 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:53:39.871134-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:29.932086    2551 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:53:39.871151-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.182598    2551 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:53:39.871159-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.379574    2551 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:53:39.871166-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.379582    2551 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:53:39.871174-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.379744    2551 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871182-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.388525    2551 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:53:39.871189-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.388539    2551 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:53:39.871197-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.388590    2551 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:53:39.871204-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.395849    2551 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:53:39.87121-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.871217-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.395862    2551 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:53:39.871225-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.395877    2551 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871233-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.395883    2551 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:53:39.871243-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.395924    2551 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=22:99:10:4e:19:e1 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871267-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.397431    2551 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:53:39.871275-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.397445    2551 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:39.871283-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.871289-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:30.397461    2551 client.go:171] LocalClient.Create took 465.851459ms\n"}
{"Time":"2023-05-31T11:53:39.871298-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:32.399621    2551 start.go:128] duration metric: createHost completed in 2.493647708s\n"}
{"Time":"2023-05-31T11:53:39.871305-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:32.399679    2551 start.go:83] releasing machines lock for \"multinode-073000\", held for 2.493761459s\n"}
{"Time":"2023-05-31T11:53:39.871312-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:32.399771    2551 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871324-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:32.411011    2551 out.go:177] * Deleting \"multinode-073000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:53:39.871331-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:32.430337    2551 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871339-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871347-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:32.430365    2551 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:53:39.871354-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.432562    2551 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:53:39.871362-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.433250    2551 start.go:368] acquired machines lock for \"multinode-073000\" in 567.083µs\n"}
{"Time":"2023-05-31T11:53:39.871376-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.433376    2551 start.go:93] Provisioning new machine with config: \u0026{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesCo"}
{"Time":"2023-05-31T11:53:39.87139-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"nfig:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSiz"}
{"Time":"2023-05-31T11:53:39.871401-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"e:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:53:39.871409-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.433667    2551 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:53:39.871417-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.439418    2551 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:53:39.871544-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486377    2551 start.go:159] libmachine.API.Create for \"multinode-073000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:53:39.871552-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486437    2551 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:53:39.871557-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486546    2551 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:53:39.871563-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486584    2551 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:53:39.871568-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486616    2551 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:53:39.87159-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486686    2551 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:53:39.871596-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486713    2551 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:53:39.871601-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.486730    2551 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:53:39.871607-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.487302    2551 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:53:39.871613-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.696730    2551 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:53:39.871618-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.813231    2551 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:53:39.871624-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.813237    2551 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:53:39.87163-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.813392    2551 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871635-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.821783    2551 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:53:39.87164-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.821798    2551 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:53:39.871646-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.821862    2551 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:53:39.871651-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.828948    2551 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:53:39.871656-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.871661-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.828970    2551 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:53:39.871666-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.828985    2551 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871672-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.828993    2551 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:53:39.87168-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.829031    2551 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:65:d5:b8:e1:91 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:53:39.871688-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.830573    2551 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:53:39.8717-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.830587    2551 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:53:39.871705-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:53:39.87171-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:37.830601    2551 client.go:171] LocalClient.Create took 344.162959ms\n"}
{"Time":"2023-05-31T11:53:39.871715-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:39.831950    2551 start.go:128] duration metric: createHost completed in 2.39825375s\n"}
{"Time":"2023-05-31T11:53:39.87172-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:39.832014    2551 start.go:83] releasing machines lock for \"multinode-073000\", held for 2.398771791s\n"}
{"Time":"2023-05-31T11:53:39.871726-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:39.832428    2551 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871732-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871737-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:39.839710    2551 out.go:177] \n"}
{"Time":"2023-05-31T11:53:39.871743-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:39.843569    2551 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871749-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:53:39.871755-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:39.843608    2551 out.go:239] * \n"}
{"Time":"2023-05-31T11:53:39.87176-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t* \n"}
{"Time":"2023-05-31T11:53:39.871765-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tW0531 11:53:39.846230    2551 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:53:39.871773-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.871779-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:53:39.871784-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:53:39.871789-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.871794-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:53:39.871799-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.871805-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:53:39.871812-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:53:39.871819-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.871825-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:53:39.87183-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:53:39.871835-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.87184-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:53:39.871845-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:53:39.871851-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:53:39.871858-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tI0531 11:53:39.854660    2551 out.go:177] \n"}
{"Time":"2023-05-31T11:53:39.871863-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:39.871867-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:39.871872-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:87: failed to start cluster. args \"out/minikube-darwin-arm64 start -p multinode-073000 --wait=true --memory=2200 --nodes=2 -v=8 --alsologtostderr --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:53:39.871882-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:53:39.871888-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:53:39.938122-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (67.583917ms)\n"}
{"Time":"2023-05-31T11:53:39.938142-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:39.938145-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:53:39.938147-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:53:39.938149-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:39.938151-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:53:39.938154-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:53:39.938158-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:53:39.938216-07:00","Action":"run","Test":"TestMultiNode/serial/DeployApp2Nodes"}
{"Time":"2023-05-31T11:53:39.938219-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"=== RUN   TestMultiNode/serial/DeployApp2Nodes\n"}
{"Time":"2023-05-31T11:53:39.938321-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:481: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- apply -f ./testdata/multinodes/multinode-pod-dns-test.yaml\n"}
{"Time":"2023-05-31T11:53:40.056541-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:481: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- apply -f ./testdata/multinodes/multinode-pod-dns-test.yaml: exit status 1 (118.14425ms)\n"}
{"Time":"2023-05-31T11:53:40.056554-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.056556-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:40.056557-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: cluster \"multinode-073000\" does not exist\n"}
{"Time":"2023-05-31T11:53:40.056559-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.05656-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:40.056562-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:483: failed to create busybox deployment to multinode cluster\n"}
{"Time":"2023-05-31T11:53:40.056564-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:486: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- rollout status deployment/busybox\n"}
{"Time":"2023-05-31T11:53:40.110375-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:486: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- rollout status deployment/busybox: exit status 1 (53.759916ms)\n"}
{"Time":"2023-05-31T11:53:40.110394-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.110396-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:40.110398-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:40.1104-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.110401-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:40.110402-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:488: failed to deploy busybox to multinode cluster\n"}
{"Time":"2023-05-31T11:53:40.110405-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:40.165106-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (54.631875ms)\n"}
{"Time":"2023-05-31T11:53:40.165126-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.165128-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:40.16513-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:40.165131-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:40.165133-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:40.165134-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:53:41.149755-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:41.252668-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.874875ms)\n"}
{"Time":"2023-05-31T11:53:41.252682-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:41.252684-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:41.252686-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:41.252687-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:41.252688-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:41.25269-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:53:43.204325-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:43.306558-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.206792ms)\n"}
{"Time":"2023-05-31T11:53:43.306571-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:43.306573-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:43.306574-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:43.306576-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:43.306577-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:43.306578-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:53:46.130887-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:46.234497-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (103.617542ms)\n"}
{"Time":"2023-05-31T11:53:46.234511-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:46.234513-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:46.234515-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:46.234516-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:46.234518-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:46.234519-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:53:49.184227-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:49.287049-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.803167ms)\n"}
{"Time":"2023-05-31T11:53:49.287063-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:49.287065-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:49.287067-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:49.287068-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:49.28707-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:49.287071-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:53:55.82008-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:53:55.923657-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (103.535208ms)\n"}
{"Time":"2023-05-31T11:53:55.923672-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:55.923674-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:53:55.923675-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:53:55.923677-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:53:55.923678-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:53:55.92368-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:54:04.50455-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:54:04.607515-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.937334ms)\n"}
{"Time":"2023-05-31T11:54:04.607532-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:04.607534-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:54:04.607535-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:54:04.607537-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:04.607538-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:54:04.607544-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:54:21.625171-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:54:21.727451-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.2385ms)\n"}
{"Time":"2023-05-31T11:54:21.727466-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:21.727468-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:54:21.72747-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:54:21.727472-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:21.727473-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:54:21.727474-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:54:46.374041-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:54:46.478336-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (104.271667ms)\n"}
{"Time":"2023-05-31T11:54:46.47835-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:46.478352-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:54:46.478354-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:54:46.478355-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:54:46.478357-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:54:46.478358-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:54:48.829025-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:54:48.828943    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:02.227813-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:55:02.330312-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.489459ms)\n"}
{"Time":"2023-05-31T11:55:02.330326-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:02.330328-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:02.330334-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:02.330338-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:02.33034-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:02.330342-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:55:18.454396-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.454285    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.461098-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.461017    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.471577-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.471507    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.493627-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.493593    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.535703-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.535658    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.617801-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.617734    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:18.779919-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:18.779852    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:19.102106-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:19.102036    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:19.744357-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:19.744294    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:21.026722-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:21.026625    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:23.589097-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:23.588993    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:28.711424-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"E0531 11:55:28.711320    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:31.452783-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}'\n"}
{"Time":"2023-05-31T11:55:31.555579-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:493: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].status.podIP}': exit status 1 (102.738042ms)\n"}
{"Time":"2023-05-31T11:55:31.555591-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.555593-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.555595-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.555597-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.555598-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.555599-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:496: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:55:31.555601-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:512: failed to resolve pod IPs: failed to retrieve Pod IPs (may be temporary): exit status 1\n"}
{"Time":"2023-05-31T11:55:31.555602-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:516: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].metadata.name}'\n"}
{"Time":"2023-05-31T11:55:31.609421-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:516: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].metadata.name}': exit status 1 (53.78425ms)\n"}
{"Time":"2023-05-31T11:55:31.609435-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.609437-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.609438-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.60944-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.609442-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.609443-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:518: failed get Pod names\n"}
{"Time":"2023-05-31T11:55:31.609446-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:524: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.io\n"}
{"Time":"2023-05-31T11:55:31.663341-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:524: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.io: exit status 1 (53.82225ms)\n"}
{"Time":"2023-05-31T11:55:31.663353-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.663355-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.663357-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.663358-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.663359-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.66336-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:526: Pod  could not resolve 'kubernetes.io': exit status 1\n"}
{"Time":"2023-05-31T11:55:31.663362-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:534: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.default\n"}
{"Time":"2023-05-31T11:55:31.717583-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:534: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.default: exit status 1 (54.167209ms)\n"}
{"Time":"2023-05-31T11:55:31.717596-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.717598-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.717599-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.717601-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.717602-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.717604-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:536: Pod  could not resolve 'kubernetes.default': exit status 1\n"}
{"Time":"2023-05-31T11:55:31.717613-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:542: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.default.svc.cluster.local\n"}
{"Time":"2023-05-31T11:55:31.771534-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:542: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- exec  -- nslookup kubernetes.default.svc.cluster.local: exit status 1 (53.868042ms)\n"}
{"Time":"2023-05-31T11:55:31.77155-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.771552-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.771554-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.771556-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.771557-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.771558-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    multinode_test.go:544: Pod  could not resolve local service (kubernetes.default.svc.cluster.local): exit status 1\n"}
{"Time":"2023-05-31T11:55:31.771561-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:31.771562-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:31.800319-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.670833ms)\n"}
{"Time":"2023-05-31T11:55:31.800332-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.800334-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:31.800336-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:31.800337-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.800338-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:31.800339-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:31.800342-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:31.800366-07:00","Action":"run","Test":"TestMultiNode/serial/PingHostFrom2Pods"}
{"Time":"2023-05-31T11:55:31.800368-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"=== RUN   TestMultiNode/serial/PingHostFrom2Pods\n"}
{"Time":"2023-05-31T11:55:31.800438-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    multinode_test.go:552: (dbg) Run:  out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].metadata.name}'\n"}
{"Time":"2023-05-31T11:55:31.855094-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    multinode_test.go:552: (dbg) Non-zero exit: out/minikube-darwin-arm64 kubectl -p multinode-073000 -- get pods -o jsonpath='{.items[*].metadata.name}': exit status 1 (54.590292ms)\n"}
{"Time":"2023-05-31T11:55:31.855107-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.855109-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.85511-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \terror: no server found for cluster \"multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.855112-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.855114-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.855115-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    multinode_test.go:554: failed to get Pod names: exit status 1\n"}
{"Time":"2023-05-31T11:55:31.855118-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:31.855119-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:31.884144-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.946458ms)\n"}
{"Time":"2023-05-31T11:55:31.884158-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.88416-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:31.884161-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:31.884163-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.884164-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:31.884166-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:31.884169-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:31.884189-07:00","Action":"run","Test":"TestMultiNode/serial/AddNode"}
{"Time":"2023-05-31T11:55:31.884193-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"=== RUN   TestMultiNode/serial/AddNode\n"}
{"Time":"2023-05-31T11:55:31.884281-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:110: (dbg) Run:  out/minikube-darwin-arm64 node add -p multinode-073000 -v 3 --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:31.92322-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:110: (dbg) Non-zero exit: out/minikube-darwin-arm64 node add -p multinode-073000 -v 3 --alsologtostderr: exit status 89 (38.863625ms)\n"}
{"Time":"2023-05-31T11:55:31.923231-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.923233-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:31.923235-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:55:31.923237-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \t  To start a cluster, run: \"minikube start -p multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.923238-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.923239-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:31.923241-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:31.923242-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911347    2636 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:31.923244-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911544    2636 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:31.92325-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911547    2636 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:31.923251-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911549    2636 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:31.923253-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911612    2636 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:31.923254-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911829    2636 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:31.923256-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.911997    2636 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:31.923257-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.916591    2636 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:55:31.923259-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tI0531 11:55:31.919649    2636 out.go:177]   To start a cluster, run: \"minikube start -p multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:31.92326-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.923261-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:31.923263-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:112: failed to add node to current cluster. args \"out/minikube-darwin-arm64 node add -p multinode-073000 -v 3 --alsologtostderr\" : exit status 89\n"}
{"Time":"2023-05-31T11:55:31.923265-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:31.923266-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:31.952199-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.883334ms)\n"}
{"Time":"2023-05-31T11:55:31.952211-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.952212-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:31.952214-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:31.952215-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:31.952224-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:31.952225-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:31.952228-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:31.95225-07:00","Action":"run","Test":"TestMultiNode/serial/ProfileList"}
{"Time":"2023-05-31T11:55:31.952254-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"=== RUN   TestMultiNode/serial/ProfileList\n"}
{"Time":"2023-05-31T11:55:31.952293-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    multinode_test.go:132: (dbg) Run:  out/minikube-darwin-arm64 profile list --output json\n"}
{"Time":"2023-05-31T11:55:32.02442-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    multinode_test.go:155: expected profile \"multinode-073000\" in json of 'profile list' include 3 nodes but have 1 nodes. got *\"{\\\"invalid\\\":[],\\\"valid\\\":[{\\\"Name\\\":\\\"multinode-073000\\\",\\\"Status\\\":\\\"Stopped\\\",\\\"Config\\\":{\\\"Name\\\":\\\"multinode-073000\\\",\\\"KeepContext\\\":false,\\\"EmbedCerts\\\":false,\\\"MinikubeISO\\\":\\\"https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso\\\",\\\"KicBaseImage\\\":\\\"gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8\\\",\\\"Memory\\\":2200,\\\"CPUs\\\":2,\\\"DiskSize\\\":20000,\\\"VMDriver\\\":\\\"\\\",\\\"Driver\\\":\\\"qemu2\\\",\\\"HyperkitVpnKitSock\\\":\\\"\\\",\\\"HyperkitVSockPorts\\\":[],\\\"DockerEnv\\\":null,\\\"ContainerVolumeMounts\\\":null,\\\"InsecureRegistry\\\":null,\\\"RegistryMirror\\\":[],\\\"HostOnlyCIDR\\\":\\\"192.168.59.1/24\\\",\\\"HypervVirtualSwitch\\\":\\\"\\\",\\\"HypervUseExternalSwitch\\\":false,\\\"HypervExternalAdapter\\\":\\\"\\\",\\\"KVMNetwork\\\":\\\"default\\\",\\\"KVMQemuURI\\\":\\\"qemu:///system\\\",\\\"KVMGPU\\\":false,\\\"KVMHidd"}
{"Time":"2023-05-31T11:55:32.02444-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"en\\\":false,\\\"KVMNUMACount\\\":1,\\\"APIServerPort\\\":0,\\\"DockerOpt\\\":null,\\\"DisableDriverMounts\\\":false,\\\"NFSShare\\\":[],\\\"NFSSharesRoot\\\":\\\"/nfsshares\\\",\\\"UUID\\\":\\\"\\\",\\\"NoVTXCheck\\\":false,\\\"DNSProxy\\\":false,\\\"HostDNSResolver\\\":true,\\\"HostOnlyNicType\\\":\\\"virtio\\\",\\\"NatNicType\\\":\\\"virtio\\\",\\\"SSHIPAddress\\\":\\\"\\\",\\\"SSHUser\\\":\\\"root\\\",\\\"SSHKey\\\":\\\"\\\",\\\"SSHPort\\\":22,\\\"KubernetesConfig\\\":{\\\"KubernetesVersion\\\":\\\"v1.27.2\\\",\\\"ClusterName\\\":\\\"multinode-073000\\\",\\\"Namespace\\\":\\\"default\\\",\\\"APIServerName\\\":\\\"minikubeCA\\\",\\\"APIServerNames\\\":null,\\\"APIServerIPs\\\":null,\\\"DNSDomain\\\":\\\"cluster.local\\\",\\\"ContainerRuntime\\\":\\\"docker\\\",\\\"CRISocket\\\":\\\"\\\",\\\"NetworkPlugin\\\":\\\"cni\\\",\\\"FeatureGates\\\":\\\"\\\",\\\"ServiceCIDR\\\":\\\"10.96.0.0/12\\\",\\\"ImageRepository\\\":\\\"\\\",\\\"LoadBalancerStartIP\\\":\\\"\\\",\\\"LoadBalancerEndIP\\\":\\\"\\\",\\\"CustomIngressCert\\\":\\\"\\\",\\\"RegistryAliases\\\":\\\"\\\",\\\"ExtraOptions\\\":null,\\\"ShouldLoadCachedImages\\\":true,\\\"EnableDefaultCNI\\\":false,\\\"CNI\\\":\\\"\\\",\\\"NodeIP\\\":\\\"\\\",\\\"NodePort\\\":8443,\\\"NodeName\\\":\\\"\\\"},\\\"Nodes\\\":[{\\\"Name\\\":\\\"\\"}
{"Time":"2023-05-31T11:55:32.024449-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"\",\\\"IP\\\":\\\"\\\",\\\"Port\\\":8443,\\\"KubernetesVersion\\\":\\\"v1.27.2\\\",\\\"ContainerRuntime\\\":\\\"docker\\\",\\\"ControlPlane\\\":true,\\\"Worker\\\":true}],\\\"Addons\\\":null,\\\"CustomAddonImages\\\":null,\\\"CustomAddonRegistries\\\":null,\\\"VerifyComponents\\\":{\\\"apiserver\\\":true,\\\"apps_running\\\":true,\\\"default_sa\\\":true,\\\"extra\\\":true,\\\"kubelet\\\":true,\\\"node_ready\\\":true,\\\"system_pods\\\":true},\\\"StartHostTimeout\\\":360000000000,\\\"ScheduledStop\\\":null,\\\"ExposedPorts\\\":[],\\\"ListenAddress\\\":\\\"\\\",\\\"Network\\\":\\\"socket_vmnet\\\",\\\"Subnet\\\":\\\"\\\",\\\"MultiNodeRequested\\\":true,\\\"ExtraDisks\\\":0,\\\"CertExpiration\\\":94608000000000000,\\\"Mount\\\":false,\\\"MountString\\\":\\\"/Users:/minikube-host\\\",\\\"Mount9PVersion\\\":\\\"9p2000.L\\\",\\\"MountGID\\\":\\\"docker\\\",\\\"MountIP\\\":\\\"\\\",\\\"MountMSize\\\":262144,\\\"MountOptions\\\":[],\\\"MountPort\\\":0,\\\"MountType\\\":\\\"9p\\\",\\\"MountUID\\\":\\\"docker\\\",\\\"BinaryMirror\\\":\\\"\\\",\\\"DisableOptimizations\\\":false,\\\"DisableMetrics\\\":false,\\\"CustomQemuFirmwarePath\\\":\\\"\\\",\\\"SocketVMnetClientPath\\\":\\\"/opt/socket_vmnet/bin/socket_vmnet_client\\\",\\\"SocketVMnetPat"}
{"Time":"2023-05-31T11:55:32.024455-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"h\\\":\\\"/var/run/socket_vmnet\\\",\\\"StaticIP\\\":\\\"\\\"},\\\"Active\\\":false}]}\"*. args: \"out/minikube-darwin-arm64 profile list --output json\"\n"}
{"Time":"2023-05-31T11:55:32.024457-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:32.02446-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.053044-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.549417ms)\n"}
{"Time":"2023-05-31T11:55:32.053056-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.053058-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.05306-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:32.053061-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.053063-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.053064-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:32.053067-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:32.053089-07:00","Action":"run","Test":"TestMultiNode/serial/CopyFile"}
{"Time":"2023-05-31T11:55:32.05309-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"=== RUN   TestMultiNode/serial/CopyFile\n"}
{"Time":"2023-05-31T11:55:32.053152-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    multinode_test.go:173: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status --output json --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:32.081742-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    multinode_test.go:173: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status --output json --alsologtostderr: exit status 7 (28.51775ms)\n"}
{"Time":"2023-05-31T11:55:32.081757-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.081759-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.081761-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \t{\"Name\":\"multinode-073000\",\"Host\":\"Stopped\",\"Kubelet\":\"Stopped\",\"APIServer\":\"Stopped\",\"Kubeconfig\":\"Stopped\",\"Worker\":false}\n"}
{"Time":"2023-05-31T11:55:32.081763-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.081764-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.081765-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:32.081774-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080324    2646 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:32.081775-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080481    2646 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.081777-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080484    2646 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:32.081778-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080487    2646 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.082252-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080560    2646 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:32.082272-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080677    2646 out.go:303] Setting JSON to true\n"}
{"Time":"2023-05-31T11:55:32.082275-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080694    2646 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.082278-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080755    2646 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:32.082281-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080866    2646 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:32.082285-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.080871    2646 status.go:255] checking status of multinode-073000 ...\n"}
{"Time":"2023-05-31T11:55:32.082288-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.081064    2646 status.go:330] multinode-073000 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:55:32.08229-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.081067    2646 status.go:343] host is not running, skipping remaining checks\n"}
{"Time":"2023-05-31T11:55:32.082294-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tI0531 11:55:32.081070    2646 status.go:257] multinode-073000 status: \u0026{Name:multinode-073000 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:false TimeToStop: DockerEnv: PodManEnv:}\n"}
{"Time":"2023-05-31T11:55:32.082296-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.082297-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:32.082302-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    multinode_test.go:180: failed to decode json from status: args \"out/minikube-darwin-arm64 -p multinode-073000 status --output json --alsologtostderr\": json: cannot unmarshal object into Go value of type []cmd.Status\n"}
{"Time":"2023-05-31T11:55:32.082304-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:32.082305-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.110589-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.620875ms)\n"}
{"Time":"2023-05-31T11:55:32.110614-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.110616-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.110618-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:32.11062-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.110621-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.110623-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:32.110625-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:32.110822-07:00","Action":"run","Test":"TestMultiNode/serial/StopNode"}
{"Time":"2023-05-31T11:55:32.110829-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"=== RUN   TestMultiNode/serial/StopNode\n"}
{"Time":"2023-05-31T11:55:32.110855-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:210: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 node stop m03\n"}
{"Time":"2023-05-31T11:55:32.156204-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:210: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 node stop m03: exit status 85 (45.253875ms)\n"}
{"Time":"2023-05-31T11:55:32.156217-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.156219-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.15622-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.156222-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.156223-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.156224-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.156226-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:32.15623-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tX Exiting due to GUEST_NODE_RETRIEVE: retrieving node: Could not find node m03\n"}
{"Time":"2023-05-31T11:55:32.156232-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t* \n"}
{"Time":"2023-05-31T11:55:32.156234-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:32.156239-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.15624-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│    * If the above advice does not help, please let us know:                                                             │\n"}
{"Time":"2023-05-31T11:55:32.156242-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                                                           │\n"}
{"Time":"2023-05-31T11:55:32.156243-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.156245-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                │\n"}
{"Time":"2023-05-31T11:55:32.156246-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│    * Please also attach the following file to the GitHub issue:                                                         │\n"}
{"Time":"2023-05-31T11:55:32.156248-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_node_295f67d8757edd996fe5c1e7ccde72c355ccf4dc_0.log    │\n"}
{"Time":"2023-05-31T11:55:32.156249-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.156251-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:32.156253-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.156254-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:32.156255-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:212: node stop returned an error. args \"out/minikube-darwin-arm64 -p multinode-073000 node stop m03\": exit status 85\n"}
{"Time":"2023-05-31T11:55:32.156258-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:216: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status\n"}
{"Time":"2023-05-31T11:55:32.18537-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:216: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status: exit status 7 (29.057875ms)\n"}
{"Time":"2023-05-31T11:55:32.185382-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.185384-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.185386-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:32.185388-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:32.185389-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:32.18539-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:32.185391-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:32.185393-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:32.185394-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.185395-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.185396-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.185399-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:223: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:32.214139-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:223: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr: exit status 7 (28.625292ms)\n"}
{"Time":"2023-05-31T11:55:32.214151-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.214153-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.214155-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:32.214157-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:32.214158-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214159-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:32.21416-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214162-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214163-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.214164-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.214165-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.214166-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:32.214168-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212669    2654 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:32.214169-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212792    2654 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.214171-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212799    2654 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:32.214174-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212802    2654 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.214175-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212872    2654 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:32.214177-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.212987    2654 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:55:32.214178-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213005    2654 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.214179-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213044    2654 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:32.214181-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213181    2654 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:32.214183-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213188    2654 status.go:255] checking status of multinode-073000 ...\n"}
{"Time":"2023-05-31T11:55:32.214184-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213366    2654 status.go:330] multinode-073000 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:55:32.214187-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213372    2654 status.go:343] host is not running, skipping remaining checks\n"}
{"Time":"2023-05-31T11:55:32.214188-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0531 11:55:32.213375    2654 status.go:257] multinode-073000 status: \u0026{Name:multinode-073000 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:false TimeToStop: DockerEnv: PodManEnv:}\n"}
{"Time":"2023-05-31T11:55:32.21419-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.214191-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:32.214193-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:229: incorrect number of running kubelets: args \"out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\": multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.214194-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        type: Control Plane\n"}
{"Time":"2023-05-31T11:55:32.214195-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        host: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214197-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        kubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214198-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        apiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:32.214199-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        kubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:32.2142-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.214201-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:32.214204-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.242863-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.613834ms)\n"}
{"Time":"2023-05-31T11:55:32.242875-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.242877-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.242879-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:32.24288-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.242882-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.242884-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:32.242886-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:32.242938-07:00","Action":"run","Test":"TestMultiNode/serial/StartAfterStop"}
{"Time":"2023-05-31T11:55:32.242941-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"=== RUN   TestMultiNode/serial/StartAfterStop\n"}
{"Time":"2023-05-31T11:55:32.243003-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:254: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 node start m03 --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:32.286298-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:254: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 node start m03 --alsologtostderr: exit status 85 (43.206375ms)\n"}
{"Time":"2023-05-31T11:55:32.28631-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.286311-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.286313-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.286315-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.286318-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.286319-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.286323-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:32.286325-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.270505    2658 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:32.286326-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.270712    2658 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.286328-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.270714    2658 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:32.28633-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.270717    2658 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.286331-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.270785    2658 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:32.286333-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.271034    2658 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.286334-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.271211    2658 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:32.286336-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.274735    2658 out.go:177] \n"}
{"Time":"2023-05-31T11:55:32.286337-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tW0531 11:55:32.277547    2658 out.go:239] X Exiting due to GUEST_NODE_RETRIEVE: retrieving node: Could not find node m03\n"}
{"Time":"2023-05-31T11:55:32.286339-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tX Exiting due to GUEST_NODE_RETRIEVE: retrieving node: Could not find node m03\n"}
{"Time":"2023-05-31T11:55:32.28634-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tW0531 11:55:32.277551    2658 out.go:239] * \n"}
{"Time":"2023-05-31T11:55:32.286341-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t* \n"}
{"Time":"2023-05-31T11:55:32.286343-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tW0531 11:55:32.279113    2658 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:32.286346-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286347-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * If the above advice does not help, please let us know:                                                             │\n"}
{"Time":"2023-05-31T11:55:32.286349-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                                                           │\n"}
{"Time":"2023-05-31T11:55:32.28635-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286352-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                │\n"}
{"Time":"2023-05-31T11:55:32.286353-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * Please also attach the following file to the GitHub issue:                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286355-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_node_1c3a1297795327375b61f3ff5a4ef34c9b2fc69b_0.log    │\n"}
{"Time":"2023-05-31T11:55:32.286356-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286358-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:32.28636-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:32.286362-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286364-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * If the above advice does not help, please let us know:                                                             │\n"}
{"Time":"2023-05-31T11:55:32.286366-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                                                           │\n"}
{"Time":"2023-05-31T11:55:32.286367-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286369-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                │\n"}
{"Time":"2023-05-31T11:55:32.28637-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * Please also attach the following file to the GitHub issue:                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286372-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_node_1c3a1297795327375b61f3ff5a4ef34c9b2fc69b_0.log    │\n"}
{"Time":"2023-05-31T11:55:32.286373-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t│                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286375-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:32.286377-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tI0531 11:55:32.282478    2658 out.go:177] \n"}
{"Time":"2023-05-31T11:55:32.286378-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.286379-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:32.286382-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:256: I0531 11:55:32.270505    2658 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:32.286384-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.270712    2658 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.286385-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.270714    2658 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:32.286387-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.270717    2658 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:32.286388-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.270785    2658 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:32.28639-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.271034    2658 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.286391-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.271211    2658 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:32.286392-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.274735    2658 out.go:177] \n"}
{"Time":"2023-05-31T11:55:32.286395-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        W0531 11:55:32.277547    2658 out.go:239] X Exiting due to GUEST_NODE_RETRIEVE: retrieving node: Could not find node m03\n"}
{"Time":"2023-05-31T11:55:32.286396-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        X Exiting due to GUEST_NODE_RETRIEVE: retrieving node: Could not find node m03\n"}
{"Time":"2023-05-31T11:55:32.286398-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        W0531 11:55:32.277551    2658 out.go:239] * \n"}
{"Time":"2023-05-31T11:55:32.286399-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        * \n"}
{"Time":"2023-05-31T11:55:32.286401-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        W0531 11:55:32.279113    2658 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:32.286403-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286404-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * If the above advice does not help, please let us know:                                                             │\n"}
{"Time":"2023-05-31T11:55:32.286408-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │      https://github.com/kubernetes/minikube/issues/new/choose                                                           │\n"}
{"Time":"2023-05-31T11:55:32.286409-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.28641-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                │\n"}
{"Time":"2023-05-31T11:55:32.286412-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * Please also attach the following file to the GitHub issue:                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286413-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_node_1c3a1297795327375b61f3ff5a4ef34c9b2fc69b_0.log    │\n"}
{"Time":"2023-05-31T11:55:32.286415-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286417-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:32.286419-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        ╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:32.286421-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286434-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * If the above advice does not help, please let us know:                                                             │\n"}
{"Time":"2023-05-31T11:55:32.286436-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │      https://github.com/kubernetes/minikube/issues/new/choose                                                           │\n"}
{"Time":"2023-05-31T11:55:32.286437-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286439-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.                                │\n"}
{"Time":"2023-05-31T11:55:32.28644-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * Please also attach the following file to the GitHub issue:                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286442-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │    * - /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube_node_1c3a1297795327375b61f3ff5a4ef34c9b2fc69b_0.log    │\n"}
{"Time":"2023-05-31T11:55:32.286443-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        │                                                                                                                         │\n"}
{"Time":"2023-05-31T11:55:32.286445-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:32.286453-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        I0531 11:55:32.282478    2658 out.go:177] \n"}
{"Time":"2023-05-31T11:55:32.286455-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:257: node start returned an error. args \"out/minikube-darwin-arm64 -p multinode-073000 node start m03 --alsologtostderr\": exit status 85\n"}
{"Time":"2023-05-31T11:55:32.286456-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:261: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status\n"}
{"Time":"2023-05-31T11:55:32.315028-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:261: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status: exit status 7 (28.62125ms)\n"}
{"Time":"2023-05-31T11:55:32.315041-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.315043-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.315045-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:32.315046-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:32.315048-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:32.31505-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:32.315051-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:32.315053-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:32.315054-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:32.315055-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.315057-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.315058-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:263: failed to run minikube status. args \"out/minikube-darwin-arm64 -p multinode-073000 status\" : exit status 7\n"}
{"Time":"2023-05-31T11:55:32.315061-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:32.315062-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.343813-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.673959ms)\n"}
{"Time":"2023-05-31T11:55:32.343832-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.343834-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:32.343836-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:32.343837-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        \n"}
{"Time":"2023-05-31T11:55:32.343839-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:32.34384-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:32.343843-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:32.343866-07:00","Action":"run","Test":"TestMultiNode/serial/RestartKeepsNodes"}
{"Time":"2023-05-31T11:55:32.343867-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"=== RUN   TestMultiNode/serial/RestartKeepsNodes\n"}
{"Time":"2023-05-31T11:55:32.343957-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:283: (dbg) Run:  out/minikube-darwin-arm64 node list -p multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.372532-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:290: (dbg) Run:  out/minikube-darwin-arm64 stop -p multinode-073000\n"}
{"Time":"2023-05-31T11:55:32.431272-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:295: (dbg) Run:  out/minikube-darwin-arm64 start -p multinode-073000 --wait=true -v=8 --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:37.605844-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:295: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p multinode-073000 --wait=true -v=8 --alsologtostderr: exit status 80 (5.173323375s)\n"}
{"Time":"2023-05-31T11:55:37.605903-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.605913-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.60592-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:55:37.605929-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:55:37.605952-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:55:37.60596-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:55:37.605967-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:55:37.605974-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:55:37.60598-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:55:37.605988-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:55:37.605995-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.606002-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:37.606009-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:37.606015-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:37.606022-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606029-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:37.606036-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:37.606043-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:37.60605-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606056-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606062-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606094-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.606104-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.606111-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:37.606121-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.458384    2668 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:37.606128-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.458484    2668 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.606136-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.458488    2668 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:37.606143-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.458491    2668 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.60615-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.458567    2668 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:37.606158-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.459528    2668 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:55:37.606167-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.474328    2668 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1503,\"bootTime\":1685557829,\"procs\":393,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:55:37.60618-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:32.474386    2668 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:55:37.606187-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.478501    2668 out.go:177] * [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:55:37.606204-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.485529    2668 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:55:37.606221-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.489497    2668 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:55:37.606229-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.485585    2668 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:37.606241-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.495516    2668 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:55:37.606248-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.498522    2668 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:55:37.606255-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.501485    2668 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:55:37.606262-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.504555    2668 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:55:37.606345-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.506193    2668 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:37.606359-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.506245    2668 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:55:37.606368-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.510489    2668 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:55:37.60638-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.517325    2668 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:55:37.606397-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.517330    2668 start.go:875] validating driver \"qemu2\" against \u0026{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T11:55:37.606459-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:2"}
{"Time":"2023-05-31T11:55:37.606472-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"62144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:55:37.606483-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.517409    2668 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:55:37.606493-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.519260    2668 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:55:37.606501-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.519284    2668 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:55:37.606509-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.519290    2668 cni.go:136] 1 nodes found, recommending kindnet\n"}
{"Time":"2023-05-31T11:55:37.606517-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.519295    2668 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:55:37.606534-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default API"}
{"Time":"2023-05-31T11:55:37.606547-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"ServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: Di"}
{"Time":"2023-05-31T11:55:37.606559-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"sableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:55:37.606568-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.519398    2668 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:37.606576-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.526500    2668 out.go:177] * Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.606585-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530469    2668 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:55:37.606592-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530490    2668 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:55:37.6066-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530498    2668 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:55:37.606608-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530545    2668 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:55:37.606617-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530551    2668 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:55:37.606625-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530610    2668 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/multinode-073000/config.json ...\n"}
{"Time":"2023-05-31T11:55:37.606632-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530899    2668 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:55:37.60664-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530910    2668 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:37.606649-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530944    2668 start.go:368] acquired machines lock for \"multinode-073000\" in 28.5µs\n"}
{"Time":"2023-05-31T11:55:37.606657-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530954    2668 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T11:55:37.606665-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.530957    2668 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T11:55:37.606673-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.531071    2668 fix.go:103] recreateIfNeeded on multinode-073000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:37.60668-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:32.531079    2668 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:37.606688-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.538460    2668 out.go:177] * Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:37.606699-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.542522    2668 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:65:d5:b8:e1:91 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:55:37.606721-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.544326    2668 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:55:37.60673-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.544344    2668 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:37.606737-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606744-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.544371    2668 fix.go:57] fixHost completed within 13.41275ms\n"}
{"Time":"2023-05-31T11:55:37.606752-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.544376    2668 start.go:83] releasing machines lock for \"multinode-073000\", held for 13.4285ms\n"}
{"Time":"2023-05-31T11:55:37.60676-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:32.544382    2668 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.60677-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:32.544409    2668 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606778-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606786-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:32.544414    2668 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:55:37.606796-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.546560    2668 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:37.606805-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.547024    2668 start.go:368] acquired machines lock for \"multinode-073000\" in 341.458µs\n"}
{"Time":"2023-05-31T11:55:37.606813-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.547198    2668 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T11:55:37.60682-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.547217    2668 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T11:55:37.606827-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.548004    2668 fix.go:103] recreateIfNeeded on multinode-073000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:37.606834-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:37.548030    2668 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:37.606845-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.553432    2668 out.go:177] * Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:37.606856-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.561628    2668 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:65:d5:b8:e1:91 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:55:37.606867-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.571017    2668 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:55:37.606874-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.571074    2668 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:37.606881-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.606889-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.571174    2668 fix.go:57] fixHost completed within 23.956959ms\n"}
{"Time":"2023-05-31T11:55:37.606896-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.571194    2668 start.go:83] releasing machines lock for \"multinode-073000\", held for 24.1375ms\n"}
{"Time":"2023-05-31T11:55:37.606905-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:37.571365    2668 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606913-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606921-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.577435    2668 out.go:177] \n"}
{"Time":"2023-05-31T11:55:37.606929-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:37.581304    2668 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606941-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:37.606962-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:37.581328    2668 out.go:239] * \n"}
{"Time":"2023-05-31T11:55:37.607073-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t* \n"}
{"Time":"2023-05-31T11:55:37.607085-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tW0531 11:55:37.584157    2668 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:37.607099-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607107-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:55:37.607114-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:55:37.607122-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607129-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:55:37.607137-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607146-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:37.607234-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:37.607245-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607256-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:55:37.607264-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:55:37.607271-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607278-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:55:37.607285-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:37.607293-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:37.607303-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tI0531 11:55:37.592411    2668 out.go:177] \n"}
{"Time":"2023-05-31T11:55:37.60731-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.607317-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:37.607324-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:297: failed to run minikube start. args \"out/minikube-darwin-arm64 node list -p multinode-073000\" : exit status 80\n"}
{"Time":"2023-05-31T11:55:37.607337-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    multinode_test.go:300: (dbg) Run:  out/minikube-darwin-arm64 node list -p multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.673974-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:37.673994-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.706607-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (32.543791ms)\n"}
{"Time":"2023-05-31T11:55:37.706623-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.706625-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.706627-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:37.706628-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.70663-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.706631-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:37.706634-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:37.706657-07:00","Action":"run","Test":"TestMultiNode/serial/DeleteNode"}
{"Time":"2023-05-31T11:55:37.706661-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"=== RUN   TestMultiNode/serial/DeleteNode\n"}
{"Time":"2023-05-31T11:55:37.706752-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:394: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 node delete m03\n"}
{"Time":"2023-05-31T11:55:37.743579-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:394: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 node delete m03: exit status 89 (36.795667ms)\n"}
{"Time":"2023-05-31T11:55:37.74359-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.743592-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.743594-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:55:37.743598-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \t  To start a cluster, run: \"minikube start -p multinode-073000\"\n"}
{"Time":"2023-05-31T11:55:37.743599-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.743604-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.743606-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:396: node stop returned an error. args \"out/minikube-darwin-arm64 -p multinode-073000 node delete m03\": exit status 89\n"}
{"Time":"2023-05-31T11:55:37.743608-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:400: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:37.772248-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:400: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr: exit status 7 (28.509791ms)\n"}
{"Time":"2023-05-31T11:55:37.772261-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.772263-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.772265-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:37.772267-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:37.772269-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:37.77227-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:37.772271-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:37.772272-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:37.772274-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.772275-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.772289-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.772292-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:37.772294-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.770762    2683 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:37.772296-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.770904    2683 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.772297-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.770907    2683 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:37.772299-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.770909    2683 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.772301-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.770976    2683 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:37.772302-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771085    2683 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:55:37.772304-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771096    2683 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.772305-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771156    2683 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:37.772307-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771273    2683 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:37.772308-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771279    2683 status.go:255] checking status of multinode-073000 ...\n"}
{"Time":"2023-05-31T11:55:37.77231-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771480    2683 status.go:330] multinode-073000 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:55:37.772312-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771483    2683 status.go:343] host is not running, skipping remaining checks\n"}
{"Time":"2023-05-31T11:55:37.772315-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tI0531 11:55:37.771485    2683 status.go:257] multinode-073000 status: \u0026{Name:multinode-073000 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:false TimeToStop: DockerEnv: PodManEnv:}\n"}
{"Time":"2023-05-31T11:55:37.772317-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.772318-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:37.77232-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:402: failed to run minikube status. args \"out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\" : exit status 7\n"}
{"Time":"2023-05-31T11:55:37.772321-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:37.772324-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.800846-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.511125ms)\n"}
{"Time":"2023-05-31T11:55:37.800861-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.800863-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.800865-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:37.800866-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.800867-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.800869-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:37.800871-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:37.800889-07:00","Action":"run","Test":"TestMultiNode/serial/StopMultiNode"}
{"Time":"2023-05-31T11:55:37.800892-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"=== RUN   TestMultiNode/serial/StopMultiNode\n"}
{"Time":"2023-05-31T11:55:37.800918-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:314: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 stop\n"}
{"Time":"2023-05-31T11:55:37.859641-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:320: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status\n"}
{"Time":"2023-05-31T11:55:37.888941-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:320: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status: exit status 7 (29.210417ms)\n"}
{"Time":"2023-05-31T11:55:37.888952-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.888954-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.888956-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:37.888957-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:37.888959-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:37.88896-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:37.888962-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:37.888963-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:37.888972-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.888976-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.888978-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.888979-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:327: (dbg) Run:  out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\n"}
{"Time":"2023-05-31T11:55:37.917827-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:327: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr: exit status 7 (28.757292ms)\n"}
{"Time":"2023-05-31T11:55:37.917843-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.917844-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.917846-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-073000\n"}
{"Time":"2023-05-31T11:55:37.917847-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2023-05-31T11:55:37.917849-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2023-05-31T11:55:37.91785-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917852-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917853-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917854-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:37.917856-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.917857-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.917861-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:37.917863-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916355    2691 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:37.917864-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916502    2691 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.917865-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916504    2691 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:37.917867-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916507    2691 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:37.917868-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916579    2691 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:37.91787-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916700    2691 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:55:37.917871-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916711    2691 mustload.go:65] Loading cluster: multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.917876-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916781    2691 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:37.917878-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916905    2691 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:37.917879-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.916910    2691 status.go:255] checking status of multinode-073000 ...\n"}
{"Time":"2023-05-31T11:55:37.917881-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.917102    2691 status.go:330] multinode-073000 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2023-05-31T11:55:37.917883-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.917105    2691 status.go:343] host is not running, skipping remaining checks\n"}
{"Time":"2023-05-31T11:55:37.917884-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0531 11:55:37.917107    2691 status.go:257] multinode-073000 status: \u0026{Name:multinode-073000 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:false TimeToStop: DockerEnv: PodManEnv:}\n"}
{"Time":"2023-05-31T11:55:37.917886-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.917887-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:37.917888-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:333: incorrect number of stopped hosts: args \"out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\": multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.91789-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        type: Control Plane\n"}
{"Time":"2023-05-31T11:55:37.917891-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        host: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917892-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        kubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917893-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        apiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917895-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        kubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917896-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.917898-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:337: incorrect number of stopped kubelets: args \"out/minikube-darwin-arm64 -p multinode-073000 status --alsologtostderr\": multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.9179-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        type: Control Plane\n"}
{"Time":"2023-05-31T11:55:37.917901-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        host: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917902-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        kubelet: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917903-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        apiserver: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917905-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        kubeconfig: Stopped\n"}
{"Time":"2023-05-31T11:55:37.917906-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.917907-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:37.917909-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:37.946027-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.06225ms)\n"}
{"Time":"2023-05-31T11:55:37.946039-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.946041-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:37.946042-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:37.946044-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:37.946045-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:37.946047-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:37.946049-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:37.946066-07:00","Action":"run","Test":"TestMultiNode/serial/RestartMultiNode"}
{"Time":"2023-05-31T11:55:37.946069-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"=== RUN   TestMultiNode/serial/RestartMultiNode\n"}
{"Time":"2023-05-31T11:55:37.946105-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:354: (dbg) Run:  out/minikube-darwin-arm64 start -p multinode-073000 --wait=true -v=8 --alsologtostderr --driver=qemu2 \n"}
{"Time":"2023-05-31T11:55:38.953802-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"E0531 11:55:38.953673    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:55:43.110024-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:354: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p multinode-073000 --wait=true -v=8 --alsologtostderr --driver=qemu2 : exit status 80 (5.162821167s)\n"}
{"Time":"2023-05-31T11:55:43.110058-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:43.110067-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:43.110074-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:55:43.110082-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:55:43.110103-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:55:43.110112-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:55:43.110119-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:55:43.110126-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:55:43.110133-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:55:43.110147-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:55:43.110154-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:55:43.110161-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:43.110168-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:43.110175-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:43.110181-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.110188-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:43.110195-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:43.110202-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:43.110209-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.110215-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.110221-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.110227-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:43.110236-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:43.110242-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:43.110251-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.972892    2695 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:55:43.110258-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.972998    2695 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:43.110267-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.973001    2695 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:55:43.110275-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.973004    2695 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:55:43.110282-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.973075    2695 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:55:43.11029-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.974000    2695 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:55:43.110298-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.988861    2695 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1508,\"bootTime\":1685557829,\"procs\":395,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:55:43.110312-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:37.989331    2695 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:55:43.11032-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.993921    2695 out.go:177] * [multinode-073000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:55:43.110327-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.998882    2695 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:55:43.110333-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:37.998910    2695 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:55:43.110341-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.001896    2695 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:55:43.110348-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.004745    2695 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:55:43.110356-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.007806    2695 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:55:43.110364-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.010829    2695 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:55:43.110371-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.012286    2695 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:55:43.11038-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.016082    2695 config.go:182] Loaded profile config \"multinode-073000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:55:43.110388-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.016327    2695 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:55:43.110395-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.020827    2695 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T11:55:43.110406-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.025814    2695 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:55:43.110423-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.025824    2695 start.go:875] validating driver \"qemu2\" against \u0026{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T11:55:43.11044-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:2"}
{"Time":"2023-05-31T11:55:43.110453-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"62144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:55:43.110461-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.025878    2695 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:55:43.11047-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.027802    2695 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:55:43.110477-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.027830    2695 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:55:43.110484-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.027835    2695 cni.go:136] 1 nodes found, recommending kindnet\n"}
{"Time":"2023-05-31T11:55:43.110491-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.027840    2695 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:55:43.110508-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t{Name:multinode-073000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:multinode-073000 Namespace:default API"}
{"Time":"2023-05-31T11:55:43.110521-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"ServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:true ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: Di"}
{"Time":"2023-05-31T11:55:43.110532-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"sableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:55:43.11054-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.027955    2695 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:43.110547-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.035810    2695 out.go:177] * Starting control plane node multinode-073000 in cluster multinode-073000\n"}
{"Time":"2023-05-31T11:55:43.110555-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039818    2695 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:55:43.110563-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039835    2695 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:55:43.110571-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039847    2695 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:55:43.110578-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039902    2695 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:55:43.110586-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039908    2695 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:55:43.110594-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.039967    2695 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/multinode-073000/config.json ...\n"}
{"Time":"2023-05-31T11:55:43.110602-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040326    2695 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:55:43.110609-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040337    2695 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:43.110617-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040363    2695 start.go:368] acquired machines lock for \"multinode-073000\" in 20.083µs\n"}
{"Time":"2023-05-31T11:55:43.110625-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040373    2695 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T11:55:43.110633-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040376    2695 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T11:55:43.110641-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.040489    2695 fix.go:103] recreateIfNeeded on multinode-073000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:43.110649-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:38.040497    2695 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:43.110657-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.048849    2695 out.go:177] * Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:43.110667-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.052879    2695 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:65:d5:b8:e1:91 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:55:43.110678-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.054689    2695 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:55:43.110686-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.054705    2695 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:43.110693-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.1107-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.054733    2695 fix.go:57] fixHost completed within 14.356166ms\n"}
{"Time":"2023-05-31T11:55:43.110707-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.054742    2695 start.go:83] releasing machines lock for \"multinode-073000\", held for 14.375541ms\n"}
{"Time":"2023-05-31T11:55:43.110715-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:38.054750    2695 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110724-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:38.054790    2695 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110733-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110742-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:38.054795    2695 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:55:43.110831-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.056855    2695 start.go:364] acquiring machines lock for multinode-073000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:55:43.11084-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.057101    2695 start.go:368] acquired machines lock for \"multinode-073000\" in 180.25µs\n"}
{"Time":"2023-05-31T11:55:43.110849-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.057177    2695 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T11:55:43.110856-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.057188    2695 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T11:55:43.110864-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.057559    2695 fix.go:103] recreateIfNeeded on multinode-073000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:43.110872-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:43.057575    2695 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:55:43.11088-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.061399    2695 out.go:177] * Restarting existing qemu2 VM for \"multinode-073000\" ...\n"}
{"Time":"2023-05-31T11:55:43.110891-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.068620    2695 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:65:d5:b8:e1:91 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/multinode-073000/disk.qcow2\n"}
{"Time":"2023-05-31T11:55:43.110903-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.076731    2695 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:55:43.110911-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.076797    2695 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:43.110919-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:43.110926-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.076906    2695 fix.go:57] fixHost completed within 19.715291ms\n"}
{"Time":"2023-05-31T11:55:43.110933-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.076959    2695 start.go:83] releasing machines lock for \"multinode-073000\", held for 19.84175ms\n"}
{"Time":"2023-05-31T11:55:43.110941-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:43.077220    2695 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.11095-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110958-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.084451    2695 out.go:177] \n"}
{"Time":"2023-05-31T11:55:43.110965-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:43.087396    2695 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110974-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:43.110981-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:43.087442    2695 out.go:239] * \n"}
{"Time":"2023-05-31T11:55:43.110988-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t* \n"}
{"Time":"2023-05-31T11:55:43.110996-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tW0531 11:55:43.089829    2695 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:43.111006-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.111014-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:55:43.111021-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:55:43.111029-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.111036-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:55:43.111043-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.11105-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:43.111063-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:43.111073-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.11108-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:55:43.111088-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:55:43.111095-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.111102-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:55:43.11111-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:43.111118-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:43.111128-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tI0531 11:55:43.098348    2695 out.go:177] \n"}
{"Time":"2023-05-31T11:55:43.111135-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:43.111142-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:43.11115-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:356: failed to start cluster. args \"out/minikube-darwin-arm64 start -p multinode-073000 --wait=true -v=8 --alsologtostderr --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:55:43.111162-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:55:43.11117-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:55:43.16827-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (58.0765ms)\n"}
{"Time":"2023-05-31T11:55:43.168284-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:43.168286-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:43.168288-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:55:43.168289-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:55:43.168291-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:43.168292-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:55:43.168299-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:55:43.168322-07:00","Action":"run","Test":"TestMultiNode/serial/ValidateNameConflict"}
{"Time":"2023-05-31T11:55:43.168324-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"=== RUN   TestMultiNode/serial/ValidateNameConflict\n"}
{"Time":"2023-05-31T11:55:43.168366-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:443: (dbg) Run:  out/minikube-darwin-arm64 node list -p multinode-073000\n"}
{"Time":"2023-05-31T11:55:43.199203-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:452: (dbg) Run:  out/minikube-darwin-arm64 start -p multinode-073000-m01 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:55:53.078713-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:452: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p multinode-073000-m01 --driver=qemu2 : exit status 80 (9.879078875s)\n"}
{"Time":"2023-05-31T11:55:53.07877-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:55:53.07878-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:55:53.078788-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* [multinode-073000-m01] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:55:53.078796-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:55:53.078805-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:55:53.078814-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:55:53.078821-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:55:53.078828-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:55:53.078836-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:55:53.078843-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:55:53.07885-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:55:53.078857-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Starting control plane node multinode-073000-m01 in cluster multinode-073000-m01\n"}
{"Time":"2023-05-31T11:55:53.078864-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:55:53.07887-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:53.078877-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:53.078883-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:53.07889-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Deleting \"multinode-073000-m01\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:55:53.078897-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:55:53.078904-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:55:53.078924-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:55:53.078931-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:53.078937-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:53.078943-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:55:53.078949-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:55:53.078956-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:55:53.078962-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:55:53.078969-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:53.078979-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000-m01\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:53.078988-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:55:53.078995-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* \n"}
{"Time":"2023-05-31T11:55:53.079004-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:55:53.079014-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:53.079027-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:55:53.079034-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:55:53.079042-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:53.079049-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:55:53.079057-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:55:53.079065-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:55:53.079074-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:55:53.07908-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:55:53.079091-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:460: (dbg) Run:  out/minikube-darwin-arm64 start -p multinode-073000-m02 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:55:59.436224-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"E0531 11:55:59.436099    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:56:02.901142-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:460: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p multinode-073000-m02 --driver=qemu2 : exit status 80 (9.822059666s)\n"}
{"Time":"2023-05-31T11:56:02.901203-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:02.901213-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:02.901222-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* [multinode-073000-m02] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:02.90123-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:02.901238-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:02.901262-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:02.90127-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:02.901277-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:02.901285-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:02.901291-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:02.901299-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:02.901334-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Starting control plane node multinode-073000-m02 in cluster multinode-073000-m02\n"}
{"Time":"2023-05-31T11:56:02.901342-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:02.901348-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:02.901356-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:02.901363-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:02.901369-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Deleting \"multinode-073000-m02\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:02.901377-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:02.901383-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:02.901391-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:02.901399-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:02.901405-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:02.901411-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:02.901417-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:02.901423-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:02.90143-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:02.901437-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:02.901446-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p multinode-073000-m02\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:02.901455-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:02.901462-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:02.901473-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:02.901485-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:02.901493-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:02.901501-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:02.901508-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:02.901515-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:02.901523-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:02.901531-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:02.90154-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:02.901547-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:02.901558-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:462: failed to start profile. args \"out/minikube-darwin-arm64 start -p multinode-073000-m02 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:56:02.901566-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:467: (dbg) Run:  out/minikube-darwin-arm64 node add -p multinode-073000\n"}
{"Time":"2023-05-31T11:56:02.980849-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:467: (dbg) Non-zero exit: out/minikube-darwin-arm64 node add -p multinode-073000: exit status 89 (79.507959ms)\n"}
{"Time":"2023-05-31T11:56:02.980876-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:02.980879-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:02.980881-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:56:02.980884-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \t  To start a cluster, run: \"minikube start -p multinode-073000\"\n"}
{"Time":"2023-05-31T11:56:02.980886-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:02.980887-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:02.980891-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    multinode_test.go:472: (dbg) Run:  out/minikube-darwin-arm64 delete -p multinode-073000-m02\n"}
{"Time":"2023-05-31T11:56:03.078397-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:03.078415-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:56:03.107059-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (28.555083ms)\n"}
{"Time":"2023-05-31T11:56:03.107075-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:03.107077-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:03.107079-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:03.107081-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        \n"}
{"Time":"2023-05-31T11:56:03.107082-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:03.107083-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:03.107085-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:03.107089-07:00","Action":"output","Test":"TestMultiNode","Output":"    multinode_test.go:79: *** TestMultiNode FAILED at 2023-05-31 11:56:03.107065 -0700 PDT m=+797.287881167\n"}
{"Time":"2023-05-31T11:56:03.107099-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:03.107131-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000\n"}
{"Time":"2023-05-31T11:56:03.134763-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p multinode-073000 -n multinode-073000: exit status 7 (27.556584ms)\n"}
{"Time":"2023-05-31T11:56:03.134777-07:00","Action":"output","Test":"TestMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:56:03.134779-07:00","Action":"output","Test":"TestMultiNode","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:03.134781-07:00","Action":"output","Test":"TestMultiNode","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:03.134782-07:00","Action":"output","Test":"TestMultiNode","Output":"        \n"}
{"Time":"2023-05-31T11:56:03.134784-07:00","Action":"output","Test":"TestMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:03.134785-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:03.134787-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:241: \"multinode-073000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:03.134789-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:175: Cleaning up \"multinode-073000\" profile ...\n"}
{"Time":"2023-05-31T11:56:03.134791-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p multinode-073000\n"}
{"Time":"2023-05-31T11:56:03.227575-07:00","Action":"output","Test":"TestMultiNode","Output":"--- FAIL: TestMultiNode (153.43s)\n"}
{"Time":"2023-05-31T11:56:03.227588-07:00","Action":"output","Test":"TestMultiNode/serial","Output":"    --- FAIL: TestMultiNode/serial (153.31s)\n"}
{"Time":"2023-05-31T11:56:03.227591-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        --- FAIL: TestMultiNode/serial/FreshStart2Nodes (10.14s)\n"}
{"Time":"2023-05-31T11:56:03.227593-07:00","Action":"fail","Test":"TestMultiNode/serial/FreshStart2Nodes","Elapsed":10.14}
{"Time":"2023-05-31T11:56:03.227597-07:00","Action":"output","Test":"TestMultiNode/serial/DeployApp2Nodes","Output":"        --- FAIL: TestMultiNode/serial/DeployApp2Nodes (111.86s)\n"}
{"Time":"2023-05-31T11:56:03.227598-07:00","Action":"fail","Test":"TestMultiNode/serial/DeployApp2Nodes","Elapsed":111.86}
{"Time":"2023-05-31T11:56:03.2276-07:00","Action":"output","Test":"TestMultiNode/serial/PingHostFrom2Pods","Output":"        --- FAIL: TestMultiNode/serial/PingHostFrom2Pods (0.08s)\n"}
{"Time":"2023-05-31T11:56:03.227603-07:00","Action":"fail","Test":"TestMultiNode/serial/PingHostFrom2Pods","Elapsed":0.08}
{"Time":"2023-05-31T11:56:03.227604-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        --- FAIL: TestMultiNode/serial/AddNode (0.07s)\n"}
{"Time":"2023-05-31T11:56:03.227606-07:00","Action":"fail","Test":"TestMultiNode/serial/AddNode","Elapsed":0.07}
{"Time":"2023-05-31T11:56:03.227608-07:00","Action":"output","Test":"TestMultiNode/serial/ProfileList","Output":"        --- FAIL: TestMultiNode/serial/ProfileList (0.10s)\n"}
{"Time":"2023-05-31T11:56:03.227609-07:00","Action":"fail","Test":"TestMultiNode/serial/ProfileList","Elapsed":0.1}
{"Time":"2023-05-31T11:56:03.227611-07:00","Action":"output","Test":"TestMultiNode/serial/CopyFile","Output":"        --- FAIL: TestMultiNode/serial/CopyFile (0.06s)\n"}
{"Time":"2023-05-31T11:56:03.227612-07:00","Action":"fail","Test":"TestMultiNode/serial/CopyFile","Elapsed":0.06}
{"Time":"2023-05-31T11:56:03.227614-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        --- FAIL: TestMultiNode/serial/StopNode (0.13s)\n"}
{"Time":"2023-05-31T11:56:03.227615-07:00","Action":"fail","Test":"TestMultiNode/serial/StopNode","Elapsed":0.13}
{"Time":"2023-05-31T11:56:03.227616-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        --- FAIL: TestMultiNode/serial/StartAfterStop (0.10s)\n"}
{"Time":"2023-05-31T11:56:03.227618-07:00","Action":"fail","Test":"TestMultiNode/serial/StartAfterStop","Elapsed":0.1}
{"Time":"2023-05-31T11:56:03.227619-07:00","Action":"output","Test":"TestMultiNode/serial/RestartKeepsNodes","Output":"        --- FAIL: TestMultiNode/serial/RestartKeepsNodes (5.36s)\n"}
{"Time":"2023-05-31T11:56:03.227621-07:00","Action":"fail","Test":"TestMultiNode/serial/RestartKeepsNodes","Elapsed":5.36}
{"Time":"2023-05-31T11:56:03.227622-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        --- FAIL: TestMultiNode/serial/DeleteNode (0.09s)\n"}
{"Time":"2023-05-31T11:56:03.227624-07:00","Action":"fail","Test":"TestMultiNode/serial/DeleteNode","Elapsed":0.09}
{"Time":"2023-05-31T11:56:03.227625-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        --- FAIL: TestMultiNode/serial/StopMultiNode (0.15s)\n"}
{"Time":"2023-05-31T11:56:03.227626-07:00","Action":"fail","Test":"TestMultiNode/serial/StopMultiNode","Elapsed":0.15}
{"Time":"2023-05-31T11:56:03.227628-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        --- FAIL: TestMultiNode/serial/RestartMultiNode (5.22s)\n"}
{"Time":"2023-05-31T11:56:03.227629-07:00","Action":"fail","Test":"TestMultiNode/serial/RestartMultiNode","Elapsed":5.22}
{"Time":"2023-05-31T11:56:03.227631-07:00","Action":"output","Test":"TestMultiNode/serial/ValidateNameConflict","Output":"        --- FAIL: TestMultiNode/serial/ValidateNameConflict (19.94s)\n"}
{"Time":"2023-05-31T11:56:03.227635-07:00","Action":"fail","Test":"TestMultiNode/serial/ValidateNameConflict","Elapsed":19.94}
{"Time":"2023-05-31T11:56:03.227636-07:00","Action":"fail","Test":"TestMultiNode/serial","Elapsed":153.31}
{"Time":"2023-05-31T11:56:03.227637-07:00","Action":"fail","Test":"TestMultiNode","Elapsed":153.43}
{"Time":"2023-05-31T11:56:03.227639-07:00","Action":"run","Test":"TestNetworkPlugins"}
{"Time":"2023-05-31T11:56:03.227641-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== RUN   TestNetworkPlugins\n"}
{"Time":"2023-05-31T11:56:03.227642-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== PAUSE TestNetworkPlugins\n"}
{"Time":"2023-05-31T11:56:03.227643-07:00","Action":"pause","Test":"TestNetworkPlugins"}
{"Time":"2023-05-31T11:56:03.227645-07:00","Action":"run","Test":"TestNoKubernetes"}
{"Time":"2023-05-31T11:56:03.227646-07:00","Action":"output","Test":"TestNoKubernetes","Output":"=== RUN   TestNoKubernetes\n"}
{"Time":"2023-05-31T11:56:03.227648-07:00","Action":"output","Test":"TestNoKubernetes","Output":"=== PAUSE TestNoKubernetes\n"}
{"Time":"2023-05-31T11:56:03.227649-07:00","Action":"pause","Test":"TestNoKubernetes"}
{"Time":"2023-05-31T11:56:03.227651-07:00","Action":"run","Test":"TestPause"}
{"Time":"2023-05-31T11:56:03.227658-07:00","Action":"output","Test":"TestPause","Output":"=== RUN   TestPause\n"}
{"Time":"2023-05-31T11:56:03.22766-07:00","Action":"output","Test":"TestPause","Output":"=== PAUSE TestPause\n"}
{"Time":"2023-05-31T11:56:03.227662-07:00","Action":"pause","Test":"TestPause"}
{"Time":"2023-05-31T11:56:03.227663-07:00","Action":"run","Test":"TestPreload"}
{"Time":"2023-05-31T11:56:03.227664-07:00","Action":"output","Test":"TestPreload","Output":"=== RUN   TestPreload\n"}
{"Time":"2023-05-31T11:56:03.227723-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:44: (dbg) Run:  out/minikube-darwin-arm64 start -p test-preload-670000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912334-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:44: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p test-preload-670000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.24.4: exit status 80 (9.680734s)\n"}
{"Time":"2023-05-31T11:56:12.912386-07:00","Action":"output","Test":"TestPreload","Output":"        \n"}
{"Time":"2023-05-31T11:56:12.912394-07:00","Action":"output","Test":"TestPreload","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:12.9124-07:00","Action":"output","Test":"TestPreload","Output":"        \t* [test-preload-670000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:12.912406-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:12.912412-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:12.912418-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:12.912456-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:12.912462-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:12.912471-07:00","Action":"output","Test":"TestPreload","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:12.912476-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:12.912483-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:12.912488-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Starting control plane node test-preload-670000 in cluster test-preload-670000\n"}
{"Time":"2023-05-31T11:56:12.912493-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:12.912498-07:00","Action":"output","Test":"TestPreload","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:12.912503-07:00","Action":"output","Test":"TestPreload","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:12.912508-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.912513-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Deleting \"test-preload-670000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:12.912519-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:12.912523-07:00","Action":"output","Test":"TestPreload","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:12.912528-07:00","Action":"output","Test":"TestPreload","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:12.912533-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.912537-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.912542-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.912546-07:00","Action":"output","Test":"TestPreload","Output":"        \n"}
{"Time":"2023-05-31T11:56:12.91255-07:00","Action":"output","Test":"TestPreload","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:12.912555-07:00","Action":"output","Test":"TestPreload","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:12.912559-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.255133    2748 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:56:12.912564-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.255259    2748 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:12.91257-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.255262    2748 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:56:12.912575-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.255264    2748 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:12.91258-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.255349    2748 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:56:12.912586-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.256386    2748 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:56:12.912592-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.272687    2748 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1534,\"bootTime\":1685557829,\"procs\":395,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:56:12.912606-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:03.272769    2748 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:56:12.912612-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.277829    2748 out.go:177] * [test-preload-670000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:12.912625-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.284739    2748 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:12.91263-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.284783    2748 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:56:12.912635-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.288786    2748 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:12.912643-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.291697    2748 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:12.912648-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.294745    2748 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:12.912653-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.297745    2748 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:12.912658-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.300720    2748 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:12.912663-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.304104    2748 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:56:12.912669-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.304159    2748 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:56:12.912674-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.308760    2748 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:12.912679-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.315728    2748 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:56:12.912684-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.315732    2748 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:56:12.91269-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.315739    2748 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:56:12.912697-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.317724    2748 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:56:12.912703-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.320753    2748 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:12.912708-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322301    2748 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:56:12.912717-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322321    2748 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:56:12.912722-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322338    2748 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:56:12.912728-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322342    2748 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:56:12.912736-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322348    2748 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:56:12.912746-07:00","Action":"output","Test":"TestPreload","Output":"        \t{Name:test-preload-670000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.4 ClusterName:test-preload-670000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRunti"}
{"Time":"2023-05-31T11:56:12.912757-07:00","Action":"output","Test":"TestPreload","Output":"me:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:56:12.912765-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.322444    2748 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912771-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.325759    2748 out.go:177] * Starting control plane node test-preload-670000 in cluster test-preload-670000\n"}
{"Time":"2023-05-31T11:56:12.912777-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333764    2748 preload.go:132] Checking if preload exists for k8s version v1.24.4 and runtime docker\n"}
{"Time":"2023-05-31T11:56:12.912782-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333890    2748 cache.go:107] acquiring lock: {Name:mkacf8fbbf11b6085b8f8b174458d19be6a371f6 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912787-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333898    2748 cache.go:107] acquiring lock: {Name:mk8806405f390f3cec717bbe4f9b348a64d9d691 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912793-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333913    2748 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/test-preload-670000/config.json ...\n"}
{"Time":"2023-05-31T11:56:12.912799-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333911    2748 cache.go:107] acquiring lock: {Name:mk388546a22ef69258c2ea51c037b5253866d7e5 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912806-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.333928    2748 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/test-preload-670000/config.json: {Name:mk7df3889d67643f56761840ae5dcd8cfb1eb841 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912812-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334057    2748 cache.go:107] acquiring lock: {Name:mk07836831ba4e3d8a06627d78de75bd69d47e2e Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912818-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334086    2748 image.go:134] retrieving image: registry.k8s.io/kube-apiserver:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912823-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334098    2748 image.go:134] retrieving image: registry.k8s.io/kube-controller-manager:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912828-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334140    2748 cache.go:107] acquiring lock: {Name:mk4d318610bb1dc2f2601eb15b5b67be21bbf832 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912834-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334120    2748 cache.go:107] acquiring lock: {Name:mk8fef8c24ee17f49648b829fa661de004c3f333 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.91284-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334215    2748 cache.go:107] acquiring lock: {Name:mk4c9fb7cf2869fe4b7db77d9782b183ef358b3a Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912845-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334236    2748 image.go:134] retrieving image: registry.k8s.io/coredns/coredns:v1.8.6\n"}
{"Time":"2023-05-31T11:56:12.912851-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334241    2748 image.go:134] retrieving image: gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:56:12.912855-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334251    2748 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:56:12.912861-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334267    2748 start.go:364] acquiring machines lock for test-preload-670000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912867-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334266    2748 cache.go:107] acquiring lock: {Name:mk0d7cb783b331811a1f56e709f89325db7869a0 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.912872-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334299    2748 start.go:368] acquired machines lock for \"test-preload-670000\" in 26.75µs\n"}
{"Time":"2023-05-31T11:56:12.912887-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334327    2748 start.go:93] Provisioning new machine with config: \u0026{Name:test-preload-670000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kubernete"}
{"Time":"2023-05-31T11:56:12.912898-07:00","Action":"output","Test":"TestPreload","Output":"sConfig:{KubernetesVersion:v1.24.4 ClusterName:test-preload-670000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.24.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Mo"}
{"Time":"2023-05-31T11:56:12.912918-07:00","Action":"output","Test":"TestPreload","Output":"untMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.24.4 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:12.912925-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334358    2748 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:12.912931-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334371    2748 image.go:134] retrieving image: registry.k8s.io/etcd:3.5.3-0\n"}
{"Time":"2023-05-31T11:56:12.912936-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334354    2748 image.go:134] retrieving image: registry.k8s.io/kube-scheduler:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912942-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.342710    2748 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:12.912947-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334465    2748 image.go:134] retrieving image: registry.k8s.io/pause:3.7\n"}
{"Time":"2023-05-31T11:56:12.912952-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.334509    2748 image.go:134] retrieving image: registry.k8s.io/kube-proxy:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912958-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.350065    2748 image.go:177] daemon lookup for registry.k8s.io/kube-controller-manager:v1.24.4: Error response from daemon: No such image: registry.k8s.io/kube-controller-manager:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912964-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.350687    2748 image.go:177] daemon lookup for registry.k8s.io/kube-scheduler:v1.24.4: Error response from daemon: No such image: registry.k8s.io/kube-scheduler:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.91297-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.350816    2748 image.go:177] daemon lookup for registry.k8s.io/kube-apiserver:v1.24.4: Error response from daemon: No such image: registry.k8s.io/kube-apiserver:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912976-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.350860    2748 image.go:177] daemon lookup for gcr.io/k8s-minikube/storage-provisioner:v5: Error response from daemon: No such image: gcr.io/k8s-minikube/storage-provisioner:v5\n"}
{"Time":"2023-05-31T11:56:12.912981-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.350887    2748 image.go:177] daemon lookup for registry.k8s.io/coredns/coredns:v1.8.6: Error response from daemon: No such image: registry.k8s.io/coredns/coredns:v1.8.6\n"}
{"Time":"2023-05-31T11:56:12.91299-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.354141    2748 image.go:177] daemon lookup for registry.k8s.io/kube-proxy:v1.24.4: Error response from daemon: No such image: registry.k8s.io/kube-proxy:v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.912996-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.354184    2748 image.go:177] daemon lookup for registry.k8s.io/etcd:3.5.3-0: Error response from daemon: No such image: registry.k8s.io/etcd:3.5.3-0\n"}
{"Time":"2023-05-31T11:56:12.913001-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.354285    2748 image.go:177] daemon lookup for registry.k8s.io/pause:3.7: Error response from daemon: No such image: registry.k8s.io/pause:3.7\n"}
{"Time":"2023-05-31T11:56:12.913007-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358570    2748 start.go:159] libmachine.API.Create for \"test-preload-670000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:12.913012-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358583    2748 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:12.913018-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358638    2748 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:12.913023-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358658    2748 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:12.913028-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358666    2748 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:12.913034-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358714    2748 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:12.91304-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358729    2748 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:12.913045-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.358738    2748 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:12.913051-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.359045    2748 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:12.913057-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.481134    2748 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:12.913062-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.550159    2748 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:12.913068-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.550169    2748 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:12.913073-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.550304    2748 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.91308-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.559504    2748 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:12.913085-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.559525    2748 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:12.91309-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.559593    2748 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:12.913095-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.567653    2748 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:12.9131-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.913105-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.567669    2748 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:12.913111-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.567686    2748 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.913117-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.567694    2748 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:12.913125-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.567728    2748 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/qemu.pid -device virtio-net-pci,netdev=net0,mac=a2:5a:33:3b:77:75 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.913134-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.569543    2748 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:12.91314-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.569557    2748 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:12.913145-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.913151-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:03.569575    2748 client.go:171] LocalClient.Create took 210.99025ms\n"}
{"Time":"2023-05-31T11:56:12.913156-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:04.628712    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.913162-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:04.786843    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.913168-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:04.792304    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.913174-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:04.981709    2748 image.go:265] image registry.k8s.io/coredns/coredns:v1.8.6 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:56:12.913179-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:04.981743    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.8.6\n"}
{"Time":"2023-05-31T11:56:12.913186-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:05.102910    2748 image.go:265] image gcr.io/k8s-minikube/storage-provisioner:v5 arch mismatch: want arm64 got amd64. fixing\n"}
{"Time":"2023-05-31T11:56:12.913192-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.102936    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5\n"}
{"Time":"2023-05-31T11:56:12.913198-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.180087    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.24.4\n"}
{"Time":"2023-05-31T11:56:12.913204-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.306673    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.3-0\n"}
{"Time":"2023-05-31T11:56:12.913209-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.534755    2748 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.7\n"}
{"Time":"2023-05-31T11:56:12.913214-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.569758    2748 start.go:128] duration metric: createHost completed in 2.23541025s\n"}
{"Time":"2023-05-31T11:56:12.91322-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.569804    2748 start.go:83] releasing machines lock for \"test-preload-670000\", held for 2.23552575s\n"}
{"Time":"2023-05-31T11:56:12.913225-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:05.569870    2748 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913231-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.581894    2748 out.go:177] * Deleting \"test-preload-670000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:12.913236-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:05.598502    2748 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913242-07:00","Action":"output","Test":"TestPreload","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913247-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.598537    2748 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:56:12.913254-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.674677    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 exists\n"}
{"Time":"2023-05-31T11:56:12.91326-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.674719    2748 cache.go:96] cache image \"gcr.io/k8s-minikube/storage-provisioner:v5\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5\" took 2.340851791s\n"}
{"Time":"2023-05-31T11:56:12.913266-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.674766    2748 cache.go:80] save to tar file gcr.io/k8s-minikube/storage-provisioner:v5 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913275-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.679465    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.7 exists\n"}
{"Time":"2023-05-31T11:56:12.91328-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.679493    2748 cache.go:96] cache image \"registry.k8s.io/pause:3.7\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.7\" took 2.345490209s\n"}
{"Time":"2023-05-31T11:56:12.913287-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:05.679514    2748 cache.go:80] save to tar file registry.k8s.io/pause:3.7 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.7 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913293-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.251452    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.24.4 exists\n"}
{"Time":"2023-05-31T11:56:12.913299-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.251500    2748 cache.go:96] cache image \"registry.k8s.io/kube-scheduler:v1.24.4\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.24.4\" took 3.91734325s\n"}
{"Time":"2023-05-31T11:56:12.913306-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.251538    2748 cache.go:80] save to tar file registry.k8s.io/kube-scheduler:v1.24.4 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.24.4 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913312-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.611692    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.8.6 exists\n"}
{"Time":"2023-05-31T11:56:12.913318-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.611764    2748 cache.go:96] cache image \"registry.k8s.io/coredns/coredns:v1.8.6\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.8.6\" took 4.277763875s\n"}
{"Time":"2023-05-31T11:56:12.913325-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:07.611798    2748 cache.go:80] save to tar file registry.k8s.io/coredns/coredns:v1.8.6 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.8.6 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913331-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:08.288827    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.24.4 exists\n"}
{"Time":"2023-05-31T11:56:12.913337-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:08.288871    2748 cache.go:96] cache image \"registry.k8s.io/kube-controller-manager:v1.24.4\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.24.4\" took 4.955040083s\n"}
{"Time":"2023-05-31T11:56:12.913344-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:08.288931    2748 cache.go:80] save to tar file registry.k8s.io/kube-controller-manager:v1.24.4 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.24.4 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913351-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:09.528913    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.24.4 exists\n"}
{"Time":"2023-05-31T11:56:12.913357-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:09.528964    2748 cache.go:96] cache image \"registry.k8s.io/kube-apiserver:v1.24.4\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.24.4\" took 6.195174667s\n"}
{"Time":"2023-05-31T11:56:12.913363-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:09.528990    2748 cache.go:80] save to tar file registry.k8s.io/kube-apiserver:v1.24.4 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.24.4 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913369-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.346106    2748 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.24.4 exists\n"}
{"Time":"2023-05-31T11:56:12.913375-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.346175    2748 cache.go:96] cache image \"registry.k8s.io/kube-proxy:v1.24.4\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.24.4\" took 7.012052333s\n"}
{"Time":"2023-05-31T11:56:12.913382-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.346202    2748 cache.go:80] save to tar file registry.k8s.io/kube-proxy:v1.24.4 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.24.4 succeeded\n"}
{"Time":"2023-05-31T11:56:12.913388-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.598637    2748 start.go:364] acquiring machines lock for test-preload-670000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:12.913394-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.599020    2748 start.go:368] acquired machines lock for \"test-preload-670000\" in 307.792µs\n"}
{"Time":"2023-05-31T11:56:12.913405-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.599145    2748 start.go:93] Provisioning new machine with config: \u0026{Name:test-preload-670000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kubernete"}
{"Time":"2023-05-31T11:56:12.913484-07:00","Action":"output","Test":"TestPreload","Output":"sConfig:{KubernetesVersion:v1.24.4 ClusterName:test-preload-670000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.24.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Mo"}
{"Time":"2023-05-31T11:56:12.913496-07:00","Action":"output","Test":"TestPreload","Output":"untMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.24.4 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:12.913503-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.599432    2748 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:12.913508-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.607993    2748 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:12.913514-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655079    2748 start.go:159] libmachine.API.Create for \"test-preload-670000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:12.913519-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655110    2748 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:12.913525-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655273    2748 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:12.91353-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655313    2748 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:12.913535-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655333    2748 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:12.913541-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655407    2748 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:12.913546-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655434    2748 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:12.913551-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.655452    2748 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:12.913557-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.658013    2748 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:12.913562-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.813521    2748 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:12.913567-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.849240    2748 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:12.913573-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.849247    2748 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:12.913579-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.849409    2748 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.913585-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.857996    2748 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:12.913591-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.858013    2748 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:12.913604-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.858070    2748 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:12.913611-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.865465    2748 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:12.913616-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.913621-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.865482    2748 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:12.913627-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.865499    2748 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.913634-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.865503    2748 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:12.913642-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.865542    2748 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/qemu.pid -device virtio-net-pci,netdev=net0,mac=7a:5c:30:5e:43:16 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/test-preload-670000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:12.913651-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.867184    2748 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:12.913656-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.867206    2748 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:12.913662-07:00","Action":"output","Test":"TestPreload","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:12.913667-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:10.867217    2748 client.go:171] LocalClient.Create took 212.104667ms\n"}
{"Time":"2023-05-31T11:56:12.913672-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:12.868421    2748 start.go:128] duration metric: createHost completed in 2.268976458s\n"}
{"Time":"2023-05-31T11:56:12.913677-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:12.868493    2748 start.go:83] releasing machines lock for \"test-preload-670000\", held for 2.269469s\n"}
{"Time":"2023-05-31T11:56:12.913683-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:12.868739    2748 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p test-preload-670000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913695-07:00","Action":"output","Test":"TestPreload","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p test-preload-670000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913701-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:12.878146    2748 out.go:177] \n"}
{"Time":"2023-05-31T11:56:12.913707-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:12.882280    2748 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.913714-07:00","Action":"output","Test":"TestPreload","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:12.91372-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:12.882319    2748 out.go:239] * \n"}
{"Time":"2023-05-31T11:56:12.913725-07:00","Action":"output","Test":"TestPreload","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:12.913731-07:00","Action":"output","Test":"TestPreload","Output":"        \tW0531 11:56:12.884803    2748 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:12.913739-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.913744-07:00","Action":"output","Test":"TestPreload","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:12.91375-07:00","Action":"output","Test":"TestPreload","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:12.913755-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.913761-07:00","Action":"output","Test":"TestPreload","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:12.913766-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.913772-07:00","Action":"output","Test":"TestPreload","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:12.913781-07:00","Action":"output","Test":"TestPreload","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:12.913789-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.913794-07:00","Action":"output","Test":"TestPreload","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:12.913799-07:00","Action":"output","Test":"TestPreload","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:12.913805-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.91381-07:00","Action":"output","Test":"TestPreload","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:12.913815-07:00","Action":"output","Test":"TestPreload","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:12.913821-07:00","Action":"output","Test":"TestPreload","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:12.913828-07:00","Action":"output","Test":"TestPreload","Output":"        \tI0531 11:56:12.895267    2748 out.go:177] \n"}
{"Time":"2023-05-31T11:56:12.913833-07:00","Action":"output","Test":"TestPreload","Output":"        \n"}
{"Time":"2023-05-31T11:56:12.913838-07:00","Action":"output","Test":"TestPreload","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:12.913844-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:46: out/minikube-darwin-arm64 start -p test-preload-670000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.24.4 failed: exit status 80\n"}
{"Time":"2023-05-31T11:56:12.913849-07:00","Action":"output","Test":"TestPreload","Output":"    panic.go:522: *** TestPreload FAILED at 2023-05-31 11:56:12.912282 -0700 PDT m=+807.093240001\n"}
{"Time":"2023-05-31T11:56:12.913855-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:12.91386-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p test-preload-670000 -n test-preload-670000\n"}
{"Time":"2023-05-31T11:56:12.978581-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p test-preload-670000 -n test-preload-670000: exit status 7 (65.978417ms)\n"}
{"Time":"2023-05-31T11:56:12.978604-07:00","Action":"output","Test":"TestPreload","Output":"        \n"}
{"Time":"2023-05-31T11:56:12.978607-07:00","Action":"output","Test":"TestPreload","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:12.97861-07:00","Action":"output","Test":"TestPreload","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:12.978618-07:00","Action":"output","Test":"TestPreload","Output":"        \n"}
{"Time":"2023-05-31T11:56:12.978619-07:00","Action":"output","Test":"TestPreload","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:12.978622-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:12.978624-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:241: \"test-preload-670000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:12.978628-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:175: Cleaning up \"test-preload-670000\" profile ...\n"}
{"Time":"2023-05-31T11:56:12.978632-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p test-preload-670000\n"}
{"Time":"2023-05-31T11:56:13.072122-07:00","Action":"output","Test":"TestPreload","Output":"--- FAIL: TestPreload (9.84s)\n"}
{"Time":"2023-05-31T11:56:13.072147-07:00","Action":"fail","Test":"TestPreload","Elapsed":9.84}
{"Time":"2023-05-31T11:56:13.072151-07:00","Action":"run","Test":"TestScheduledStopWindows"}
{"Time":"2023-05-31T11:56:13.072152-07:00","Action":"output","Test":"TestScheduledStopWindows","Output":"=== RUN   TestScheduledStopWindows\n"}
{"Time":"2023-05-31T11:56:13.072191-07:00","Action":"output","Test":"TestScheduledStopWindows","Output":"    scheduled_stop_test.go:42: test only runs on windows\n"}
{"Time":"2023-05-31T11:56:13.072203-07:00","Action":"output","Test":"TestScheduledStopWindows","Output":"--- SKIP: TestScheduledStopWindows (0.00s)\n"}
{"Time":"2023-05-31T11:56:13.072207-07:00","Action":"skip","Test":"TestScheduledStopWindows","Elapsed":0}
{"Time":"2023-05-31T11:56:13.072208-07:00","Action":"run","Test":"TestScheduledStopUnix"}
{"Time":"2023-05-31T11:56:13.07221-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"=== RUN   TestScheduledStopUnix\n"}
{"Time":"2023-05-31T11:56:13.072302-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    scheduled_stop_test.go:128: (dbg) Run:  out/minikube-darwin-arm64 start -p scheduled-stop-208000 --memory=2048 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:56:23.005052-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    scheduled_stop_test.go:128: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p scheduled-stop-208000 --memory=2048 --driver=qemu2 : exit status 80 (9.93227725s)\n"}
{"Time":"2023-05-31T11:56:23.00511-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.00512-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:23.005128-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* [scheduled-stop-208000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:23.005149-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:23.005158-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:23.005165-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:23.005172-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:23.005179-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:23.005187-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:23.005195-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:23.005201-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:23.005209-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Starting control plane node scheduled-stop-208000 in cluster scheduled-stop-208000\n"}
{"Time":"2023-05-31T11:56:23.005216-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:23.005223-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:23.005231-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:23.005238-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005245-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Deleting \"scheduled-stop-208000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:23.005252-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:23.005259-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:23.00527-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:23.005277-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005284-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.00529-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005297-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.005303-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:23.00531-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:23.005317-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.005326-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p scheduled-stop-208000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.005335-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.005343-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:23.005351-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:23.005361-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.005371-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:23.005378-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:23.005386-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.005394-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:23.005402-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.00541-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:23.005419-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.005426-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:23.005438-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    scheduled_stop_test.go:130: starting minikube: exit status 80\n"}
{"Time":"2023-05-31T11:56:23.005446-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.005452-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:23.005459-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* [scheduled-stop-208000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:23.005466-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:23.005472-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:23.005479-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:23.005556-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:23.005571-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:23.00558-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:23.005587-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:23.005594-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:23.005601-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Starting control plane node scheduled-stop-208000 in cluster scheduled-stop-208000\n"}
{"Time":"2023-05-31T11:56:23.005608-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:23.005615-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:23.005622-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:23.00563-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005636-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Deleting \"scheduled-stop-208000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:23.005643-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:23.00565-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:23.005656-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:23.005664-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.00567-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005677-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:23.005684-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.00569-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:23.005696-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:23.005703-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.005711-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p scheduled-stop-208000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.00572-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:23.005727-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:23.005735-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:23.005745-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.005752-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:23.005759-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:23.005767-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.005775-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:23.005782-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:23.00579-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:23.005807-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.005814-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:23.005821-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    panic.go:522: *** TestScheduledStopUnix FAILED at 2023-05-31 11:56:23.005166 -0700 PDT m=+817.186270292\n"}
{"Time":"2023-05-31T11:56:23.005828-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:23.005835-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p scheduled-stop-208000 -n scheduled-stop-208000\n"}
{"Time":"2023-05-31T11:56:23.073367-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p scheduled-stop-208000 -n scheduled-stop-208000: exit status 7 (67.9285ms)\n"}
{"Time":"2023-05-31T11:56:23.073385-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.073388-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:23.07339-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:23.073392-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        \n"}
{"Time":"2023-05-31T11:56:23.073393-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:23.073395-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:23.073397-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:241: \"scheduled-stop-208000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:23.073401-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:175: Cleaning up \"scheduled-stop-208000\" profile ...\n"}
{"Time":"2023-05-31T11:56:23.073403-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p scheduled-stop-208000\n"}
{"Time":"2023-05-31T11:56:23.167008-07:00","Action":"output","Test":"TestScheduledStopUnix","Output":"--- FAIL: TestScheduledStopUnix (10.09s)\n"}
{"Time":"2023-05-31T11:56:23.167027-07:00","Action":"fail","Test":"TestScheduledStopUnix","Elapsed":10.09}
{"Time":"2023-05-31T11:56:23.167031-07:00","Action":"run","Test":"TestSkaffold"}
{"Time":"2023-05-31T11:56:23.167039-07:00","Action":"output","Test":"TestSkaffold","Output":"=== RUN   TestSkaffold\n"}
{"Time":"2023-05-31T11:56:26.298541-07:00","Action":"output","Test":"TestSkaffold","Output":"    skaffold_test.go:59: (dbg) Run:  /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/skaffold.exe3388129960 version\n"}
{"Time":"2023-05-31T11:56:26.948564-07:00","Action":"output","Test":"TestSkaffold","Output":"    skaffold_test.go:63: skaffold version: v2.5.0\n"}
{"Time":"2023-05-31T11:56:26.94858-07:00","Action":"output","Test":"TestSkaffold","Output":"    skaffold_test.go:66: (dbg) Run:  out/minikube-darwin-arm64 start -p skaffold-039000 --memory=2600 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:56:36.806112-07:00","Action":"output","Test":"TestSkaffold","Output":"    skaffold_test.go:66: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p skaffold-039000 --memory=2600 --driver=qemu2 : exit status 80 (9.857149291s)\n"}
{"Time":"2023-05-31T11:56:36.806167-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.806176-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:36.806186-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* [skaffold-039000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:36.806194-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:36.806202-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:36.80621-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:36.806218-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:36.806225-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:36.806231-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:36.806238-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:36.806245-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:36.806252-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Starting control plane node skaffold-039000 in cluster skaffold-039000\n"}
{"Time":"2023-05-31T11:56:36.80626-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2600MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:36.806266-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:36.806273-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:36.80628-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806286-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Deleting \"skaffold-039000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:36.806293-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2600MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:36.8063-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:36.806306-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:36.806313-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806319-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806325-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806331-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.806337-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:36.806343-07:00","Action":"output","Test":"TestSkaffold","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:36.806351-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806359-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p skaffold-039000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806368-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806375-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:36.806382-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:36.806405-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.806413-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:36.80642-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:36.806428-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.806434-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:36.806441-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.806449-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:36.806458-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.806467-07:00","Action":"output","Test":"TestSkaffold","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:36.806478-07:00","Action":"output","Test":"TestSkaffold","Output":"    skaffold_test.go:68: starting minikube: exit status 80\n"}
{"Time":"2023-05-31T11:56:36.806484-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.80649-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:36.806497-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* [skaffold-039000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:36.806503-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:36.80651-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:36.806516-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:36.806523-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:36.806529-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:36.806536-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:36.806542-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:36.806549-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:36.806557-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Starting control plane node skaffold-039000 in cluster skaffold-039000\n"}
{"Time":"2023-05-31T11:56:36.806564-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2600MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:36.80657-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:36.806577-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:36.806583-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.80659-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Deleting \"skaffold-039000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:36.806597-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2600MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:36.806603-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:36.80661-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:36.806617-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806622-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806629-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:36.806635-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.806642-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:36.806648-07:00","Action":"output","Test":"TestSkaffold","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:36.806654-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806663-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p skaffold-039000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806671-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:36.806677-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:36.806685-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:36.806694-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.806701-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:36.806712-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:36.806719-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.806726-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:36.806732-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:36.80674-07:00","Action":"output","Test":"TestSkaffold","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:36.806748-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.806754-07:00","Action":"output","Test":"TestSkaffold","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:36.813685-07:00","Action":"output","Test":"TestSkaffold","Output":"    panic.go:522: *** TestSkaffold FAILED at 2023-05-31 11:56:36.813575 -0700 PDT m=+830.994878917\n"}
{"Time":"2023-05-31T11:56:36.813706-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:36.813752-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p skaffold-039000 -n skaffold-039000\n"}
{"Time":"2023-05-31T11:56:36.877349-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p skaffold-039000 -n skaffold-039000: exit status 7 (63.484708ms)\n"}
{"Time":"2023-05-31T11:56:36.877376-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.877379-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:36.877386-07:00","Action":"output","Test":"TestSkaffold","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:36.877388-07:00","Action":"output","Test":"TestSkaffold","Output":"        \n"}
{"Time":"2023-05-31T11:56:36.87739-07:00","Action":"output","Test":"TestSkaffold","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:36.877391-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:36.877395-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:241: \"skaffold-039000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:36.877397-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:175: Cleaning up \"skaffold-039000\" profile ...\n"}
{"Time":"2023-05-31T11:56:36.877399-07:00","Action":"output","Test":"TestSkaffold","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p skaffold-039000\n"}
{"Time":"2023-05-31T11:56:36.97306-07:00","Action":"output","Test":"TestSkaffold","Output":"--- FAIL: TestSkaffold (13.81s)\n"}
{"Time":"2023-05-31T11:56:36.973075-07:00","Action":"fail","Test":"TestSkaffold","Elapsed":13.81}
{"Time":"2023-05-31T11:56:36.973079-07:00","Action":"run","Test":"TestStartStop"}
{"Time":"2023-05-31T11:56:36.973083-07:00","Action":"output","Test":"TestStartStop","Output":"=== RUN   TestStartStop\n"}
{"Time":"2023-05-31T11:56:36.973105-07:00","Action":"output","Test":"TestStartStop","Output":"=== PAUSE TestStartStop\n"}
{"Time":"2023-05-31T11:56:36.973107-07:00","Action":"pause","Test":"TestStartStop"}
{"Time":"2023-05-31T11:56:36.973127-07:00","Action":"run","Test":"TestInsufficientStorage"}
{"Time":"2023-05-31T11:56:36.973131-07:00","Action":"output","Test":"TestInsufficientStorage","Output":"=== RUN   TestInsufficientStorage\n"}
{"Time":"2023-05-31T11:56:36.973149-07:00","Action":"output","Test":"TestInsufficientStorage","Output":"    status_test.go:38: only runs with docker driver\n"}
{"Time":"2023-05-31T11:56:36.973163-07:00","Action":"output","Test":"TestInsufficientStorage","Output":"--- SKIP: TestInsufficientStorage (0.00s)\n"}
{"Time":"2023-05-31T11:56:36.973205-07:00","Action":"skip","Test":"TestInsufficientStorage","Elapsed":0}
{"Time":"2023-05-31T11:56:36.973208-07:00","Action":"run","Test":"TestRunningBinaryUpgrade"}
{"Time":"2023-05-31T11:56:36.973209-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== RUN   TestRunningBinaryUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973211-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== PAUSE TestRunningBinaryUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973212-07:00","Action":"pause","Test":"TestRunningBinaryUpgrade"}
{"Time":"2023-05-31T11:56:36.973214-07:00","Action":"run","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2023-05-31T11:56:36.973215-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== RUN   TestStoppedBinaryUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973232-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== PAUSE TestStoppedBinaryUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973234-07:00","Action":"pause","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2023-05-31T11:56:36.973236-07:00","Action":"run","Test":"TestKubernetesUpgrade"}
{"Time":"2023-05-31T11:56:36.973237-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== RUN   TestKubernetesUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973238-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== PAUSE TestKubernetesUpgrade\n"}
{"Time":"2023-05-31T11:56:36.97324-07:00","Action":"pause","Test":"TestKubernetesUpgrade"}
{"Time":"2023-05-31T11:56:36.973241-07:00","Action":"run","Test":"TestMissingContainerUpgrade"}
{"Time":"2023-05-31T11:56:36.973242-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== RUN   TestMissingContainerUpgrade\n"}
{"Time":"2023-05-31T11:56:36.973244-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:296: This test is only for Docker\n"}
{"Time":"2023-05-31T11:56:36.973246-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"--- SKIP: TestMissingContainerUpgrade (0.00s)\n"}
{"Time":"2023-05-31T11:56:36.973248-07:00","Action":"skip","Test":"TestMissingContainerUpgrade","Elapsed":0}
{"Time":"2023-05-31T11:56:36.973249-07:00","Action":"cont","Test":"TestOffline"}
{"Time":"2023-05-31T11:56:36.973251-07:00","Action":"output","Test":"TestOffline","Output":"=== CONT  TestOffline\n"}
{"Time":"2023-05-31T11:56:36.973296-07:00","Action":"cont","Test":"TestNetworkPlugins"}
{"Time":"2023-05-31T11:56:36.97331-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== CONT  TestNetworkPlugins\n"}
{"Time":"2023-05-31T11:56:36.97332-07:00","Action":"output","Test":"TestOffline","Output":"    aab_offline_test.go:55: (dbg) Run:  out/minikube-darwin-arm64 start -p offline-docker-224000 --alsologtostderr -v=1 --memory=2048 --wait=true --driver=qemu2 \n"}
{"Time":"2023-05-31T11:56:36.97334-07:00","Action":"run","Test":"TestNetworkPlugins/group"}
{"Time":"2023-05-31T11:56:36.973342-07:00","Action":"output","Test":"TestNetworkPlugins/group","Output":"=== RUN   TestNetworkPlugins/group\n"}
{"Time":"2023-05-31T11:56:36.973345-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2023-05-31T11:56:36.973347-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== RUN   TestNetworkPlugins/group/auto\n"}
{"Time":"2023-05-31T11:56:36.973348-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== PAUSE TestNetworkPlugins/group/auto\n"}
{"Time":"2023-05-31T11:56:36.973349-07:00","Action":"pause","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2023-05-31T11:56:36.973351-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2023-05-31T11:56:36.973352-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== RUN   TestNetworkPlugins/group/kubenet\n"}
{"Time":"2023-05-31T11:56:36.973354-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== PAUSE TestNetworkPlugins/group/kubenet\n"}
{"Time":"2023-05-31T11:56:36.973355-07:00","Action":"pause","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2023-05-31T11:56:36.973357-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2023-05-31T11:56:36.973361-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== RUN   TestNetworkPlugins/group/bridge\n"}
{"Time":"2023-05-31T11:56:36.973384-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== PAUSE TestNetworkPlugins/group/bridge\n"}
{"Time":"2023-05-31T11:56:36.973386-07:00","Action":"pause","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2023-05-31T11:56:36.973389-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2023-05-31T11:56:36.97339-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2023-05-31T11:56:36.973392-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== PAUSE TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2023-05-31T11:56:36.973393-07:00","Action":"pause","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2023-05-31T11:56:36.973394-07:00","Action":"run","Test":"TestNetworkPlugins/group/flannel"}
{"Time":"2023-05-31T11:56:36.973396-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"=== RUN   TestNetworkPlugins/group/flannel\n"}
{"Time":"2023-05-31T11:56:36.973397-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"=== PAUSE TestNetworkPlugins/group/flannel\n"}
{"Time":"2023-05-31T11:56:36.973398-07:00","Action":"pause","Test":"TestNetworkPlugins/group/flannel"}
{"Time":"2023-05-31T11:56:36.973401-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2023-05-31T11:56:36.973402-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== RUN   TestNetworkPlugins/group/kindnet\n"}
{"Time":"2023-05-31T11:56:36.973403-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== PAUSE TestNetworkPlugins/group/kindnet\n"}
{"Time":"2023-05-31T11:56:36.973405-07:00","Action":"pause","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2023-05-31T11:56:36.973406-07:00","Action":"run","Test":"TestNetworkPlugins/group/false"}
{"Time":"2023-05-31T11:56:36.973407-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== RUN   TestNetworkPlugins/group/false\n"}
{"Time":"2023-05-31T11:56:36.97341-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== PAUSE TestNetworkPlugins/group/false\n"}
{"Time":"2023-05-31T11:56:36.973411-07:00","Action":"pause","Test":"TestNetworkPlugins/group/false"}
{"Time":"2023-05-31T11:56:36.973421-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-flannel"}
{"Time":"2023-05-31T11:56:36.973422-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"=== RUN   TestNetworkPlugins/group/custom-flannel\n"}
{"Time":"2023-05-31T11:56:36.974622-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"=== PAUSE TestNetworkPlugins/group/custom-flannel\n"}
{"Time":"2023-05-31T11:56:36.974625-07:00","Action":"pause","Test":"TestNetworkPlugins/group/custom-flannel"}
{"Time":"2023-05-31T11:56:36.974701-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2023-05-31T11:56:36.974705-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== RUN   TestNetworkPlugins/group/calico\n"}
{"Time":"2023-05-31T11:56:36.974752-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== PAUSE TestNetworkPlugins/group/calico\n"}
{"Time":"2023-05-31T11:56:36.97477-07:00","Action":"pause","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2023-05-31T11:56:36.974774-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2023-05-31T11:56:36.974776-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== RUN   TestNetworkPlugins/group/cilium\n"}
{"Time":"2023-05-31T11:56:36.974849-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    net_test.go:101: Skipping the test as it's interfering with other tests and is outdated\n"}
{"Time":"2023-05-31T11:56:39.104499-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    panic.go:522: \n"}
{"Time":"2023-05-31T11:56:39.104512-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        ----------------------- debugLogs start: cilium-602000 [pass: true] --------------------------------\n"}
{"Time":"2023-05-31T11:56:39.104514-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T11:56:39.104516-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104518-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10452-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104521-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T11:56:39.104523-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104527-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104528-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10453-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T11:56:39.104531-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104533-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104534-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104535-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T11:56:39.104536-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104538-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104539-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10454-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T11:56:39.104541-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104543-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104547-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104548-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T11:56:39.104549-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104551-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104552-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104553-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T11:56:39.104554-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104556-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104557-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104559-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T11:56:39.10456-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104561-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104562-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104564-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T11:56:39.104565-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104567-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104568-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104569-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T11:56:39.10457-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104572-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104573-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104574-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T11:56:39.104575-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104577-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104578-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10458-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104581-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T11:56:39.104583-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104584-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104585-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104587-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104588-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T11:56:39.104589-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104591-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104592-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104593-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104594-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T11:56:39.104596-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104597-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104598-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104599-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T11:56:39.104601-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104602-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104603-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104605-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104606-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T11:56:39.104607-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104608-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.10461-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104611-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104612-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T11:56:39.104613-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104615-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104616-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104617-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T11:56:39.104618-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.10462-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104621-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104622-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T11:56:39.104624-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104625-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104626-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104627-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T11:56:39.104629-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.10463-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104631-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104632-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T11:56:39.104633-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104635-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104636-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104637-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T11:56:39.104638-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.10464-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104641-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104642-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T11:56:39.10465-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104651-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104652-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104653-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T11:56:39.104655-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104656-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104657-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104658-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T11:56:39.104659-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104661-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104662-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104664-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104665-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T11:56:39.104667-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104668-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104669-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104671-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104672-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T11:56:39.104673-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104675-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104676-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104677-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104678-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T11:56:39.10468-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104681-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104682-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104684-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104685-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T11:56:39.104686-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104687-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104689-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10469-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104691-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe cilium daemon set:\n"}
{"Time":"2023-05-31T11:56:39.104693-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104694-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104695-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104699-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe cilium daemon set pod(s):\n"}
{"Time":"2023-05-31T11:56:39.104701-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104702-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104703-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104704-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: cilium daemon set container(s) logs (current):\n"}
{"Time":"2023-05-31T11:56:39.104706-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104707-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104709-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104711-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: cilium daemon set container(s) logs (previous):\n"}
{"Time":"2023-05-31T11:56:39.104712-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104713-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104715-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104716-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe cilium deployment:\n"}
{"Time":"2023-05-31T11:56:39.104717-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104719-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10472-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104721-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe cilium deployment pod(s):\n"}
{"Time":"2023-05-31T11:56:39.104724-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104725-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104726-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104727-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: cilium deployment container(s) logs (current):\n"}
{"Time":"2023-05-31T11:56:39.104729-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.10473-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104731-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104732-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: cilium deployment container(s) logs (previous):\n"}
{"Time":"2023-05-31T11:56:39.104734-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104735-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104736-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104737-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T11:56:39.104739-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104741-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104742-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104743-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T11:56:39.104744-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104746-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104747-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104748-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T11:56:39.104749-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        error: context \"cilium-602000\" does not exist\n"}
{"Time":"2023-05-31T11:56:39.104751-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104752-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104753-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T11:56:39.104755-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104757-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104758-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10476-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104761-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T11:56:39.104763-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104764-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104766-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104767-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104768-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T11:56:39.10477-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104772-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104773-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104774-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104775-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T11:56:39.104777-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104778-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104779-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104781-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104782-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T11:56:39.104784-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104785-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104787-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104788-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104789-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T11:56:39.104791-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T11:56:39.104792-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        clusters: null\n"}
{"Time":"2023-05-31T11:56:39.104793-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        contexts: null\n"}
{"Time":"2023-05-31T11:56:39.104795-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T11:56:39.104796-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        kind: Config\n"}
{"Time":"2023-05-31T11:56:39.104797-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T11:56:39.104799-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        users: null\n"}
{"Time":"2023-05-31T11:56:39.1048-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104801-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104802-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T11:56:39.104804-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        Error in configuration: context was not found for specified context: cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.104805-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104806-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104807-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T11:56:39.104809-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.10481-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104811-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104813-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104814-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T11:56:39.104817-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104818-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104819-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104821-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104822-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T11:56:39.104824-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104825-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104826-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104827-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104829-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T11:56:39.10483-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104832-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104833-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104834-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104836-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T11:56:39.104838-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104839-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104841-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104842-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104844-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T11:56:39.104845-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104847-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104848-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104849-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10485-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T11:56:39.104852-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104853-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104855-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104856-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104857-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T11:56:39.104859-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104861-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104862-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104863-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104864-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T11:56:39.104865-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104867-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104868-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104869-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10487-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T11:56:39.104872-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104873-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104875-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104876-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104877-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T11:56:39.104878-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.10488-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104881-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104882-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104884-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T11:56:39.104885-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104886-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104888-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104889-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.10489-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T11:56:39.104891-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104893-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104895-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104896-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104897-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T11:56:39.104899-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104901-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104902-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104904-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104905-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T11:56:39.104906-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104908-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104909-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104911-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104912-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T11:56:39.104914-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104915-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104917-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104918-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104919-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T11:56:39.104921-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.104923-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104924-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104926-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104927-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T11:56:39.104928-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        * Profile \"cilium-602000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T11:56:39.10493-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"          To start a cluster, run: \"minikube start -p cilium-602000\"\n"}
{"Time":"2023-05-31T11:56:39.104931-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        \n"}
{"Time":"2023-05-31T11:56:39.104933-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        ----------------------- debugLogs end: cilium-602000 [took: 2.129621625s] --------------------------------\n"}
{"Time":"2023-05-31T11:56:39.104936-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    helpers_test.go:175: Cleaning up \"cilium-602000\" profile ...\n"}
{"Time":"2023-05-31T11:56:39.104938-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p cilium-602000\n"}
{"Time":"2023-05-31T11:56:39.333476-07:00","Action":"cont","Test":"TestHyperkitDriverSkipUpgrade"}
{"Time":"2023-05-31T11:56:39.333489-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade","Output":"=== CONT  TestHyperkitDriverSkipUpgrade\n"}
{"Time":"2023-05-31T11:56:39.333542-07:00","Action":"run","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current"}
{"Time":"2023-05-31T11:56:39.333544-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"=== RUN   TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current\n"}
{"Time":"2023-05-31T11:56:40.397842-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"E0531 11:56:40.397792    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:56:40.720755-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"* minikube v1.30.1 on darwin (arm64)\n"}
{"Time":"2023-05-31T11:56:40.726688-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:40.733699-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:40.741671-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:40.74577-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:40.749673-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:40.753703-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"  - MINIKUBE_HOME=/var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestHyperkitDriverSkipUpgradeupgrade-v1.11.0-to-current930085204/001\n"}
{"Time":"2023-05-31T11:56:40.76165-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"* Using the hyperkit driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:40.771632-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"\n"}
{"Time":"2023-05-31T11:56:40.775719-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"X Exiting due to DRV_UNSUPPORTED_OS: The driver 'hyperkit' is not supported on darwin/arm64\n"}
{"Time":"2023-05-31T11:56:40.778681-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"\n"}
{"Time":"2023-05-31T11:56:40.787511-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"    driver_install_or_update_test.go:209: failed to run minikube. got: exit status 56\n"}
{"Time":"2023-05-31T11:56:40.823532-07:00","Action":"run","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current"}
{"Time":"2023-05-31T11:56:40.823546-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"=== RUN   TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current\n"}
{"Time":"2023-05-31T11:56:42.011701-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"* minikube v1.30.1 on darwin (arm64)\n"}
{"Time":"2023-05-31T11:56:42.022663-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:42.029607-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:42.037686-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:42.045632-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:42.049678-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:42.057648-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"  - MINIKUBE_HOME=/var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/TestHyperkitDriverSkipUpgradeupgrade-v1.2.0-to-current595676939/001\n"}
{"Time":"2023-05-31T11:56:42.065652-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"* Using the hyperkit driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:42.074675-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"\n"}
{"Time":"2023-05-31T11:56:42.078649-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"X Exiting due to DRV_UNSUPPORTED_OS: The driver 'hyperkit' is not supported on darwin/arm64\n"}
{"Time":"2023-05-31T11:56:42.082647-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"\n"}
{"Time":"2023-05-31T11:56:42.091809-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"    driver_install_or_update_test.go:209: failed to run minikube. got: exit status 56\n"}
{"Time":"2023-05-31T11:56:42.127506-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade","Output":"--- FAIL: TestHyperkitDriverSkipUpgrade (2.79s)\n"}
{"Time":"2023-05-31T11:56:42.127525-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Output":"    --- FAIL: TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current (1.49s)\n"}
{"Time":"2023-05-31T11:56:42.127527-07:00","Action":"fail","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.11.0-to-current","Elapsed":1.49}
{"Time":"2023-05-31T11:56:42.127531-07:00","Action":"output","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Output":"    --- FAIL: TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current (1.30s)\n"}
{"Time":"2023-05-31T11:56:42.127533-07:00","Action":"fail","Test":"TestHyperkitDriverSkipUpgrade/upgrade-v1.2.0-to-current","Elapsed":1.3}
{"Time":"2023-05-31T11:56:42.127535-07:00","Action":"fail","Test":"TestHyperkitDriverSkipUpgrade","Elapsed":2.79}
{"Time":"2023-05-31T11:56:42.127536-07:00","Action":"cont","Test":"TestHyperKitDriverInstallOrUpdate"}
{"Time":"2023-05-31T11:56:42.127538-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"=== CONT  TestHyperKitDriverInstallOrUpdate\n"}
{"Time":"2023-05-31T11:56:46.764612-07:00","Action":"output","Test":"TestOffline","Output":"    aab_offline_test.go:55: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p offline-docker-224000 --alsologtostderr -v=1 --memory=2048 --wait=true --driver=qemu2 : exit status 80 (9.788856917s)\n"}
{"Time":"2023-05-31T11:56:46.764633-07:00","Action":"output","Test":"TestOffline","Output":"        \n"}
{"Time":"2023-05-31T11:56:46.764637-07:00","Action":"output","Test":"TestOffline","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:46.76464-07:00","Action":"output","Test":"TestOffline","Output":"        \t* [offline-docker-224000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:46.764645-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:46.764648-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:46.764651-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:46.764654-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:46.764656-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:46.764659-07:00","Action":"output","Test":"TestOffline","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:46.764661-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:46.764664-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:46.764667-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Starting control plane node offline-docker-224000 in cluster offline-docker-224000\n"}
{"Time":"2023-05-31T11:56:46.764671-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:46.764676-07:00","Action":"output","Test":"TestOffline","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:46.764679-07:00","Action":"output","Test":"TestOffline","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:46.764681-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764691-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Deleting \"offline-docker-224000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:46.764693-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:46.764696-07:00","Action":"output","Test":"TestOffline","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:46.764698-07:00","Action":"output","Test":"TestOffline","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:46.764701-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764703-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764706-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764708-07:00","Action":"output","Test":"TestOffline","Output":"        \n"}
{"Time":"2023-05-31T11:56:46.76471-07:00","Action":"output","Test":"TestOffline","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:46.764713-07:00","Action":"output","Test":"TestOffline","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:46.764716-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.001798    2924 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:56:46.764719-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.001947    2924 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:46.764723-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.001950    2924 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:56:46.764727-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.001952    2924 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:46.764729-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.002033    2924 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:56:46.764733-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.003404    2924 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:56:46.764736-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.019970    2924 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1568,\"bootTime\":1685557829,\"procs\":396,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:56:46.764741-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:37.020041    2924 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:56:46.764744-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.024347    2924 out.go:177] * [offline-docker-224000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:46.764747-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.034122    2924 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:46.76475-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.030277    2924 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:56:46.764753-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.038208    2924 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:46.764757-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.041218    2924 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:46.76476-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.044201    2924 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:46.764763-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.051191    2924 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:46.764766-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.059299    2924 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:56:46.764769-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.063572    2924 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:56:46.764772-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.063628    2924 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:56:46.764775-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.067171    2924 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:46.764777-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.074307    2924 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:56:46.76478-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.074315    2924 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:56:46.764784-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.074322    2924 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:56:46.76479-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.076256    2924 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:56:46.764794-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.079202    2924 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:46.764797-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082190    2924 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T11:56:46.7648-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082208    2924 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:56:46.764803-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082215    2924 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:56:46.764807-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082218    2924 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:56:46.76481-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082224    2924 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:56:46.764817-07:00","Action":"output","Test":"TestOffline","Output":"        \t{Name:offline-docker-224000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:offline-docker-224000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerR"}
{"Time":"2023-05-31T11:56:46.764828-07:00","Action":"output","Test":"TestOffline","Output":"untime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:56:46.764833-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.082322    2924 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:46.764837-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.087401    2924 out.go:177] * Starting control plane node offline-docker-224000 in cluster offline-docker-224000\n"}
{"Time":"2023-05-31T11:56:46.76484-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091169    2924 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:56:46.764844-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091205    2924 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:56:46.764848-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091214    2924 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:56:46.764863-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091281    2924 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:56:46.764867-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091286    2924 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:56:46.764872-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091338    2924 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/offline-docker-224000/config.json ...\n"}
{"Time":"2023-05-31T11:56:46.764875-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091355    2924 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/offline-docker-224000/config.json: {Name:mkd90901da69fbc65a3f2d348beb92db4c0a6f04 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:46.76488-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091535    2924 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:56:46.764884-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091549    2924 start.go:364] acquiring machines lock for offline-docker-224000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:46.764891-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091577    2924 start.go:368] acquired machines lock for \"offline-docker-224000\" in 24.166µs\n"}
{"Time":"2023-05-31T11:56:46.764899-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091589    2924 start.go:93] Provisioning new machine with config: \u0026{Name:offline-docker-224000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T11:56:46.764906-07:00","Action":"output","Test":"TestOffline","Output":"tesConfig:{KubernetesVersion:v1.27.2 ClusterName:offline-docker-224000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP"}
{"Time":"2023-05-31T11:56:46.764911-07:00","Action":"output","Test":"TestOffline","Output":": MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:46.764915-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.091614    2924 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:46.764918-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.099178    2924 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:46.764921-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113297    2924 start.go:159] libmachine.API.Create for \"offline-docker-224000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:46.764924-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113327    2924 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:46.764927-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113386    2924 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:46.76493-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113406    2924 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:46.764933-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113416    2924 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:46.764936-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113478    2924 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:46.764939-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113492    2924 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:46.764942-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113501    2924 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:46.764945-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.113835    2924 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:46.764948-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.277172    2924 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:46.764951-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.387798    2924 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:46.764953-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.387808    2924 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:46.764957-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.388000    2924 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.76496-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.396460    2924 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:46.764963-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.396483    2924 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:46.764966-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.396548    2924 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:46.764969-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.404597    2924 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:46.764971-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764974-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.404616    2924 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:46.764977-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.404635    2924 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.764981-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.404645    2924 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:46.764985-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.404688    2924 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/qemu.pid -device virtio-net-pci,netdev=net0,mac=82:d0:24:90:72:ec -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.76499-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.406411    2924 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:46.764993-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.406426    2924 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:46.764996-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.764999-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:37.406446    2924 client.go:171] LocalClient.Create took 293.116917ms\n"}
{"Time":"2023-05-31T11:56:46.765001-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:39.407789    2924 start.go:128] duration metric: createHost completed in 2.31620175s\n"}
{"Time":"2023-05-31T11:56:46.765005-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:39.407808    2924 start.go:83] releasing machines lock for \"offline-docker-224000\", held for 2.31626075s\n"}
{"Time":"2023-05-31T11:56:46.765008-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:39.407825    2924 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765011-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:39.416756    2924 out.go:177] * Deleting \"offline-docker-224000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:46.765015-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:39.426901    2924 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.76502-07:00","Action":"output","Test":"TestOffline","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765023-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:39.426915    2924 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:56:46.765026-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.429022    2924 start.go:364] acquiring machines lock for offline-docker-224000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:46.765029-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.429410    2924 start.go:368] acquired machines lock for \"offline-docker-224000\" in 308.958µs\n"}
{"Time":"2023-05-31T11:56:46.765037-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.429533    2924 start.go:93] Provisioning new machine with config: \u0026{Name:offline-docker-224000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T11:56:46.765044-07:00","Action":"output","Test":"TestOffline","Output":"tesConfig:{KubernetesVersion:v1.27.2 ClusterName:offline-docker-224000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP"}
{"Time":"2023-05-31T11:56:46.765049-07:00","Action":"output","Test":"TestOffline","Output":": MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:46.765053-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.429889    2924 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:46.765056-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.438857    2924 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:46.76506-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.483930    2924 start.go:159] libmachine.API.Create for \"offline-docker-224000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:46.765065-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.483977    2924 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:46.765071-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484091    2924 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:46.765078-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484134    2924 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:46.765081-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484152    2924 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:46.765085-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484247    2924 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:46.765088-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484275    2924 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:46.765091-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484306    2924 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:46.765096-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.484785    2924 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:46.7651-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.664103    2924 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:46.765102-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.711349    2924 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:46.765106-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.711355    2924 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:46.765109-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.711496    2924 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.765112-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.720050    2924 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:46.765115-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.720070    2924 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:46.765118-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.720120    2924 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:46.765121-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.727257    2924 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:46.765124-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.765127-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.727271    2924 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:46.76513-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.727292    2924 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.7652-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.727299    2924 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:46.765222-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.727339    2924 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/qemu.pid -device virtio-net-pci,netdev=net0,mac=5e:d1:20:c4:94:ee -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/offline-docker-224000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:46.765232-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.728903    2924 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:46.765241-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.728916    2924 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:46.765248-07:00","Action":"output","Test":"TestOffline","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:46.765253-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:44.728930    2924 client.go:171] LocalClient.Create took 244.952208ms\n"}
{"Time":"2023-05-31T11:56:46.765256-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:46.731019    2924 start.go:128] duration metric: createHost completed in 2.301141333s\n"}
{"Time":"2023-05-31T11:56:46.76526-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:46.731077    2924 start.go:83] releasing machines lock for \"offline-docker-224000\", held for 2.301679417s\n"}
{"Time":"2023-05-31T11:56:46.765267-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:46.731364    2924 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p offline-docker-224000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765271-07:00","Action":"output","Test":"TestOffline","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p offline-docker-224000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765276-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:46.737745    2924 out.go:177] \n"}
{"Time":"2023-05-31T11:56:46.765281-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:46.741811    2924 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765287-07:00","Action":"output","Test":"TestOffline","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:46.765291-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:46.741835    2924 out.go:239] * \n"}
{"Time":"2023-05-31T11:56:46.765294-07:00","Action":"output","Test":"TestOffline","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:46.7653-07:00","Action":"output","Test":"TestOffline","Output":"        \tW0531 11:56:46.743120    2924 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:46.765305-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765309-07:00","Action":"output","Test":"TestOffline","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:46.765313-07:00","Action":"output","Test":"TestOffline","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:46.765316-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765319-07:00","Action":"output","Test":"TestOffline","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:46.765324-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765327-07:00","Action":"output","Test":"TestOffline","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:46.765333-07:00","Action":"output","Test":"TestOffline","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:46.765337-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765341-07:00","Action":"output","Test":"TestOffline","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:46.765345-07:00","Action":"output","Test":"TestOffline","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:46.765348-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765351-07:00","Action":"output","Test":"TestOffline","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:46.765355-07:00","Action":"output","Test":"TestOffline","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:46.765359-07:00","Action":"output","Test":"TestOffline","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:46.765388-07:00","Action":"output","Test":"TestOffline","Output":"        \tI0531 11:56:46.752668    2924 out.go:177] \n"}
{"Time":"2023-05-31T11:56:46.765398-07:00","Action":"output","Test":"TestOffline","Output":"        \n"}
{"Time":"2023-05-31T11:56:46.765402-07:00","Action":"output","Test":"TestOffline","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:46.765406-07:00","Action":"output","Test":"TestOffline","Output":"    aab_offline_test.go:58: out/minikube-darwin-arm64 start -p offline-docker-224000 --alsologtostderr -v=1 --memory=2048 --wait=true --driver=qemu2  failed: exit status 80\n"}
{"Time":"2023-05-31T11:56:46.765413-07:00","Action":"output","Test":"TestOffline","Output":"    panic.go:522: *** TestOffline FAILED at 2023-05-31 11:56:46.764604 -0700 PDT m=+840.946051459\n"}
{"Time":"2023-05-31T11:56:46.765417-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:46.76542-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p offline-docker-224000 -n offline-docker-224000\n"}
{"Time":"2023-05-31T11:56:46.80552-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p offline-docker-224000 -n offline-docker-224000: exit status 7 (40.7525ms)\n"}
{"Time":"2023-05-31T11:56:46.805535-07:00","Action":"output","Test":"TestOffline","Output":"        \n"}
{"Time":"2023-05-31T11:56:46.805537-07:00","Action":"output","Test":"TestOffline","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:46.805539-07:00","Action":"output","Test":"TestOffline","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:46.805541-07:00","Action":"output","Test":"TestOffline","Output":"        \n"}
{"Time":"2023-05-31T11:56:46.805543-07:00","Action":"output","Test":"TestOffline","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:46.805544-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:46.805551-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:241: \"offline-docker-224000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:46.805553-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:175: Cleaning up \"offline-docker-224000\" profile ...\n"}
{"Time":"2023-05-31T11:56:46.805555-07:00","Action":"output","Test":"TestOffline","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p offline-docker-224000\n"}
{"Time":"2023-05-31T11:56:46.901423-07:00","Action":"output","Test":"TestOffline","Output":"--- FAIL: TestOffline (9.93s)\n"}
{"Time":"2023-05-31T11:56:46.901436-07:00","Action":"fail","Test":"TestOffline","Elapsed":9.93}
{"Time":"2023-05-31T11:56:46.90144-07:00","Action":"cont","Test":"TestForceSystemdEnv"}
{"Time":"2023-05-31T11:56:46.901441-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== CONT  TestForceSystemdEnv\n"}
{"Time":"2023-05-31T11:56:46.901524-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:149: (dbg) Run:  out/minikube-darwin-arm64 start -p force-systemd-env-429000 --memory=2048 --alsologtostderr -v=5 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:56:50.297931-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"--- PASS: TestHyperKitDriverInstallOrUpdate (8.17s)\n"}
{"Time":"2023-05-31T11:56:50.297943-07:00","Action":"pass","Test":"TestHyperKitDriverInstallOrUpdate","Elapsed":8.17}
{"Time":"2023-05-31T11:56:50.297947-07:00","Action":"cont","Test":"TestForceSystemdFlag"}
{"Time":"2023-05-31T11:56:50.297948-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== CONT  TestForceSystemdFlag\n"}
{"Time":"2023-05-31T11:56:50.297997-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:85: (dbg) Run:  out/minikube-darwin-arm64 start -p force-systemd-flag-925000 --memory=2048 --force-systemd --alsologtostderr -v=5 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:56:56.799147-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:149: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p force-systemd-env-429000 --memory=2048 --alsologtostderr -v=5 --driver=qemu2 : exit status 80 (9.895521709s)\n"}
{"Time":"2023-05-31T11:56:56.799203-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.799212-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:56.799234-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* [force-systemd-env-429000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:56.799242-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:56.799251-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:56.799258-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:56.799265-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:56.799272-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:56.799279-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=true\n"}
{"Time":"2023-05-31T11:56:56.799285-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:56.799292-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:56.799299-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Starting control plane node force-systemd-env-429000 in cluster force-systemd-env-429000\n"}
{"Time":"2023-05-31T11:56:56.799306-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:56.799313-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:56.79932-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:56.799327-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.799333-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Deleting \"force-systemd-env-429000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:56.79934-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:56.799346-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:56:56.799353-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:56.79936-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.799366-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.799372-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.799378-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.799384-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:56.79939-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:56:56.799397-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.930066    3083 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:56:56.799403-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.930213    3083 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:56.79941-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.930216    3083 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:56:56.799417-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.930219    3083 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:56:56.799424-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.930291    3083 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:56:56.799432-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.931312    3083 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:56:56.79944-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.946751    3083 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1577,\"bootTime\":1685557829,\"procs\":402,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:56:56.799453-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:46.946823    3083 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:56:56.79946-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.951744    3083 out.go:177] * [force-systemd-env-429000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:56:56.79947-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.958716    3083 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:56:56.799477-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.962576    3083 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:56:56.799484-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.958797    3083 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:56:56.799491-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.968728    3083 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:56:56.799498-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.971751    3083 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:56:56.799506-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.974674    3083 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:56:56.799516-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.977708    3083 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=true\n"}
{"Time":"2023-05-31T11:56:56.799523-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.981065    3083 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:56:56.799532-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.981125    3083 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:56:56.799541-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.985689    3083 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:56:56.799549-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.992739    3083 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:56:56.799556-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.992755    3083 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:56:56.799564-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.992762    3083 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:56:56.799575-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.994675    3083 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:56:56.799582-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:46.999704    3083 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:56:56.799589-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002771    3083 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T11:56:56.799596-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002784    3083 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:56:56.799604-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002790    3083 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:56:56.799613-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002793    3083 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:56:56.79962-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002796    3083 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:56:56.799634-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t{Name:force-systemd-env-429000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-env-429000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Cont"}
{"Time":"2023-05-31T11:56:56.799648-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"ainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:56:56.799659-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.002869    3083 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:56.799667-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.010725    3083 out.go:177] * Starting control plane node force-systemd-env-429000 in cluster force-systemd-env-429000\n"}
{"Time":"2023-05-31T11:56:56.799674-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014696    3083 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:56:56.799682-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014716    3083 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:56:56.799692-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014725    3083 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:56:56.799701-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014772    3083 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:56:56.799708-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014776    3083 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:56:56.799716-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014824    3083 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/force-systemd-env-429000/config.json ...\n"}
{"Time":"2023-05-31T11:56:56.799725-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.014835    3083 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/force-systemd-env-429000/config.json: {Name:mkd0a2decbae202a090bec19cdacd5a02d523059 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:56.799735-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.015029    3083 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:56:56.799742-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.015040    3083 start.go:364] acquiring machines lock for force-systemd-env-429000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:56.79975-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.015065    3083 start.go:368] acquired machines lock for \"force-systemd-env-429000\" in 19.834µs\n"}
{"Time":"2023-05-31T11:56:56.799766-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.015075    3083 start.go:93] Provisioning new machine with config: \u0026{Name:force-systemd-env-429000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kube"}
{"Time":"2023-05-31T11:56:56.799781-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"rnetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-env-429000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUI"}
{"Time":"2023-05-31T11:56:56.799792-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"D:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:56.799801-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.015098    3083 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:56.799808-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.023702    3083 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:56.799816-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037516    3083 start.go:159] libmachine.API.Create for \"force-systemd-env-429000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:56.799823-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037537    3083 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:56.79983-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037604    3083 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:56.799838-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037622    3083 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:56.799845-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037631    3083 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:56.799852-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037654    3083 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:56.79986-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037672    3083 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:56.79987-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037679    3083 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:56.799879-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.037983    3083 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:56.799887-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.186129    3083 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:56.799894-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.358662    3083 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:56.799901-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.358672    3083 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:56.799909-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.358873    3083 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.799917-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.368240    3083 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:56.799926-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.368268    3083 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:56.799934-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.368363    3083 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:56.799942-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.376624    3083 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:56.799949-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.799955-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.376649    3083 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:56.799963-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.376681    3083 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.79997-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.376697    3083 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:56.799981-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.376737    3083 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/qemu.pid -device virtio-net-pci,netdev=net0,mac=ce:58:5e:a0:ed:87 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.799993-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.378711    3083 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:56.800001-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.378727    3083 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:56.800008-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.800015-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:47.378746    3083 client.go:171] LocalClient.Create took 341.21ms\n"}
{"Time":"2023-05-31T11:56:56.800022-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:49.380996    3083 start.go:128] duration metric: createHost completed in 2.365900125s\n"}
{"Time":"2023-05-31T11:56:56.800029-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:49.381073    3083 start.go:83] releasing machines lock for \"force-systemd-env-429000\", held for 2.366032833s\n"}
{"Time":"2023-05-31T11:56:56.800037-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:49.381171    3083 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800044-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:49.387611    3083 out.go:177] * Deleting \"force-systemd-env-429000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:56:56.8001-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:49.407979    3083 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800111-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800118-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:49.408011    3083 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:56:56.800127-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.410281    3083 start.go:364] acquiring machines lock for force-systemd-env-429000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:56:56.800135-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.410748    3083 start.go:368] acquired machines lock for \"force-systemd-env-429000\" in 357.125µs\n"}
{"Time":"2023-05-31T11:56:56.80015-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.410882    3083 start.go:93] Provisioning new machine with config: \u0026{Name:force-systemd-env-429000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kube"}
{"Time":"2023-05-31T11:56:56.800163-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"rnetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-env-429000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUI"}
{"Time":"2023-05-31T11:56:56.800177-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"D:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:56:56.800198-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.411148    3083 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:56.800207-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.419676    3083 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:56:56.800215-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.465961    3083 start.go:159] libmachine.API.Create for \"force-systemd-env-429000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:56:56.800223-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466002    3083 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:56:56.80023-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466117    3083 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:56:56.800237-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466157    3083 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:56.800244-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466178    3083 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:56.800252-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466266    3083 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:56:56.80026-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466293    3083 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:56:56.800267-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466317    3083 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:56:56.800273-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.466952    3083 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:56:56.80028-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.639796    3083 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:56:56.800285-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.735866    3083 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:56:56.80029-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.735872    3083 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:56:56.800296-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.736035    3083 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.800301-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.744920    3083 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:56.800307-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.744940    3083 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:56.800312-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.744998    3083 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:56:56.800317-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.752080    3083 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:56:56.800322-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.800327-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.752094    3083 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:56:56.800333-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.752105    3083 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.800338-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.752116    3083 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:56:56.800346-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.752159    3083 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:f8:90:da:5f:18 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-env-429000/disk.qcow2\n"}
{"Time":"2023-05-31T11:56:56.800354-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.753691    3083 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:56:56.800359-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.753703    3083 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:56:56.800365-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t\n"}
{"Time":"2023-05-31T11:56:56.80037-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:54.753714    3083 client.go:171] LocalClient.Create took 287.71175ms\n"}
{"Time":"2023-05-31T11:56:56.800375-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:56.755886    3083 start.go:128] duration metric: createHost completed in 2.344716458s\n"}
{"Time":"2023-05-31T11:56:56.80038-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:56.755987    3083 start.go:83] releasing machines lock for \"force-systemd-env-429000\", held for 2.345250375s\n"}
{"Time":"2023-05-31T11:56:56.800386-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:56.756454    3083 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p force-systemd-env-429000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800392-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p force-systemd-env-429000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800399-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:56.767128    3083 out.go:177] \n"}
{"Time":"2023-05-31T11:56:56.800405-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:56.771178    3083 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800412-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:56:56.800418-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:56.771205    3083 out.go:239] * \n"}
{"Time":"2023-05-31T11:56:56.800422-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* \n"}
{"Time":"2023-05-31T11:56:56.800429-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tW0531 11:56:56.774107    3083 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:56.800437-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.800443-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:56.800448-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:56.800454-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.80046-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:56.800465-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.800471-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:56.800479-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:56:56.800486-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.800492-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:56:56.800497-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:56:56.800502-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.800509-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:56:56.800514-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:56:56.80052-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:56:56.800538-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tI0531 11:56:56.783264    3083 out.go:177] \n"}
{"Time":"2023-05-31T11:56:56.800543-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.800548-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:56:56.800553-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:151: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p force-systemd-env-429000 --memory=2048 --alsologtostderr -v=5 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:56:56.800563-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:104: (dbg) Run:  out/minikube-darwin-arm64 -p force-systemd-env-429000 ssh \"docker info --format {{.CgroupDriver}}\"\n"}
{"Time":"2023-05-31T11:56:56.878315-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:104: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p force-systemd-env-429000 ssh \"docker info --format {{.CgroupDriver}}\": exit status 89 (79.036583ms)\n"}
{"Time":"2023-05-31T11:56:56.878331-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.878333-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:56.878336-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:56:56.878338-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \t  To start a cluster, run: \"minikube start -p force-systemd-env-429000\"\n"}
{"Time":"2023-05-31T11:56:56.87834-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.878342-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:56.878344-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:106: failed to get docker cgroup driver. args \"out/minikube-darwin-arm64 -p force-systemd-env-429000 ssh \\\"docker info --format {{.CgroupDriver}}\\\"\": exit status 89\n"}
{"Time":"2023-05-31T11:56:56.878348-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:160: *** TestForceSystemdEnv FAILED at 2023-05-31 11:56:56.878315 -0700 PDT m=+851.059908334\n"}
{"Time":"2023-05-31T11:56:56.87835-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:56:56.878366-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p force-systemd-env-429000 -n force-systemd-env-429000\n"}
{"Time":"2023-05-31T11:56:56.910949-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p force-systemd-env-429000 -n force-systemd-env-429000: exit status 7 (32.511417ms)\n"}
{"Time":"2023-05-31T11:56:56.910963-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.910965-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:56:56.910967-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:56:56.910969-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        \n"}
{"Time":"2023-05-31T11:56:56.91097-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:56:56.910972-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:56:56.910975-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:241: \"force-systemd-env-429000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:56:56.910976-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:175: Cleaning up \"force-systemd-env-429000\" profile ...\n"}
{"Time":"2023-05-31T11:56:56.910981-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p force-systemd-env-429000\n"}
{"Time":"2023-05-31T11:56:57.006236-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"--- FAIL: TestForceSystemdEnv (10.10s)\n"}
{"Time":"2023-05-31T11:56:57.006251-07:00","Action":"fail","Test":"TestForceSystemdEnv","Elapsed":10.1}
{"Time":"2023-05-31T11:56:57.006254-07:00","Action":"cont","Test":"TestDockerFlags"}
{"Time":"2023-05-31T11:56:57.006256-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== CONT  TestDockerFlags\n"}
{"Time":"2023-05-31T11:56:57.00631-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:45: (dbg) Run:  out/minikube-darwin-arm64 start -p docker-flags-240000 --cache-images=false --memory=2048 --install-addons=false --wait=false --docker-env=FOO=BAR --docker-env=BAZ=BAT --docker-opt=debug --docker-opt=icc=true --alsologtostderr -v=5 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:57:01.988201-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:85: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p force-systemd-flag-925000 --memory=2048 --force-systemd --alsologtostderr -v=5 --driver=qemu2 : exit status 80 (11.687983584s)\n"}
{"Time":"2023-05-31T11:57:01.988255-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:01.988264-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:01.988271-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* [force-systemd-flag-925000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:01.988279-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:01.988286-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:01.988295-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:01.988304-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:01.988311-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:01.988331-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:01.988337-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:01.988344-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:01.988351-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Starting control plane node force-systemd-flag-925000 in cluster force-systemd-flag-925000\n"}
{"Time":"2023-05-31T11:57:01.988358-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:01.988366-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:01.988372-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:01.988379-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.988385-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Deleting \"force-systemd-flag-925000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:01.988392-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:01.988399-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:01.988406-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:01.988412-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.988418-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.988424-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.98843-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:01.988437-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:01.988444-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:57:01.98845-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.323575    3101 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:57:01.988458-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.323708    3101 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:57:01.988465-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.323711    3101 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:57:01.988472-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.323714    3101 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:57:01.988479-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.323779    3101 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:57:01.988487-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.324782    3101 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:57:01.988497-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.339477    3101 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1581,\"bootTime\":1685557829,\"procs\":400,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:57:01.988511-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:56:50.339540    3101 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:57:01.988542-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.348900    3101 out.go:177] * [force-systemd-flag-925000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:01.98855-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.351953    3101 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:01.988557-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.355927    3101 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:01.988564-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.352005    3101 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:57:01.988573-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.361862    3101 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:01.988582-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.364913    3101 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:01.988589-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.367915    3101 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:01.988597-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.370885    3101 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:01.988604-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.374245    3101 config.go:182] Loaded profile config \"force-systemd-env-429000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:57:01.988613-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.374311    3101 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:57:01.988621-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.374366    3101 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:57:01.988628-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.378913    3101 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:01.988634-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.385922    3101 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:57:01.988642-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.385928    3101 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:57:01.988654-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.385933    3101 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:57:01.988661-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.387791    3101 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:57:01.988669-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.390922    3101 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:01.988675-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392299    3101 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T11:57:01.988682-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392311    3101 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:57:01.98869-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392319    3101 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:57:01.988698-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392324    3101 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:57:01.988705-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392330    3101 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:57:01.988718-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t{Name:force-systemd-flag-925000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-flag-925000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Co"}
{"Time":"2023-05-31T11:57:01.988732-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"ntainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:57:01.988743-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.392399    3101 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:01.988751-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.399924    3101 out.go:177] * Starting control plane node force-systemd-flag-925000 in cluster force-systemd-flag-925000\n"}
{"Time":"2023-05-31T11:57:01.988758-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.403915    3101 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:57:01.988766-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.403936    3101 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:57:01.988774-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.403947    3101 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:57:01.98881-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404005    3101 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:57:01.98882-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404010    3101 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:57:01.988829-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404061    3101 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/force-systemd-flag-925000/config.json ...\n"}
{"Time":"2023-05-31T11:57:01.988837-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404072    3101 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/force-systemd-flag-925000/config.json: {Name:mkd5da7a96e33763c161ce5f70ae8b1ca475e265 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:01.988846-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404254    3101 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:57:01.988854-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404267    3101 start.go:364] acquiring machines lock for force-systemd-flag-925000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:01.988862-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404298    3101 start.go:368] acquired machines lock for \"force-systemd-flag-925000\" in 25.125µs\n"}
{"Time":"2023-05-31T11:57:01.988878-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404309    3101 start.go:93] Provisioning new machine with config: \u0026{Name:force-systemd-flag-925000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T11:57:01.988892-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"ernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-flag-925000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p Mount"}
{"Time":"2023-05-31T11:57:01.988903-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"UID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:57:01.988912-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.404334    3101 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:01.98892-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.412896    3101 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:01.988927-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.429979    3101 start.go:159] libmachine.API.Create for \"force-systemd-flag-925000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:01.988935-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430011    3101 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:57:01.988942-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430070    3101 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:57:01.988949-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430089    3101 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:01.988957-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430099    3101 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:01.988968-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430146    3101 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:57:01.988975-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430161    3101 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:01.988983-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430168    3101 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:01.988991-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.430479    3101 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:57:01.988999-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.577723    3101 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:57:01.989005-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.611743    3101 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:57:01.989012-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.611753    3101 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:57:01.98902-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.611886    3101 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.989028-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.620341    3101 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:01.989034-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.620357    3101 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:01.989042-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.620407    3101 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:57:01.989049-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.627518    3101 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:57:01.989056-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.989062-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.627530    3101 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:01.98907-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.627551    3101 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.989078-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.627559    3101 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:57:01.989089-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.627598    3101 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/qemu.pid -device virtio-net-pci,netdev=net0,mac=1a:3e:a9:97:b8:26 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.989101-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.629117    3101 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:01.989109-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.629133    3101 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:01.989116-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.989123-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:50.629149    3101 client.go:171] LocalClient.Create took 199.13825ms\n"}
{"Time":"2023-05-31T11:57:01.98913-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:52.631308    3101 start.go:128] duration metric: createHost completed in 2.226987833s\n"}
{"Time":"2023-05-31T11:57:01.989138-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:52.631384    3101 start.go:83] releasing machines lock for \"force-systemd-flag-925000\", held for 2.227088458s\n"}
{"Time":"2023-05-31T11:57:01.989147-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:56:52.631432    3101 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989157-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:52.642527    3101 out.go:177] * Deleting \"force-systemd-flag-925000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:01.989164-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:56:52.662581    3101 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989173-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.98918-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:52.662602    3101 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:57:01.989188-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:57.664709    3101 start.go:364] acquiring machines lock for force-systemd-flag-925000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:01.989196-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.556725    3101 start.go:368] acquired machines lock for \"force-systemd-flag-925000\" in 1.89200675s\n"}
{"Time":"2023-05-31T11:57:01.989211-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.556871    3101 start.go:93] Provisioning new machine with config: \u0026{Name:force-systemd-flag-925000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T11:57:01.989225-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"ernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:force-systemd-flag-925000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p Mount"}
{"Time":"2023-05-31T11:57:01.989236-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"UID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:57:01.989244-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.557198    3101 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:01.989251-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.562776    3101 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:01.989258-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.610971    3101 start.go:159] libmachine.API.Create for \"force-systemd-flag-925000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:01.989265-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611018    3101 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:57:01.989273-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611187    3101 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:57:01.989293-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611236    3101 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:01.989301-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611261    3101 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:01.989309-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611350    3101 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:57:01.989316-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611382    3101 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:01.989323-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611407    3101 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:01.989332-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.611902    3101 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:57:01.989341-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.777128    3101 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:57:01.989349-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.920804    3101 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:57:01.989357-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.920810    3101 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:57:01.989365-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.921007    3101 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.989373-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.929922    3101 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:01.98938-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.929940    3101 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:01.989388-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.929994    3101 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:57:01.989396-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.937139    3101 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:57:01.989405-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.989412-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.937155    3101 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:01.989419-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.937169    3101 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.98943-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.937177    3101 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:57:01.98944-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.937211    3101 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/qemu.pid -device virtio-net-pci,netdev=net0,mac=de:c6:61:06:34:34 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/force-systemd-flag-925000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:01.989451-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.938769    3101 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:01.989458-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.938785    3101 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:01.989465-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:01.989472-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:56:59.938796    3101 client.go:171] LocalClient.Create took 327.77525ms\n"}
{"Time":"2023-05-31T11:57:01.989478-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:57:01.940931    3101 start.go:128] duration metric: createHost completed in 2.3837425s\n"}
{"Time":"2023-05-31T11:57:01.989486-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:57:01.941043    3101 start.go:83] releasing machines lock for \"force-systemd-flag-925000\", held for 2.384279667s\n"}
{"Time":"2023-05-31T11:57:01.989494-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:57:01.941453    3101 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p force-systemd-flag-925000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989503-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p force-systemd-flag-925000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989511-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:57:01.957983    3101 out.go:177] \n"}
{"Time":"2023-05-31T11:57:01.989518-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:57:01.962098    3101 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989528-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:01.989536-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:57:01.962179    3101 out.go:239] * \n"}
{"Time":"2023-05-31T11:57:01.989543-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* \n"}
{"Time":"2023-05-31T11:57:01.98955-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tW0531 11:57:01.964889    3101 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:01.98956-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989567-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:01.989575-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:01.989582-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989647-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:01.989656-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989665-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:01.989675-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:01.989685-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989692-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:01.9897-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:01.989707-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989715-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:01.989724-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:01.989732-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:01.989741-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tI0531 11:57:01.973005    3101 out.go:177] \n"}
{"Time":"2023-05-31T11:57:01.989748-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:01.989754-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:57:01.989762-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:87: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p force-systemd-flag-925000 --memory=2048 --force-systemd --alsologtostderr -v=5 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:57:01.989776-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:104: (dbg) Run:  out/minikube-darwin-arm64 -p force-systemd-flag-925000 ssh \"docker info --format {{.CgroupDriver}}\"\n"}
{"Time":"2023-05-31T11:57:02.066969-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:104: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p force-systemd-flag-925000 ssh \"docker info --format {{.CgroupDriver}}\": exit status 89 (78.644458ms)\n"}
{"Time":"2023-05-31T11:57:02.066985-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:02.066988-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:02.066991-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:02.066993-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \t  To start a cluster, run: \"minikube start -p force-systemd-flag-925000\"\n"}
{"Time":"2023-05-31T11:57:02.066995-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:02.066997-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:02.067-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:106: failed to get docker cgroup driver. args \"out/minikube-darwin-arm64 -p force-systemd-flag-925000 ssh \\\"docker info --format {{.CgroupDriver}}\\\"\": exit status 89\n"}
{"Time":"2023-05-31T11:57:02.067039-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:100: *** TestForceSystemdFlag FAILED at 2023-05-31 11:57:02.066985 -0700 PDT m=+856.248653251\n"}
{"Time":"2023-05-31T11:57:02.067043-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:57:02.067062-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p force-systemd-flag-925000 -n force-systemd-flag-925000\n"}
{"Time":"2023-05-31T11:57:02.101433-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p force-systemd-flag-925000 -n force-systemd-flag-925000: exit status 7 (34.304833ms)\n"}
{"Time":"2023-05-31T11:57:02.10145-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:02.101452-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:02.101454-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:57:02.101455-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        \n"}
{"Time":"2023-05-31T11:57:02.101457-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:02.101458-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:57:02.101461-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:241: \"force-systemd-flag-925000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:57:02.101463-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:175: Cleaning up \"force-systemd-flag-925000\" profile ...\n"}
{"Time":"2023-05-31T11:57:02.101479-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p force-systemd-flag-925000\n"}
{"Time":"2023-05-31T11:57:02.195749-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"--- FAIL: TestForceSystemdFlag (11.90s)\n"}
{"Time":"2023-05-31T11:57:02.195764-07:00","Action":"fail","Test":"TestForceSystemdFlag","Elapsed":11.9}
{"Time":"2023-05-31T11:57:02.195767-07:00","Action":"cont","Test":"TestCertExpiration"}
{"Time":"2023-05-31T11:57:02.195769-07:00","Action":"output","Test":"TestCertExpiration","Output":"=== CONT  TestCertExpiration\n"}
{"Time":"2023-05-31T11:57:02.195828-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:123: (dbg) Run:  out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=3m --driver=qemu2 \n"}
{"Time":"2023-05-31T11:57:04.960546-07:00","Action":"output","Test":"TestCertExpiration","Output":"E0531 11:57:04.960506    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:57:06.91815-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:45: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p docker-flags-240000 --cache-images=false --memory=2048 --install-addons=false --wait=false --docker-env=FOO=BAR --docker-env=BAZ=BAT --docker-opt=debug --docker-opt=icc=true --alsologtostderr -v=5 --driver=qemu2 : exit status 80 (9.909517917s)\n"}
{"Time":"2023-05-31T11:57:06.918211-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:06.91822-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:06.918229-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* [docker-flags-240000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:06.918237-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:06.918245-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:06.918252-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:06.91826-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:06.918268-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:06.918274-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:06.918281-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:06.918288-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:06.918294-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Starting control plane node docker-flags-240000 in cluster docker-flags-240000\n"}
{"Time":"2023-05-31T11:57:06.918313-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:06.918321-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:06.91833-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:06.918337-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.918343-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Deleting \"docker-flags-240000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:06.918354-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:06.918362-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:06.918368-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:06.918375-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.918381-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.918387-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.918393-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:06.9184-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:06.918406-07:00","Action":"output","Test":"TestDockerFlags","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:57:06.918412-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.033547    3122 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T11:57:06.918419-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.033677    3122 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:57:06.918426-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.033680    3122 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T11:57:06.918434-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.033682    3122 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T11:57:06.918441-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.033752    3122 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T11:57:06.918449-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.034770    3122 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T11:57:06.918457-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.049808    3122 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1588,\"bootTime\":1685557829,\"procs\":395,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T11:57:06.918471-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:56:57.049894    3122 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T11:57:06.918479-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.055464    3122 out.go:177] * [docker-flags-240000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:06.918488-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.061380    3122 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:06.918495-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.061419    3122 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T11:57:06.918502-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.065458    3122 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:06.91851-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.068406    3122 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:06.918517-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.071387    3122 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:06.918524-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.074394    3122 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:06.918531-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.075817    3122 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:06.918538-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.079697    3122 config.go:182] Loaded profile config \"force-systemd-flag-925000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:57:06.918547-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.079758    3122 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T11:57:06.918555-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.079800    3122 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T11:57:06.918562-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.084360    3122 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:06.918569-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.089382    3122 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T11:57:06.918577-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.089390    3122 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T11:57:06.918587-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.089396    3122 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T11:57:06.918595-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.091207    3122 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T11:57:06.918603-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.094361    3122 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:06.91861-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097471    3122 start_flags.go:914] Waiting for no components: map[apiserver:false apps_running:false default_sa:false extra:false kubelet:false node_ready:false system_pods:false]\n"}
{"Time":"2023-05-31T11:57:06.918618-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097487    3122 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T11:57:06.918625-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097498    3122 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T11:57:06.918636-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097504    3122 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T11:57:06.918643-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097511    3122 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T11:57:06.918657-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t{Name:docker-flags-240000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[FOO=BAR BAZ=BAT] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[debug icc=true] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:docker-flags-240000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain"}
{"Time":"2023-05-31T11:57:06.918674-07:00","Action":"output","Test":"TestDockerFlags","Output":":cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:false EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:false apps_running:false default_sa:false extra:false kubelet:false node_ready:false system_pods:false] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/ru"}
{"Time":"2023-05-31T11:57:06.918685-07:00","Action":"output","Test":"TestDockerFlags","Output":"n/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T11:57:06.918692-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.097603    3122 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:06.9187-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.105408    3122 out.go:177] * Starting control plane node docker-flags-240000 in cluster docker-flags-240000\n"}
{"Time":"2023-05-31T11:57:06.918707-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109374    3122 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T11:57:06.918715-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109396    3122 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T11:57:06.918723-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109408    3122 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T11:57:06.918731-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109470    3122 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T11:57:06.91874-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109476    3122 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T11:57:06.918748-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109534    3122 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/docker-flags-240000/config.json ...\n"}
{"Time":"2023-05-31T11:57:06.918756-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109546    3122 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/docker-flags-240000/config.json: {Name:mk669dc6cbad2e0c8693bbb27aeee897381c014f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:06.918764-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109747    3122 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T11:57:06.918771-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109760    3122 start.go:364] acquiring machines lock for docker-flags-240000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:06.91878-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109788    3122 start.go:368] acquired machines lock for \"docker-flags-240000\" in 23.291µs\n"}
{"Time":"2023-05-31T11:57:06.918795-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109799    3122 start.go:93] Provisioning new machine with config: \u0026{Name:docker-flags-240000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[FOO=BAR BAZ=BAT] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[debug icc=true] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root"}
{"Time":"2023-05-31T11:57:06.918809-07:00","Action":"output","Test":"TestDockerFlags","Output":" SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:docker-flags-240000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:false EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:false apps_running:false default_sa:false extra:false kubelet:false node_ready:false system_pods:false] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion"}
{"Time":"2023-05-31T11:57:06.918821-07:00","Action":"output","Test":"TestDockerFlags","Output":":9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:57:06.91883-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.109823    3122 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:06.918838-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.117370    3122 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:06.918845-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133280    3122 start.go:159] libmachine.API.Create for \"docker-flags-240000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:06.918852-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133307    3122 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:57:06.918859-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133370    3122 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:57:06.918867-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133391    3122 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:06.918875-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133400    3122 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:06.918882-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133439    3122 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:57:06.918889-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133453    3122 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:06.918899-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133459    3122 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:06.918907-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.133767    3122 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:57:06.918916-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.304590    3122 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:57:06.918923-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.535700    3122 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:57:06.91893-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.535712    3122 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:57:06.918938-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.535919    3122 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.918945-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.545242    3122 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:06.918953-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.545261    3122 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:06.91896-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.545327    3122 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:57:06.918968-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.552641    3122 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:57:06.918975-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.918981-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.552654    3122 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:06.918989-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.552675    3122 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.918997-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.552688    3122 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:57:06.919007-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.552726    3122 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/qemu.pid -device virtio-net-pci,netdev=net0,mac=92:13:39:e5:15:ff -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.919018-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.554320    3122 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:06.919025-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.554338    3122 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:06.919031-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.919038-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:57.554357    3122 client.go:171] LocalClient.Create took 421.05ms\n"}
{"Time":"2023-05-31T11:57:06.919045-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:59.556540    3122 start.go:128] duration metric: createHost completed in 2.4467345s\n"}
{"Time":"2023-05-31T11:57:06.919052-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:59.556599    3122 start.go:83] releasing machines lock for \"docker-flags-240000\", held for 2.446837542s\n"}
{"Time":"2023-05-31T11:57:06.919059-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:56:59.556662    3122 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919067-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:59.574671    3122 out.go:177] * Deleting \"docker-flags-240000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:06.919077-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:56:59.589577    3122 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919084-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.91909-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:56:59.589597    3122 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T11:57:06.919095-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.591782    3122 start.go:364] acquiring machines lock for docker-flags-240000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T11:57:06.9191-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.598695    3122 start.go:368] acquired machines lock for \"docker-flags-240000\" in 6.793625ms\n"}
{"Time":"2023-05-31T11:57:06.919111-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.598810    3122 start.go:93] Provisioning new machine with config: \u0026{Name:docker-flags-240000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2048 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[FOO=BAR BAZ=BAT] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[debug icc=true] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root"}
{"Time":"2023-05-31T11:57:06.919122-07:00","Action":"output","Test":"TestDockerFlags","Output":" SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:docker-flags-240000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:false EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:false apps_running:false default_sa:false extra:false kubelet:false node_ready:false system_pods:false] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion"}
{"Time":"2023-05-31T11:57:06.919131-07:00","Action":"output","Test":"TestDockerFlags","Output":":9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T11:57:06.919143-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.599080    3122 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:06.919149-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.606665    3122 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:06.919154-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653295    3122 start.go:159] libmachine.API.Create for \"docker-flags-240000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T11:57:06.91916-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653354    3122 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T11:57:06.919165-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653511    3122 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T11:57:06.919171-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653554    3122 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:06.919176-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653575    3122 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:06.919182-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653683    3122 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T11:57:06.919189-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653718    3122 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T11:57:06.919195-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.653732    3122 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T11:57:06.919201-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.654236    3122 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T11:57:06.919206-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.807654    3122 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T11:57:06.919211-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.858140    3122 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T11:57:06.919216-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.858147    3122 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T11:57:06.919222-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.858296    3122 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.919227-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.866842    3122 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:06.919232-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.866855    3122 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:06.91924-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.866895    3122 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T11:57:06.919245-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.874021    3122 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T11:57:06.91925-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.919254-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.874035    3122 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T11:57:06.91926-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.874045    3122 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.919266-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.874054    3122 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T11:57:06.919274-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.874100    3122 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2048 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/qemu.pid -device virtio-net-pci,netdev=net0,mac=fa:f5:2f:a4:f1:80 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/docker-flags-240000/disk.qcow2\n"}
{"Time":"2023-05-31T11:57:06.919282-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.875617    3122 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T11:57:06.919287-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.875633    3122 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:06.919292-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:06.919297-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:04.875643    3122 client.go:171] LocalClient.Create took 222.287125ms\n"}
{"Time":"2023-05-31T11:57:06.919302-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:06.877820    3122 start.go:128] duration metric: createHost completed in 2.278727958s\n"}
{"Time":"2023-05-31T11:57:06.919307-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:06.877917    3122 start.go:83] releasing machines lock for \"docker-flags-240000\", held for 2.279228667s\n"}
{"Time":"2023-05-31T11:57:06.919316-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:57:06.878396    3122 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p docker-flags-240000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919323-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p docker-flags-240000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919329-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:06.886999    3122 out.go:177] \n"}
{"Time":"2023-05-31T11:57:06.919335-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:57:06.890788    3122 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919342-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:06.919348-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:57:06.890816    3122 out.go:239] * \n"}
{"Time":"2023-05-31T11:57:06.919352-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* \n"}
{"Time":"2023-05-31T11:57:06.919359-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tW0531 11:57:06.893491    3122 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:06.919367-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.919375-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:06.91938-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:06.919386-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.919392-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:06.919397-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.919403-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:06.919411-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:06.919418-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.919423-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:06.91943-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:06.919435-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.91944-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:06.919445-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:06.919451-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:06.919459-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tI0531 11:57:06.901809    3122 out.go:177] \n"}
{"Time":"2023-05-31T11:57:06.919464-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:06.919468-07:00","Action":"output","Test":"TestDockerFlags","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:57:06.919477-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:47: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p docker-flags-240000 --cache-images=false --memory=2048 --install-addons=false --wait=false --docker-env=FOO=BAR --docker-env=BAZ=BAT --docker-opt=debug --docker-opt=icc=true --alsologtostderr -v=5 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:57:06.919484-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:50: (dbg) Run:  out/minikube-darwin-arm64 -p docker-flags-240000 ssh \"sudo systemctl show docker --property=Environment --no-pager\"\n"}
{"Time":"2023-05-31T11:57:06.994996-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:50: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p docker-flags-240000 ssh \"sudo systemctl show docker --property=Environment --no-pager\": exit status 89 (76.68925ms)\n"}
{"Time":"2023-05-31T11:57:06.995011-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:06.995014-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:06.995016-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:06.995018-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  To start a cluster, run: \"minikube start -p docker-flags-240000\"\n"}
{"Time":"2023-05-31T11:57:06.99502-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:06.995022-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:06.995024-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:52: failed to 'systemctl show docker' inside minikube. args \"out/minikube-darwin-arm64 -p docker-flags-240000 ssh \\\"sudo systemctl show docker --property=Environment --no-pager\\\"\": exit status 89\n"}
{"Time":"2023-05-31T11:57:06.995029-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:57: expected env key/value \"FOO=BAR\" to be passed to minikube's docker and be included in: *\"* The control plane node must be running for this command\\n  To start a cluster, run: \\\"minikube start -p docker-flags-240000\\\"\\n\"*.\n"}
{"Time":"2023-05-31T11:57:06.995032-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:57: expected env key/value \"BAZ=BAT\" to be passed to minikube's docker and be included in: *\"* The control plane node must be running for this command\\n  To start a cluster, run: \\\"minikube start -p docker-flags-240000\\\"\\n\"*.\n"}
{"Time":"2023-05-31T11:57:06.995035-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:61: (dbg) Run:  out/minikube-darwin-arm64 -p docker-flags-240000 ssh \"sudo systemctl show docker --property=ExecStart --no-pager\"\n"}
{"Time":"2023-05-31T11:57:07.037925-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:61: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p docker-flags-240000 ssh \"sudo systemctl show docker --property=ExecStart --no-pager\": exit status 89 (42.800666ms)\n"}
{"Time":"2023-05-31T11:57:07.037938-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:07.03794-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:07.037941-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:07.037943-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \t  To start a cluster, run: \"minikube start -p docker-flags-240000\"\n"}
{"Time":"2023-05-31T11:57:07.037945-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:07.037946-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:07.037948-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:63: failed on the second 'systemctl show docker' inside minikube. args \"out/minikube-darwin-arm64 -p docker-flags-240000 ssh \\\"sudo systemctl show docker --property=ExecStart --no-pager\\\"\": exit status 89\n"}
{"Time":"2023-05-31T11:57:07.037951-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:67: expected \"out/minikube-darwin-arm64 -p docker-flags-240000 ssh \\\"sudo systemctl show docker --property=ExecStart --no-pager\\\"\" output to have include *--debug* . output: \"* The control plane node must be running for this command\\n  To start a cluster, run: \\\"minikube start -p docker-flags-240000\\\"\\n\"\n"}
{"Time":"2023-05-31T11:57:07.037976-07:00","Action":"output","Test":"TestDockerFlags","Output":"    panic.go:522: *** TestDockerFlags FAILED at 2023-05-31 11:57:07.037952 -0700 PDT m=+861.219692167\n"}
{"Time":"2023-05-31T11:57:07.037979-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:57:07.038044-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p docker-flags-240000 -n docker-flags-240000\n"}
{"Time":"2023-05-31T11:57:07.066158-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p docker-flags-240000 -n docker-flags-240000: exit status 7 (28.073792ms)\n"}
{"Time":"2023-05-31T11:57:07.066169-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:07.066171-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:07.066173-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:57:07.066174-07:00","Action":"output","Test":"TestDockerFlags","Output":"        \n"}
{"Time":"2023-05-31T11:57:07.066176-07:00","Action":"output","Test":"TestDockerFlags","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:07.066177-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:57:07.066179-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:241: \"docker-flags-240000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:57:07.066181-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:175: Cleaning up \"docker-flags-240000\" profile ...\n"}
{"Time":"2023-05-31T11:57:07.066191-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p docker-flags-240000\n"}
{"Time":"2023-05-31T11:57:07.15995-07:00","Action":"cont","Test":"TestCertOptions"}
{"Time":"2023-05-31T11:57:07.159974-07:00","Action":"output","Test":"TestCertOptions","Output":"=== CONT  TestCertOptions\n"}
{"Time":"2023-05-31T11:57:07.159983-07:00","Action":"output","Test":"TestDockerFlags","Output":"--- FAIL: TestDockerFlags (10.15s)\n"}
{"Time":"2023-05-31T11:57:07.160052-07:00","Action":"fail","Test":"TestDockerFlags","Elapsed":10.15}
{"Time":"2023-05-31T11:57:07.160059-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:49: (dbg) Run:  out/minikube-darwin-arm64 start -p cert-options-941000 --memory=2048 --apiserver-ips=127.0.0.1 --apiserver-ips=192.168.15.15 --apiserver-names=localhost --apiserver-names=www.google.com --apiserver-port=8555 --driver=qemu2 \n"}
{"Time":"2023-05-31T11:57:11.976929-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:123: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=3m --driver=qemu2 : exit status 80 (9.7805625s)\n"}
{"Time":"2023-05-31T11:57:11.97699-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T11:57:11.977-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:11.977008-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* [cert-expiration-741000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:11.977028-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:11.977041-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:11.977049-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:11.977056-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:11.977064-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:11.97707-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:11.977077-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:11.977084-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:11.977091-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Starting control plane node cert-expiration-741000 in cluster cert-expiration-741000\n"}
{"Time":"2023-05-31T11:57:11.977099-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:11.977105-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:11.977112-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:11.97712-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:11.977127-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Deleting \"cert-expiration-741000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:11.977135-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:11.977141-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:11.977147-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:11.977155-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:11.977161-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:11.977168-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:11.977174-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T11:57:11.97718-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:11.977187-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:57:11.977194-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:11.977203-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p cert-expiration-741000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:11.977213-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:11.97722-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* \n"}
{"Time":"2023-05-31T11:57:11.977228-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:11.977277-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:11.977286-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:11.977293-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:11.9773-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:11.977307-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:11.977314-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:11.977322-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:11.977331-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T11:57:11.977337-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:57:11.977344-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:125: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=3m --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:57:16.853227-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:49: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p cert-options-941000 --memory=2048 --apiserver-ips=127.0.0.1 --apiserver-ips=192.168.15.15 --apiserver-names=localhost --apiserver-names=www.google.com --apiserver-port=8555 --driver=qemu2 : exit status 80 (9.692682417s)\n"}
{"Time":"2023-05-31T11:57:16.853284-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:16.853294-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:16.853302-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* [cert-options-941000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T11:57:16.853309-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T11:57:16.853317-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T11:57:16.853325-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T11:57:16.853334-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T11:57:16.853341-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T11:57:16.853348-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T11:57:16.853354-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T11:57:16.853361-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T11:57:16.853368-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Starting control plane node cert-options-941000 in cluster cert-options-941000\n"}
{"Time":"2023-05-31T11:57:16.853375-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:16.853381-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:16.853388-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:16.853394-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:16.853401-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Deleting \"cert-options-941000\" in qemu2 ...\n"}
{"Time":"2023-05-31T11:57:16.853409-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T11:57:16.853416-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T11:57:16.853422-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T11:57:16.853429-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:16.853435-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:16.853441-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t\n"}
{"Time":"2023-05-31T11:57:16.853461-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:16.853467-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:16.853474-07:00","Action":"output","Test":"TestCertOptions","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T11:57:16.85348-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:16.853489-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p cert-options-941000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:16.85353-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T11:57:16.853539-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* \n"}
{"Time":"2023-05-31T11:57:16.853547-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T11:57:16.85356-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:16.853569-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T11:57:16.853576-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T11:57:16.853583-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:16.85359-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T11:57:16.853597-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T11:57:16.853605-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T11:57:16.853614-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:16.85362-07:00","Action":"output","Test":"TestCertOptions","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T11:57:16.853633-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:51: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p cert-options-941000 --memory=2048 --apiserver-ips=127.0.0.1 --apiserver-ips=192.168.15.15 --apiserver-names=localhost --apiserver-names=www.google.com --apiserver-port=8555 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T11:57:16.853641-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:60: (dbg) Run:  out/minikube-darwin-arm64 -p cert-options-941000 ssh \"openssl x509 -text -noout -in /var/lib/minikube/certs/apiserver.crt\"\n"}
{"Time":"2023-05-31T11:57:16.934304-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:60: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p cert-options-941000 ssh \"openssl x509 -text -noout -in /var/lib/minikube/certs/apiserver.crt\": exit status 89 (80.924417ms)\n"}
{"Time":"2023-05-31T11:57:16.934324-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:16.934327-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:16.93433-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:16.934332-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  To start a cluster, run: \"minikube start -p cert-options-941000\"\n"}
{"Time":"2023-05-31T11:57:16.934334-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:16.934336-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:16.93434-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:62: failed to read apiserver cert inside minikube. args \"out/minikube-darwin-arm64 -p cert-options-941000 ssh \\\"openssl x509 -text -noout -in /var/lib/minikube/certs/apiserver.crt\\\"\": exit status 89\n"}
{"Time":"2023-05-31T11:57:16.934343-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:69: apiserver cert does not include 127.0.0.1 in SAN.\n"}
{"Time":"2023-05-31T11:57:16.934345-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:69: apiserver cert does not include 192.168.15.15 in SAN.\n"}
{"Time":"2023-05-31T11:57:16.934347-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:69: apiserver cert does not include localhost in SAN.\n"}
{"Time":"2023-05-31T11:57:16.93435-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:69: apiserver cert does not include www.google.com in SAN.\n"}
{"Time":"2023-05-31T11:57:16.934545-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:88: (dbg) Run:  kubectl --context cert-options-941000 config view\n"}
{"Time":"2023-05-31T11:57:16.966011-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:93: Kubeconfig apiserver server port incorrect. Output of \n"}
{"Time":"2023-05-31T11:57:16.966024-07:00","Action":"output","Test":"TestCertOptions","Output":"         'kubectl config view' = \"\\n-- stdout --\\n\\tapiVersion: v1\\n\\tclusters: null\\n\\tcontexts: null\\n\\tcurrent-context: \\\"\\\"\\n\\tkind: Config\\n\\tpreferences: {}\\n\\tusers: null\\n\\n-- /stdout --\"\n"}
{"Time":"2023-05-31T11:57:16.966027-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:100: (dbg) Run:  out/minikube-darwin-arm64 ssh -p cert-options-941000 -- \"sudo cat /etc/kubernetes/admin.conf\"\n"}
{"Time":"2023-05-31T11:57:17.00521-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:100: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p cert-options-941000 -- \"sudo cat /etc/kubernetes/admin.conf\": exit status 89 (39.109916ms)\n"}
{"Time":"2023-05-31T11:57:17.005224-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:17.005227-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:17.005229-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:17.005234-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  To start a cluster, run: \"minikube start -p cert-options-941000\"\n"}
{"Time":"2023-05-31T11:57:17.005236-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:17.005237-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:17.005239-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:102: failed to SSH to minikube with args: \"out/minikube-darwin-arm64 ssh -p cert-options-941000 -- \\\"sudo cat /etc/kubernetes/admin.conf\\\"\" : exit status 89\n"}
{"Time":"2023-05-31T11:57:17.005249-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:106: Internal minikube kubeconfig (admin.conf) does not contains the right api port. \n"}
{"Time":"2023-05-31T11:57:17.00525-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:17.005251-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T11:57:17.005253-07:00","Action":"output","Test":"TestCertOptions","Output":"        \t  To start a cluster, run: \"minikube start -p cert-options-941000\"\n"}
{"Time":"2023-05-31T11:57:17.005255-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:17.005256-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:17.005268-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:109: *** TestCertOptions FAILED at 2023-05-31 11:57:17.00525 -0700 PDT m=+871.187133876\n"}
{"Time":"2023-05-31T11:57:17.00527-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T11:57:17.005286-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p cert-options-941000 -n cert-options-941000\n"}
{"Time":"2023-05-31T11:57:17.034394-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p cert-options-941000 -n cert-options-941000: exit status 7 (29.013958ms)\n"}
{"Time":"2023-05-31T11:57:17.034405-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:17.034407-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T11:57:17.034409-07:00","Action":"output","Test":"TestCertOptions","Output":"        \tStopped\n"}
{"Time":"2023-05-31T11:57:17.03441-07:00","Action":"output","Test":"TestCertOptions","Output":"        \n"}
{"Time":"2023-05-31T11:57:17.034411-07:00","Action":"output","Test":"TestCertOptions","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T11:57:17.034413-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T11:57:17.034415-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:241: \"cert-options-941000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T11:57:17.034426-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:175: Cleaning up \"cert-options-941000\" profile ...\n"}
{"Time":"2023-05-31T11:57:17.034434-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p cert-options-941000\n"}
{"Time":"2023-05-31T11:57:17.126167-07:00","Action":"output","Test":"TestCertOptions","Output":"--- FAIL: TestCertOptions (9.97s)\n"}
{"Time":"2023-05-31T11:57:17.126179-07:00","Action":"fail","Test":"TestCertOptions","Elapsed":9.97}
{"Time":"2023-05-31T11:57:17.126183-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2023-05-31T11:57:17.126184-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2023-05-31T11:57:32.669097-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"E0531 11:57:32.668999    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T11:58:02.319226-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"E0531 11:58:02.319110    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T12:00:11.976637-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:131: (dbg) Run:  out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=8760h --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:12.959108-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    version_upgrade_test.go:106: v1.6.2 release installation failed: bad response code: 404\n"}
{"Time":"2023-05-31T12:00:12.959183-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    panic.go:522: *** TestRunningBinaryUpgrade FAILED at 2023-05-31 12:00:12.959046 -0700 PDT m=+1047.143472251\n"}
{"Time":"2023-05-31T12:00:12.959205-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:12.959215-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p running-upgrade-168000 -n running-upgrade-168000\n"}
{"Time":"2023-05-31T12:00:13.042142-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p running-upgrade-168000 -n running-upgrade-168000: exit status 85 (82.771583ms)\n"}
{"Time":"2023-05-31T12:00:13.04218-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:13.042183-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:13.042187-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        \t* Profile \"running-upgrade-168000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T12:00:13.04219-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        \t  To start a cluster, run: \"minikube start -p running-upgrade-168000\"\n"}
{"Time":"2023-05-31T12:00:13.042194-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:13.042195-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:13.042197-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:239: status error: exit status 85 (may be ok)\n"}
{"Time":"2023-05-31T12:00:13.042203-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:241: \"running-upgrade-168000\" host is not running, skipping log retrieval (state=\"* Profile \\\"running-upgrade-168000\\\" not found. Run \\\"minikube profile list\\\" to view all profiles.\\n  To start a cluster, run: \\\"minikube start -p running-upgrade-168000\\\"\")\n"}
{"Time":"2023-05-31T12:00:13.042207-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:175: Cleaning up \"running-upgrade-168000\" profile ...\n"}
{"Time":"2023-05-31T12:00:13.04221-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p running-upgrade-168000\n"}
{"Time":"2023-05-31T12:00:13.281663-07:00","Action":"cont","Test":"TestKubernetesUpgrade"}
{"Time":"2023-05-31T12:00:13.281677-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== CONT  TestKubernetesUpgrade\n"}
{"Time":"2023-05-31T12:00:13.281683-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"--- FAIL: TestRunningBinaryUpgrade (176.16s)\n"}
{"Time":"2023-05-31T12:00:13.281722-07:00","Action":"fail","Test":"TestRunningBinaryUpgrade","Elapsed":176.16}
{"Time":"2023-05-31T12:00:13.28173-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:234: (dbg) Run:  out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.16.0 --alsologtostderr -v=1 --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:17.205715-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:131: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=8760h --driver=qemu2 : exit status 80 (5.228636167s)\n"}
{"Time":"2023-05-31T12:00:17.20577-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.205779-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:17.205787-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* [cert-expiration-741000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:17.205796-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:17.205803-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:17.20581-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:17.205818-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:17.205825-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:17.205832-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:17.205839-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:17.205847-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Starting control plane node cert-expiration-741000 in cluster cert-expiration-741000\n"}
{"Time":"2023-05-31T12:00:17.205854-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Restarting existing qemu2 VM for \"cert-expiration-741000\" ...\n"}
{"Time":"2023-05-31T12:00:17.205861-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:17.205868-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:17.205875-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.205881-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Restarting existing qemu2 VM for \"cert-expiration-741000\" ...\n"}
{"Time":"2023-05-31T12:00:17.205888-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:17.205895-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:17.205901-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.205907-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.205913-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.205919-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.205925-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:17.205931-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:17.205938-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.205947-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p cert-expiration-741000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.205955-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.205962-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:17.20597-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:17.205981-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.205988-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:17.205995-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:17.206003-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.20601-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:17.206017-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.206026-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:17.206061-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.20608-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:17.206089-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:133: failed to start minikube after cert expiration: \"out/minikube-darwin-arm64 start -p cert-expiration-741000 --memory=2048 --cert-expiration=8760h --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:00:17.206122-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:136: minikube start output did not warn about expired certs: \n"}
{"Time":"2023-05-31T12:00:17.206132-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:17.206139-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* [cert-expiration-741000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:17.20615-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:17.206158-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:17.206165-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:17.206172-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:17.206179-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:17.206211-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:17.206227-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:17.206241-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Starting control plane node cert-expiration-741000 in cluster cert-expiration-741000\n"}
{"Time":"2023-05-31T12:00:17.206249-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Restarting existing qemu2 VM for \"cert-expiration-741000\" ...\n"}
{"Time":"2023-05-31T12:00:17.206257-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:17.206263-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:17.206271-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.206278-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Restarting existing qemu2 VM for \"cert-expiration-741000\" ...\n"}
{"Time":"2023-05-31T12:00:17.206285-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:17.206292-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:17.206299-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.206305-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.206312-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:17.206318-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.206325-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:17.206403-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:17.206413-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.206424-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p cert-expiration-741000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.206433-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:17.206441-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:17.206448-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:17.206458-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.206466-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:17.206473-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:17.20648-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.206488-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:17.206495-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:17.206503-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:17.206519-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.206526-07:00","Action":"output","Test":"TestCertExpiration","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:17.206533-07:00","Action":"output","Test":"TestCertExpiration","Output":"    cert_options_test.go:138: *** TestCertExpiration FAILED at 2023-05-31 12:00:17.205898 -0700 PDT m=+1051.390386417\n"}
{"Time":"2023-05-31T12:00:17.20654-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:17.206548-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p cert-expiration-741000 -n cert-expiration-741000\n"}
{"Time":"2023-05-31T12:00:17.274805-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p cert-expiration-741000 -n cert-expiration-741000: exit status 7 (68.666208ms)\n"}
{"Time":"2023-05-31T12:00:17.274819-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.274821-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:17.274823-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:17.274825-07:00","Action":"output","Test":"TestCertExpiration","Output":"        \n"}
{"Time":"2023-05-31T12:00:17.274826-07:00","Action":"output","Test":"TestCertExpiration","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:17.274828-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:17.274831-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:241: \"cert-expiration-741000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:17.274833-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:175: Cleaning up \"cert-expiration-741000\" profile ...\n"}
{"Time":"2023-05-31T12:00:17.274835-07:00","Action":"output","Test":"TestCertExpiration","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p cert-expiration-741000\n"}
{"Time":"2023-05-31T12:00:17.36842-07:00","Action":"cont","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2023-05-31T12:00:17.368433-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== CONT  TestStoppedBinaryUpgrade\n"}
{"Time":"2023-05-31T12:00:17.368438-07:00","Action":"output","Test":"TestCertExpiration","Output":"--- FAIL: TestCertExpiration (195.18s)\n"}
{"Time":"2023-05-31T12:00:17.368459-07:00","Action":"fail","Test":"TestCertExpiration","Elapsed":195.18}
{"Time":"2023-05-31T12:00:17.368462-07:00","Action":"run","Test":"TestStoppedBinaryUpgrade/Setup"}
{"Time":"2023-05-31T12:00:17.368464-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Setup","Output":"=== RUN   TestStoppedBinaryUpgrade/Setup\n"}
{"Time":"2023-05-31T12:00:18.448771-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Setup","Output":"E0531 12:00:18.448683    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T12:00:23.023211-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:234: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.16.0 --alsologtostderr -v=1 --driver=qemu2 : exit status 80 (9.739598792s)\n"}
{"Time":"2023-05-31T12:00:23.023265-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:23.023274-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:23.023281-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* [kubernetes-upgrade-654000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:23.02329-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:23.023298-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:23.023306-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:23.023327-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:23.023335-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:23.023342-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:23.023348-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:00:23.023356-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:00:23.023363-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Starting control plane node kubernetes-upgrade-654000 in cluster kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:23.023372-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:23.023378-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:23.023385-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:23.023392-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.023398-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Deleting \"kubernetes-upgrade-654000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:00:23.023405-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:23.023412-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:23.023418-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:23.023425-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.023431-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.023438-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.023444-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:23.02345-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:23.023456-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:23.023463-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.307645    3250 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:00:23.023478-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.307769    3250 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:00:23.023487-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.307772    3250 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:00:23.023493-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.307774    3250 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:00:23.023501-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.307835    3250 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:00:23.023523-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.308819    3250 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:00:23.023532-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.323595    3250 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1784,\"bootTime\":1685557829,\"procs\":406,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:00:23.02355-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:13.323656    3250 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:00:23.023558-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.328838    3250 out.go:177] * [kubernetes-upgrade-654000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:23.023565-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.335876    3250 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:23.023573-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.339697    3250 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:23.02358-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.335892    3250 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:00:23.023587-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.345804    3250 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:23.023594-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.348912    3250 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:23.023601-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.351900    3250 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:23.023609-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.354809    3250 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:23.023617-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.358192    3250 config.go:182] Loaded profile config \"cert-expiration-741000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:00:23.023625-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.358269    3250 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:00:23.023633-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.358309    3250 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:00:23.02364-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.362780    3250 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:00:23.023647-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.369830    3250 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:00:23.023654-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.369835    3250 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:00:23.023664-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.369842    3250 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:00:23.023672-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.371742    3250 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:00:23.02368-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.379840    3250 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:00:23.023687-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.382953    3250 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]\n"}
{"Time":"2023-05-31T12:00:23.023697-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.382971    3250 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:00:23.023704-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.382979    3250 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T12:00:23.023711-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.382983    3250 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:00:23.023728-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t{Name:kubernetes-upgrade-654000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:kubernetes-upgrade-654000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Co"}
{"Time":"2023-05-31T12:00:23.023747-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"ntainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:00:23.023759-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.383065    3250 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:23.023767-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.390807    3250 out.go:177] * Starting control plane node kubernetes-upgrade-654000 in cluster kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:23.023787-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394815    3250 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T12:00:23.023796-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394840    3250 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:00:23.023804-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394852    3250 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:00:23.023812-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394926    3250 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:00:23.02382-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394932    3250 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T12:00:23.023828-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.394990    3250 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kubernetes-upgrade-654000/config.json ...\n"}
{"Time":"2023-05-31T12:00:23.02384-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395002    3250 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kubernetes-upgrade-654000/config.json: {Name:mk295abba2b49f37aa03479b4166f6e3a4b3ac25 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:23.023849-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395198    3250 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:00:23.023857-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395213    3250 start.go:364] acquiring machines lock for kubernetes-upgrade-654000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:23.023869-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395241    3250 start.go:368] acquired machines lock for \"kubernetes-upgrade-654000\" in 22.083µs\n"}
{"Time":"2023-05-31T12:00:23.023884-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395258    3250 start.go:93] Provisioning new machine with config: \u0026{Name:kubernetes-upgrade-654000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T12:00:23.023898-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"ernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:kubernetes-upgrade-654000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID"}
{"Time":"2023-05-31T12:00:23.02391-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":":docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:00:23.023923-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.395285    3250 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:00:23.023931-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.402815    3250 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:23.023939-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419565    3250 start.go:159] libmachine.API.Create for \"kubernetes-upgrade-654000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:00:23.023947-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419584    3250 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:00:23.023958-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419646    3250 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:00:23.023966-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419665    3250 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:00:23.023973-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419673    3250 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:00:23.023981-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419699    3250 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:00:23.023988-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419714    3250 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:00:23.023997-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.419720    3250 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:00:23.024005-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.420105    3250 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:00:23.024013-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.531238    3250 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:00:23.024021-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.671848    3250 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:00:23.024028-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.671855    3250 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:00:23.024036-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.671999    3250 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.024045-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.680684    3250 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:23.024051-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.680698    3250 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:00:23.024059-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.680747    3250 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:00:23.024067-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.687752    3250 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:00:23.024074-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.024081-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.687775    3250 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:00:23.024089-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.687797    3250 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.024097-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.687806    3250 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:00:23.024107-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.687846    3250 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/qemu.pid -device virtio-net-pci,netdev=net0,mac=12:53:d4:2f:61:f6 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.024118-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.689370    3250 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:23.024126-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.689383    3250 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:23.024133-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.02414-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:13.689400    3250 client.go:171] LocalClient.Create took 269.815708ms\n"}
{"Time":"2023-05-31T12:00:23.024147-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:15.691547    3250 start.go:128] duration metric: createHost completed in 2.296274125s\n"}
{"Time":"2023-05-31T12:00:23.024154-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:15.691602    3250 start.go:83] releasing machines lock for \"kubernetes-upgrade-654000\", held for 2.296384417s\n"}
{"Time":"2023-05-31T12:00:23.024162-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:15.691737    3250 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024171-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:15.697912    3250 out.go:177] * Deleting \"kubernetes-upgrade-654000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:00:23.024179-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:15.721315    3250 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024187-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024195-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:15.721353    3250 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:00:23.024207-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.723588    3250 start.go:364] acquiring machines lock for kubernetes-upgrade-654000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:23.024217-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.724079    3250 start.go:368] acquired machines lock for \"kubernetes-upgrade-654000\" in 379.625µs\n"}
{"Time":"2023-05-31T12:00:23.024232-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.724229    3250 start.go:93] Provisioning new machine with config: \u0026{Name:kubernetes-upgrade-654000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T12:00:23.024247-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"ernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:kubernetes-upgrade-654000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID"}
{"Time":"2023-05-31T12:00:23.02426-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":":docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:00:23.024269-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.724505    3250 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:00:23.024276-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.733928    3250 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:23.024284-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.783568    3250 start.go:159] libmachine.API.Create for \"kubernetes-upgrade-654000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:00:23.024292-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.783615    3250 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:00:23.0243-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.783810    3250 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:00:23.024307-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.783873    3250 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:00:23.024314-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.783901    3250 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:00:23.024321-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.784001    3250 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:00:23.024329-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.784032    3250 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:00:23.024335-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.784043    3250 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:00:23.024344-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.784626    3250 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:00:23.024353-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.903165    3250 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:00:23.02436-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.961935    3250 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:00:23.02437-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.961940    3250 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:00:23.024378-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.962097    3250 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.024387-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.970862    3250 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:23.024394-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.970876    3250 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:00:23.024401-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.970939    3250 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:00:23.024409-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.978243    3250 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:00:23.024416-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.024422-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.978261    3250 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:00:23.02443-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.978273    3250 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.024438-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.978281    3250 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:00:23.024449-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.978317    3250 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:be:18:3f:73:c8 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:23.02446-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.979830    3250 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:23.024467-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.979843    3250 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:23.024475-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:23.024482-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:20.979855    3250 client.go:171] LocalClient.Create took 196.237083ms\n"}
{"Time":"2023-05-31T12:00:23.02449-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:22.981986    3250 start.go:128] duration metric: createHost completed in 2.257490791s\n"}
{"Time":"2023-05-31T12:00:23.024498-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:22.982084    3250 start.go:83] releasing machines lock for \"kubernetes-upgrade-654000\", held for 2.257979042s\n"}
{"Time":"2023-05-31T12:00:23.024506-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:22.982646    3250 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p kubernetes-upgrade-654000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024516-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p kubernetes-upgrade-654000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024524-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:22.992246    3250 out.go:177] \n"}
{"Time":"2023-05-31T12:00:23.024532-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:22.996262    3250 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.024542-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:23.02455-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:22.996314    3250 out.go:239] * \n"}
{"Time":"2023-05-31T12:00:23.024557-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:23.024566-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:22.998589    3250 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:23.024577-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024584-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:23.024592-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:23.0246-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024608-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:23.024616-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024624-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:23.024635-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:23.024644-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024651-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:23.02466-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:23.024667-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024679-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:23.024686-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:23.024695-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:23.024704-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.009162    3250 out.go:177] \n"}
{"Time":"2023-05-31T12:00:23.02471-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:23.024717-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:23.024724-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:236: failed to start minikube HEAD with oldest k8s version: out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.16.0 --alsologtostderr -v=1 --driver=qemu2 : exit status 80\n"}
{"Time":"2023-05-31T12:00:23.024736-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 stop -p kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:23.126842-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:244: (dbg) Run:  out/minikube-darwin-arm64 -p kubernetes-upgrade-654000 status --format={{.Host}}\n"}
{"Time":"2023-05-31T12:00:23.163017-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:244: (dbg) Non-zero exit: out/minikube-darwin-arm64 -p kubernetes-upgrade-654000 status --format={{.Host}}: exit status 7 (36.096292ms)\n"}
{"Time":"2023-05-31T12:00:23.163029-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:23.163032-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:23.163033-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:23.163034-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:23.163037-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:23.163039-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:246: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:23.163041-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:255: (dbg) Run:  out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.27.2 --alsologtostderr -v=1 --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:28.337814-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:255: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.27.2 --alsologtostderr -v=1 --driver=qemu2 : exit status 80 (5.173666583s)\n"}
{"Time":"2023-05-31T12:00:28.337868-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.337877-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:28.337886-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* [kubernetes-upgrade-654000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:28.337894-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:28.337903-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:28.337911-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:28.337918-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:28.337926-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:28.337933-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:28.33794-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:28.337947-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Starting control plane node kubernetes-upgrade-654000 in cluster kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:28.337956-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Restarting existing qemu2 VM for \"kubernetes-upgrade-654000\" ...\n"}
{"Time":"2023-05-31T12:00:28.337963-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:28.33797-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:28.337977-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.337984-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Restarting existing qemu2 VM for \"kubernetes-upgrade-654000\" ...\n"}
{"Time":"2023-05-31T12:00:28.338008-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:28.338015-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:28.338022-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.338028-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.338034-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.338042-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.338048-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:28.338054-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:28.338064-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.190024    3274 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:00:28.338071-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.190138    3274 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:00:28.338079-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.190141    3274 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:00:28.338086-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.190143    3274 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:00:28.338093-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.190210    3274 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:00:28.338101-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.191133    3274 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:00:28.338109-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.206195    3274 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1794,\"bootTime\":1685557829,\"procs\":405,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:00:28.338123-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:23.206289    3274 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:00:28.33813-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.210871    3274 out.go:177] * [kubernetes-upgrade-654000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:28.338137-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.217829    3274 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:28.338144-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.221799    3274 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:28.338151-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.217891    3274 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:00:28.338159-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.224913    3274 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:28.338166-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.227771    3274 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:28.338174-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.230818    3274 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:28.338181-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.233803    3274 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:28.338188-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.237063    3274 config.go:182] Loaded profile config \"kubernetes-upgrade-654000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.16.0\n"}
{"Time":"2023-05-31T12:00:28.338197-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.237307    3274 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:00:28.338207-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.241744    3274 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:28.338215-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.248763    3274 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:00:28.338232-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.248768    3274 start.go:875] validating driver \"qemu2\" against \u0026{Name:kubernetes-upgrade-654000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kubern"}
{"Time":"2023-05-31T12:00:28.33825-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"etesConfig:{KubernetesVersion:v1.16.0 ClusterName:kubernetes-upgrade-654000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:do"}
{"Time":"2023-05-31T12:00:28.338265-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"cker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:00:28.338275-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.248836    3274 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:00:28.338283-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.250693    3274 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:00:28.338291-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.250711    3274 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:00:28.338301-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.250717    3274 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:00:28.338319-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t{Name:kubernetes-upgrade-654000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:kubernetes-upgrade-654000 Nam"}
{"Time":"2023-05-31T12:00:28.338461-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"espace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFi"}
{"Time":"2023-05-31T12:00:28.338475-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"rmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:00:28.338487-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.250795    3274 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:28.338495-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.257603    3274 out.go:177] * Starting control plane node kubernetes-upgrade-654000 in cluster kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:28.338503-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261748    3274 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:00:28.338511-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261769    3274 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:00:28.338519-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261781    3274 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:00:28.338527-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261833    3274 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:00:28.338535-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261838    3274 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:00:28.338542-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.261895    3274 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kubernetes-upgrade-654000/config.json ...\n"}
{"Time":"2023-05-31T12:00:28.33855-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262238    3274 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:00:28.338558-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262248    3274 start.go:364] acquiring machines lock for kubernetes-upgrade-654000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:28.338567-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262272    3274 start.go:368] acquired machines lock for \"kubernetes-upgrade-654000\" in 19.208µs\n"}
{"Time":"2023-05-31T12:00:28.338575-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262282    3274 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:00:28.338583-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262286    3274 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:00:28.338591-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.262390    3274 fix.go:103] recreateIfNeeded on kubernetes-upgrade-654000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:00:28.338599-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:23.262398    3274 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:00:28.338606-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.270772    3274 out.go:177] * Restarting existing qemu2 VM for \"kubernetes-upgrade-654000\" ...\n"}
{"Time":"2023-05-31T12:00:28.338617-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.274869    3274 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:be:18:3f:73:c8 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:28.338628-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.276686    3274 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:28.338636-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.276707    3274 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:28.338643-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.338652-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.276740    3274 fix.go:57] fixHost completed within 14.453667ms\n"}
{"Time":"2023-05-31T12:00:28.33866-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.276745    3274 start.go:83] releasing machines lock for \"kubernetes-upgrade-654000\", held for 14.469541ms\n"}
{"Time":"2023-05-31T12:00:28.338667-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:23.276752    3274 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338676-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:23.276786    3274 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338684-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338691-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:23.276791    3274 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:00:28.338699-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.278953    3274 start.go:364] acquiring machines lock for kubernetes-upgrade-654000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:00:28.338707-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.279391    3274 start.go:368] acquired machines lock for \"kubernetes-upgrade-654000\" in 348.167µs\n"}
{"Time":"2023-05-31T12:00:28.338715-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.279531    3274 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:00:28.338722-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.279552    3274 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:00:28.338729-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.280276    3274 fix.go:103] recreateIfNeeded on kubernetes-upgrade-654000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:00:28.338737-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:28.280303    3274 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:00:28.338745-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.288374    3274 out.go:177] * Restarting existing qemu2 VM for \"kubernetes-upgrade-654000\" ...\n"}
{"Time":"2023-05-31T12:00:28.338756-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.292634    3274 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:be:18:3f:73:c8 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubernetes-upgrade-654000/disk.qcow2\n"}
{"Time":"2023-05-31T12:00:28.338768-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.301852    3274 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:00:28.338776-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.301899    3274 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:28.338785-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:28.338792-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.301983    3274 fix.go:57] fixHost completed within 22.429958ms\n"}
{"Time":"2023-05-31T12:00:28.338799-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.302033    3274 start.go:83] releasing machines lock for \"kubernetes-upgrade-654000\", held for 22.588ms\n"}
{"Time":"2023-05-31T12:00:28.338808-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:28.302217    3274 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p kubernetes-upgrade-654000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338817-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p kubernetes-upgrade-654000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338825-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.309592    3274 out.go:177] \n"}
{"Time":"2023-05-31T12:00:28.338833-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:28.313639    3274 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338844-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.338852-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:28.313699    3274 out.go:239] * \n"}
{"Time":"2023-05-31T12:00:28.338859-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:28.338866-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tW0531 12:00:28.316093    3274 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:28.338877-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.338884-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:28.338892-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:28.3389-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.338908-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:28.338916-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.338924-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:28.338934-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:28.338943-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.33895-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:28.338957-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:28.338965-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.338972-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:28.338979-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:28.338987-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:28.338997-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tI0531 12:00:28.324499    3274 out.go:177] \n"}
{"Time":"2023-05-31T12:00:28.339003-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.33901-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:28.339022-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:257: failed to upgrade with newest k8s version. args: out/minikube-darwin-arm64 start -p kubernetes-upgrade-654000 --memory=2200 --kubernetes-version=v1.27.2 --alsologtostderr -v=1 --driver=qemu2  : exit status 80\n"}
{"Time":"2023-05-31T12:00:28.339031-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:260: (dbg) Run:  kubectl --context kubernetes-upgrade-654000 version --output=json\n"}
{"Time":"2023-05-31T12:00:28.403942-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:260: (dbg) Non-zero exit: kubectl --context kubernetes-upgrade-654000 version --output=json: exit status 1 (65.733584ms)\n"}
{"Time":"2023-05-31T12:00:28.403956-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.403959-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:28.403961-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \terror: context \"kubernetes-upgrade-654000\" does not exist\n"}
{"Time":"2023-05-31T12:00:28.403963-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.403965-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:28.403967-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:262: error running kubectl: exit status 1\n"}
{"Time":"2023-05-31T12:00:28.40397-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    panic.go:522: *** TestKubernetesUpgrade FAILED at 2023-05-31 12:00:28.403931 -0700 PDT m=+1062.588580709\n"}
{"Time":"2023-05-31T12:00:28.403972-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:28.403998-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p kubernetes-upgrade-654000 -n kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:28.436947-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p kubernetes-upgrade-654000 -n kubernetes-upgrade-654000: exit status 7 (32.8835ms)\n"}
{"Time":"2023-05-31T12:00:28.436963-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.436965-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:28.436966-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:28.436968-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:00:28.436969-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:28.436971-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:28.436973-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:241: \"kubernetes-upgrade-654000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:28.436975-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:175: Cleaning up \"kubernetes-upgrade-654000\" profile ...\n"}
{"Time":"2023-05-31T12:00:28.436977-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p kubernetes-upgrade-654000\n"}
{"Time":"2023-05-31T12:00:28.532625-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"--- FAIL: TestKubernetesUpgrade (15.25s)\n"}
{"Time":"2023-05-31T12:00:28.532639-07:00","Action":"fail","Test":"TestKubernetesUpgrade","Elapsed":15.25}
{"Time":"2023-05-31T12:00:28.532643-07:00","Action":"cont","Test":"TestPause"}
{"Time":"2023-05-31T12:00:28.532646-07:00","Action":"output","Test":"TestPause","Output":"=== CONT  TestPause\n"}
{"Time":"2023-05-31T12:00:28.532659-07:00","Action":"run","Test":"TestPause/serial"}
{"Time":"2023-05-31T12:00:28.532662-07:00","Action":"output","Test":"TestPause/serial","Output":"=== RUN   TestPause/serial\n"}
{"Time":"2023-05-31T12:00:28.532685-07:00","Action":"run","Test":"TestPause/serial/Start"}
{"Time":"2023-05-31T12:00:28.532686-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"=== RUN   TestPause/serial/Start\n"}
{"Time":"2023-05-31T12:00:28.532745-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    pause_test.go:80: (dbg) Run:  out/minikube-darwin-arm64 start -p pause-620000 --memory=2048 --install-addons=false --wait=all --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:38.350349-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    pause_test.go:80: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p pause-620000 --memory=2048 --install-addons=false --wait=all --driver=qemu2 : exit status 80 (9.817304209s)\n"}
{"Time":"2023-05-31T12:00:38.35043-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.350441-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:38.350448-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* [pause-620000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:38.350457-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:38.350466-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:38.350474-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:38.350482-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:38.35049-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:38.350498-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:38.350506-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:00:38.350513-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:00:38.35052-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Starting control plane node pause-620000 in cluster pause-620000\n"}
{"Time":"2023-05-31T12:00:38.350527-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:38.350534-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:38.350541-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:38.350548-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.350555-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Deleting \"pause-620000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:00:38.350562-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:38.350569-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:38.350577-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:38.350584-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.35059-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.350597-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.350603-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.35061-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:38.350617-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:38.350625-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:38.350633-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p pause-620000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:38.350642-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:38.35065-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:38.350658-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:38.350678-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:38.350687-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:38.350695-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:38.350703-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:38.350717-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:38.350725-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:38.350735-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:38.350744-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.350751-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:38.350759-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    pause_test.go:82: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p pause-620000 --memory=2048 --install-addons=false --wait=all --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:00:38.350771-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:38.35078-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p pause-620000 -n pause-620000\n"}
{"Time":"2023-05-31T12:00:38.420556-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p pause-620000 -n pause-620000: exit status 7 (70.020833ms)\n"}
{"Time":"2023-05-31T12:00:38.42057-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.420572-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:38.420574-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:38.420578-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.42058-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:38.420582-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:38.420585-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    helpers_test.go:241: \"pause-620000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:38.420608-07:00","Action":"output","Test":"TestPause/serial","Output":"    pause_test.go:62: Previous test failed, not running dependent tests\n"}
{"Time":"2023-05-31T12:00:38.420644-07:00","Action":"output","Test":"TestPause","Output":"    helpers_test.go:175: Cleaning up \"pause-620000\" profile ...\n"}
{"Time":"2023-05-31T12:00:38.420712-07:00","Action":"output","Test":"TestPause","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p pause-620000\n"}
{"Time":"2023-05-31T12:00:38.516994-07:00","Action":"output","Test":"TestPause","Output":"--- FAIL: TestPause (9.98s)\n"}
{"Time":"2023-05-31T12:00:38.517008-07:00","Action":"output","Test":"TestPause/serial","Output":"    --- FAIL: TestPause/serial (9.89s)\n"}
{"Time":"2023-05-31T12:00:38.51701-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        --- FAIL: TestPause/serial/Start (9.89s)\n"}
{"Time":"2023-05-31T12:00:38.517012-07:00","Action":"fail","Test":"TestPause/serial/Start","Elapsed":9.89}
{"Time":"2023-05-31T12:00:38.517015-07:00","Action":"fail","Test":"TestPause/serial","Elapsed":9.89}
{"Time":"2023-05-31T12:00:38.517016-07:00","Action":"fail","Test":"TestPause","Elapsed":9.98}
{"Time":"2023-05-31T12:00:38.517018-07:00","Action":"cont","Test":"TestStartStop"}
{"Time":"2023-05-31T12:00:38.517019-07:00","Action":"output","Test":"TestStartStop","Output":"=== CONT  TestStartStop\n"}
{"Time":"2023-05-31T12:00:38.517021-07:00","Action":"run","Test":"TestStartStop/group"}
{"Time":"2023-05-31T12:00:38.517022-07:00","Action":"output","Test":"TestStartStop/group","Output":"=== RUN   TestStartStop/group\n"}
{"Time":"2023-05-31T12:00:38.517041-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2023-05-31T12:00:38.517045-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== RUN   TestStartStop/group/old-k8s-version\n"}
{"Time":"2023-05-31T12:00:38.517051-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== PAUSE TestStartStop/group/old-k8s-version\n"}
{"Time":"2023-05-31T12:00:38.517053-07:00","Action":"pause","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2023-05-31T12:00:38.517067-07:00","Action":"run","Test":"TestStartStop/group/newest-cni"}
{"Time":"2023-05-31T12:00:38.517068-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== RUN   TestStartStop/group/newest-cni\n"}
{"Time":"2023-05-31T12:00:38.51707-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== PAUSE TestStartStop/group/newest-cni\n"}
{"Time":"2023-05-31T12:00:38.517071-07:00","Action":"pause","Test":"TestStartStop/group/newest-cni"}
{"Time":"2023-05-31T12:00:38.517073-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port"}
{"Time":"2023-05-31T12:00:38.517074-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port\n"}
{"Time":"2023-05-31T12:00:38.517076-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"=== PAUSE TestStartStop/group/default-k8s-diff-port\n"}
{"Time":"2023-05-31T12:00:38.517077-07:00","Action":"pause","Test":"TestStartStop/group/default-k8s-diff-port"}
{"Time":"2023-05-31T12:00:38.517088-07:00","Action":"run","Test":"TestStartStop/group/no-preload"}
{"Time":"2023-05-31T12:00:38.517092-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"=== RUN   TestStartStop/group/no-preload\n"}
{"Time":"2023-05-31T12:00:38.517094-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"=== PAUSE TestStartStop/group/no-preload\n"}
{"Time":"2023-05-31T12:00:38.517095-07:00","Action":"pause","Test":"TestStartStop/group/no-preload"}
{"Time":"2023-05-31T12:00:38.517097-07:00","Action":"run","Test":"TestStartStop/group/disable-driver-mounts"}
{"Time":"2023-05-31T12:00:38.517098-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"=== RUN   TestStartStop/group/disable-driver-mounts\n"}
{"Time":"2023-05-31T12:00:38.517105-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"=== PAUSE TestStartStop/group/disable-driver-mounts\n"}
{"Time":"2023-05-31T12:00:38.517112-07:00","Action":"pause","Test":"TestStartStop/group/disable-driver-mounts"}
{"Time":"2023-05-31T12:00:38.517114-07:00","Action":"run","Test":"TestStartStop/group/embed-certs"}
{"Time":"2023-05-31T12:00:38.517115-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== RUN   TestStartStop/group/embed-certs\n"}
{"Time":"2023-05-31T12:00:38.517146-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== PAUSE TestStartStop/group/embed-certs\n"}
{"Time":"2023-05-31T12:00:38.517148-07:00","Action":"pause","Test":"TestStartStop/group/embed-certs"}
{"Time":"2023-05-31T12:00:38.517149-07:00","Action":"cont","Test":"TestNoKubernetes"}
{"Time":"2023-05-31T12:00:38.517151-07:00","Action":"output","Test":"TestNoKubernetes","Output":"=== CONT  TestNoKubernetes\n"}
{"Time":"2023-05-31T12:00:38.517152-07:00","Action":"run","Test":"TestNoKubernetes/serial"}
{"Time":"2023-05-31T12:00:38.517153-07:00","Action":"output","Test":"TestNoKubernetes/serial","Output":"=== RUN   TestNoKubernetes/serial\n"}
{"Time":"2023-05-31T12:00:38.517155-07:00","Action":"run","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion"}
{"Time":"2023-05-31T12:00:38.517156-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"=== RUN   TestNoKubernetes/serial/StartNoK8sWithVersion\n"}
{"Time":"2023-05-31T12:00:38.517217-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"    no_kubernetes_test.go:83: (dbg) Run:  out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --kubernetes-version=1.20 --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:38.610221-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"    no_kubernetes_test.go:83: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --kubernetes-version=1.20 --driver=qemu2 : exit status 14 (92.931542ms)\n"}
{"Time":"2023-05-31T12:00:38.610234-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.610237-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:38.610239-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t* [NoKubernetes-124000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:38.610246-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:38.610248-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:38.61025-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:38.610252-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:38.610254-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:38.610255-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:38.610257-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.610258-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.61026-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.610261-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:38.610263-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:38.610264-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \tX Exiting due to MK_USAGE: cannot specify --kubernetes-version with --no-kubernetes,\n"}
{"Time":"2023-05-31T12:00:38.610266-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \tto unset a global config run:\n"}
{"Time":"2023-05-31T12:00:38.610267-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:38.610269-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \t$ minikube config unset kubernetes-version\n"}
{"Time":"2023-05-31T12:00:38.61027-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        \n"}
{"Time":"2023-05-31T12:00:38.610272-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:38.610275-07:00","Action":"run","Test":"TestNoKubernetes/serial/StartWithK8s"}
{"Time":"2023-05-31T12:00:38.610277-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"=== RUN   TestNoKubernetes/serial/StartWithK8s\n"}
{"Time":"2023-05-31T12:00:38.610279-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    no_kubernetes_test.go:95: (dbg) Run:  out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:46.159001-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"E0531 12:00:46.158962    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/ingress-addon-legacy-798000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T12:00:48.514898-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    no_kubernetes_test.go:95: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 : exit status 80 (9.904418458s)\n"}
{"Time":"2023-05-31T12:00:48.514948-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:48.514955-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:48.514961-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* [NoKubernetes-124000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:48.514968-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:48.514974-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:48.51498-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:48.514985-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:48.515002-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:48.515008-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:48.515013-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:00:48.515018-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:00:48.515023-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Starting control plane node NoKubernetes-124000 in cluster NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:48.515041-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:48.515046-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:48.515051-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:48.515058-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:48.515062-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Deleting \"NoKubernetes-124000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:00:48.515067-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=4000MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:00:48.515072-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:48.515078-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:48.515083-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:48.515087-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:48.515092-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:48.515097-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:48.515101-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:48.515113-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:48.515119-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:48.515125-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p NoKubernetes-124000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:48.515131-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:48.515137-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:48.515143-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:48.515155-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:48.515161-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:48.515167-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:48.515176-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:48.515182-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:48.515188-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:48.515194-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:48.515201-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:48.515205-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:48.51521-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    no_kubernetes_test.go:97: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:00:48.51522-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:48.515226-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:48.581406-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000: exit status 7 (66.342958ms)\n"}
{"Time":"2023-05-31T12:00:48.581426-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:48.581429-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:48.581431-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:48.581433-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:48.581435-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:48.581436-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:48.581438-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"    helpers_test.go:241: \"NoKubernetes-124000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:48.581443-07:00","Action":"run","Test":"TestNoKubernetes/serial/StartWithStopK8s"}
{"Time":"2023-05-31T12:00:48.581445-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"=== RUN   TestNoKubernetes/serial/StartWithStopK8s\n"}
{"Time":"2023-05-31T12:00:48.581495-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    no_kubernetes_test.go:112: (dbg) Run:  out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:53.872552-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    no_kubernetes_test.go:112: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 : exit status 80 (5.290441708s)\n"}
{"Time":"2023-05-31T12:00:53.872609-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:53.872619-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:53.872628-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* [NoKubernetes-124000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:53.872638-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:53.872646-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:53.872654-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:53.872661-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:53.872668-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:53.872676-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:53.872683-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:53.872709-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* Starting minikube without Kubernetes in cluster NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:53.872717-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:00:53.872725-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:53.872732-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:53.87274-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:53.872747-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:00:53.872754-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:53.872761-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:53.872768-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:53.872775-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:53.872801-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:53.872809-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:53.872815-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:53.872822-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:53.87283-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:53.872839-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p NoKubernetes-124000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:53.87285-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:53.872858-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:53.872866-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:53.872878-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:53.872886-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:53.872893-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:53.8729-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:53.872909-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:53.872916-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:53.872926-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:53.872935-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:53.872942-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:53.87295-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    no_kubernetes_test.go:114: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:00:53.872962-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:53.872971-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:53.939469-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000: exit status 7 (66.698084ms)\n"}
{"Time":"2023-05-31T12:00:53.939488-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:53.93949-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:53.9395-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:53.939502-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        \n"}
{"Time":"2023-05-31T12:00:53.939504-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:53.939506-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:53.93951-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"    helpers_test.go:241: \"NoKubernetes-124000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:53.939562-07:00","Action":"run","Test":"TestNoKubernetes/serial/Start"}
{"Time":"2023-05-31T12:00:53.939567-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"=== RUN   TestNoKubernetes/serial/Start\n"}
{"Time":"2023-05-31T12:00:53.939618-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    no_kubernetes_test.go:136: (dbg) Run:  out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 \n"}
{"Time":"2023-05-31T12:00:59.243626-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    no_kubernetes_test.go:136: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 : exit status 80 (5.303586834s)\n"}
{"Time":"2023-05-31T12:00:59.243712-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.243722-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:59.243731-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* [NoKubernetes-124000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:00:59.243739-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:00:59.243746-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:00:59.243754-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:00:59.243762-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:00:59.243769-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:00:59.243776-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:00:59.243783-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:00:59.24379-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* Starting minikube without Kubernetes in cluster NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:59.243798-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:00:59.243805-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:59.243815-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:59.243823-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:59.243829-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:00:59.243837-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:00:59.243844-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:00:59.243851-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:59.243862-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:59.243869-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:00:59.243875-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.243882-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:59.24389-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:00:59.243897-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:59.243906-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p NoKubernetes-124000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:59.243915-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:00:59.243923-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:00:59.243931-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:00:59.243941-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:59.243949-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:00:59.243957-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:00:59.243964-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:59.243972-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:00:59.243979-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:00:59.243987-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:00:59.243995-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.244001-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:00:59.244009-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    no_kubernetes_test.go:138: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p NoKubernetes-124000 --no-kubernetes --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:00:59.244022-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:00:59.244064-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:59.314096-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000: exit status 7 (70.2805ms)\n"}
{"Time":"2023-05-31T12:00:59.314111-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.314113-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:59.314115-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:00:59.314118-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.31412-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:59.314122-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:00:59.314125-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"    helpers_test.go:241: \"NoKubernetes-124000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:00:59.314138-07:00","Action":"run","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning"}
{"Time":"2023-05-31T12:00:59.31414-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"=== RUN   TestNoKubernetes/serial/VerifyK8sNotRunning\n"}
{"Time":"2023-05-31T12:00:59.314178-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"    no_kubernetes_test.go:147: (dbg) Run:  out/minikube-darwin-arm64 ssh -p NoKubernetes-124000 \"sudo systemctl is-active --quiet service kubelet\"\n"}
{"Time":"2023-05-31T12:00:59.356612-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"    no_kubernetes_test.go:147: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p NoKubernetes-124000 \"sudo systemctl is-active --quiet service kubelet\": exit status 89 (42.349917ms)\n"}
{"Time":"2023-05-31T12:00:59.356624-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.356626-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:00:59.356628-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:00:59.35663-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        \t  To start a cluster, run: \"minikube start -p NoKubernetes-124000\"\n"}
{"Time":"2023-05-31T12:00:59.356631-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        \n"}
{"Time":"2023-05-31T12:00:59.356633-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:00:59.356636-07:00","Action":"run","Test":"TestNoKubernetes/serial/ProfileList"}
{"Time":"2023-05-31T12:00:59.356638-07:00","Action":"output","Test":"TestNoKubernetes/serial/ProfileList","Output":"=== RUN   TestNoKubernetes/serial/ProfileList\n"}
{"Time":"2023-05-31T12:00:59.356664-07:00","Action":"output","Test":"TestNoKubernetes/serial/ProfileList","Output":"    no_kubernetes_test.go:169: (dbg) Run:  out/minikube-darwin-arm64 profile list\n"}
{"Time":"2023-05-31T12:00:59.426412-07:00","Action":"output","Test":"TestNoKubernetes/serial/ProfileList","Output":"    no_kubernetes_test.go:179: (dbg) Run:  out/minikube-darwin-arm64 profile list --output=json\n"}
{"Time":"2023-05-31T12:00:59.496342-07:00","Action":"run","Test":"TestNoKubernetes/serial/Stop"}
{"Time":"2023-05-31T12:00:59.496354-07:00","Action":"output","Test":"TestNoKubernetes/serial/Stop","Output":"=== RUN   TestNoKubernetes/serial/Stop\n"}
{"Time":"2023-05-31T12:00:59.496374-07:00","Action":"output","Test":"TestNoKubernetes/serial/Stop","Output":"    no_kubernetes_test.go:158: (dbg) Run:  out/minikube-darwin-arm64 stop -p NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:00:59.557268-07:00","Action":"run","Test":"TestNoKubernetes/serial/StartNoArgs"}
{"Time":"2023-05-31T12:00:59.557279-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"=== RUN   TestNoKubernetes/serial/StartNoArgs\n"}
{"Time":"2023-05-31T12:00:59.557309-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    no_kubernetes_test.go:191: (dbg) Run:  out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 \n"}
{"Time":"2023-05-31T12:01:04.84848-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    no_kubernetes_test.go:191: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 : exit status 80 (5.290623875s)\n"}
{"Time":"2023-05-31T12:01:04.848538-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.848548-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:04.848556-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* [NoKubernetes-124000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:04.848564-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:04.848573-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:04.84858-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:04.848604-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:04.848612-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:04.848619-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:04.848627-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:01:04.848634-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* Starting minikube without Kubernetes in cluster NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:01:04.848642-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:01:04.848651-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:04.848658-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:04.848665-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:04.848672-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* Restarting existing qemu2 VM for \"NoKubernetes-124000\" ...\n"}
{"Time":"2023-05-31T12:01:04.848679-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:04.848686-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:04.848693-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:04.8487-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:04.848707-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:04.848713-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.84872-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:04.848726-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:01:04.848733-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:04.848742-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p NoKubernetes-124000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:04.848751-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:04.848759-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t* \n"}
{"Time":"2023-05-31T12:01:04.848766-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:04.848778-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:04.848786-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:04.848794-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:04.848801-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:04.848808-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:04.848815-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:04.848824-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:04.848832-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.848839-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:01:04.848846-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    no_kubernetes_test.go:193: failed to start minikube with args: \"out/minikube-darwin-arm64 start -p NoKubernetes-124000 --driver=qemu2 \" : exit status 80\n"}
{"Time":"2023-05-31T12:01:04.848857-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:01:04.848866-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:01:04.916585-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p NoKubernetes-124000 -n NoKubernetes-124000: exit status 7 (67.876583ms)\n"}
{"Time":"2023-05-31T12:01:04.916602-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.916605-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:04.916607-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:01:04.916609-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.91661-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:04.916612-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:01:04.916616-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"    helpers_test.go:241: \"NoKubernetes-124000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:01:04.916652-07:00","Action":"run","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond"}
{"Time":"2023-05-31T12:01:04.916655-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"=== RUN   TestNoKubernetes/serial/VerifyK8sNotRunningSecond\n"}
{"Time":"2023-05-31T12:01:04.916748-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"    no_kubernetes_test.go:147: (dbg) Run:  out/minikube-darwin-arm64 ssh -p NoKubernetes-124000 \"sudo systemctl is-active --quiet service kubelet\"\n"}
{"Time":"2023-05-31T12:01:04.957552-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"    no_kubernetes_test.go:147: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p NoKubernetes-124000 \"sudo systemctl is-active --quiet service kubelet\": exit status 89 (40.747292ms)\n"}
{"Time":"2023-05-31T12:01:04.957563-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.957565-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:04.957567-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:04.957569-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        \t  To start a cluster, run: \"minikube start -p NoKubernetes-124000\"\n"}
{"Time":"2023-05-31T12:01:04.95757-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        \n"}
{"Time":"2023-05-31T12:01:04.957571-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:04.957592-07:00","Action":"output","Test":"TestNoKubernetes","Output":"    helpers_test.go:175: Cleaning up \"NoKubernetes-124000\" profile ...\n"}
{"Time":"2023-05-31T12:01:04.957633-07:00","Action":"output","Test":"TestNoKubernetes","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p NoKubernetes-124000\n"}
{"Time":"2023-05-31T12:01:05.051204-07:00","Action":"output","Test":"TestNoKubernetes","Output":"--- FAIL: TestNoKubernetes (26.53s)\n"}
{"Time":"2023-05-31T12:01:05.051218-07:00","Action":"output","Test":"TestNoKubernetes/serial","Output":"    --- FAIL: TestNoKubernetes/serial (26.44s)\n"}
{"Time":"2023-05-31T12:01:05.051226-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Output":"        --- PASS: TestNoKubernetes/serial/StartNoK8sWithVersion (0.09s)\n"}
{"Time":"2023-05-31T12:01:05.051228-07:00","Action":"pass","Test":"TestNoKubernetes/serial/StartNoK8sWithVersion","Elapsed":0.09}
{"Time":"2023-05-31T12:01:05.051231-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithK8s","Output":"        --- FAIL: TestNoKubernetes/serial/StartWithK8s (9.97s)\n"}
{"Time":"2023-05-31T12:01:05.051233-07:00","Action":"fail","Test":"TestNoKubernetes/serial/StartWithK8s","Elapsed":9.97}
{"Time":"2023-05-31T12:01:05.051235-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartWithStopK8s","Output":"        --- FAIL: TestNoKubernetes/serial/StartWithStopK8s (5.36s)\n"}
{"Time":"2023-05-31T12:01:05.051236-07:00","Action":"fail","Test":"TestNoKubernetes/serial/StartWithStopK8s","Elapsed":5.36}
{"Time":"2023-05-31T12:01:05.051238-07:00","Action":"output","Test":"TestNoKubernetes/serial/Start","Output":"        --- FAIL: TestNoKubernetes/serial/Start (5.37s)\n"}
{"Time":"2023-05-31T12:01:05.051239-07:00","Action":"fail","Test":"TestNoKubernetes/serial/Start","Elapsed":5.37}
{"Time":"2023-05-31T12:01:05.051241-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Output":"        --- PASS: TestNoKubernetes/serial/VerifyK8sNotRunning (0.04s)\n"}
{"Time":"2023-05-31T12:01:05.051242-07:00","Action":"pass","Test":"TestNoKubernetes/serial/VerifyK8sNotRunning","Elapsed":0.04}
{"Time":"2023-05-31T12:01:05.051244-07:00","Action":"output","Test":"TestNoKubernetes/serial/ProfileList","Output":"        --- PASS: TestNoKubernetes/serial/ProfileList (0.14s)\n"}
{"Time":"2023-05-31T12:01:05.051245-07:00","Action":"pass","Test":"TestNoKubernetes/serial/ProfileList","Elapsed":0.14}
{"Time":"2023-05-31T12:01:05.051247-07:00","Action":"output","Test":"TestNoKubernetes/serial/Stop","Output":"        --- PASS: TestNoKubernetes/serial/Stop (0.06s)\n"}
{"Time":"2023-05-31T12:01:05.051248-07:00","Action":"pass","Test":"TestNoKubernetes/serial/Stop","Elapsed":0.06}
{"Time":"2023-05-31T12:01:05.05125-07:00","Action":"output","Test":"TestNoKubernetes/serial/StartNoArgs","Output":"        --- FAIL: TestNoKubernetes/serial/StartNoArgs (5.36s)\n"}
{"Time":"2023-05-31T12:01:05.051251-07:00","Action":"fail","Test":"TestNoKubernetes/serial/StartNoArgs","Elapsed":5.36}
{"Time":"2023-05-31T12:01:05.051253-07:00","Action":"output","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Output":"        --- PASS: TestNoKubernetes/serial/VerifyK8sNotRunningSecond (0.04s)\n"}
{"Time":"2023-05-31T12:01:05.051254-07:00","Action":"pass","Test":"TestNoKubernetes/serial/VerifyK8sNotRunningSecond","Elapsed":0.04}
{"Time":"2023-05-31T12:01:05.051256-07:00","Action":"fail","Test":"TestNoKubernetes/serial","Elapsed":26.44}
{"Time":"2023-05-31T12:01:05.051257-07:00","Action":"fail","Test":"TestNoKubernetes","Elapsed":26.53}
{"Time":"2023-05-31T12:01:05.051258-07:00","Action":"cont","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2023-05-31T12:01:05.051259-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== CONT  TestNetworkPlugins/group/auto\n"}
{"Time":"2023-05-31T12:01:05.051262-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/Start"}
{"Time":"2023-05-31T12:01:05.051263-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"=== RUN   TestNetworkPlugins/group/auto/Start\n"}
{"Time":"2023-05-31T12:01:05.051297-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p auto-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --driver=qemu2 \n"}
{"Time":"2023-05-31T12:01:14.728935-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p auto-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --driver=qemu2 : exit status 80 (9.675990041s)\n"}
{"Time":"2023-05-31T12:01:14.728996-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:14.729006-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:14.729014-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* [auto-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:14.729022-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:14.72903-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:14.729039-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:14.729068-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:14.729076-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:14.729083-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:14.72909-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:14.729097-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:14.729103-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Starting control plane node auto-602000 in cluster auto-602000\n"}
{"Time":"2023-05-31T12:01:14.72911-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:14.729116-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:14.729123-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:14.72913-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.729136-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Deleting \"auto-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:14.729143-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:14.72915-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:14.729156-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:14.729163-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.72917-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.729176-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.729182-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:14.729193-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:14.729199-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:01:14.729206-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.079084    3373 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:01:14.729213-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.079211    3373 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:14.729221-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.079214    3373 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:01:14.729229-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.079216    3373 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:14.729236-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.079283    3373 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:01:14.729246-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.080344    3373 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:01:14.72926-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.095275    3373 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1836,\"bootTime\":1685557829,\"procs\":394,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:01:14.729277-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:05.095360    3373 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:01:14.729285-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.100496    3373 out.go:177] * [auto-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:14.729292-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.107495    3373 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:14.729299-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.107576    3373 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:01:14.729307-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.111472    3373 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:14.729314-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.114481    3373 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:14.729322-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.117479    3373 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:14.72933-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.120437    3373 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:14.729337-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.123487    3373 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:14.729344-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.126794    3373 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:01:14.729353-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.126835    3373 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:01:14.72936-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.131450    3373 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:14.729368-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.138456    3373 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:01:14.729375-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.138461    3373 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:01:14.729384-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.138466    3373 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:01:14.729393-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.140390    3373 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:01:14.729403-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.143457    3373 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:14.729411-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146544    3373 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:01:14.729418-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146563    3373 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:01:14.729425-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146579    3373 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:01:14.729433-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146584    3373 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:01:14.729441-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146591    3373 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:01:14.729454-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t{Name:auto-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:auto-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISoc"}
{"Time":"2023-05-31T12:01:14.729469-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"ket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:01:14.729481-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.146669    3373 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:14.729488-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.155424    3373 out.go:177] * Starting control plane node auto-602000 in cluster auto-602000\n"}
{"Time":"2023-05-31T12:01:14.729496-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159468    3373 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:01:14.729503-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159494    3373 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:01:14.729515-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159505    3373 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:01:14.729523-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159566    3373 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:01:14.729535-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159572    3373 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:01:14.729543-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159624    3373 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/auto-602000/config.json ...\n"}
{"Time":"2023-05-31T12:01:14.729552-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159636    3373 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/auto-602000/config.json: {Name:mkd8522d3b8c8afbb6a10858dff1c5dc5973f678 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:14.729561-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159829    3373 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:01:14.729569-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159842    3373 start.go:364] acquiring machines lock for auto-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:14.729577-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159872    3373 start.go:368] acquired machines lock for \"auto-602000\" in 24.917µs\n"}
{"Time":"2023-05-31T12:01:14.729593-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159884    3373 start.go:93] Provisioning new machine with config: \u0026{Name:auto-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:"}
{"Time":"2023-05-31T12:01:14.729607-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"{KubernetesVersion:v1.27.2 ClusterName:auto-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144"}
{"Time":"2023-05-31T12:01:14.729624-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":" MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:14.729633-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.159908    3373 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:14.729641-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.167507    3373 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:14.729649-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184735    3373 start.go:159] libmachine.API.Create for \"auto-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:14.729656-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184761    3373 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:14.729663-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184823    3373 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:14.729671-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184845    3373 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:14.729678-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184853    3373 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:14.729686-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184875    3373 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:14.729693-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184894    3373 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:14.729701-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.184900    3373 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:14.729709-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.185200    3373 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:14.729718-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.293807    3373 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:14.729725-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.357908    3373 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:14.729732-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.357915    3373 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:14.72974-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.358065    3373 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.729749-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.366704    3373 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:14.729756-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.366721    3373 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:14.729763-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.366771    3373 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:14.729771-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.373933    3373 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:14.729778-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.729785-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.373961    3373 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:14.729793-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.373985    3373 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.729801-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.373994    3373 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:14.729812-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.374045    3373 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=c2:bb:58:28:73:82 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.729824-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.375611    3373 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:14.729831-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.375624    3373 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:14.729838-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.729845-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:05.375641    3373 client.go:171] LocalClient.Create took 190.875416ms\n"}
{"Time":"2023-05-31T12:01:14.729852-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:07.377811    3373 start.go:128] duration metric: createHost completed in 2.217904125s\n"}
{"Time":"2023-05-31T12:01:14.72986-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:07.377899    3373 start.go:83] releasing machines lock for \"auto-602000\", held for 2.218049875s\n"}
{"Time":"2023-05-31T12:01:14.729867-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:07.377967    3373 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.729875-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:07.389316    3373 out.go:177] * Deleting \"auto-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:14.729883-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:07.409651    3373 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.729891-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.729899-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:07.409684    3373 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:01:14.729907-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.411923    3373 start.go:364] acquiring machines lock for auto-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:14.729916-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.412348    3373 start.go:368] acquired machines lock for \"auto-602000\" in 327.583µs\n"}
{"Time":"2023-05-31T12:01:14.729931-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.412469    3373 start.go:93] Provisioning new machine with config: \u0026{Name:auto-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:"}
{"Time":"2023-05-31T12:01:14.729949-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"{KubernetesVersion:v1.27.2 ClusterName:auto-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144"}
{"Time":"2023-05-31T12:01:14.729961-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":" MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:14.72997-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.412793    3373 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:14.729978-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.422425    3373 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:14.729989-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469364    3373 start.go:159] libmachine.API.Create for \"auto-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:14.729996-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469432    3373 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:14.730003-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469548    3373 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:14.730011-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469584    3373 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:14.730018-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469598    3373 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:14.730026-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469684    3373 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:14.730033-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469710    3373 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:14.73004-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.469722    3373 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:14.730049-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.470215    3373 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:14.730057-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.606073    3373 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:14.730064-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.667954    3373 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:14.730073-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.667962    3373 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:14.730081-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.668100    3373 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.73009-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.676900    3373 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:14.730097-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.676918    3373 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:14.730106-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.676995    3373 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:14.730114-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.684241    3373 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:14.73012-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.730127-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.684254    3373 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:14.730135-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.684266    3373 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.730143-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.684282    3373 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:14.730153-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.684317    3373 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=4a:4f:d0:0f:90:e5 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/auto-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:14.730164-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.685791    3373 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:14.730171-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.685803    3373 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:14.730183-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:14.73019-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:12.685814    3373 client.go:171] LocalClient.Create took 216.380041ms\n"}
{"Time":"2023-05-31T12:01:14.730197-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:14.687949    3373 start.go:128] duration metric: createHost completed in 2.275157292s\n"}
{"Time":"2023-05-31T12:01:14.730205-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:14.688056    3373 start.go:83] releasing machines lock for \"auto-602000\", held for 2.275683292s\n"}
{"Time":"2023-05-31T12:01:14.730213-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:14.688394    3373 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p auto-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.730223-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p auto-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.730232-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:14.698084    3373 out.go:177] \n"}
{"Time":"2023-05-31T12:01:14.73024-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:14.702135    3373 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.730248-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:14.730256-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:14.702190    3373 out.go:239] * \n"}
{"Time":"2023-05-31T12:01:14.730263-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:01:14.730272-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tW0531 12:01:14.704989    3373 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:14.730286-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730295-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:14.730303-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:14.73031-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730317-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:14.730324-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730332-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:14.730342-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:14.730356-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730469-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:14.730486-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:14.730493-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730501-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:14.730509-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:14.730517-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:14.730534-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \tI0531 12:01:14.715066    3373 out.go:177] \n"}
{"Time":"2023-05-31T12:01:14.730542-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:14.73055-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:01:14.730557-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:01:14.730575-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    net_test.go:209: \"auto\" test finished in 4m37.759646041s, failed=true\n"}
{"Time":"2023-05-31T12:01:16.689186-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:01:16.689198-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        ----------------------- debugLogs start: auto-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:01:16.6892-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:16.689202-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689204-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689205-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689207-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:01:16.689208-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.68921-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689211-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689212-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:16.689214-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689215-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689216-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689218-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:01:16.689219-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.68922-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689222-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689223-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:01:16.689224-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689225-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689227-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689228-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:01:16.689229-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689234-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689235-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689236-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:01:16.689237-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689239-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68924-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689241-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:16.689242-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689244-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689248-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689249-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:16.689251-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689252-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689254-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689255-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:16.689256-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689257-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689259-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68926-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:16.689261-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689263-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689264-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689265-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689266-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:16.689269-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.68927-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689272-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689273-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689275-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:16.689276-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689277-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689279-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68928-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689282-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:01:16.689283-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689284-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689285-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689287-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:01:16.689288-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689289-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689291-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689292-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689293-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:01:16.689295-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689296-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689297-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689298-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689299-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:01:16.689301-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689302-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689303-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689304-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:01:16.689306-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689307-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689308-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68931-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:01:16.689311-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689312-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689313-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689314-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:01:16.689316-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689319-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68932-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689322-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:01:16.689323-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689324-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689325-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689327-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:01:16.689328-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689329-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68933-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689332-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:01:16.689334-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689335-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689336-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689338-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:01:16.689339-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.68934-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689342-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689343-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:01:16.689344-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689346-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689347-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689348-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689349-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:01:16.689351-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689352-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689353-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689355-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689356-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:01:16.689358-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689359-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.68936-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689362-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689363-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:01:16.689364-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689366-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689367-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689368-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689369-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:01:16.68937-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689372-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689373-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689374-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689375-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:01:16.689376-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689378-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689379-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68938-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:01:16.689381-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689383-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689384-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689385-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:01:16.689387-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        error: context \"auto-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:16.689389-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689391-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689393-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:01:16.689394-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689396-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689398-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689399-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.6894-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:01:16.689402-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689404-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689405-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689406-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689407-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:01:16.689408-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689409-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689411-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689412-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689413-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:01:16.689415-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689416-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689418-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689419-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68942-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:01:16.689421-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689423-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689425-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689427-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689428-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:01:16.68943-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:01:16.689431-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:01:16.689432-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:01:16.689433-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:01:16.689435-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:01:16.689436-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:01:16.689437-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        users: null\n"}
{"Time":"2023-05-31T12:01:16.689438-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689439-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689441-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:01:16.689442-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        Error in configuration: context was not found for specified context: auto-602000\n"}
{"Time":"2023-05-31T12:01:16.689443-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689445-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689446-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:01:16.689447-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689449-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689451-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689452-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689453-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:01:16.689455-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689456-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689457-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689459-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68946-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:01:16.689462-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689463-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689465-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689466-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689468-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:01:16.689469-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689471-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689472-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689474-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689475-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:01:16.689476-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689478-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689479-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68948-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689482-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:01:16.689485-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689486-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689487-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689489-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68949-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:01:16.689491-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689493-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689495-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689496-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689497-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:01:16.689499-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689501-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689502-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689504-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689505-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:01:16.689507-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689508-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689509-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689511-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689512-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:01:16.689513-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689515-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689516-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689517-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689518-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:01:16.68952-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689521-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689522-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689524-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689525-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:01:16.689526-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689528-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689529-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.68953-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689532-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:01:16.689533-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689535-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689536-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689537-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689538-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:01:16.68954-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689542-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689543-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689544-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689546-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:01:16.689547-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689549-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.68955-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689551-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689553-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:01:16.689554-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689556-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689557-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689558-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689559-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:01:16.689561-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689562-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.689564-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689565-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689566-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:01:16.689568-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:16.689569-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"          To start a cluster, run: \"minikube start -p auto-602000\"\n"}
{"Time":"2023-05-31T12:01:16.68957-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.689572-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        ----------------------- debugLogs end: auto-602000 [took: 1.960046292s] --------------------------------\n"}
{"Time":"2023-05-31T12:01:16.689575-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    net_test.go:210: *** TestNetworkPlugins/group/auto FAILED at 2023-05-31 12:01:16.689172 -0700 PDT m=+1110.874519417\n"}
{"Time":"2023-05-31T12:01:16.689576-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:01:16.689578-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p auto-602000 -n auto-602000\n"}
{"Time":"2023-05-31T12:01:16.718397-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p auto-602000 -n auto-602000: exit status 7 (29.105167ms)\n"}
{"Time":"2023-05-31T12:01:16.71841-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.718412-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:16.718414-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:01:16.718429-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        \n"}
{"Time":"2023-05-31T12:01:16.718434-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:16.718435-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:01:16.718438-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:241: \"auto-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:01:16.71844-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:175: Cleaning up \"auto-602000\" profile ...\n"}
{"Time":"2023-05-31T12:01:16.718442-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p auto-602000\n"}
{"Time":"2023-05-31T12:01:16.811205-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2023-05-31T12:01:16.811217-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== CONT  TestNetworkPlugins/group/calico\n"}
{"Time":"2023-05-31T12:01:16.81124-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/Start"}
{"Time":"2023-05-31T12:01:16.811241-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"=== RUN   TestNetworkPlugins/group/calico/Start\n"}
{"Time":"2023-05-31T12:01:16.811304-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p calico-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=calico --driver=qemu2 \n"}
{"Time":"2023-05-31T12:01:26.626785-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p calico-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=calico --driver=qemu2 : exit status 80 (9.813390958s)\n"}
{"Time":"2023-05-31T12:01:26.626846-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:26.626856-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:26.626863-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* [calico-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:26.626871-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:26.626879-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:26.626886-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:26.626894-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:26.626901-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:26.626907-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:26.626914-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:26.62692-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:26.626927-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Starting control plane node calico-602000 in cluster calico-602000\n"}
{"Time":"2023-05-31T12:01:26.626955-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:26.626962-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:26.626969-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:26.626976-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.626982-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Deleting \"calico-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:26.626989-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:26.626996-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:26.627007-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:26.627014-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.62702-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.627026-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.627032-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:26.627039-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:26.627045-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:01:26.627051-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.838965    3485 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:01:26.627058-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.839106    3485 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:26.627066-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.839109    3485 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:01:26.627073-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.839111    3485 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:26.627081-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.839173    3485 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:01:26.627088-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.840168    3485 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:01:26.627097-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.855087    3485 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1847,\"bootTime\":1685557829,\"procs\":397,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:01:26.62711-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:16.855180    3485 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:01:26.627118-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.860488    3485 out.go:177] * [calico-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:26.627125-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.867472    3485 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:26.627132-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.867516    3485 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:01:26.627139-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.871505    3485 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:26.627149-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.874457    3485 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:26.627157-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.877420    3485 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:26.627164-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.880507    3485 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:26.627171-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.883388    3485 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:26.627179-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.886787    3485 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:01:26.627188-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.886836    3485 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:01:26.62722-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.891467    3485 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:26.627228-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.898431    3485 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:01:26.627235-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.898436    3485 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:01:26.627244-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.898441    3485 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:01:26.627252-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.900488    3485 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:01:26.627261-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.903432    3485 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:26.627269-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.906516    3485 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:01:26.627279-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.906536    3485 cni.go:84] Creating CNI manager for \"calico\"\n"}
{"Time":"2023-05-31T12:01:26.627287-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.906540    3485 start_flags.go:314] Found \"Calico\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:01:26.627294-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.906547    3485 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:01:26.627308-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t{Name:calico-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:calico-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CR"}
{"Time":"2023-05-31T12:01:26.627322-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"ISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:calico NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:01:26.62744-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.906666    3485 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:26.627457-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.910423    3485 out.go:177] * Starting control plane node calico-602000 in cluster calico-602000\n"}
{"Time":"2023-05-31T12:01:26.627465-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918384    3485 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:01:26.627473-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918408    3485 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:01:26.62748-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918427    3485 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:01:26.627488-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918484    3485 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:01:26.627497-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918491    3485 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:01:26.627505-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918557    3485 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/calico-602000/config.json ...\n"}
{"Time":"2023-05-31T12:01:26.627513-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918576    3485 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/calico-602000/config.json: {Name:mk1a05c0fbd53b40118e0fb5d5b32ee296b89402 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:26.627522-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918766    3485 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:01:26.62753-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918781    3485 start.go:364] acquiring machines lock for calico-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:26.627538-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918811    3485 start.go:368] acquired machines lock for \"calico-602000\" in 25.042µs\n"}
{"Time":"2023-05-31T12:01:26.627554-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918823    3485 start.go:93] Provisioning new machine with config: \u0026{Name:calico-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T12:01:26.627568-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:calico-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:calico NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:01:26.627584-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:26.627594-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.918861    3485 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:26.627601-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.927413    3485 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:26.627609-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944125    3485 start.go:159] libmachine.API.Create for \"calico-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:26.627616-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944157    3485 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:26.627624-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944227    3485 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:26.627632-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944249    3485 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:26.627639-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944262    3485 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:26.627646-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944312    3485 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:26.627654-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944328    3485 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:26.627661-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944336    3485 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:26.627671-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:16.944694    3485 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:26.627679-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.092125    3485 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:26.627687-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.219507    3485 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:26.627694-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.219513    3485 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:26.627702-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.219670    3485 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.627711-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.228567    3485 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:26.627721-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.228585    3485 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:26.62773-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.228635    3485 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:26.627737-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.235732    3485 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:26.627745-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.627752-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.235746    3485 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:26.627829-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.235766    3485 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.627839-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.235772    3485 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:26.627849-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.235809    3485 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:ea:56:52:1d:18 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.627868-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.237323    3485 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:26.627877-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.237336    3485 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:26.627884-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.627891-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:17.237354    3485 client.go:171] LocalClient.Create took 293.194875ms\n"}
{"Time":"2023-05-31T12:01:26.627899-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:19.239525    3485 start.go:128] duration metric: createHost completed in 2.320672917s\n"}
{"Time":"2023-05-31T12:01:26.627907-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:19.239620    3485 start.go:83] releasing machines lock for \"calico-602000\", held for 2.320831167s\n"}
{"Time":"2023-05-31T12:01:26.627915-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:19.239718    3485 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.627923-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:19.248211    3485 out.go:177] * Deleting \"calico-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:26.62793-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:19.267560    3485 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.627939-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.627947-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:19.267586    3485 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:01:26.627955-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.269763    3485 start.go:364] acquiring machines lock for calico-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:26.627964-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.270320    3485 start.go:368] acquired machines lock for \"calico-602000\" in 400.875µs\n"}
{"Time":"2023-05-31T12:01:26.62798-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.270447    3485 start.go:93] Provisioning new machine with config: \u0026{Name:calico-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T12:01:26.627994-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:calico-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:calico NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:01:26.628007-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:26.628019-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.270739    3485 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:26.628027-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.280416    3485 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:26.628035-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328489    3485 start.go:159] libmachine.API.Create for \"calico-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:26.628045-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328551    3485 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:26.628055-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328724    3485 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:26.628062-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328771    3485 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:26.628069-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328793    3485 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:26.628076-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328876    3485 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:26.628085-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328905    3485 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:26.628092-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.328917    3485 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:26.6281-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.329525    3485 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:26.628108-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.492544    3485 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:26.628115-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.567379    3485 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:26.628123-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.567385    3485 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:26.628131-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.567515    3485 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.628139-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.576042    3485 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:26.62821-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.576066    3485 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:26.628229-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.576133    3485 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:26.628238-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.583234    3485 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:26.628247-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.628254-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.583250    3485 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:26.628262-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.583274    3485 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.628271-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.583278    3485 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:26.628282-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.583330    3485 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=ce:3c:55:62:72:27 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/calico-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:26.628294-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.584941    3485 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:26.628302-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.584960    3485 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:26.628309-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:26.628317-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:24.584974    3485 client.go:171] LocalClient.Create took 256.417417ms\n"}
{"Time":"2023-05-31T12:01:26.628325-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:26.587183    3485 start.go:128] duration metric: createHost completed in 2.316454625s\n"}
{"Time":"2023-05-31T12:01:26.628333-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:26.587233    3485 start.go:83] releasing machines lock for \"calico-602000\", held for 2.316898917s\n"}
{"Time":"2023-05-31T12:01:26.628342-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:26.587613    3485 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p calico-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.628352-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p calico-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.62836-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:26.597122    3485 out.go:177] \n"}
{"Time":"2023-05-31T12:01:26.628369-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:26.601279    3485 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.628378-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:26.628386-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:26.601309    3485 out.go:239] * \n"}
{"Time":"2023-05-31T12:01:26.628394-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:01:26.628402-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tW0531 12:01:26.603880    3485 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:26.628413-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628425-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:26.628433-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:26.628441-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628448-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:26.628456-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628464-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:26.628475-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:26.628484-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628492-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:26.628499-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:26.628507-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628514-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:26.628521-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:26.628529-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:26.628539-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \tI0531 12:01:26.612241    3485 out.go:177] \n"}
{"Time":"2023-05-31T12:01:26.628545-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:26.628552-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:01:26.628558-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:01:26.628575-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    net_test.go:209: \"calico\" test finished in 4m49.656278708s, failed=true\n"}
{"Time":"2023-05-31T12:01:28.789955-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:01:28.78997-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        ----------------------- debugLogs start: calico-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:01:28.789972-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:28.789974-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.789976-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789977-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789979-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:01:28.78998-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.789982-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789983-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789984-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:28.789985-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.789987-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789988-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789989-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:01:28.789991-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.789992-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789993-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.789994-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:01:28.789996-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.79-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790001-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790002-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:01:28.790004-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790005-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790006-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79001-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:01:28.790011-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790012-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790013-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790015-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:28.790016-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790017-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790019-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79002-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:28.790021-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790022-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790023-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790025-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:28.790026-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790027-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790028-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79003-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:28.790031-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790032-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790033-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790036-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790037-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:28.790039-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790041-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790042-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790043-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790044-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:28.790046-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790047-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790048-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790049-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790051-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:01:28.790052-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790054-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790055-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790056-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:01:28.790057-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790059-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.79006-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790061-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790062-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:01:28.790064-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790066-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790069-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79007-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790071-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:01:28.790073-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790074-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790075-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790077-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:01:28.790078-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790079-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79008-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790082-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:01:28.790083-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790085-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790086-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790088-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:01:28.790089-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.79009-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790092-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790093-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:01:28.790094-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790096-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790098-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790099-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:01:28.7901-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790102-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790103-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790104-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:01:28.790106-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790107-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790108-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790109-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:01:28.790111-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790112-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790113-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790115-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:01:28.790116-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790118-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790119-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79012-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790121-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:01:28.790123-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790125-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790126-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790127-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790129-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:01:28.79013-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790131-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790133-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790134-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790135-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:01:28.790136-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790138-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790139-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79014-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790142-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:01:28.790143-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790144-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790146-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790147-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790149-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe calico daemon set:\n"}
{"Time":"2023-05-31T12:01:28.79015-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790152-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790153-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790154-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe calico daemon set pod(s):\n"}
{"Time":"2023-05-31T12:01:28.790156-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790157-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790158-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79016-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: calico daemon set container(s) logs (current):\n"}
{"Time":"2023-05-31T12:01:28.790162-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790164-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790165-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790166-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: calico daemon set container(s) logs (previous):\n"}
{"Time":"2023-05-31T12:01:28.790168-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790169-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790171-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790172-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe calico deployment:\n"}
{"Time":"2023-05-31T12:01:28.790173-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790175-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790176-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790178-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe calico deployment pod(s):\n"}
{"Time":"2023-05-31T12:01:28.790179-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.79018-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790182-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790183-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: calico deployment container(s) logs (current):\n"}
{"Time":"2023-05-31T12:01:28.790184-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790186-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790187-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790188-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: calico deployment container(s) logs (previous):\n"}
{"Time":"2023-05-31T12:01:28.79019-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790193-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790194-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790195-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:01:28.790196-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790197-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790198-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790201-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:01:28.790204-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790205-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790206-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790208-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:01:28.790209-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        error: context \"calico-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:28.790211-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790212-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790213-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:01:28.790215-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790216-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790218-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790219-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79022-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:01:28.790222-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790223-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790224-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790225-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790227-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:01:28.790228-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790229-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790231-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790232-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790233-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:01:28.790235-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790236-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790238-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79024-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790241-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:01:28.790243-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790244-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790246-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790248-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790249-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:01:28.79025-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:01:28.790252-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:01:28.790253-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:01:28.790254-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:01:28.790255-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:01:28.790257-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:01:28.790259-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        users: null\n"}
{"Time":"2023-05-31T12:01:28.79026-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790287-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790291-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:01:28.790293-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        Error in configuration: context was not found for specified context: calico-602000\n"}
{"Time":"2023-05-31T12:01:28.790295-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790297-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790298-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:01:28.7903-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790301-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790303-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790304-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790305-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:01:28.790307-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790308-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.79031-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790311-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790312-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:01:28.790314-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790316-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790317-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790318-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79032-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:01:28.790321-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790323-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790324-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790326-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790327-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:01:28.790328-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.79033-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790331-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790333-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790334-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:01:28.790336-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790337-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790338-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79034-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790341-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:01:28.790343-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790344-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790346-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790347-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790348-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:01:28.79035-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790352-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790355-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790357-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790359-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:01:28.79036-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790361-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790363-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790364-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790365-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:01:28.790367-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790368-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.79037-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790372-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790373-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:01:28.790375-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790376-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790378-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790379-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79038-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:01:28.790382-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790383-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790385-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790386-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790387-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:01:28.790389-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.79039-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790391-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790393-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790394-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:01:28.790395-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790397-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790398-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790399-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790401-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:01:28.790402-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790404-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790405-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790406-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790408-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:01:28.790409-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790411-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790412-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790413-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790415-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:01:28.790416-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790418-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790419-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.79042-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790421-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:01:28.790423-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:28.790424-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"          To start a cluster, run: \"minikube start -p calico-602000\"\n"}
{"Time":"2023-05-31T12:01:28.790425-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.790427-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        ----------------------- debugLogs end: calico-602000 [took: 2.16295475s] --------------------------------\n"}
{"Time":"2023-05-31T12:01:28.79043-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    net_test.go:210: *** TestNetworkPlugins/group/calico FAILED at 2023-05-31 12:01:28.78994 -0700 PDT m=+1122.975462667\n"}
{"Time":"2023-05-31T12:01:28.790431-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:01:28.790433-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p calico-602000 -n calico-602000\n"}
{"Time":"2023-05-31T12:01:28.81902-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p calico-602000 -n calico-602000: exit status 7 (28.936833ms)\n"}
{"Time":"2023-05-31T12:01:28.819037-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.819038-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:28.81904-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:01:28.819041-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        \n"}
{"Time":"2023-05-31T12:01:28.819043-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:28.819044-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:01:28.819047-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:241: \"calico-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:01:28.819049-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:175: Cleaning up \"calico-602000\" profile ...\n"}
{"Time":"2023-05-31T12:01:28.819051-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p calico-602000\n"}
{"Time":"2023-05-31T12:01:28.911859-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-flannel"}
{"Time":"2023-05-31T12:01:28.911871-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"=== CONT  TestNetworkPlugins/group/custom-flannel\n"}
{"Time":"2023-05-31T12:01:28.911891-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-flannel/Start"}
{"Time":"2023-05-31T12:01:28.911893-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"=== RUN   TestNetworkPlugins/group/custom-flannel/Start\n"}
{"Time":"2023-05-31T12:01:28.911939-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p custom-flannel-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=testdata/kube-flannel.yaml --driver=qemu2 \n"}
{"Time":"2023-05-31T12:01:38.749903-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p custom-flannel-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=testdata/kube-flannel.yaml --driver=qemu2 : exit status 80 (9.833492s)\n"}
{"Time":"2023-05-31T12:01:38.749953-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:38.749961-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:38.749968-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* [custom-flannel-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:38.749974-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:38.749981-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:38.749987-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:38.749993-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:38.749999-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:38.750004-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:38.750009-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:38.750015-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:38.75002-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Starting control plane node custom-flannel-602000 in cluster custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:38.750026-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:38.750031-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:38.750036-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:38.750043-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750048-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Deleting \"custom-flannel-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:38.750054-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:38.750059-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:38.750064-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:38.750069-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750074-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750079-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750083-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:38.750088-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:38.750093-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:01:38.750098-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.939539    3602 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:01:38.750104-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.939658    3602 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:38.750112-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.939663    3602 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:01:38.750118-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.939666    3602 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:38.750124-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.939742    3602 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:01:38.750129-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.940756    3602 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:01:38.750152-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.955930    3602 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1859,\"bootTime\":1685557829,\"procs\":397,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:01:38.750162-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:28.955998    3602 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:01:38.750168-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.961327    3602 out.go:177] * [custom-flannel-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:38.750174-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.968187    3602 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:38.750179-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.968254    3602 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:01:38.750184-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.972041    3602 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:38.750193-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.975244    3602 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:38.750199-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.979274    3602 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:38.750205-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.982198    3602 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:38.75021-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.985181    3602 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:38.750216-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.988529    3602 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:01:38.750222-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.988576    3602 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:01:38.750227-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:28.993180    3602 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:38.750232-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.000170    3602 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:01:38.750237-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.000175    3602 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:01:38.750244-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.000182    3602 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:01:38.750253-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.002066    3602 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:01:38.750258-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.005224    3602 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:38.750264-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.008211    3602 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:01:38.75027-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.008232    3602 cni.go:84] Creating CNI manager for \"testdata/kube-flannel.yaml\"\n"}
{"Time":"2023-05-31T12:01:38.750275-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.008253    3602 start_flags.go:314] Found \"testdata/kube-flannel.yaml\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:01:38.750283-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.008260    3602 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:01:38.750293-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t{Name:custom-flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:custom-flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerR"}
{"Time":"2023-05-31T12:01:38.750304-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"untime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:testdata/kube-flannel.yaml NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/sock"}
{"Time":"2023-05-31T12:01:38.750312-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"et_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:01:38.750317-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.008357    3602 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:38.750323-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.014990    3602 out.go:177] * Starting control plane node custom-flannel-602000 in cluster custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:38.750328-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019192    3602 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:01:38.750334-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019216    3602 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:01:38.75034-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019228    3602 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:01:38.750345-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019295    3602 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:01:38.750351-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019300    3602 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:01:38.750357-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019357    3602 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/custom-flannel-602000/config.json ...\n"}
{"Time":"2023-05-31T12:01:38.750363-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019369    3602 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/custom-flannel-602000/config.json: {Name:mkb055bd4992c66cad2e2b35d849d38d73253e71 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:38.750371-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019561    3602 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:01:38.750573-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019576    3602 start.go:364] acquiring machines lock for custom-flannel-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:38.750584-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019609    3602 start.go:368] acquired machines lock for \"custom-flannel-602000\" in 25µs\n"}
{"Time":"2023-05-31T12:01:38.750595-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019624    3602 start.go:93] Provisioning new machine with config: \u0026{Name:custom-flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:01:38.750605-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"tesConfig:{KubernetesVersion:v1.27.2 ClusterName:custom-flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:testdata/kube-flannel.yaml NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p200"}
{"Time":"2023-05-31T12:01:38.750614-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"0.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:38.750621-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.019650    3602 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:38.750626-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.027283    3602 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:38.750632-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.043899    3602 start.go:159] libmachine.API.Create for \"custom-flannel-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:38.750637-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.043922    3602 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:38.750643-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.043986    3602 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:38.750648-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044012    3602 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:38.750653-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044022    3602 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:38.750659-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044071    3602 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:38.750665-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044086    3602 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:38.750674-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044103    3602 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:38.75068-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.044438    3602 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:38.750686-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.220164    3602 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:38.750692-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.301646    3602 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:38.750697-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.301651    3602 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:38.750703-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.301791    3602 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.750709-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.310562    3602 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:38.750717-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.310576    3602 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:38.750723-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.310644    3602 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:38.750728-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.317990    3602 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:38.750733-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750738-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.318004    3602 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:38.750743-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.318018    3602 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.75075-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.318024    3602 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:38.750757-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.318059    3602 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=f2:07:80:5c:ae:fc -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.750769-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.319630    3602 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:38.750774-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.319643    3602 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:38.750779-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750784-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:29.319661    3602 client.go:171] LocalClient.Create took 275.736583ms\n"}
{"Time":"2023-05-31T12:01:38.75079-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:31.321857    3602 start.go:128] duration metric: createHost completed in 2.302222458s\n"}
{"Time":"2023-05-31T12:01:38.750795-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:31.321908    3602 start.go:83] releasing machines lock for \"custom-flannel-602000\", held for 2.302323417s\n"}
{"Time":"2023-05-31T12:01:38.750801-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:31.321981    3602 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.750806-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:31.331095    3602 out.go:177] * Deleting \"custom-flannel-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:38.750812-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:31.351374    3602 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.750818-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.750823-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:31.351405    3602 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:01:38.750829-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.353557    3602 start.go:364] acquiring machines lock for custom-flannel-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:38.750835-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.354060    3602 start.go:368] acquired machines lock for \"custom-flannel-602000\" in 408.209µs\n"}
{"Time":"2023-05-31T12:01:38.750846-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.354171    3602 start.go:93] Provisioning new machine with config: \u0026{Name:custom-flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:01:38.75086-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"tesConfig:{KubernetesVersion:v1.27.2 ClusterName:custom-flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:testdata/kube-flannel.yaml NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p200"}
{"Time":"2023-05-31T12:01:38.750871-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"0.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:38.750877-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.354384    3602 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:38.750883-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.362811    3602 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:38.750888-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.411975    3602 start.go:159] libmachine.API.Create for \"custom-flannel-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:38.750894-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412023    3602 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:38.750899-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412259    3602 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:38.750904-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412345    3602 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:38.750909-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412376    3602 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:38.750915-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412477    3602 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:38.750921-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412512    3602 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:38.750926-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.412527    3602 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:38.750932-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.413162    3602 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:38.750938-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.578394    3602 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:38.750943-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.686583    3602 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:38.750949-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.686588    3602 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:38.750955-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.686734    3602 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.750961-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.695060    3602 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:38.750967-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.695078    3602 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:38.750972-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.695138    3602 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:38.750977-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.702243    3602 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:38.750982-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.750987-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.702259    3602 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:38.750992-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.702275    3602 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.751001-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.702282    3602 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:38.751009-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.702317    3602 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=52:d3:46:d0:80:6e -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/custom-flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:38.751017-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.703778    3602 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:38.751022-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.703793    3602 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:38.751027-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:38.751032-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:36.703804    3602 client.go:171] LocalClient.Create took 291.780416ms\n"}
{"Time":"2023-05-31T12:01:38.751038-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:38.705997    3602 start.go:128] duration metric: createHost completed in 2.351601041s\n"}
{"Time":"2023-05-31T12:01:38.751043-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:38.706110    3602 start.go:83] releasing machines lock for \"custom-flannel-602000\", held for 2.352060625s\n"}
{"Time":"2023-05-31T12:01:38.75105-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:38.706586    3602 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p custom-flannel-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.751056-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p custom-flannel-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.751062-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:38.716113    3602 out.go:177] \n"}
{"Time":"2023-05-31T12:01:38.751068-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:38.720261    3602 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.751075-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:38.751083-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:38.720306    3602 out.go:239] * \n"}
{"Time":"2023-05-31T12:01:38.751088-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:01:38.751094-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tW0531 12:01:38.722679    3602 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:38.751101-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751106-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:38.751112-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:38.751117-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751125-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:38.75113-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751136-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:38.751146-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:38.751153-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751158-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:38.751163-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:38.751168-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751174-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:38.751179-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:38.751185-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:38.751191-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \tI0531 12:01:38.732135    3602 out.go:177] \n"}
{"Time":"2023-05-31T12:01:38.751196-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:38.7512-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:01:38.751206-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:01:38.751662-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    net_test.go:209: \"custom-flannel\" test finished in 5m1.781367125s, failed=true\n"}
{"Time":"2023-05-31T12:01:40.856745-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:01:40.856757-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        ----------------------- debugLogs start: custom-flannel-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:01:40.856759-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:40.856762-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856763-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856765-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856766-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:01:40.856768-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856769-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85677-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856772-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:40.856773-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856774-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856775-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856776-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:01:40.856778-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856779-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85678-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856782-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:01:40.856783-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856784-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856785-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856787-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:01:40.856788-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856789-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85679-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856792-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:01:40.856793-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856794-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856795-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856796-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:40.856798-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856799-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856805-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856807-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:40.856808-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.85681-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856812-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856813-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:40.856815-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856816-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856817-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856819-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:40.85682-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856822-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856823-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856825-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856826-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:40.856828-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.85683-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856831-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856832-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856833-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:40.856835-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856838-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856839-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85684-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856841-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:01:40.856843-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856844-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856845-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856847-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:01:40.856848-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856849-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.85685-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856853-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856854-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:01:40.856855-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856857-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856858-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856859-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85686-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:01:40.856862-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856863-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856865-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856866-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:01:40.856868-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856869-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85687-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856871-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:01:40.856873-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856874-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856875-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856877-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:01:40.856878-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856879-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85688-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856882-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:01:40.856883-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856884-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856886-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856887-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:01:40.856888-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856889-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856891-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856892-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:01:40.856893-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856895-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856896-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856897-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:01:40.856899-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.8569-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856901-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856903-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:01:40.856904-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856906-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856907-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856909-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85691-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:01:40.856911-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856913-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856915-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856916-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856917-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:01:40.856919-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.85692-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856922-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856923-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856924-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:01:40.856925-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856926-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856928-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856929-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85693-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:01:40.856932-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856933-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856934-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856936-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856937-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe flannel daemon set:\n"}
{"Time":"2023-05-31T12:01:40.856938-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.85694-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856941-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856943-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe flannel pod(s):\n"}
{"Time":"2023-05-31T12:01:40.856944-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.856946-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856947-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856948-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: flannel container(s) logs (current):\n"}
{"Time":"2023-05-31T12:01:40.85695-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856952-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856953-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856954-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: flannel container(s) logs (previous):\n"}
{"Time":"2023-05-31T12:01:40.856956-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.856957-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856959-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85696-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /run/flannel/subnet.env:\n"}
{"Time":"2023-05-31T12:01:40.856962-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.856963-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.856965-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856966-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.856967-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/kube-flannel/cni-conf.json:\n"}
{"Time":"2023-05-31T12:01:40.856986-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857007-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857008-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85701-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857012-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:01:40.857013-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.857014-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857017-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857018-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:01:40.85702-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.857023-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857024-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857025-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:01:40.857026-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        error: context \"custom-flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:40.857028-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857029-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857031-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:01:40.857034-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857035-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857037-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857038-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857039-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:01:40.857041-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857042-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857043-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857045-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857046-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:01:40.857048-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.85705-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857051-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857052-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857054-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:01:40.857055-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857056-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857058-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857059-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85706-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:01:40.857062-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857064-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857065-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857066-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857067-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:01:40.857069-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:01:40.857071-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:01:40.857072-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:01:40.857074-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:01:40.857075-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:01:40.857077-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:01:40.857078-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        users: null\n"}
{"Time":"2023-05-31T12:01:40.857079-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85708-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857081-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:01:40.857083-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        Error in configuration: context was not found for specified context: custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.857085-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857086-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857087-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:01:40.857088-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857091-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857092-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857093-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857095-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:01:40.857096-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857097-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857099-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.8571-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857101-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:01:40.857103-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857105-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857106-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857107-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857109-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:01:40.857111-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857112-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857113-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857115-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857116-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:01:40.857118-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857119-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857121-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857122-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857123-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:01:40.857125-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857126-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857127-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857129-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85713-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:01:40.857132-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857133-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857135-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857136-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857137-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:01:40.857139-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.85714-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857141-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857143-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857144-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:01:40.857145-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857147-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857148-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85715-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857151-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:01:40.857152-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857154-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857155-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857157-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857158-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:01:40.857159-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857161-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857163-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857164-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857166-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:01:40.857167-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857169-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.85717-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857171-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857172-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:01:40.857174-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857175-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857177-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857178-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85718-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:01:40.857181-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857183-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857184-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857185-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857187-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:01:40.857188-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.85719-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857192-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857193-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857194-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:01:40.857197-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.8572-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857201-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857203-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857204-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:01:40.857205-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857207-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857208-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.85721-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857211-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:01:40.857213-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:40.857214-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"          To start a cluster, run: \"minikube start -p custom-flannel-602000\"\n"}
{"Time":"2023-05-31T12:01:40.857215-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.857217-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        ----------------------- debugLogs end: custom-flannel-602000 [took: 2.104986291s] --------------------------------\n"}
{"Time":"2023-05-31T12:01:40.85722-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    net_test.go:210: *** TestNetworkPlugins/group/custom-flannel FAILED at 2023-05-31 12:01:40.85673 -0700 PDT m=+1135.042426751\n"}
{"Time":"2023-05-31T12:01:40.857222-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:01:40.857224-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p custom-flannel-602000 -n custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.885077-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p custom-flannel-602000 -n custom-flannel-602000: exit status 7 (28.222ms)\n"}
{"Time":"2023-05-31T12:01:40.88509-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.885093-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:40.885094-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:01:40.885095-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        \n"}
{"Time":"2023-05-31T12:01:40.885097-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:40.8851-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:01:40.885103-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:241: \"custom-flannel-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:01:40.885105-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:175: Cleaning up \"custom-flannel-602000\" profile ...\n"}
{"Time":"2023-05-31T12:01:40.885106-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p custom-flannel-602000\n"}
{"Time":"2023-05-31T12:01:40.981795-07:00","Action":"cont","Test":"TestNetworkPlugins/group/false"}
{"Time":"2023-05-31T12:01:40.981807-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== CONT  TestNetworkPlugins/group/false\n"}
{"Time":"2023-05-31T12:01:40.98183-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/Start"}
{"Time":"2023-05-31T12:01:40.981831-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"=== RUN   TestNetworkPlugins/group/false/Start\n"}
{"Time":"2023-05-31T12:01:40.981875-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p false-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=false --driver=qemu2 \n"}
{"Time":"2023-05-31T12:01:50.620286-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p false-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=false --driver=qemu2 : exit status 80 (9.637106791s)\n"}
{"Time":"2023-05-31T12:01:50.620331-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:50.620336-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:50.620339-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* [false-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:50.620344-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:50.620348-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:50.620352-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:50.620356-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:50.62036-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:50.620363-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:50.620392-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:50.620396-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:50.620399-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Starting control plane node false-602000 in cluster false-602000\n"}
{"Time":"2023-05-31T12:01:50.620405-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:50.620428-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:50.620433-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:50.620436-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620439-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Deleting \"false-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:50.620443-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:50.620447-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:01:50.62045-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:50.620453-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620456-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.62046-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620463-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:50.620466-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:50.62047-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:01:50.620473-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.008372    3722 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:01:50.620477-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.008507    3722 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:50.620481-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.008510    3722 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:01:50.620485-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.008512    3722 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:01:50.620489-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.008586    3722 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:01:50.620493-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.009576    3722 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:01:50.620497-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.024366    3722 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1872,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:01:50.620504-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:41.024455    3722 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:01:50.620508-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.028914    3722 out.go:177] * [false-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:01:50.620511-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.036107    3722 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:01:50.620515-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.036151    3722 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:01:50.620518-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.039124    3722 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:01:50.620525-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.042070    3722 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:01:50.620529-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.045071    3722 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:01:50.620533-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.046491    3722 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:01:50.620536-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.049052    3722 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:01:50.62054-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.052321    3722 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:01:50.620544-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.052360    3722 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:01:50.620548-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.056908    3722 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:01:50.620551-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.064095    3722 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:01:50.620555-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.064099    3722 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:01:50.620559-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.064105    3722 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:01:50.620564-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.065867    3722 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:01:50.620569-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.069038    3722 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:01:50.620573-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.072076    3722 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:01:50.620583-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.072091    3722 cni.go:84] Creating CNI manager for \"false\"\n"}
{"Time":"2023-05-31T12:01:50.620586-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.072094    3722 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:01:50.620593-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t{Name:false-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:false-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRIS"}
{"Time":"2023-05-31T12:01:50.6206-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"ocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:false NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:01:50.620609-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.072168    3722 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:50.620613-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.079054    3722 out.go:177] * Starting control plane node false-602000 in cluster false-602000\n"}
{"Time":"2023-05-31T12:01:50.62062-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083038    3722 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:01:50.620624-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083063    3722 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:01:50.620627-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083070    3722 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:01:50.620631-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083116    3722 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:01:50.620636-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083121    3722 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:01:50.620643-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083177    3722 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/false-602000/config.json ...\n"}
{"Time":"2023-05-31T12:01:50.620647-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083188    3722 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/false-602000/config.json: {Name:mkddf1931c6367f31365792aa6516d76bd6f1d39 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:50.620653-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083374    3722 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:01:50.620657-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083389    3722 start.go:364] acquiring machines lock for false-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:50.620661-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083417    3722 start.go:368] acquired machines lock for \"false-602000\" in 23.875µs\n"}
{"Time":"2023-05-31T12:01:50.620668-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083434    3722 start.go:93] Provisioning new machine with config: \u0026{Name:false-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig"}
{"Time":"2023-05-31T12:01:50.620675-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":":{KubernetesVersion:v1.27.2 ClusterName:false-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:false NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:26"}
{"Time":"2023-05-31T12:01:50.620682-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"2144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:50.620686-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.083455    3722 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:50.62069-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.092043    3722 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:50.620693-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108012    3722 start.go:159] libmachine.API.Create for \"false-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:50.620698-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108032    3722 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:50.620701-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108087    3722 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:50.620704-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108109    3722 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:50.620708-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108118    3722 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:50.620711-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108153    3722 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:50.620715-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108166    3722 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:50.620718-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108172    3722 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:50.620722-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.108473    3722 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:50.620726-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.232902    3722 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:50.62073-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.284564    3722 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:50.620733-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.284569    3722 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:50.620737-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.284691    3722 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620741-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.293152    3722 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:50.620745-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.293174    3722 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:50.620748-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.293222    3722 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:50.620752-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.300421    3722 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:50.620755-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620758-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.300434    3722 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:50.620762-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.300448    3722 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620766-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.300457    3722 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:50.620771-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.300497    3722 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=f2:bf:ae:93:93:42 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620777-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.301879    3722 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:50.620781-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.301894    3722 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:50.620785-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620788-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:41.301911    3722 client.go:171] LocalClient.Create took 193.8745ms\n"}
{"Time":"2023-05-31T12:01:50.620791-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:43.304091    3722 start.go:128] duration metric: createHost completed in 2.220649708s\n"}
{"Time":"2023-05-31T12:01:50.620795-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:43.304176    3722 start.go:83] releasing machines lock for \"false-602000\", held for 2.220748667s\n"}
{"Time":"2023-05-31T12:01:50.620798-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:43.304223    3722 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.620802-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:43.316199    3722 out.go:177] * Deleting \"false-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:01:50.620806-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:43.335136    3722 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.62081-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.620813-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:43.335167    3722 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:01:50.620817-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.337360    3722 start.go:364] acquiring machines lock for false-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:01:50.620821-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.337822    3722 start.go:368] acquired machines lock for \"false-602000\" in 346.25µs\n"}
{"Time":"2023-05-31T12:01:50.620829-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.337945    3722 start.go:93] Provisioning new machine with config: \u0026{Name:false-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig"}
{"Time":"2023-05-31T12:01:50.620835-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":":{KubernetesVersion:v1.27.2 ClusterName:false-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:false NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:26"}
{"Time":"2023-05-31T12:01:50.620841-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"2144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:01:50.620845-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.338170    3722 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:50.620849-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.345474    3722 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:01:50.620853-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392032    3722 start.go:159] libmachine.API.Create for \"false-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:01:50.620856-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392070    3722 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:01:50.620859-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392228    3722 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:01:50.620863-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392274    3722 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:50.620867-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392293    3722 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:50.620872-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392379    3722 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:01:50.620876-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392406    3722 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:01:50.620879-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392417    3722 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:01:50.620884-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.392947    3722 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:01:50.620887-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.515566    3722 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:01:50.620891-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.562418    3722 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:01:50.620895-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.562423    3722 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:01:50.620899-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.562555    3722 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620903-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.571078    3722 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:50.620906-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.571094    3722 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:50.62091-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.571146    3722 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:01:50.620914-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.578327    3722 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:01:50.620918-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620921-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.578340    3722 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:01:50.620924-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.578359    3722 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620929-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.578364    3722 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:01:50.620933-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.578398    3722 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:2a:3d:31:16:ec -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/false-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:01:50.620939-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.579874    3722 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:01:50.620942-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.579893    3722 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:01:50.620946-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:01:50.620949-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:48.579907    3722 client.go:171] LocalClient.Create took 187.836083ms\n"}
{"Time":"2023-05-31T12:01:50.620953-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:50.582048    3722 start.go:128] duration metric: createHost completed in 2.243879625s\n"}
{"Time":"2023-05-31T12:01:50.620959-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:50.582117    3722 start.go:83] releasing machines lock for \"false-602000\", held for 2.244305458s\n"}
{"Time":"2023-05-31T12:01:50.620964-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:50.582568    3722 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p false-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.620968-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p false-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.620972-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:50.590002    3722 out.go:177] \n"}
{"Time":"2023-05-31T12:01:50.620976-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:50.594332    3722 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.62098-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:01:50.620983-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:50.594371    3722 out.go:239] * \n"}
{"Time":"2023-05-31T12:01:50.620986-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:01:50.62099-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tW0531 12:01:50.596996    3722 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:50.620995-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.621-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:50.621004-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:50.621008-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.621012-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:50.621015-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.621019-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:50.621025-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:01:50.621031-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.621035-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:01:50.621039-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:01:50.621044-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.62105-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:01:50.621053-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:01:50.621058-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:01:50.621063-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \tI0531 12:01:50.607295    3722 out.go:177] \n"}
{"Time":"2023-05-31T12:01:50.621066-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        \n"}
{"Time":"2023-05-31T12:01:50.621069-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:01:50.621074-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:01:50.621084-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    net_test.go:209: \"false\" test finished in 5m13.651441542s, failed=true\n"}
{"Time":"2023-05-31T12:01:52.604417-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:01:52.604429-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        ----------------------- debugLogs start: false-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:01:52.604432-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:52.604434-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604436-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604437-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604438-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:01:52.60444-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604441-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604442-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604443-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:01:52.604445-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604446-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604447-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604448-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:01:52.60445-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604451-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604452-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60446-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:01:52.604461-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604462-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604464-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604465-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:01:52.604466-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604468-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604469-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60447-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:01:52.604471-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604472-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604473-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604475-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:52.604476-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604477-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604479-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60448-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:52.604481-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604483-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604484-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604485-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:52.604486-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604488-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604489-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60449-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:01:52.604491-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604493-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604494-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604495-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604496-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:01:52.604498-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.6045-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604501-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604502-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604504-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:01:52.604505-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604506-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604507-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604509-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60451-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:01:52.604511-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604513-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604514-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604515-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:01:52.604517-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604518-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604526-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604528-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604529-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:01:52.60453-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604532-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604533-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604534-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604535-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:01:52.604537-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604538-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604539-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60454-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:01:52.604542-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604543-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604544-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604545-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:01:52.604546-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604548-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604549-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60455-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:01:52.604551-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604553-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604554-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604555-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:01:52.604557-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604558-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604559-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60456-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:01:52.604563-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604564-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604565-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604566-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:01:52.604568-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604569-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60457-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604571-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:01:52.604573-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604574-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604575-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604576-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:01:52.604578-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.60458-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604581-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604582-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604584-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:01:52.604585-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604586-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604587-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604589-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60459-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:01:52.604592-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604593-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604595-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604609-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604614-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:01:52.604616-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604618-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604619-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604621-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604622-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:01:52.604624-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604625-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604627-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604628-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604629-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:01:52.604631-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604632-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604633-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604635-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:01:52.604637-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604638-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604639-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60464-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:01:52.604642-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        error: context \"false-602000\" does not exist\n"}
{"Time":"2023-05-31T12:01:52.604643-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604644-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604645-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:01:52.604647-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604664-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604666-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604667-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604668-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:01:52.604669-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604671-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604672-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604673-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604675-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:01:52.604676-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604678-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604679-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60468-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604682-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:01:52.604683-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604685-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604686-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604687-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60469-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:01:52.604691-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604693-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604694-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604695-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604697-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:01:52.604698-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:01:52.6047-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:01:52.604701-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:01:52.604702-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:01:52.604704-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:01:52.604705-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:01:52.604707-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        users: null\n"}
{"Time":"2023-05-31T12:01:52.604708-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604709-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604711-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:01:52.604712-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        Error in configuration: context was not found for specified context: false-602000\n"}
{"Time":"2023-05-31T12:01:52.604714-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604715-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604716-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:01:52.604718-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604719-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.60472-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604722-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604723-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:01:52.604724-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604725-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604727-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604728-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604729-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:01:52.60473-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604732-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604733-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604734-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604737-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:01:52.60474-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604741-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604743-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604744-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604745-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:01:52.604746-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604748-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604749-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60475-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604751-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:01:52.604753-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604754-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604755-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604756-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604757-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:01:52.604759-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604767-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604781-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604785-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604787-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:01:52.604789-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604791-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604793-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604794-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604795-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:01:52.604797-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604799-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.6048-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604801-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604803-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:01:52.604804-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604806-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604807-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604808-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.60481-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:01:52.604811-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604813-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604814-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604815-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604819-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:01:52.60482-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604822-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604823-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604824-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604826-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:01:52.604828-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604829-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.60483-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604831-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604833-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:01:52.604834-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604836-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604837-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604838-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604839-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:01:52.604841-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604842-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604843-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604845-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604846-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:01:52.604848-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604849-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.60485-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604852-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604853-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:01:52.604854-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604856-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604857-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604858-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604859-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:01:52.604863-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:01:52.604865-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"          To start a cluster, run: \"minikube start -p false-602000\"\n"}
{"Time":"2023-05-31T12:01:52.604866-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.604868-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        ----------------------- debugLogs end: false-602000 [took: 1.983942208s] --------------------------------\n"}
{"Time":"2023-05-31T12:01:52.604871-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    net_test.go:210: *** TestNetworkPlugins/group/false FAILED at 2023-05-31 12:01:52.604403 -0700 PDT m=+1146.790269501\n"}
{"Time":"2023-05-31T12:01:52.604872-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:01:52.604874-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p false-602000 -n false-602000\n"}
{"Time":"2023-05-31T12:01:52.632928-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p false-602000 -n false-602000: exit status 7 (28.394459ms)\n"}
{"Time":"2023-05-31T12:01:52.632939-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.632941-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:01:52.632943-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:01:52.632944-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        \n"}
{"Time":"2023-05-31T12:01:52.632946-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:01:52.632947-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:01:52.63295-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:241: \"false-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:01:52.632952-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:175: Cleaning up \"false-602000\" profile ...\n"}
{"Time":"2023-05-31T12:01:52.632953-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p false-602000\n"}
{"Time":"2023-05-31T12:01:52.729439-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2023-05-31T12:01:52.729452-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== CONT  TestNetworkPlugins/group/kindnet\n"}
{"Time":"2023-05-31T12:01:52.72947-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/Start"}
{"Time":"2023-05-31T12:01:52.729472-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"=== RUN   TestNetworkPlugins/group/kindnet/Start\n"}
{"Time":"2023-05-31T12:01:52.72951-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p kindnet-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=kindnet --driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:02.519848-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p kindnet-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=kindnet --driver=qemu2 : exit status 80 (9.788354667s)\n"}
{"Time":"2023-05-31T12:02:02.519905-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:02.519915-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:02.519924-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* [kindnet-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:02.519932-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:02.51994-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:02.519948-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:02.519956-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:02.519992-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:02.520019-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:02.520027-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:02.520034-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:02.520041-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Starting control plane node kindnet-602000 in cluster kindnet-602000\n"}
{"Time":"2023-05-31T12:02:02.520049-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:02.520056-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:02.520063-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:02.52007-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520077-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Deleting \"kindnet-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:02.520084-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:02.520091-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:02.520098-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:02.520105-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520111-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520118-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520124-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:02.52013-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:02.520141-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:02:02.52015-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.755679    3845 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:02:02.520157-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.755797    3845 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:02.520165-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.755801    3845 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:02:02.520173-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.755803    3845 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:02.520181-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.755868    3845 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:02:02.520188-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.756954    3845 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:02:02.520197-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.771606    3845 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1883,\"bootTime\":1685557829,\"procs\":407,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:02:02.520217-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:01:52.771663    3845 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:02:02.520225-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.776796    3845 out.go:177] * [kindnet-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:02.520232-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.783592    3845 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:02.520239-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.787728    3845 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:02.520246-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.783642    3845 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:02:02.520253-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.790790    3845 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:02.520261-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.792246    3845 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:02.520268-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.795740    3845 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:02.520275-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.798790    3845 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:02.52029-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.802061    3845 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:02:02.520299-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.802103    3845 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:02:02.520306-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.805723    3845 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:02.520313-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.813143    3845 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:02:02.52032-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.813147    3845 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:02:02.520329-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.813152    3845 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:02:02.520337-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.815042    3845 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:02:02.520347-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.817784    3845 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:02.520355-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.820824    3845 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:02:02.520362-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.820838    3845 cni.go:84] Creating CNI manager for \"kindnet\"\n"}
{"Time":"2023-05-31T12:02:02.52037-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.820841    3845 start_flags.go:314] Found \"CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:02:02.520377-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.820847    3845 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:02:02.520391-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t{Name:kindnet-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:kindnet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker "}
{"Time":"2023-05-31T12:02:02.520404-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:kindnet NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:02:02.520417-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.820922    3845 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:02.520425-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.823664    3845 out.go:177] * Starting control plane node kindnet-602000 in cluster kindnet-602000\n"}
{"Time":"2023-05-31T12:02:02.520432-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831756    3845 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:02:02.52044-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831783    3845 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:02:02.520448-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831792    3845 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:02:02.520456-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831850    3845 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:02:02.520469-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831856    3845 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:02:02.520476-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831913    3845 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kindnet-602000/config.json ...\n"}
{"Time":"2023-05-31T12:02:02.520485-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.831925    3845 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kindnet-602000/config.json: {Name:mkb6101f99d8cdbf265b0b450360fa5a99f2a80f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:02.520494-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.832122    3845 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:02:02.520502-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.832137    3845 start.go:364] acquiring machines lock for kindnet-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:02.52051-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.832170    3845 start.go:368] acquired machines lock for \"kindnet-602000\" in 28.25µs\n"}
{"Time":"2023-05-31T12:02:02.520526-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.832185    3845 start.go:93] Provisioning new machine with config: \u0026{Name:kindnet-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:02.52054-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:kindnet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:kindnet NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Moun"}
{"Time":"2023-05-31T12:02:02.520552-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"tMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:02.520562-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.832229    3845 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:02.520571-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.841431    3845 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:02.520578-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857784    3845 start.go:159] libmachine.API.Create for \"kindnet-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:02.520587-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857815    3845 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:02.520594-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857876    3845 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:02.520602-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857897    3845 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:02.520609-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857906    3845 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:02.520616-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857954    3845 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:02.520624-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857972    3845 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:02.520636-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.857977    3845 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:02.520645-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.858302    3845 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:02.520654-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:52.993425    3845 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:02.520661-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.069906    3845 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:02.520668-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.069914    3845 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:02.520676-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.070061    3845 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.520684-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.078358    3845 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:02.520691-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.078378    3845 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:02.520698-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.078446    3845 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:02.520705-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.085711    3845 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:02.520712-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520719-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.085725    3845 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:02.520726-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.085743    3845 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.520734-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.085751    3845 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:02.520745-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.085791    3845 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=f6:fb:75:a2:c9:27 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.520756-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.087338    3845 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:02.520764-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.087353    3845 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:02.520771-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.520778-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:53.087375    3845 client.go:171] LocalClient.Create took 229.559208ms\n"}
{"Time":"2023-05-31T12:02:02.520785-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:55.089531    3845 start.go:128] duration metric: createHost completed in 2.257317375s\n"}
{"Time":"2023-05-31T12:02:02.520792-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:55.089624    3845 start.go:83] releasing machines lock for \"kindnet-602000\", held for 2.257447458s\n"}
{"Time":"2023-05-31T12:02:02.5208-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:01:55.089692    3845 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.520808-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:55.100812    3845 out.go:177] * Deleting \"kindnet-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:02.520816-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:01:55.118905    3845 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.520825-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.520832-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:01:55.118941    3845 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:02:02.52084-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.121087    3845 start.go:364] acquiring machines lock for kindnet-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:02.520849-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.121584    3845 start.go:368] acquired machines lock for \"kindnet-602000\" in 360.625µs\n"}
{"Time":"2023-05-31T12:02:02.520864-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.121687    3845 start.go:93] Provisioning new machine with config: \u0026{Name:kindnet-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:02.520879-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:kindnet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:kindnet NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Moun"}
{"Time":"2023-05-31T12:02:02.520894-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"tMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:02.520903-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.121925    3845 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:02.520911-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.132006    3845 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:02.520918-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179629    3845 start.go:159] libmachine.API.Create for \"kindnet-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:02.520967-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179665    3845 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:02.520984-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179817    3845 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:02.520994-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179867    3845 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:02.521002-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179887    3845 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:02.521027-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.179974    3845 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:02.521036-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.180006    3845 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:02.521044-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.180023    3845 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:02.521054-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.180670    3845 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:02.521063-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.345982    3845 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:02.521069-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.458147    3845 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:02.521077-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.458153    3845 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:02.521086-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.458285    3845 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.521095-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.466437    3845 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:02.521102-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.466455    3845 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:02.521109-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.466515    3845 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:02.521117-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.473591    3845 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:02.521124-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.521131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.473604    3845 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:02.521139-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.473617    3845 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.521148-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.473624    3845 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:02.521158-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.473659    3845 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=2e:6e:ef:01:48:0c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kindnet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:02.521168-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.475073    3845 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:02.521173-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.475089    3845 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:02.521183-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:02.521189-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:00.475102    3845 client.go:171] LocalClient.Create took 295.414292ms\n"}
{"Time":"2023-05-31T12:02:02.521195-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:02.477308    3845 start.go:128] duration metric: createHost completed in 2.355393417s\n"}
{"Time":"2023-05-31T12:02:02.521202-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:02.477369    3845 start.go:83] releasing machines lock for \"kindnet-602000\", held for 2.355793s\n"}
{"Time":"2023-05-31T12:02:02.521208-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:02:02.477808    3845 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p kindnet-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.521215-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p kindnet-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.521222-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:02.485430    3845 out.go:177] \n"}
{"Time":"2023-05-31T12:02:02.521227-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:02:02.490541    3845 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.521233-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:02.521248-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:02:02.490575    3845 out.go:239] * \n"}
{"Time":"2023-05-31T12:02:02.521253-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:02:02.521259-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tW0531 12:02:02.493260    3845 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:02.521267-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521273-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:02.52128-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:02.521286-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521291-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:02.521297-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521303-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:02.52131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:02.521317-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521323-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:02.521328-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:02.521334-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521339-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:02.521345-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:02.521351-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:02.521357-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \tI0531 12:02:02.504453    3845 out.go:177] \n"}
{"Time":"2023-05-31T12:02:02.521362-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:02.521367-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:02:02.521372-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:02:02.521385-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    net_test.go:209: \"kindnet\" test finished in 5m25.551232875s, failed=true\n"}
{"Time":"2023-05-31T12:02:04.580536-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:02:04.58055-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        ----------------------- debugLogs start: kindnet-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:02:04.580552-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:04.580554-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580556-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580558-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58056-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:02:04.580561-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580563-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580564-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580565-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:04.580567-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580568-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580569-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58057-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:02:04.580572-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580574-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580575-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580823-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:02:04.580828-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.58083-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580953-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580957-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:02:04.58096-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580962-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580963-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580965-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:02:04.580967-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580968-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58097-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580971-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:04.580972-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580976-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580977-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580979-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:04.58098-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580981-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580982-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580984-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:04.580985-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.580986-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580988-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580989-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:04.58099-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.580993-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.580994-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580996-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.580997-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:04.580998-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581003-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581004-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581005-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581007-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:04.581008-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581009-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581011-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581012-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581013-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:02:04.581015-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.581016-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581018-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581019-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:02:04.58102-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581022-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581023-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581024-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581026-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:02:04.581027-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581029-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.58103-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581031-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581033-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:02:04.581035-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581036-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581038-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581039-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:02:04.581041-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581043-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581045-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581046-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:02:04.581048-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.58105-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581051-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581052-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:02:04.581054-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581055-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581056-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581058-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:02:04.581059-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581061-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581062-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581063-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:02:04.581065-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581066-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581067-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581068-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:02:04.58107-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581071-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581072-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581074-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:02:04.581075-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581076-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581078-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58108-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:02:04.581086-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581087-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581089-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58109-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581091-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:02:04.581093-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581094-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581096-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581097-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581098-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:02:04.5811-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581101-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581102-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581104-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581105-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:02:04.581108-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.58111-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581112-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581113-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581114-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:02:04.581116-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581117-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581118-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58112-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581121-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe kindnet daemon set:\n"}
{"Time":"2023-05-31T12:02:04.581123-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.581124-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581125-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581127-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe kindnet pod(s):\n"}
{"Time":"2023-05-31T12:02:04.581128-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.58113-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581133-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: kindnet container(s) logs (current):\n"}
{"Time":"2023-05-31T12:02:04.581135-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581137-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581138-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581139-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: kindnet container(s) logs (previous):\n"}
{"Time":"2023-05-31T12:02:04.581141-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581142-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581143-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581144-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:02:04.581146-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581147-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581148-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58115-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:02:04.581151-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581152-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581154-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581155-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:02:04.581156-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        error: context \"kindnet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:04.581157-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581159-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58116-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:02:04.581162-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581163-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581164-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581166-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581168-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:02:04.58117-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581171-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581173-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581174-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581175-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:02:04.581177-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581178-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581179-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581181-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581182-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:02:04.581183-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581185-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581186-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581187-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581189-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:02:04.58119-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581192-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581193-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581194-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581195-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:02:04.581197-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:02:04.581198-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:02:04.5812-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:02:04.581201-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:02:04.581203-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:02:04.581204-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:02:04.581206-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        users: null\n"}
{"Time":"2023-05-31T12:02:04.581208-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581209-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58121-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:02:04.581212-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        Error in configuration: context was not found for specified context: kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.581213-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581215-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581216-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:02:04.581217-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581219-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.58122-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581222-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581223-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:02:04.581224-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581226-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581227-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581228-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58123-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:02:04.581231-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581232-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581234-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581236-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581237-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:02:04.581238-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.58124-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581241-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581242-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581244-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:02:04.581245-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581247-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581248-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581249-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581251-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:02:04.581253-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581254-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581255-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581257-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581258-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:02:04.58126-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581261-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581263-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581264-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581265-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:02:04.581267-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581268-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581269-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581271-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581272-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:02:04.581274-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581276-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581277-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581278-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58128-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:02:04.581281-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581283-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581284-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581285-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581287-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:02:04.581288-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581289-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581291-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581292-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581293-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:02:04.581295-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581296-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581297-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581299-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.5813-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:02:04.581302-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581304-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581305-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581306-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581308-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:02:04.581309-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.58131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581312-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581313-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581314-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:02:04.581316-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581317-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581318-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.58132-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581321-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:02:04.581323-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581324-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581326-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581328-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581329-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:02:04.581332-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.581333-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581335-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581336-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581337-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:02:04.581339-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:04.58134-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"          To start a cluster, run: \"minikube start -p kindnet-602000\"\n"}
{"Time":"2023-05-31T12:02:04.581342-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.581343-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        ----------------------- debugLogs end: kindnet-602000 [took: 2.060455125s] --------------------------------\n"}
{"Time":"2023-05-31T12:02:04.581348-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    net_test.go:210: *** TestNetworkPlugins/group/kindnet FAILED at 2023-05-31 12:02:04.580522 -0700 PDT m=+1158.766561751\n"}
{"Time":"2023-05-31T12:02:04.581349-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:02:04.581351-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p kindnet-602000 -n kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.61023-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p kindnet-602000 -n kindnet-602000: exit status 7 (29.580209ms)\n"}
{"Time":"2023-05-31T12:02:04.61025-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.610252-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:04.610256-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:02:04.610258-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        \n"}
{"Time":"2023-05-31T12:02:04.61026-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:04.610262-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:02:04.610265-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:241: \"kindnet-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:02:04.610269-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:175: Cleaning up \"kindnet-602000\" profile ...\n"}
{"Time":"2023-05-31T12:02:04.61027-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p kindnet-602000\n"}
{"Time":"2023-05-31T12:02:04.702991-07:00","Action":"cont","Test":"TestNetworkPlugins/group/flannel"}
{"Time":"2023-05-31T12:02:04.703003-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"=== CONT  TestNetworkPlugins/group/flannel\n"}
{"Time":"2023-05-31T12:02:04.703034-07:00","Action":"run","Test":"TestNetworkPlugins/group/flannel/Start"}
{"Time":"2023-05-31T12:02:04.703036-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"=== RUN   TestNetworkPlugins/group/flannel/Start\n"}
{"Time":"2023-05-31T12:02:04.703083-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p flannel-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=flannel --driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:04.956138-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"E0531 12:02:04.956108    1477 cert_rotation.go:168] key failed with : open /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/functional-730000/client.crt: no such file or directory\n"}
{"Time":"2023-05-31T12:02:14.385769-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p flannel-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=flannel --driver=qemu2 : exit status 80 (9.679043458s)\n"}
{"Time":"2023-05-31T12:02:14.385819-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:14.385826-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:14.385831-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* [flannel-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:14.385837-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:14.385843-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:14.385848-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:14.385853-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:14.385859-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:14.385864-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:14.385868-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:14.385873-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:14.385878-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Starting control plane node flannel-602000 in cluster flannel-602000\n"}
{"Time":"2023-05-31T12:02:14.385883-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:14.385888-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:14.385893-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:14.385898-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.385903-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Deleting \"flannel-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:14.385908-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:14.385913-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:14.385917-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:14.385922-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.385927-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.385931-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.385936-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:14.38594-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:14.385945-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:02:14.38595-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.729808    3958 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:02:14.385955-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.729936    3958 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:14.385975-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.729939    3958 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:02:14.38598-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.729941    3958 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:14.385986-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.730019    3958 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:02:14.385993-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.730977    3958 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:02:14.385999-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.746121    3958 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1895,\"bootTime\":1685557829,\"procs\":404,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:02:14.38601-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:04.746182    3958 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:02:14.386016-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.750911    3958 out.go:177] * [flannel-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:14.386021-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.756751    3958 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:14.386026-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.756791    3958 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:02:14.386031-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.760857    3958 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:14.386037-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.763978    3958 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:14.386042-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.766822    3958 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:14.386047-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.769833    3958 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:14.386052-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.772857    3958 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:14.386057-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.774500    3958 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:02:14.386063-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.774555    3958 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:02:14.386068-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.778828    3958 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:14.386074-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.785696    3958 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:02:14.386078-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.785700    3958 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:02:14.386085-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.785705    3958 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:02:14.386091-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.787525    3958 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:02:14.386097-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.790772    3958 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:14.386103-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.793884    3958 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:02:14.386108-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.793899    3958 cni.go:84] Creating CNI manager for \"flannel\"\n"}
{"Time":"2023-05-31T12:02:14.386114-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.793906    3958 start_flags.go:314] Found \"Flannel\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:02:14.386119-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.793912    3958 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:02:14.386129-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t{Name:flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker "}
{"Time":"2023-05-31T12:02:14.386147-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:flannel NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:02:14.386156-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.794010    3958 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:14.386162-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.801824    3958 out.go:177] * Starting control plane node flannel-602000 in cluster flannel-602000\n"}
{"Time":"2023-05-31T12:02:14.386167-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805837    3958 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:02:14.386172-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805856    3958 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:02:14.386178-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805865    3958 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:02:14.386184-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805913    3958 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:02:14.386192-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805918    3958 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:02:14.386197-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.805992    3958 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/flannel-602000/config.json ...\n"}
{"Time":"2023-05-31T12:02:14.386203-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806003    3958 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/flannel-602000/config.json: {Name:mk54b79f11014237bb64842e55c816e933b67ad0 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:14.386215-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806195    3958 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:02:14.386221-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806208    3958 start.go:364] acquiring machines lock for flannel-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:14.386227-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806235    3958 start.go:368] acquired machines lock for \"flannel-602000\" in 22.375µs\n"}
{"Time":"2023-05-31T12:02:14.386238-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806246    3958 start.go:93] Provisioning new machine with config: \u0026{Name:flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:14.386248-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:flannel NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Moun"}
{"Time":"2023-05-31T12:02:14.386266-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"tMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:14.386278-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.806277    3958 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:14.386284-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.814882    3958 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:14.386289-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831432    3958 start.go:159] libmachine.API.Create for \"flannel-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:14.386296-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831461    3958 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:14.386302-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831523    3958 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:14.386307-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831541    3958 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:14.386313-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831552    3958 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:14.386318-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831603    3958 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:14.386323-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831617    3958 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:14.386329-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831627    3958 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:14.386335-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.831977    3958 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:14.386341-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.935866    3958 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:14.386346-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.982981    3958 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:14.386353-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.982987    3958 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:14.386359-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.983131    3958 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.386366-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.991447    3958 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:14.386371-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.991462    3958 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:14.386376-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.991528    3958 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:14.386381-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.998785    3958 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:14.386386-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.38639-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.998804    3958 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:14.386396-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.998820    3958 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.386402-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.998825    3958 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:14.386409-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:04.998855    3958 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=36:5a:34:a0:8b:4a -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.386418-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:05.000317    3958 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:14.386423-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:05.000338    3958 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:14.386428-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.386433-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:05.000357    3958 client.go:171] LocalClient.Create took 168.892958ms\n"}
{"Time":"2023-05-31T12:02:14.386438-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:07.002516    3958 start.go:128] duration metric: createHost completed in 2.196253s\n"}
{"Time":"2023-05-31T12:02:14.386443-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:07.002785    3958 start.go:83] releasing machines lock for \"flannel-602000\", held for 2.196374917s\n"}
{"Time":"2023-05-31T12:02:14.386449-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:07.002842    3958 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386455-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:07.009998    3958 out.go:177] * Deleting \"flannel-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:14.386461-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:07.033525    3958 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386467-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386472-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:07.033601    3958 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:02:14.386477-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.035828    3958 start.go:364] acquiring machines lock for flannel-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:14.386483-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.036297    3958 start.go:368] acquired machines lock for \"flannel-602000\" in 365.792µs\n"}
{"Time":"2023-05-31T12:02:14.386494-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.036401    3958 start.go:93] Provisioning new machine with config: \u0026{Name:flannel-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:14.386504-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:flannel-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:flannel NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Moun"}
{"Time":"2023-05-31T12:02:14.386512-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"tMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:14.386518-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.036672    3958 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:14.386524-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.044087    3958 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:14.386529-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094320    3958 start.go:159] libmachine.API.Create for \"flannel-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:14.386534-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094372    3958 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:14.386539-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094494    3958 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:14.386544-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094539    3958 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:14.38655-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094556    3958 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:14.386555-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094626    3958 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:14.38656-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094655    3958 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:14.386565-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.094670    3958 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:14.386571-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.095194    3958 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:14.386577-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.211527    3958 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:14.386582-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.325743    3958 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:14.386587-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.325749    3958 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:14.386593-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.325893    3958 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.386599-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.334193    3958 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:14.386604-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.334210    3958 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:14.386609-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.334264    3958 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:14.386614-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.341231    3958 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:14.386619-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.386624-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.341246    3958 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:14.386629-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.341263    3958 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.386635-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.341272    3958 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:14.386642-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.341307    3958 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=52:a4:8a:18:03:82 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/flannel-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:14.38665-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.342855    3958 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:14.386655-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.342869    3958 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:14.38666-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:14.386665-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:12.342879    3958 client.go:171] LocalClient.Create took 248.504208ms\n"}
{"Time":"2023-05-31T12:02:14.38667-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:14.344991    3958 start.go:128] duration metric: createHost completed in 2.308330459s\n"}
{"Time":"2023-05-31T12:02:14.386675-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:14.345074    3958 start.go:83] releasing machines lock for \"flannel-602000\", held for 2.30875975s\n"}
{"Time":"2023-05-31T12:02:14.386681-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:14.345312    3958 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p flannel-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386688-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p flannel-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386693-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:14.353592    3958 out.go:177] \n"}
{"Time":"2023-05-31T12:02:14.386699-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:14.357315    3958 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.386705-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:14.38671-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:14.357346    3958 out.go:239] * \n"}
{"Time":"2023-05-31T12:02:14.386715-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:02:14.386721-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tW0531 12:02:14.359694    3958 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:14.386728-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386734-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:14.386741-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:14.386748-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386753-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:14.386758-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386764-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:14.386771-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:14.386778-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386783-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:14.386788-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:14.386793-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386798-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:14.386803-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:14.386809-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:14.386815-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \tI0531 12:02:14.368483    3958 out.go:177] \n"}
{"Time":"2023-05-31T12:02:14.38682-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:14.386824-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:02:14.386829-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:02:14.38684-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    net_test.go:209: \"flannel\" test finished in 5m37.417703s, failed=true\n"}
{"Time":"2023-05-31T12:02:16.533082-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:02:16.533094-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        ----------------------- debugLogs start: flannel-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:02:16.533097-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:16.533099-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.5331-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533102-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533103-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:02:16.533104-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533106-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533107-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533109-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:16.53311-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533111-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53312-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533121-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:02:16.533123-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533124-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533125-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533127-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:02:16.533128-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533131-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533132-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533133-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:02:16.533135-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533136-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533137-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533138-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:02:16.53314-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533141-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533142-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533143-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:16.533145-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533146-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533147-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533148-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:16.53315-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533151-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533152-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533154-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:16.533155-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533156-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533158-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533159-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:16.53316-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533162-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533163-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533164-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533166-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:16.533167-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533168-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.53317-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533171-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533172-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:16.533173-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533175-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533176-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533177-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533178-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:02:16.53318-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533181-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533216-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53322-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:02:16.533222-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533224-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533225-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533227-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533228-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:02:16.53323-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533231-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533233-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533234-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533235-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:02:16.533237-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533238-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53324-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533241-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:02:16.533243-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533244-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533245-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533246-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:02:16.533248-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533249-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53325-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533252-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:02:16.533253-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533254-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533255-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533256-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:02:16.533258-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533269-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53327-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533272-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:02:16.533273-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533274-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533276-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533277-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:02:16.533278-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.53328-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533281-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533282-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:02:16.533283-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533285-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533286-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533287-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:02:16.533289-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.53329-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533291-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533292-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533294-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:02:16.533295-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533297-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533299-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.5333-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533301-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:02:16.533302-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533307-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533308-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533309-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533311-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:02:16.533312-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533313-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533314-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533316-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533317-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:02:16.533318-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533319-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533321-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533322-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533323-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe flannel daemon set:\n"}
{"Time":"2023-05-31T12:02:16.533324-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533326-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533328-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533329-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe flannel pod(s):\n"}
{"Time":"2023-05-31T12:02:16.533331-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533332-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533333-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533334-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: flannel container(s) logs (current):\n"}
{"Time":"2023-05-31T12:02:16.533336-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533337-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533338-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533339-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: flannel container(s) logs (previous):\n"}
{"Time":"2023-05-31T12:02:16.53334-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533342-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533343-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533344-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /run/flannel/subnet.env:\n"}
{"Time":"2023-05-31T12:02:16.533345-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533347-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533348-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533349-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53335-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/kube-flannel/cni-conf.json:\n"}
{"Time":"2023-05-31T12:02:16.533354-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533356-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533357-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533359-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533361-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:02:16.533362-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533363-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533365-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533366-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:02:16.533367-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533369-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53337-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533371-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:02:16.533373-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        error: context \"flannel-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:16.533375-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533376-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533377-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:02:16.533378-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.53338-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533381-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533382-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533384-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:02:16.533385-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533387-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533388-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53339-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533391-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:02:16.533392-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533394-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533395-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533396-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533397-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:02:16.533399-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.5334-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533401-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533402-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533404-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:02:16.533405-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533407-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533408-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533409-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53341-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:02:16.533414-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:02:16.533415-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:02:16.533417-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:02:16.533418-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:02:16.533419-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:02:16.533421-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:02:16.533422-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        users: null\n"}
{"Time":"2023-05-31T12:02:16.533423-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533424-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533425-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:02:16.533427-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        Error in configuration: context was not found for specified context: flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.533428-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53343-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533431-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:02:16.533432-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533434-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533436-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533437-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533438-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:02:16.53344-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533441-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533442-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533444-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533445-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:02:16.533446-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533448-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.53345-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533451-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533452-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:02:16.533453-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533455-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533456-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533458-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533459-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:02:16.533461-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533462-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533463-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533465-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533466-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:02:16.533468-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533469-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.53347-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533472-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533473-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:02:16.533474-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533476-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533477-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533479-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53348-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:02:16.533482-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533483-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533484-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533486-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533487-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:02:16.533488-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.53349-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533491-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533492-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533493-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:02:16.533495-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533496-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533497-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533499-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.5335-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:02:16.533502-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533503-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533504-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533506-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533507-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:02:16.533508-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.53351-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533511-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533513-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533514-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:02:16.533515-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533517-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533518-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533519-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53352-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:02:16.533522-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533523-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533525-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533526-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533527-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:02:16.533528-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.53353-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533533-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533535-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533536-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:02:16.533538-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533539-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.53354-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533542-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533543-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:02:16.533545-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533547-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533548-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.53355-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533551-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:02:16.533553-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:16.533554-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"          To start a cluster, run: \"minikube start -p flannel-602000\"\n"}
{"Time":"2023-05-31T12:02:16.533555-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.533557-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        ----------------------- debugLogs end: flannel-602000 [took: 2.146684542s] --------------------------------\n"}
{"Time":"2023-05-31T12:02:16.53356-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    net_test.go:210: *** TestNetworkPlugins/group/flannel FAILED at 2023-05-31 12:02:16.533066 -0700 PDT m=+1170.719278251\n"}
{"Time":"2023-05-31T12:02:16.533561-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:02:16.533568-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p flannel-602000 -n flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.561307-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p flannel-602000 -n flannel-602000: exit status 7 (28.101875ms)\n"}
{"Time":"2023-05-31T12:02:16.56132-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.561322-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:16.561324-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:02:16.561325-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        \n"}
{"Time":"2023-05-31T12:02:16.561326-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:16.561327-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:02:16.561329-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:241: \"flannel-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:02:16.561331-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:175: Cleaning up \"flannel-602000\" profile ...\n"}
{"Time":"2023-05-31T12:02:16.561333-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p flannel-602000\n"}
{"Time":"2023-05-31T12:02:16.652022-07:00","Action":"cont","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2023-05-31T12:02:16.652034-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== CONT  TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2023-05-31T12:02:16.652062-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/Start"}
{"Time":"2023-05-31T12:02:16.652063-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/Start\n"}
{"Time":"2023-05-31T12:02:16.652118-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p enable-default-cni-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --enable-default-cni=true --driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:26.467027-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p enable-default-cni-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --enable-default-cni=true --driver=qemu2 : exit status 80 (9.813085s)\n"}
{"Time":"2023-05-31T12:02:26.467085-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:26.467093-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:26.467102-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* [enable-default-cni-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:26.46711-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:26.467117-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:26.467145-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:26.467153-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:26.46716-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:26.467169-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:26.467175-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:26.467183-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:26.46719-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Starting control plane node enable-default-cni-602000 in cluster enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:26.467197-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:26.467204-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:26.467211-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:26.467217-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.467224-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Deleting \"enable-default-cni-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:26.467231-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:26.467238-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:26.467244-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:26.467251-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.467258-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.467264-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.46727-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:26.467277-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:26.467283-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:02:26.46729-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.678245    4080 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:02:26.467297-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.678588    4080 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:26.467304-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.678592    4080 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:02:26.467311-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.678594    4080 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:26.467318-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.678693    4080 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:02:26.467326-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.680250    4080 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:02:26.467334-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.695432    4080 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1907,\"bootTime\":1685557829,\"procs\":402,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:02:26.467347-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:16.695490    4080 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:02:26.467355-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.700449    4080 out.go:177] * [enable-default-cni-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:26.467362-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.706265    4080 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:26.467368-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.706313    4080 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:02:26.467381-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.710332    4080 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:26.467388-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.713382    4080 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:26.467395-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.716307    4080 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:26.467403-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.719339    4080 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:26.46741-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.722345    4080 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:26.467418-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.724030    4080 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:02:26.467426-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.724082    4080 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:02:26.467433-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.728244    4080 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:26.467444-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.735204    4080 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:02:26.467451-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.735208    4080 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:02:26.46746-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.735212    4080 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:02:26.467469-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.737051    4080 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:02:26.467477-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.740334    4080 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:26.467485-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tE0531 12:02:16.743418    4080 start_flags.go:453] Found deprecated --enable-default-cni flag, setting --cni=bridge\n"}
{"Time":"2023-05-31T12:02:26.467492-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.743426    4080 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:02:26.467501-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.743438    4080 cni.go:84] Creating CNI manager for \"bridge\"\n"}
{"Time":"2023-05-31T12:02:26.467509-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.743442    4080 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:02:26.467516-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.743448    4080 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:02:26.46753-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t{Name:enable-default-cni-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:enable-default-cni-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Co"}
{"Time":"2023-05-31T12:02:26.467545-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"ntainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet Sta"}
{"Time":"2023-05-31T12:02:26.467556-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"ticIP:}\n"}
{"Time":"2023-05-31T12:02:26.467563-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.743537    4080 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:26.467571-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.746324    4080 out.go:177] * Starting control plane node enable-default-cni-602000 in cluster enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:26.467578-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754330    4080 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:02:26.467586-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754350    4080 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:02:26.467593-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754363    4080 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:02:26.467601-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754410    4080 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:02:26.467609-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754415    4080 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:02:26.467617-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754470    4080 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/enable-default-cni-602000/config.json ...\n"}
{"Time":"2023-05-31T12:02:26.467625-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754482    4080 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/enable-default-cni-602000/config.json: {Name:mkff4cc599827de4e5b99eb9ad0e06ff07b84e9b Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:26.467634-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754668    4080 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:02:26.467642-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754681    4080 start.go:364] acquiring machines lock for enable-default-cni-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:26.467651-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754708    4080 start.go:368] acquired machines lock for \"enable-default-cni-602000\" in 22.25µs\n"}
{"Time":"2023-05-31T12:02:26.467668-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754721    4080 start.go:93] Provisioning new machine with config: \u0026{Name:enable-default-cni-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T12:02:26.467682-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"ernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:enable-default-cni-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID"}
{"Time":"2023-05-31T12:02:26.467694-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":":docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:26.467702-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.754749    4080 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:26.46771-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.763397    4080 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:26.467718-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780057    4080 start.go:159] libmachine.API.Create for \"enable-default-cni-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:26.467725-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780082    4080 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:26.467733-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780141    4080 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:26.46774-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780162    4080 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:26.467747-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780172    4080 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:26.467756-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780219    4080 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:26.467763-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780233    4080 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:26.46777-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780243    4080 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:26.467778-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.780583    4080 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:26.467787-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.888472    4080 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:26.467795-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.940270    4080 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:26.467802-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.940276    4080 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:26.46781-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.940422    4080 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.467818-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.948943    4080 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:26.467825-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.948957    4080 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:26.467832-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.949019    4080 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:26.46784-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.956095    4080 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:26.467846-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.467854-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.956108    4080 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:26.467862-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.956120    4080 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.46787-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.956125    4080 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:26.467881-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.956160    4080 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=c6:47:0b:cd:a0:4c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.467892-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.957586    4080 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:26.467899-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.957601    4080 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:26.467906-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.467913-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:16.957619    4080 client.go:171] LocalClient.Create took 177.535333ms\n"}
{"Time":"2023-05-31T12:02:26.46792-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:18.959814    4080 start.go:128] duration metric: createHost completed in 2.205065375s\n"}
{"Time":"2023-05-31T12:02:26.467927-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:18.959891    4080 start.go:83] releasing machines lock for \"enable-default-cni-602000\", held for 2.205204583s\n"}
{"Time":"2023-05-31T12:02:26.467936-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:18.959946    4080 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.467944-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:18.971220    4080 out.go:177] * Deleting \"enable-default-cni-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:26.467952-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:18.993313    4080 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.467961-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.468124-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:18.993355    4080 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:02:26.468142-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:23.995521    4080 start.go:364] acquiring machines lock for enable-default-cni-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:26.468152-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:23.996063    4080 start.go:368] acquired machines lock for \"enable-default-cni-602000\" in 435.25µs\n"}
{"Time":"2023-05-31T12:02:26.468167-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:23.996167    4080 start.go:93] Provisioning new machine with config: \u0026{Name:enable-default-cni-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T12:02:26.468209-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"ernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:enable-default-cni-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID"}
{"Time":"2023-05-31T12:02:26.468223-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":":docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:26.468232-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:23.996456    4080 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:26.46824-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.006214    4080 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:26.468248-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053549    4080 start.go:159] libmachine.API.Create for \"enable-default-cni-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:26.468256-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053602    4080 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:26.468265-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053753    4080 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:26.468272-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053808    4080 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:26.46828-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053828    4080 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:26.468287-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053912    4080 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:26.468294-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053942    4080 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:26.468302-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.053959    4080 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:26.46831-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.054502    4080 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:26.468318-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.175744    4080 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:26.468326-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.407080    4080 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:26.468333-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.407091    4080 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:26.468341-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.407248    4080 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.46835-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.415622    4080 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:26.468357-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.415638    4080 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:26.468365-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.415687    4080 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:26.468373-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.422797    4080 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:26.46838-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.468387-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.422817    4080 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:26.468396-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.422833    4080 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.468404-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.422847    4080 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:26.468416-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.422889    4080 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=06:5b:b1:13:55:f7 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/enable-default-cni-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:26.468427-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.424352    4080 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:26.468435-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.424367    4080 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:26.468464-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:26.468472-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:24.424381    4080 client.go:171] LocalClient.Create took 370.776458ms\n"}
{"Time":"2023-05-31T12:02:26.468479-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:26.426515    4080 start.go:128] duration metric: createHost completed in 2.430068625s\n"}
{"Time":"2023-05-31T12:02:26.468569-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:26.426580    4080 start.go:83] releasing machines lock for \"enable-default-cni-602000\", held for 2.4305285s\n"}
{"Time":"2023-05-31T12:02:26.468588-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:26.427010    4080 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p enable-default-cni-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.468597-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p enable-default-cni-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.468604-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:26.433396    4080 out.go:177] \n"}
{"Time":"2023-05-31T12:02:26.468611-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:26.438696    4080 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.468618-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:26.468624-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:26.438740    4080 out.go:239] * \n"}
{"Time":"2023-05-31T12:02:26.46863-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:02:26.468638-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tW0531 12:02:26.441092    4080 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:26.468646-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.468652-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:26.468658-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:26.468663-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.468669-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:26.468674-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.468681-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:26.468689-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:26.468696-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.468702-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:26.468707-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:26.468712-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.468718-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:26.468724-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:26.46873-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:26.468741-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \tI0531 12:02:26.451731    4080 out.go:177] \n"}
{"Time":"2023-05-31T12:02:26.468746-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:26.468751-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:02:26.468756-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:02:26.468771-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    net_test.go:209: \"enable-default-cni\" test finished in 5m49.498774459s, failed=true\n"}
{"Time":"2023-05-31T12:02:28.420453-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:02:28.420466-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        ----------------------- debugLogs start: enable-default-cni-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:02:28.420471-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:28.420474-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420476-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420477-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420479-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:02:28.420481-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420483-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420484-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420486-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:28.420487-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420488-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420489-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420491-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:02:28.420492-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420493-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420494-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420496-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:02:28.420497-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420498-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420499-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420501-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:02:28.420502-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420503-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420504-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420506-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:02:28.420507-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420508-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420509-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420511-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:28.420513-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420514-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420515-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420516-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:28.420518-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420519-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420521-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420522-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:28.420523-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420525-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420526-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420527-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:28.420529-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.42053-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420532-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420533-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420534-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:28.420535-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420537-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420538-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420539-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420541-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:28.420542-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420543-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420545-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420546-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420547-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:02:28.420549-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.42055-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420551-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420553-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:02:28.420554-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420555-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420557-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420558-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420559-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:02:28.42056-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420562-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420563-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420571-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420572-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:02:28.420573-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420575-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420576-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420577-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:02:28.420578-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.42058-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420581-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420582-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:02:28.420584-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420585-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420586-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420587-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:02:28.420588-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.42059-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420591-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420592-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:02:28.420593-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420595-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420597-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420598-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:02:28.4206-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420601-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420602-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420604-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:02:28.420605-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420607-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420608-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420609-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:02:28.420611-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420612-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420613-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420614-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:02:28.420626-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420631-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420633-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420635-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420636-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:02:28.420638-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.42064-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420641-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420643-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420644-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:02:28.420646-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420647-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420648-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.42065-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420651-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:02:28.420652-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420654-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420656-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420658-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420659-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:02:28.42066-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420662-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420663-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420664-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420665-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:02:28.420667-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420668-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.42067-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420671-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:02:28.420672-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420674-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420675-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420677-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:02:28.420678-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        error: context \"enable-default-cni-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:28.420679-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420681-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420683-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:02:28.420685-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420686-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420688-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420689-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.42069-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:02:28.420692-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420693-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420694-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420696-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420697-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:02:28.420698-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.4207-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420701-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420703-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420704-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:02:28.420706-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420707-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420709-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420711-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420712-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:02:28.420713-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420715-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420716-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420717-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420718-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:02:28.42072-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:02:28.420721-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:02:28.420723-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:02:28.420724-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:02:28.420725-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:02:28.420727-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:02:28.420728-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        users: null\n"}
{"Time":"2023-05-31T12:02:28.42073-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420732-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420733-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:02:28.420734-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        Error in configuration: context was not found for specified context: enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.420736-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420737-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420739-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:02:28.42074-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420742-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420743-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420744-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420745-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:02:28.420747-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420748-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420749-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420751-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420752-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:02:28.420753-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420755-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420756-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420757-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420759-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:02:28.420761-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420762-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420763-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420765-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420767-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:02:28.420769-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.42077-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420772-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420773-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420775-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:02:28.420776-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420777-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420779-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.42078-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420781-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:02:28.420783-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420785-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420786-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420787-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420789-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:02:28.42079-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420792-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420793-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420794-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420796-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:02:28.420797-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420798-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.4208-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420801-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420802-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:02:28.420804-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420805-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420807-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420808-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420809-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:02:28.420811-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420812-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420813-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420814-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420816-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:02:28.420817-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420818-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.42082-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420821-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420822-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:02:28.420823-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420825-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420827-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420828-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420829-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:02:28.420831-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420832-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420833-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420834-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420836-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:02:28.420837-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420839-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.42084-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420841-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420843-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:02:28.420844-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420846-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420847-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420848-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.42085-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:02:28.420851-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.420852-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420854-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420855-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420857-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:02:28.420858-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:28.42086-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"          To start a cluster, run: \"minikube start -p enable-default-cni-602000\"\n"}
{"Time":"2023-05-31T12:02:28.420861-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.420862-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        ----------------------- debugLogs end: enable-default-cni-602000 [took: 1.953184917s] --------------------------------\n"}
{"Time":"2023-05-31T12:02:28.420866-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    net_test.go:210: *** TestNetworkPlugins/group/enable-default-cni FAILED at 2023-05-31 12:02:28.42044 -0700 PDT m=+1182.606823501\n"}
{"Time":"2023-05-31T12:02:28.420868-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:02:28.420869-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p enable-default-cni-602000 -n enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.448437-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p enable-default-cni-602000 -n enable-default-cni-602000: exit status 7 (27.860292ms)\n"}
{"Time":"2023-05-31T12:02:28.44845-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.448452-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:28.448454-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:02:28.448456-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        \n"}
{"Time":"2023-05-31T12:02:28.448458-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:28.448459-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:02:28.448461-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:241: \"enable-default-cni-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:02:28.448464-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:175: Cleaning up \"enable-default-cni-602000\" profile ...\n"}
{"Time":"2023-05-31T12:02:28.448469-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p enable-default-cni-602000\n"}
{"Time":"2023-05-31T12:02:28.542537-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2023-05-31T12:02:28.54255-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== CONT  TestNetworkPlugins/group/bridge\n"}
{"Time":"2023-05-31T12:02:28.542585-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/Start"}
{"Time":"2023-05-31T12:02:28.542589-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"=== RUN   TestNetworkPlugins/group/bridge/Start\n"}
{"Time":"2023-05-31T12:02:28.542649-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p bridge-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=bridge --driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:38.279842-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p bridge-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --cni=bridge --driver=qemu2 : exit status 80 (9.735262125s)\n"}
{"Time":"2023-05-31T12:02:38.279943-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:38.279953-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:38.27996-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* [bridge-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:38.279968-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:38.279976-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:38.279984-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:38.279992-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:38.279999-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:38.280005-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:38.280012-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:38.280019-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:38.280026-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Starting control plane node bridge-602000 in cluster bridge-602000\n"}
{"Time":"2023-05-31T12:02:38.280033-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:38.280046-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:38.280053-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:38.28006-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.280067-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Deleting \"bridge-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:38.280074-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:38.280081-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:38.280087-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:38.280094-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.2801-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.280106-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.280112-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:38.280118-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:38.280124-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:02:38.280133-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.569185    4192 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:02:38.280141-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.569306    4192 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:38.280148-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.569309    4192 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:02:38.280155-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.569311    4192 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:38.280162-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.569377    4192 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:02:38.28017-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.570433    4192 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:02:38.280178-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.585525    4192 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1919,\"bootTime\":1685557829,\"procs\":399,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:02:38.280192-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:28.585586    4192 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:02:38.280199-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.590842    4192 out.go:177] * [bridge-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:38.280205-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.597683    4192 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:38.280213-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.601842    4192 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:38.28022-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.597726    4192 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:02:38.280227-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.606170    4192 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:38.280234-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.608828    4192 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:38.280241-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.611801    4192 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:38.280248-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.614860    4192 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:38.280255-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.618163    4192 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:02:38.280266-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.618213    4192 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:02:38.280274-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.622859    4192 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:38.28028-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.629757    4192 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:02:38.280287-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.629761    4192 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:02:38.280295-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.629766    4192 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:02:38.280303-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.631617    4192 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:02:38.280313-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.634838    4192 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:38.28032-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.637957    4192 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:02:38.280328-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.637971    4192 cni.go:84] Creating CNI manager for \"bridge\"\n"}
{"Time":"2023-05-31T12:02:38.280336-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.637974    4192 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:02:38.280343-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.637980    4192 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:02:38.280359-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t{Name:bridge-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:bridge-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CR"}
{"Time":"2023-05-31T12:02:38.280378-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"ISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:02:38.28039-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.638354    4192 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:38.280398-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.642794    4192 out.go:177] * Starting control plane node bridge-602000 in cluster bridge-602000\n"}
{"Time":"2023-05-31T12:02:38.280406-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649770    4192 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:02:38.280413-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649794    4192 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:02:38.280421-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649809    4192 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:02:38.280429-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649865    4192 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:02:38.28044-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649871    4192 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:02:38.280448-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649928    4192 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/bridge-602000/config.json ...\n"}
{"Time":"2023-05-31T12:02:38.280456-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.649941    4192 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/bridge-602000/config.json: {Name:mk14488749276ef558d7918d9540b3ad0816a23c Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:38.280563-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.650137    4192 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:02:38.280584-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.650151    4192 start.go:364] acquiring machines lock for bridge-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:38.280593-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.650181    4192 start.go:368] acquired machines lock for \"bridge-602000\" in 25.083µs\n"}
{"Time":"2023-05-31T12:02:38.280609-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.650197    4192 start.go:93] Provisioning new machine with config: \u0026{Name:bridge-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T12:02:38.280622-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:bridge-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:02:38.280635-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:38.280644-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.650234    4192 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:38.280653-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.657764    4192 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:38.28066-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674540    4192 start.go:159] libmachine.API.Create for \"bridge-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:38.280671-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674571    4192 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:38.280679-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674638    4192 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:38.280687-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674657    4192 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:38.280694-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674666    4192 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:38.280701-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674716    4192 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:38.280709-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674731    4192 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:38.280716-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.674740    4192 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:38.280725-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.675064    4192 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:38.280733-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.797301    4192 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:38.28074-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.907063    4192 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:38.280747-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.907069    4192 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:38.280755-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.907205    4192 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.280766-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.915630    4192 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:38.280772-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.915645    4192 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:38.28078-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.915696    4192 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:38.280788-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.922693    4192 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:38.280797-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.280804-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.922710    4192 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:38.280811-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.922724    4192 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.280819-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.922729    4192 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:38.28083-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.922759    4192 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=5a:2c:6a:0b:cf:3f -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.280841-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.924173    4192 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:38.280849-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.924184    4192 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:38.280856-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.280862-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:28.924201    4192 client.go:171] LocalClient.Create took 249.629875ms\n"}
{"Time":"2023-05-31T12:02:38.28087-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:30.926363    4192 start.go:128] duration metric: createHost completed in 2.276144875s\n"}
{"Time":"2023-05-31T12:02:38.280877-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:30.926429    4192 start.go:83] releasing machines lock for \"bridge-602000\", held for 2.276272083s\n"}
{"Time":"2023-05-31T12:02:38.280885-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:30.926481    4192 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.280893-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:30.932750    4192 out.go:177] * Deleting \"bridge-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:38.280901-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:30.951604    4192 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.280909-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.280917-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:30.951639    4192 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:02:38.280924-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:35.953757    4192 start.go:364] acquiring machines lock for bridge-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:38.280934-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:35.954276    4192 start.go:368] acquired machines lock for \"bridge-602000\" in 396.5µs\n"}
{"Time":"2023-05-31T12:02:38.280953-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:35.954371    4192 start.go:93] Provisioning new machine with config: \u0026{Name:bridge-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfi"}
{"Time":"2023-05-31T12:02:38.280967-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"g:{KubernetesVersion:v1.27.2 ClusterName:bridge-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:bridge NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:02:38.280979-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:38.280987-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:35.954644    4192 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:38.280995-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:35.962037    4192 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:38.281002-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009311    4192 start.go:159] libmachine.API.Create for \"bridge-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:38.28101-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009355    4192 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:38.281018-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009510    4192 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:38.281026-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009561    4192 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:38.281033-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009578    4192 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:38.28104-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009658    4192 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:38.281048-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009686    4192 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:38.281056-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.009702    4192 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:38.281064-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.010276    4192 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:38.281071-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.133481    4192 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:38.281079-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.218435    4192 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:38.281087-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.218440    4192 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:38.281095-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.218592    4192 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.281104-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.227262    4192 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:38.281111-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.227277    4192 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:38.281118-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.227337    4192 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:38.281125-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.234420    4192 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:38.281132-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.281138-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.234433    4192 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:38.281146-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.234449    4192 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.281154-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.234455    4192 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:38.281164-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.234494    4192 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=46:8f:37:c0:b9:50 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/bridge-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:38.281176-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.236043    4192 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:38.281183-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.236061    4192 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:38.281191-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:38.281197-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:36.236075    4192 client.go:171] LocalClient.Create took 226.717083ms\n"}
{"Time":"2023-05-31T12:02:38.281205-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:38.238328    4192 start.go:128] duration metric: createHost completed in 2.283669875s\n"}
{"Time":"2023-05-31T12:02:38.281212-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:38.238410    4192 start.go:83] releasing machines lock for \"bridge-602000\", held for 2.284144959s\n"}
{"Time":"2023-05-31T12:02:38.281218-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:38.238824    4192 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p bridge-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.281226-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p bridge-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.281232-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:38.249361    4192 out.go:177] \n"}
{"Time":"2023-05-31T12:02:38.281239-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:38.253581    4192 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.281245-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:38.28125-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:38.253604    4192 out.go:239] * \n"}
{"Time":"2023-05-31T12:02:38.281256-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:02:38.281261-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tW0531 12:02:38.256125    4192 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:38.281269-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.281274-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:38.28128-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:38.281285-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.28129-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:38.281296-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.281302-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:38.281309-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:38.281318-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.281323-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:38.281329-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:38.281334-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.281339-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:38.281344-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:38.28135-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:38.281356-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \tI0531 12:02:38.264479    4192 out.go:177] \n"}
{"Time":"2023-05-31T12:02:38.281361-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:38.281366-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:02:38.28137-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:02:38.281384-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    net_test.go:209: \"bridge\" test finished in 6m1.311744s, failed=true\n"}
{"Time":"2023-05-31T12:02:40.269623-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:02:40.269636-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        ----------------------- debugLogs start: bridge-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:02:40.269638-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:40.26964-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269642-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269643-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269645-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:02:40.269646-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269648-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269649-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26965-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:40.269651-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269653-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269654-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269655-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:02:40.269657-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269658-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269659-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26966-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:02:40.269662-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269663-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269664-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269666-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:02:40.269667-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269668-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269669-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269671-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:02:40.269672-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269676-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269677-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269678-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:40.26968-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269681-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269682-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269683-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:40.269685-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269686-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269687-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269688-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:40.26969-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269691-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269692-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269693-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:40.269695-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269696-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269698-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269699-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.2697-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:40.269701-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269703-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269704-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269705-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269706-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:40.269708-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269709-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269711-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269712-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269713-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:02:40.269742-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269747-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269749-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269751-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:02:40.269754-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269756-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269758-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269759-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26976-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:02:40.269762-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269764-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269765-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269766-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269768-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:02:40.269769-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269771-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269772-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269773-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:02:40.269774-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269776-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269777-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269778-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:02:40.2698-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269801-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269803-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269804-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:02:40.269806-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269807-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269808-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26981-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:02:40.269811-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269813-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269814-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269816-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:02:40.269818-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269819-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26982-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269822-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:02:40.269823-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269824-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269826-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269827-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:02:40.269828-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.26983-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269831-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269832-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:02:40.269834-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269835-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269837-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269838-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269839-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:02:40.269872-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269876-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269878-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269879-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269881-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:02:40.269882-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269883-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269885-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269886-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269888-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:02:40.269889-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269892-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269894-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269895-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269896-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:02:40.269898-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.2699-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269901-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269902-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269903-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:02:40.269905-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269906-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269909-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26991-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:02:40.269911-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269913-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269914-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269915-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:02:40.269917-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        error: context \"bridge-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:40.269919-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26992-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269921-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:02:40.269923-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269924-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269926-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269927-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269929-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:02:40.26993-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269932-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269933-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269934-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269935-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:02:40.269937-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269938-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269939-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269941-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269942-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:02:40.269943-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269944-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269946-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269947-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269948-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:02:40.269949-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.26995-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269952-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269953-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269954-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:02:40.269956-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:02:40.269957-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:02:40.269958-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:02:40.26996-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:02:40.269961-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:02:40.269963-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:02:40.269964-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        users: null\n"}
{"Time":"2023-05-31T12:02:40.269965-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269967-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269968-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:02:40.26997-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        Error in configuration: context was not found for specified context: bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.269971-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269972-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269973-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:02:40.269975-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269976-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269978-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269979-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.26998-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:02:40.269982-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269983-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269984-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269986-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269987-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:02:40.269989-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.26999-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269992-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269993-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.269995-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:02:40.269996-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.269998-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.269999-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.27-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270002-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:02:40.270003-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270004-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270006-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270007-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270008-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:02:40.27001-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270011-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270012-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270014-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270015-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:02:40.270017-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270018-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.27002-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270021-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270022-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:02:40.270024-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270025-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270027-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270028-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270029-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:02:40.270031-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270032-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270034-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270035-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270037-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:02:40.270038-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.27004-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270041-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270042-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270044-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:02:40.270045-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270046-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270047-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270049-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.27005-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:02:40.270052-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270053-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270055-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270056-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270058-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:02:40.270059-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.27006-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270062-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270063-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270064-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:02:40.270066-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270068-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270069-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270071-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270072-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:02:40.270073-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270075-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270076-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270078-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270079-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:02:40.27008-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270082-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270083-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270084-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270085-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:02:40.270087-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270088-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.27009-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270091-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270092-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:02:40.270094-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:40.270095-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"          To start a cluster, run: \"minikube start -p bridge-602000\"\n"}
{"Time":"2023-05-31T12:02:40.270096-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.270098-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        ----------------------- debugLogs end: bridge-602000 [took: 1.989563292s] --------------------------------\n"}
{"Time":"2023-05-31T12:02:40.270101-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    net_test.go:210: *** TestNetworkPlugins/group/bridge FAILED at 2023-05-31 12:02:40.26961 -0700 PDT m=+1194.456164751\n"}
{"Time":"2023-05-31T12:02:40.270103-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:02:40.270104-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p bridge-602000 -n bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.301071-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p bridge-602000 -n bridge-602000: exit status 7 (31.327167ms)\n"}
{"Time":"2023-05-31T12:02:40.301084-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.301087-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:40.301088-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:02:40.30109-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        \n"}
{"Time":"2023-05-31T12:02:40.301091-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:40.301092-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:02:40.301094-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:241: \"bridge-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:02:40.301096-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:175: Cleaning up \"bridge-602000\" profile ...\n"}
{"Time":"2023-05-31T12:02:40.301098-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p bridge-602000\n"}
{"Time":"2023-05-31T12:02:40.396716-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2023-05-31T12:02:40.396729-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== CONT  TestNetworkPlugins/group/kubenet\n"}
{"Time":"2023-05-31T12:02:40.396759-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/Start"}
{"Time":"2023-05-31T12:02:40.396761-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"=== RUN   TestNetworkPlugins/group/kubenet/Start\n"}
{"Time":"2023-05-31T12:02:40.396815-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"    net_test.go:111: (dbg) Run:  out/minikube-darwin-arm64 start -p kubenet-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --network-plugin=kubenet --driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:50.152017-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"    net_test.go:111: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p kubenet-602000 --memory=3072 --alsologtostderr --wait=true --wait-timeout=15m --network-plugin=kubenet --driver=qemu2 : exit status 80 (9.752057292s)\n"}
{"Time":"2023-05-31T12:02:50.152078-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:50.152089-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:50.152094-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* [kubenet-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:50.1521-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:50.152108-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:50.152125-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:50.152131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:50.152136-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:50.15214-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:50.152145-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:50.15215-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:50.152175-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Starting control plane node kubenet-602000 in cluster kubenet-602000\n"}
{"Time":"2023-05-31T12:02:50.152184-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:50.152189-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:50.152194-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:50.152199-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.152267-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Deleting \"kubenet-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:50.152276-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:50.152281-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:02:50.152321-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:50.152328-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.152333-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.152339-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.152344-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:50.152349-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:50.152355-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:02:50.15236-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.424568    4306 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:02:50.152366-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.424721    4306 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:50.152372-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.424723    4306 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:02:50.152378-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.424726    4306 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:02:50.152383-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.424795    4306 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:02:50.152389-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.425863    4306 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:02:50.152396-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.440787    4306 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1931,\"bootTime\":1685557829,\"procs\":398,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:02:50.152444-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:40.440870    4306 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:02:50.152451-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.447953    4306 out.go:177] * [kubenet-602000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:02:50.152456-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.451941    4306 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:02:50.152462-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.451995    4306 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:02:50.152467-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.454915    4306 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:02:50.152473-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.457934    4306 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:02:50.152479-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.460910    4306 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:02:50.152484-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.462224    4306 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:02:50.15249-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.464906    4306 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:02:50.152495-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.468246    4306 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:02:50.152502-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.468306    4306 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:02:50.152507-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.472718    4306 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:02:50.152515-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.479906    4306 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:02:50.15252-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.479911    4306 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:02:50.152526-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.479916    4306 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:02:50.152532-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.481795    4306 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:02:50.152539-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.485786    4306 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:02:50.152545-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.489976    4306 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:02:50.152551-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.489994    4306 cni.go:80] network plugin configured as \"kubenet\", returning disabled\n"}
{"Time":"2023-05-31T12:02:50.152557-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.489999    4306 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:02:50.152567-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t{Name:kubenet-602000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:kubenet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker "}
{"Time":"2023-05-31T12:02:50.152578-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"CRISocket: NetworkPlugin:kubenet FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:02:50.152655-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.490081    4306 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:50.152666-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.497863    4306 out.go:177] * Starting control plane node kubenet-602000 in cluster kubenet-602000\n"}
{"Time":"2023-05-31T12:02:50.152672-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.501898    4306 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:02:50.152678-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.501921    4306 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:02:50.152684-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.501934    4306 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:02:50.15269-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.501995    4306 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:02:50.152697-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502001    4306 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:02:50.152703-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502061    4306 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kubenet-602000/config.json ...\n"}
{"Time":"2023-05-31T12:02:50.152709-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502073    4306 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/kubenet-602000/config.json: {Name:mkef00d7a68aa94c86ba047c4726941e2b1b703a Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:50.152718-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502270    4306 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:02:50.152773-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502283    4306 start.go:364] acquiring machines lock for kubenet-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:50.152856-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502313    4306 start.go:368] acquired machines lock for \"kubenet-602000\" in 24.583µs\n"}
{"Time":"2023-05-31T12:02:50.152868-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502327    4306 start.go:93] Provisioning new machine with config: \u0026{Name:kubenet-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:50.152879-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:kubenet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:kubenet FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:02:50.152889-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:50.152896-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.502354    4306 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:50.152903-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.510892    4306 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:50.152908-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527450    4306 start.go:159] libmachine.API.Create for \"kubenet-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:50.152915-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527472    4306 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:50.15292-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527535    4306 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:50.152926-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527556    4306 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:50.152931-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527567    4306 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:50.152936-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527604    4306 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:50.152991-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527623    4306 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:50.153024-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527629    4306 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:50.153031-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.527962    4306 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:50.153037-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.640383    4306 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:50.153042-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.734500    4306 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:50.153047-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.734508    4306 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:50.153054-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.734648    4306 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.153061-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.743079    4306 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:50.153066-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.743094    4306 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:50.153072-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.743148    4306 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:50.153077-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.750284    4306 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:50.153083-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.153087-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.750298    4306 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:50.153093-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.750320    4306 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.153099-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.750326    4306 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:50.153106-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.750369    4306 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=ee:c2:46:8c:61:da -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.153115-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.751901    4306 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:50.15312-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.751915    4306 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:50.153125-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.15313-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:40.751934    4306 client.go:171] LocalClient.Create took 224.461ms\n"}
{"Time":"2023-05-31T12:02:50.153135-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:42.754077    4306 start.go:128] duration metric: createHost completed in 2.251738417s\n"}
{"Time":"2023-05-31T12:02:50.15314-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:42.754137    4306 start.go:83] releasing machines lock for \"kubenet-602000\", held for 2.251847833s\n"}
{"Time":"2023-05-31T12:02:50.153146-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:42.754184    4306 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153152-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:42.760389    4306 out.go:177] * Deleting \"kubenet-602000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:02:50.153158-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:42.781454    4306 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153164-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153169-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:42.781482    4306 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:02:50.153217-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.783661    4306 start.go:364] acquiring machines lock for kubenet-602000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:02:50.153225-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.784101    4306 start.go:368] acquired machines lock for \"kubenet-602000\" in 336.625µs\n"}
{"Time":"2023-05-31T12:02:50.153238-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.784215    4306 start.go:93] Provisioning new machine with config: \u0026{Name:kubenet-602000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:3072 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:02:50.15325-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:kubenet-602000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:kubenet FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:15m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMS"}
{"Time":"2023-05-31T12:02:50.153259-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"ize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:02:50.153266-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.784467    4306 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:50.153272-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.794649    4306 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=3072MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:02:50.15328-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.842567    4306 start.go:159] libmachine.API.Create for \"kubenet-602000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:02:50.153312-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.842609    4306 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:02:50.153321-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.842815    4306 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:02:50.153327-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.842893    4306 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:50.153332-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.842914    4306 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:50.153343-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.843021    4306 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:02:50.153349-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.843055    4306 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:02:50.153355-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.843078    4306 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:02:50.153361-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.843570    4306 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:02:50.153368-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:47.962404    4306 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:02:50.153373-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.090031    4306 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:02:50.153378-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.090037    4306 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:02:50.153384-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.090191    4306 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.15339-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.099075    4306 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:50.153395-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.099098    4306 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:50.153401-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.099175    4306 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:02:50.153407-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.106575    4306 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:02:50.153412-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.153417-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.106591    4306 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:02:50.153425-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.106608    4306 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.153431-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.106639    4306 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:02:50.153438-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.106680    4306 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 3072 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/qemu.pid -device virtio-net-pci,netdev=net0,mac=02:af:61:4e:80:8b -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/kubenet-602000/disk.qcow2\n"}
{"Time":"2023-05-31T12:02:50.153446-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.108243    4306 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:02:50.153451-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.108257    4306 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:02:50.153456-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t\n"}
{"Time":"2023-05-31T12:02:50.153461-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:48.108275    4306 client.go:171] LocalClient.Create took 265.663042ms\n"}
{"Time":"2023-05-31T12:02:50.153466-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:50.110434    4306 start.go:128] duration metric: createHost completed in 2.325965s\n"}
{"Time":"2023-05-31T12:02:50.153472-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:50.110530    4306 start.go:83] releasing machines lock for \"kubenet-602000\", held for 2.326437625s\n"}
{"Time":"2023-05-31T12:02:50.153478-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:50.111021    4306 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p kubenet-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153484-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p kubenet-602000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.15349-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:50.121198    4306 out.go:177] \n"}
{"Time":"2023-05-31T12:02:50.153495-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:50.124447    4306 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153501-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:02:50.153507-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:50.124474    4306 out.go:239] * \n"}
{"Time":"2023-05-31T12:02:50.153512-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t* \n"}
{"Time":"2023-05-31T12:02:50.153518-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tW0531 12:02:50.126873    4306 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:50.153558-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153566-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:50.153571-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:50.153577-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153582-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:50.153613-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153619-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:50.153627-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:02:50.153634-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153639-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:02:50.153645-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:02:50.15365-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153656-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:02:50.153661-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:02:50.153666-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:02:50.153673-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \tI0531 12:02:50.136389    4306 out.go:177] \n"}
{"Time":"2023-05-31T12:02:50.153678-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        \n"}
{"Time":"2023-05-31T12:02:50.153683-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:02:50.153688-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"    net_test.go:113: failed start: exit status 80\n"}
{"Time":"2023-05-31T12:02:50.153704-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    net_test.go:209: \"kubenet\" test finished in 6m13.185000208s, failed=true\n"}
{"Time":"2023-05-31T12:02:52.204958-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    net_test.go:210: \n"}
{"Time":"2023-05-31T12:02:52.204971-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        ----------------------- debugLogs start: kubenet-602000 [pass: false] --------------------------------\n"}
{"Time":"2023-05-31T12:02:52.204973-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: nslookup kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:52.204975-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.204977-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204978-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20498-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: nslookup debug kubernetes.default a-records:\n"}
{"Time":"2023-05-31T12:02:52.204981-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.204983-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204984-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204985-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: dig search kubernetes.default:\n"}
{"Time":"2023-05-31T12:02:52.204987-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.204988-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204989-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20499-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local udp/53:\n"}
{"Time":"2023-05-31T12:02:52.204992-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.204993-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204994-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.204999-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: dig @10.96.0.10 kubernetes.default.svc.cluster.local tcp/53:\n"}
{"Time":"2023-05-31T12:02:52.205001-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205002-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205003-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205004-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 udp/53:\n"}
{"Time":"2023-05-31T12:02:52.205006-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205007-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205008-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205009-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: nc 10.96.0.10 tcp/53:\n"}
{"Time":"2023-05-31T12:02:52.205011-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205012-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205013-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205014-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:52.205016-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205017-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205018-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20502-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:52.205021-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205022-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205023-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205025-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e netcat: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:52.205026-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205028-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205029-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205031-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/nsswitch.conf:\n"}
{"Time":"2023-05-31T12:02:52.205032-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205034-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205035-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205036-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205037-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/hosts:\n"}
{"Time":"2023-05-31T12:02:52.205039-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.20504-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205042-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205043-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205044-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/resolv.conf:\n"}
{"Time":"2023-05-31T12:02:52.205045-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205047-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205048-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205049-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20505-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: nodes, services, endpoints, daemon sets, deployments and pods, :\n"}
{"Time":"2023-05-31T12:02:52.205052-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205053-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205054-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205056-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: crictl pods:\n"}
{"Time":"2023-05-31T12:02:52.205057-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205058-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205059-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205061-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205062-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: crictl containers:\n"}
{"Time":"2023-05-31T12:02:52.205063-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205064-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205066-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205067-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205068-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe netcat deployment:\n"}
{"Time":"2023-05-31T12:02:52.20507-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205071-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205072-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205074-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe netcat pod(s):\n"}
{"Time":"2023-05-31T12:02:52.205075-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205076-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205077-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205079-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: netcat logs:\n"}
{"Time":"2023-05-31T12:02:52.20508-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205081-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205082-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205084-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe coredns deployment:\n"}
{"Time":"2023-05-31T12:02:52.205085-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205086-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205088-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205089-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe coredns pods:\n"}
{"Time":"2023-05-31T12:02:52.20509-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205092-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205093-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205094-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: coredns logs:\n"}
{"Time":"2023-05-31T12:02:52.205095-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205097-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205098-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205099-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe api server pod(s):\n"}
{"Time":"2023-05-31T12:02:52.2051-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205102-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205103-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205104-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: api server logs:\n"}
{"Time":"2023-05-31T12:02:52.205105-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205107-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205108-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205109-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/cni:\n"}
{"Time":"2023-05-31T12:02:52.205111-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205112-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205115-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205116-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205118-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: ip a s:\n"}
{"Time":"2023-05-31T12:02:52.205119-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205121-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205123-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205124-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205125-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: ip r s:\n"}
{"Time":"2023-05-31T12:02:52.205127-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205128-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.20513-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205131-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205132-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: iptables-save:\n"}
{"Time":"2023-05-31T12:02:52.205133-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205135-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205136-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205138-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205139-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: iptables table nat:\n"}
{"Time":"2023-05-31T12:02:52.205141-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205142-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205143-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205144-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205146-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy daemon set:\n"}
{"Time":"2023-05-31T12:02:52.205148-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205149-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20515-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205152-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: describe kube-proxy pod(s):\n"}
{"Time":"2023-05-31T12:02:52.205153-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.205155-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205156-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205157-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: kube-proxy logs:\n"}
{"Time":"2023-05-31T12:02:52.205159-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        error: context \"kubenet-602000\" does not exist\n"}
{"Time":"2023-05-31T12:02:52.20516-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205161-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205163-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: kubelet daemon status:\n"}
{"Time":"2023-05-31T12:02:52.205164-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205166-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205167-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205169-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20517-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: kubelet daemon config:\n"}
{"Time":"2023-05-31T12:02:52.205172-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205174-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205176-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205178-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205179-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: kubelet logs:\n"}
{"Time":"2023-05-31T12:02:52.20518-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205182-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205183-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205184-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205185-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/kubernetes/kubelet.conf:\n"}
{"Time":"2023-05-31T12:02:52.205187-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205188-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.20519-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205191-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205204-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /var/lib/kubelet/config.yaml:\n"}
{"Time":"2023-05-31T12:02:52.205208-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.20521-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205212-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205213-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205215-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: kubectl config:\n"}
{"Time":"2023-05-31T12:02:52.205216-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        apiVersion: v1\n"}
{"Time":"2023-05-31T12:02:52.205218-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        clusters: null\n"}
{"Time":"2023-05-31T12:02:52.205219-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        contexts: null\n"}
{"Time":"2023-05-31T12:02:52.205221-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        current-context: \"\"\n"}
{"Time":"2023-05-31T12:02:52.205222-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        kind: Config\n"}
{"Time":"2023-05-31T12:02:52.205223-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        preferences: {}\n"}
{"Time":"2023-05-31T12:02:52.205225-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        users: null\n"}
{"Time":"2023-05-31T12:02:52.205226-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205228-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205229-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e k8s: cms:\n"}
{"Time":"2023-05-31T12:02:52.205231-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        Error in configuration: context was not found for specified context: kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.205232-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205234-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205235-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: docker daemon status:\n"}
{"Time":"2023-05-31T12:02:52.205237-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205238-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205239-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205241-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205242-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: docker daemon config:\n"}
{"Time":"2023-05-31T12:02:52.205243-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205245-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205246-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205248-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205249-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/docker/daemon.json:\n"}
{"Time":"2023-05-31T12:02:52.20525-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205252-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205253-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205254-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205256-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: docker system info:\n"}
{"Time":"2023-05-31T12:02:52.205257-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205258-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.20526-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205261-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205262-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: cri-docker daemon status:\n"}
{"Time":"2023-05-31T12:02:52.205263-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205265-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205266-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205267-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205269-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: cri-docker daemon config:\n"}
{"Time":"2023-05-31T12:02:52.20527-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205271-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205273-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205274-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205275-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/systemd/system/cri-docker.service.d/10-cni.conf:\n"}
{"Time":"2023-05-31T12:02:52.205277-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205278-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205279-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205281-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205282-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /usr/lib/systemd/system/cri-docker.service:\n"}
{"Time":"2023-05-31T12:02:52.205283-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205285-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205286-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205287-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205288-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: cri-dockerd version:\n"}
{"Time":"2023-05-31T12:02:52.20529-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205291-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205293-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205294-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205295-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: containerd daemon status:\n"}
{"Time":"2023-05-31T12:02:52.205297-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205298-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.2053-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205301-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205302-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: containerd daemon config:\n"}
{"Time":"2023-05-31T12:02:52.205304-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205305-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205306-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205308-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205309-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /lib/systemd/system/containerd.service:\n"}
{"Time":"2023-05-31T12:02:52.205311-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205312-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205313-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205315-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205316-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/containerd/config.toml:\n"}
{"Time":"2023-05-31T12:02:52.205317-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205319-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.20532-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205322-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205324-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: containerd config dump:\n"}
{"Time":"2023-05-31T12:02:52.205326-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205328-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205329-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.20533-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205331-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: crio daemon status:\n"}
{"Time":"2023-05-31T12:02:52.205333-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205334-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205335-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205336-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205338-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: crio daemon config:\n"}
{"Time":"2023-05-31T12:02:52.20534-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205342-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205343-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205344-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205345-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: /etc/crio:\n"}
{"Time":"2023-05-31T12:02:52.205347-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205348-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.20535-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205351-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205352-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \u003e\u003e\u003e host: crio config:\n"}
{"Time":"2023-05-31T12:02:52.205354-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:02:52.205355-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"          To start a cluster, run: \"minikube start -p kubenet-602000\"\n"}
{"Time":"2023-05-31T12:02:52.205357-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.205358-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        ----------------------- debugLogs end: kubenet-602000 [took: 2.051812458s] --------------------------------\n"}
{"Time":"2023-05-31T12:02:52.205361-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    net_test.go:210: *** TestNetworkPlugins/group/kubenet FAILED at 2023-05-31 12:02:52.204944 -0700 PDT m=+1206.391671459\n"}
{"Time":"2023-05-31T12:02:52.205362-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:02:52.205364-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p kubenet-602000 -n kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.234153-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p kubenet-602000 -n kubenet-602000: exit status 7 (29.097583ms)\n"}
{"Time":"2023-05-31T12:02:52.234168-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.23417-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:02:52.234172-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:02:52.234177-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        \n"}
{"Time":"2023-05-31T12:02:52.234178-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:02:52.23418-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:02:52.234182-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:241: \"kubenet-602000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:02:52.234184-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:175: Cleaning up \"kubenet-602000\" profile ...\n"}
{"Time":"2023-05-31T12:02:52.234186-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p kubenet-602000\n"}
{"Time":"2023-05-31T12:02:52.335046-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2023-05-31T12:02:52.335058-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== CONT  TestStartStop/group/old-k8s-version\n"}
{"Time":"2023-05-31T12:02:52.335107-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial"}
{"Time":"2023-05-31T12:02:52.33511-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial\n"}
{"Time":"2023-05-31T12:02:52.335139-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart"}
{"Time":"2023-05-31T12:02:52.335144-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/FirstStart\n"}
{"Time":"2023-05-31T12:02:52.335193-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Run:  out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0\n"}
{"Time":"2023-05-31T12:02:58.82492-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Setup","Output":"    version_upgrade_test.go:167: v1.6.2 release installation failed: bad response code: 404\n"}
{"Time":"2023-05-31T12:02:58.82498-07:00","Action":"run","Test":"TestStoppedBinaryUpgrade/Upgrade"}
{"Time":"2023-05-31T12:02:58.824989-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"=== RUN   TestStoppedBinaryUpgrade/Upgrade\n"}
{"Time":"2023-05-31T12:02:58.825695-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Run:  /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 \n"}
{"Time":"2023-05-31T12:02:58.833559-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Non-zero exit: /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 : fork/exec /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe: permission denied (7.681291ms)\n"}
{"Time":"2023-05-31T12:03:00.052528-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Run:  /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 \n"}
{"Time":"2023-05-31T12:03:00.054371-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Non-zero exit: /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 : fork/exec /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe: permission denied (1.777167ms)\n"}
{"Time":"2023-05-31T12:03:02.17616-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Run:  /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 \n"}
{"Time":"2023-05-31T12:03:02.185019-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:195: (dbg) Non-zero exit: /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe start -p stopped-upgrade-412000 --memory=2200 --vm-driver=qemu2 : fork/exec /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe: permission denied (8.326583ms)\n"}
{"Time":"2023-05-31T12:03:02.185209-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    version_upgrade_test.go:201: legacy v1.6.2 start failed: fork/exec /var/folders/2k/p0kjt1w95hl7b54xjlcc45ph0000gp/T/minikube-v1.6.2.3656460208.exe: permission denied\n"}
{"Time":"2023-05-31T12:03:02.186071-07:00","Action":"run","Test":"TestStoppedBinaryUpgrade/MinikubeLogs"}
{"Time":"2023-05-31T12:03:02.186086-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"=== RUN   TestStoppedBinaryUpgrade/MinikubeLogs\n"}
{"Time":"2023-05-31T12:03:02.186094-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"    version_upgrade_test.go:218: (dbg) Run:  out/minikube-darwin-arm64 logs -p stopped-upgrade-412000\n"}
{"Time":"2023-05-31T12:03:02.205822-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0: exit status 80 (9.869554125s)\n"}
{"Time":"2023-05-31T12:03:02.205842-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.205847-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.205852-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* [old-k8s-version-035000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:02.205856-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:02.205866-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:02.20587-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:02.205874-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:02.205902-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:02.205906-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:02.20591-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:02.205914-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:02.205918-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Starting control plane node old-k8s-version-035000 in cluster old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.205923-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.20593-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:02.205934-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.205938-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.205942-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Deleting \"old-k8s-version-035000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:02.205946-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.20595-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:02.20596-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.205964-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.205968-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.205971-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.205975-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.205978-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.205982-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:02.205986-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.362740    4427 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:02.20599-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.362871    4427 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:02.205994-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.362873    4427 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:02.205998-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.362876    4427 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:02.206003-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.362950    4427 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:02.206007-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.364005    4427 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:02.206013-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.380418    4427 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1943,\"bootTime\":1685557829,\"procs\":409,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:02.206022-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:02:52.380478    4427 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:02.206026-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.385990    4427 out.go:177] * [old-k8s-version-035000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:02.206031-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.391336    4427 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:02.206035-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.395330    4427 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:02.206039-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.391404    4427 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:02.206043-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.398434    4427 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:02.206048-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.401343    4427 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:02.206052-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.404524    4427 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:02.206066-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.406363    4427 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:02.20607-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.410548    4427 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:02.206075-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.410598    4427 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:02.20608-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.415968    4427 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:02.206084-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.421292    4427 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:02.206088-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.421296    4427 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:02.206096-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.421302    4427 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:02.206101-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.423228    4427 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:02.206105-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.426439    4427 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:02.20611-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.429374    4427 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:02.206115-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.429389    4427 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:02.206119-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.429397    4427 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T12:03:02.206124-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.429403    4427 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:02.206133-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Container"}
{"Time":"2023-05-31T12:03:02.206143-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"Runtime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:02.206151-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.429487    4427 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.206155-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.437369    4427 out.go:177] * Starting control plane node old-k8s-version-035000 in cluster old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.206161-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441609    4427 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T12:03:02.206166-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441634    4427 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:02.206181-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441655    4427 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:02.206186-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441723    4427 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:02.206191-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441729    4427 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T12:03:02.206196-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441792    4427 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/old-k8s-version-035000/config.json ...\n"}
{"Time":"2023-05-31T12:03:02.206203-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.441804    4427 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/old-k8s-version-035000/config.json: {Name:mk2363c5931fb616308d70044612692713b9347f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.206209-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.442019    4427 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:02.206213-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.442031    4427 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.206218-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.442059    4427 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 23.167µs\n"}
{"Time":"2023-05-31T12:03:02.206228-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.442074    4427 start.go:93] Provisioning new machine with config: \u0026{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:03:02.206236-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"tesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: "}
{"Time":"2023-05-31T12:03:02.206243-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:02.206248-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.442102    4427 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.206255-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.449318    4427 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.20626-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466037    4427 start.go:159] libmachine.API.Create for \"old-k8s-version-035000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.206265-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466063    4427 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:02.206271-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466121    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:02.206276-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466141    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.20628-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466154    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.206286-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466200    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:02.206291-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466215    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.206295-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466221    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.2063-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.466554    4427 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:02.206307-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.576645    4427 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:02.206311-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.702884    4427 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:02.206316-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.702895    4427 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:02.206321-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.703047    4427 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206326-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.711866    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.20633-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.711887    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.206334-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.711960    4427 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:02.206338-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.719360    4427 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:02.206342-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.206346-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.719375    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.206351-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.719394    4427 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206355-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.719406    4427 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:02.206362-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.719443    4427 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=d2:07:0c:5b:66:92 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206369-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.720941    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.206374-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.720957    4427 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.206378-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.206382-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:52.720977    4427 client.go:171] LocalClient.Create took 254.911541ms\n"}
{"Time":"2023-05-31T12:03:02.206387-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:54.723142    4427 start.go:128] duration metric: createHost completed in 2.281055625s\n"}
{"Time":"2023-05-31T12:03:02.206392-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:54.723203    4427 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 2.281167167s\n"}
{"Time":"2023-05-31T12:03:02.206397-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:02:54.723315    4427 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.206403-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:54.734344    4427 out.go:177] * Deleting \"old-k8s-version-035000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:02.206409-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:02:54.753575    4427 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.206415-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.20642-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:54.753605    4427 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:02.206425-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.755822    4427 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.20643-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.756274    4427 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 364.833µs\n"}
{"Time":"2023-05-31T12:03:02.20644-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.756377    4427 start.go:93] Provisioning new machine with config: \u0026{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:03:02.206448-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"tesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: "}
{"Time":"2023-05-31T12:03:02.206456-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:02.206462-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.756703    4427 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.206467-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.767101    4427 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.206471-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814225    4427 start.go:159] libmachine.API.Create for \"old-k8s-version-035000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.206475-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814278    4427 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:02.20648-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814391    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:02.206485-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814432    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.206489-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814452    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.206494-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814535    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:02.206498-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814563    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.206503-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.814578    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.206509-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:02:59.815165    4427 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:02.206515-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.017177    4427 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:02.206519-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.148327    4427 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:02.206523-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.148334    4427 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:02.206529-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.148490    4427 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206534-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.157207    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.206538-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.157222    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.206543-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.157275    4427 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:02.206548-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.164925    4427 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:02.206552-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.206557-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.164938    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.206564-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.164953    4427 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206569-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.164960    4427 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:02.206576-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.164997    4427 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=b2:96:bc:ef:62:9c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.206584-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.166511    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.206589-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.166526    4427 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.206593-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.206599-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:00.166542    4427 client.go:171] LocalClient.Create took 352.260541ms\n"}
{"Time":"2023-05-31T12:03:02.206605-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:02.168678    4427 start.go:128] duration metric: createHost completed in 2.411980334s\n"}
{"Time":"2023-05-31T12:03:02.206611-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:02.168748    4427 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 2.412485916s\n"}
{"Time":"2023-05-31T12:03:02.206616-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:03:02.169147    4427 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p old-k8s-version-035000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.206623-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p old-k8s-version-035000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.206629-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:02.178906    4427 out.go:177] \n"}
{"Time":"2023-05-31T12:03:02.206633-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:03:02.184909    4427 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.20664-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.206645-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:03:02.184941    4427 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:02.206649-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:02.206654-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tW0531 12:03:02.187116    4427 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:02.20666-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.206665-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:02.20667-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:02.206674-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.206679-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:02.206684-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.206689-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:02.206695-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:02.206701-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.206705-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:02.20671-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:02.206716-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.20672-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:02.206725-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.20673-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:02.206736-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tI0531 12:03:02.194853    4427 out.go:177] \n"}
{"Time":"2023-05-31T12:03:02.20674-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.206744-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:02.20675-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    start_stop_delete_test.go:188: failed starting minikube -first start-. args \"out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0\": exit status 80\n"}
{"Time":"2023-05-31T12:03:02.206759-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:02.206764-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.261928-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (55.946916ms)\n"}
{"Time":"2023-05-31T12:03:02.261944-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.261947-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.261949-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:02.261951-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.261953-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.261956-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.261959-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:02.262056-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp"}
{"Time":"2023-05-31T12:03:02.262074-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/DeployApp\n"}
{"Time":"2023-05-31T12:03:02.262173-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Run:  kubectl --context old-k8s-version-035000 create -f testdata/busybox.yaml\n"}
{"Time":"2023-05-31T12:03:02.29208-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Non-zero exit: kubectl --context old-k8s-version-035000 create -f testdata/busybox.yaml: exit status 1 (29.894875ms)\n"}
{"Time":"2023-05-31T12:03:02.292093-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.292095-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:02.292097-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \terror: context \"old-k8s-version-035000\" does not exist\n"}
{"Time":"2023-05-31T12:03:02.292098-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.2921-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:02.292101-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:196: kubectl --context old-k8s-version-035000 create -f testdata/busybox.yaml failed: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.292104-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:02.292109-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.314016-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"    version_upgrade_test.go:218: (dbg) Non-zero exit: out/minikube-darwin-arm64 logs -p stopped-upgrade-412000: exit status 85 (125.8715ms)\n"}
{"Time":"2023-05-31T12:03:02.314033-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.314035-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.314037-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:02.314038-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* ==\u003e Audit \u003c==\n"}
{"Time":"2023-05-31T12:03:02.31404-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* |---------|------------------------------------------------------|------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T12:03:02.314042-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| Command |                         Args                         |        Profile         |  User   | Version |     Start Time      |      End Time       |\n"}
{"Time":"2023-05-31T12:03:02.314044-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|---------|------------------------------------------------------|------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T12:03:02.314045-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314047-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status kubelet --all                       |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314048-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31405-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314051-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat kubelet                                |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314053-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314054-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314056-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | journalctl -xeu kubelet --all                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314057-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314059-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31406-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/kubernetes/kubelet.conf                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314065-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314066-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /var/lib/kubelet/config.yaml                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314068-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314069-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status docker --all                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314071-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314072-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314074-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat docker                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314075-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314077-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314079-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/docker/daemon.json                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31408-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo docker                         | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314082-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | system info                                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314083-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314085-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status cri-docker                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314086-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --all --full --no-pager                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314088-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314089-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat cri-docker                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314091-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314092-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314094-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/systemd/system/cri-docker.service.d/10-cni.conf |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314095-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314097-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /usr/lib/systemd/system/cri-docker.service           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314098-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.3141-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | cri-dockerd --version                                |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314101-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314102-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status containerd                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314104-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --all --full --no-pager                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314105-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314109-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat containerd                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31411-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314112-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314113-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /lib/systemd/system/containerd.service               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314115-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo cat                            | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314116-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/containerd/config.toml                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314118-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31412-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | containerd config dump                               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314122-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314123-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status crio --all                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314125-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314126-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo                                | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314127-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat crio --no-pager                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314129-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo find                           | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31413-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/crio -type f -exec sh -c                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314132-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | 'echo {}; cat {}' \\;                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314134-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p bridge-602000 sudo crio                           | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314135-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | config                                               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314136-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| delete  | -p bridge-602000                                     | bridge-602000          | jenkins | v1.30.1 | 31 May 23 12:02 PDT | 31 May 23 12:02 PDT |\n"}
{"Time":"2023-05-31T12:03:02.314138-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| start   | -p kubenet-602000                                    | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314139-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --memory=3072                                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314141-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --alsologtostderr --wait=true                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314142-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --wait-timeout=15m                                   |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314144-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --network-plugin=kubenet                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314145-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --driver=qemu2                                       |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314147-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314148-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/nsswitch.conf                                   |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314149-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314151-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/hosts                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314153-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314155-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/resolv.conf                                     |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314156-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo crictl                        | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314158-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | pods                                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314159-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo crictl                        | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31416-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | ps --all                                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314162-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo find                          | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314163-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/cni -type f -exec sh -c                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314165-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | 'echo {}; cat {}' \\;                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314166-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo ip a s                        | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314168-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo ip r s                        | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314169-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314171-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | iptables-save                                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314172-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314174-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | iptables -t nat -L -n -v                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314175-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314177-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status kubelet --all                       |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314178-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314179-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314181-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat kubelet                                |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314182-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314184-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314185-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | journalctl -xeu kubelet --all                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314187-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314188-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31419-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/kubernetes/kubelet.conf                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314191-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314193-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /var/lib/kubelet/config.yaml                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314195-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314196-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status docker --all                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314198-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314199-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.3142-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat docker                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314202-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314203-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314205-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/docker/daemon.json                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314206-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo docker                        | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314208-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | system info                                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314209-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314211-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status cri-docker                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314212-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --all --full --no-pager                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314214-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314216-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat cri-docker                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314218-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314219-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314221-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/systemd/system/cri-docker.service.d/10-cni.conf |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314222-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314224-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /usr/lib/systemd/system/cri-docker.service           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314225-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314227-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | cri-dockerd --version                                |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314228-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.31423-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status containerd                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314231-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --all --full --no-pager                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314233-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314234-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat containerd                             |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314236-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --no-pager                                           |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314237-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314239-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /lib/systemd/system/containerd.service               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31424-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo cat                           | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314242-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/containerd/config.toml                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314243-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314245-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | containerd config dump                               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314246-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314248-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl status crio --all                          |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314249-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --full --no-pager                                    |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314252-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo                               | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314253-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | systemctl cat crio --no-pager                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314255-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo find                          | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314256-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | /etc/crio -type f -exec sh -c                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314258-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | 'echo {}; cat {}' \\;                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31426-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| ssh     | -p kubenet-602000 sudo crio                          | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314261-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | config                                               |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314263-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| delete  | -p kubenet-602000                                    | kubenet-602000         | jenkins | v1.30.1 | 31 May 23 12:02 PDT | 31 May 23 12:02 PDT |\n"}
{"Time":"2023-05-31T12:03:02.314264-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t| start   | -p old-k8s-version-035000                            | old-k8s-version-035000 | jenkins | v1.30.1 | 31 May 23 12:02 PDT |                     |\n"}
{"Time":"2023-05-31T12:03:02.314266-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --memory=2200                                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314267-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --alsologtostderr --wait=true                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314269-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --kvm-network=default                                |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.31427-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --kvm-qemu-uri=qemu:///system                        |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314272-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --disable-driver-mounts                              |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314273-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --keep-context=false                                 |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314275-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --driver=qemu2                                       |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314277-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|         | --kubernetes-version=v1.16.0                         |                        |         |         |                     |                     |\n"}
{"Time":"2023-05-31T12:03:02.314278-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t|---------|------------------------------------------------------|------------------------|---------|---------|---------------------|---------------------|\n"}
{"Time":"2023-05-31T12:03:02.31428-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.314282-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:02.314283-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* ==\u003e Last Start \u003c==\n"}
{"Time":"2023-05-31T12:03:02.314285-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* Log file created at: 2023/05/31 12:02:52\n"}
{"Time":"2023-05-31T12:03:02.314286-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tRunning on machine: MacOS-M1-Agent-1\n"}
{"Time":"2023-05-31T12:03:02.314287-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tBinary: Built with gc go1.20.4 for darwin/arm64\n"}
{"Time":"2023-05-31T12:03:02.314289-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\n"}
{"Time":"2023-05-31T12:03:02.31429-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.362740    4427 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:02.314292-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.362871    4427 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:02.314293-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.362873    4427 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:02.314295-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.362876    4427 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:02.314296-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.362950    4427 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:02.314298-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.364005    4427 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:02.314299-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.380418    4427 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1943,\"bootTime\":1685557829,\"procs\":409,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:02.314303-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:02:52.380478    4427 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:02.314305-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.385990    4427 out.go:177] * [old-k8s-version-035000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:02.314306-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.391336    4427 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:02.314308-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.395330    4427 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:02.314309-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.391404    4427 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:02.31431-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.398434    4427 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:02.314312-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.401343    4427 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:02.314313-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.404524    4427 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:02.314315-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.406363    4427 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:02.314317-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.410548    4427 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:02.314318-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.410598    4427 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:02.31432-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.415968    4427 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:02.314321-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.421292    4427 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:02.314322-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.421296    4427 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:02.314324-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.421302    4427 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:02.314325-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.423228    4427 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:02.314327-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.426439    4427 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:02.314328-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.429374    4427 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:02.31433-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.429389    4427 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:02.314332-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.429397    4427 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T12:03:02.314334-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.429403    4427 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:02.314337-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local Container"}
{"Time":"2023-05-31T12:03:02.31434-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"Runtime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:02.314343-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.429487    4427 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.314344-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.437369    4427 out.go:177] * Starting control plane node old-k8s-version-035000 in cluster old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.314345-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441609    4427 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T12:03:02.314347-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441634    4427 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:02.314349-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441655    4427 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:02.31435-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441723    4427 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:02.314352-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441729    4427 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T12:03:02.314353-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441792    4427 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/old-k8s-version-035000/config.json ...\n"}
{"Time":"2023-05-31T12:03:02.314357-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.441804    4427 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/old-k8s-version-035000/config.json: {Name:mk2363c5931fb616308d70044612692713b9347f Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.314359-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.442019    4427 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:02.31436-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.442031    4427 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.314362-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.442059    4427 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 23.167µs\n"}
{"Time":"2023-05-31T12:03:02.314365-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.442074    4427 start.go:93] Provisioning new machine with config: \u0026{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:03:02.314368-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"tesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: "}
{"Time":"2023-05-31T12:03:02.314371-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:02.314373-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.442102    4427 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.314374-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.449318    4427 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.314376-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466037    4427 start.go:159] libmachine.API.Create for \"old-k8s-version-035000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.314377-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466063    4427 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:02.314379-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466121    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:02.31438-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466141    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.314381-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466154    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.314383-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466200    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:02.314384-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466215    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.314386-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466221    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.314387-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.466554    4427 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:02.314389-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.576645    4427 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:02.31439-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.702884    4427 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:02.314392-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.702895    4427 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:02.314393-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.703047    4427 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.314395-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.711866    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.314533-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.711887    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.314567-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.711960    4427 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:02.31457-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.719360    4427 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:02.314572-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.314574-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.719375    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.314575-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.719394    4427 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.314577-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.719406    4427 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:02.314582-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.719443    4427 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=d2:07:0c:5b:66:92 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.314585-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.720941    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.314586-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.720957    4427 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.314588-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.314589-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:52.720977    4427 client.go:171] LocalClient.Create took 254.911541ms\n"}
{"Time":"2023-05-31T12:03:02.314591-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:54.723142    4427 start.go:128] duration metric: createHost completed in 2.281055625s\n"}
{"Time":"2023-05-31T12:03:02.314592-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:54.723203    4427 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 2.281167167s\n"}
{"Time":"2023-05-31T12:03:02.314594-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:02:54.723315    4427 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.314595-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:54.734344    4427 out.go:177] * Deleting \"old-k8s-version-035000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:02.314597-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:02:54.753575    4427 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.314599-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:54.753605    4427 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:02.314601-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.755822    4427 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:02.314603-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.756274    4427 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 364.833µs\n"}
{"Time":"2023-05-31T12:03:02.314606-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.756377    4427 start.go:93] Provisioning new machine with config: \u0026{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kuberne"}
{"Time":"2023-05-31T12:03:02.314609-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"tesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: "}
{"Time":"2023-05-31T12:03:02.314612-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:02.314646-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.756703    4427 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.314653-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.767101    4427 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:02.314655-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814225    4427 start.go:159] libmachine.API.Create for \"old-k8s-version-035000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:02.314656-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814278    4427 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:02.314658-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814391    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:02.314659-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814432    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.314661-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814452    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.314662-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814535    4427 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:02.314666-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814563    4427 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:02.31469-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.814578    4427 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:02.314693-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:02:59.815165    4427 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:02.314695-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.017177    4427 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:02.314696-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.148327    4427 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:02.314698-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.148334    4427 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:02.314699-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.148490    4427 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.314843-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.157207    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.314845-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.157222    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.314847-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.157275    4427 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:02.314848-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.164925    4427 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:02.31485-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.314851-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.164938    4427 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:02.314854-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.164953    4427 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.314855-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.164960    4427 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:02.314858-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.164997    4427 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=b2:96:bc:ef:62:9c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:02.31486-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.166511    4427 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:02.314861-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.166526    4427 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:02.314863-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.314864-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:00.166542    4427 client.go:171] LocalClient.Create took 352.260541ms\n"}
{"Time":"2023-05-31T12:03:02.314866-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:02.168678    4427 start.go:128] duration metric: createHost completed in 2.411980334s\n"}
{"Time":"2023-05-31T12:03:02.314917-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:02.168748    4427 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 2.412485916s\n"}
{"Time":"2023-05-31T12:03:02.314921-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:03:02.169147    4427 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p old-k8s-version-035000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.314924-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:02.178906    4427 out.go:177] \n"}
{"Time":"2023-05-31T12:03:02.314926-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:03:02.184909    4427 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:02.314927-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:03:02.184941    4427 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:02.31493-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tW0531 12:03:02.187116    4427 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:02.314934-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.314935-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:02.314937-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:02.314942-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.314943-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:02.314945-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:02.314947-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:02.314949-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \tI0531 12:03:02.194853    4427 out.go:177] \n"}
{"Time":"2023-05-31T12:03:02.31495-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:02.315015-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:02.315017-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t* Profile \"stopped-upgrade-412000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T12:03:02.315019-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \t  To start a cluster, run: \"minikube start -p stopped-upgrade-412000\"\n"}
{"Time":"2023-05-31T12:03:02.315021-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.315022-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.315023-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"    version_upgrade_test.go:220: `minikube logs` after upgrade to HEAD from v1.6.2 failed: exit status 85\n"}
{"Time":"2023-05-31T12:03:02.315027-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:223: *** TestStoppedBinaryUpgrade FAILED at 2023-05-31 12:03:02.31477 -0700 PDT m=+1216.501643417\n"}
{"Time":"2023-05-31T12:03:02.315029-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:02.315031-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p stopped-upgrade-412000 -n stopped-upgrade-412000\n"}
{"Time":"2023-05-31T12:03:02.322619-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (30.417667ms)\n"}
{"Time":"2023-05-31T12:03:02.32263-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.322632-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.322634-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:02.322635-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.322637-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.322638-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.322641-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:02.322643-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:02.322649-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.353077-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (30.355458ms)\n"}
{"Time":"2023-05-31T12:03:02.35309-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.353092-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.353094-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:02.353095-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.353096-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.353098-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.353101-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:02.353143-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive"}
{"Time":"2023-05-31T12:03:02.353145-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive\n"}
{"Time":"2023-05-31T12:03:02.353188-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:205: (dbg) Run:  out/minikube-darwin-arm64 addons enable metrics-server -p old-k8s-version-035000 --images=MetricsServer=registry.k8s.io/echoserver:1.4 --registries=MetricsServer=fake.domain\n"}
{"Time":"2023-05-31T12:03:02.360697-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p stopped-upgrade-412000 -n stopped-upgrade-412000: exit status 85 (45.793667ms)\n"}
{"Time":"2023-05-31T12:03:02.360707-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.360709-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.360711-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        \t* Profile \"stopped-upgrade-412000\" not found. Run \"minikube profile list\" to view all profiles.\n"}
{"Time":"2023-05-31T12:03:02.360712-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        \t  To start a cluster, run: \"minikube start -p stopped-upgrade-412000\"\n"}
{"Time":"2023-05-31T12:03:02.360714-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.360716-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.360717-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:239: status error: exit status 85 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.36072-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:241: \"stopped-upgrade-412000\" host is not running, skipping log retrieval (state=\"* Profile \\\"stopped-upgrade-412000\\\" not found. Run \\\"minikube profile list\\\" to view all profiles.\\n  To start a cluster, run: \\\"minikube start -p stopped-upgrade-412000\\\"\")\n"}
{"Time":"2023-05-31T12:03:02.360722-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:175: Cleaning up \"stopped-upgrade-412000\" profile ...\n"}
{"Time":"2023-05-31T12:03:02.360724-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p stopped-upgrade-412000\n"}
{"Time":"2023-05-31T12:03:02.411392-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Run:  kubectl --context old-k8s-version-035000 describe deploy/metrics-server -n kube-system\n"}
{"Time":"2023-05-31T12:03:02.438194-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Non-zero exit: kubectl --context old-k8s-version-035000 describe deploy/metrics-server -n kube-system: exit status 1 (26.803625ms)\n"}
{"Time":"2023-05-31T12:03:02.438207-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.438209-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:02.438211-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \terror: context \"old-k8s-version-035000\" does not exist\n"}
{"Time":"2023-05-31T12:03:02.438212-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.438214-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:02.438216-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:217: failed to get info on auto-pause deployments. args \"kubectl --context old-k8s-version-035000 describe deploy/metrics-server -n kube-system\": exit status 1\n"}
{"Time":"2023-05-31T12:03:02.438218-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:221: addon did not load correct image. Expected to contain \" fake.domain/registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:02.43822-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:02.438236-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.467644-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (29.303667ms)\n"}
{"Time":"2023-05-31T12:03:02.467659-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.467661-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.467663-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:02.467664-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.467666-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.467667-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.467669-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:02.467688-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/Stop"}
{"Time":"2023-05-31T12:03:02.467691-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/Stop\n"}
{"Time":"2023-05-31T12:03:02.467775-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"    start_stop_delete_test.go:228: (dbg) Run:  out/minikube-darwin-arm64 stop -p old-k8s-version-035000 --alsologtostderr -v=3\n"}
{"Time":"2023-05-31T12:03:02.533261-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop"}
{"Time":"2023-05-31T12:03:02.533274-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop\n"}
{"Time":"2023-05-31T12:03:02.533298-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:02.563437-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (30.054042ms)\n"}
{"Time":"2023-05-31T12:03:02.563452-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.563455-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:02.563456-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:02.563458-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:02.563459-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:02.563461-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:02.563464-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:246: (dbg) Run:  out/minikube-darwin-arm64 addons enable dashboard -p old-k8s-version-035000 --images=MetricsScraper=registry.k8s.io/echoserver:1.4\n"}
{"Time":"2023-05-31T12:03:02.620795-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart"}
{"Time":"2023-05-31T12:03:02.620807-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/SecondStart\n"}
{"Time":"2023-05-31T12:03:02.620839-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Run:  out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0\n"}
{"Time":"2023-05-31T12:03:02.627451-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"--- FAIL: TestStoppedBinaryUpgrade (165.26s)\n"}
{"Time":"2023-05-31T12:03:02.627464-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Setup","Output":"    --- FAIL: TestStoppedBinaryUpgrade/Setup (161.46s)\n"}
{"Time":"2023-05-31T12:03:02.627467-07:00","Action":"fail","Test":"TestStoppedBinaryUpgrade/Setup","Elapsed":161.46}
{"Time":"2023-05-31T12:03:02.627471-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/Upgrade","Output":"    --- FAIL: TestStoppedBinaryUpgrade/Upgrade (3.36s)\n"}
{"Time":"2023-05-31T12:03:02.627473-07:00","Action":"fail","Test":"TestStoppedBinaryUpgrade/Upgrade","Elapsed":3.36}
{"Time":"2023-05-31T12:03:02.627474-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Output":"    --- FAIL: TestStoppedBinaryUpgrade/MinikubeLogs (0.13s)\n"}
{"Time":"2023-05-31T12:03:02.627477-07:00","Action":"fail","Test":"TestStoppedBinaryUpgrade/MinikubeLogs","Elapsed":0.13}
{"Time":"2023-05-31T12:03:02.627478-07:00","Action":"fail","Test":"TestStoppedBinaryUpgrade","Elapsed":165.26}
{"Time":"2023-05-31T12:03:02.627479-07:00","Action":"cont","Test":"TestStartStop/group/no-preload"}
{"Time":"2023-05-31T12:03:02.627481-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"=== CONT  TestStartStop/group/no-preload\n"}
{"Time":"2023-05-31T12:03:02.627511-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial"}
{"Time":"2023-05-31T12:03:02.627513-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"=== RUN   TestStartStop/group/no-preload/serial\n"}
{"Time":"2023-05-31T12:03:02.627561-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/FirstStart"}
{"Time":"2023-05-31T12:03:02.627562-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"=== RUN   TestStartStop/group/no-preload/serial/FirstStart\n"}
{"Time":"2023-05-31T12:03:02.627574-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Run:  out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:10.254599-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0: exit status 80 (7.633059042s)\n"}
{"Time":"2023-05-31T12:03:10.254626-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.254632-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.254636-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* [old-k8s-version-035000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:10.254641-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:10.254645-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:10.25465-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:10.254655-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:10.254659-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:10.254663-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:10.254668-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Kubernetes 1.27.2 is now available. If you would like to upgrade, specify: --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:10.254673-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:10.254677-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Starting control plane node old-k8s-version-035000 in cluster old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.254681-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"old-k8s-version-035000\" ...\n"}
{"Time":"2023-05-31T12:03:10.254685-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:10.254689-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:10.254693-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.254696-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"old-k8s-version-035000\" ...\n"}
{"Time":"2023-05-31T12:03:10.2547-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:10.254705-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:10.254708-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.254712-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.254715-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.254719-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.254722-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.254726-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:10.25473-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.648290    4486 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:10.254735-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.648420    4486 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:10.254739-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.648423    4486 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:10.254743-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.648426    4486 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:10.254757-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.648497    4486 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:10.254762-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.649743    4486 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:10.254767-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.667667    4486 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1953,\"bootTime\":1685557829,\"procs\":415,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:10.254775-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:02.667733    4486 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:10.254779-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.671135    4486 out.go:177] * [old-k8s-version-035000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:10.254783-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.683263    4486 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:10.254789-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.678691    4486 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:10.254793-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.697211    4486 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:10.254797-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.709696    4486 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:10.254802-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.718165    4486 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:10.254807-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.722377    4486 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:10.254811-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.725726    4486 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:10.254815-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.728952    4486 config.go:182] Loaded profile config \"old-k8s-version-035000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.16.0\n"}
{"Time":"2023-05-31T12:03:10.254819-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.741743    4486 out.go:177] * Kubernetes 1.27.2 is now available. If you would like to upgrade, specify: --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:10.254823-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.749661    4486 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:10.254827-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.761762    4486 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:10.254831-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.769663    4486 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:10.254842-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.769673    4486 start.go:875] validating driver \"qemu2\" against \u0026{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kubernetes"}
{"Time":"2023-05-31T12:03:10.254852-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"Config:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequ"}
{"Time":"2023-05-31T12:03:10.254858-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"ested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:10.254864-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.769738    4486 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:10.254869-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.772131    4486 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:10.254873-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.772161    4486 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:10.254877-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.772170    4486 cni.go:161] CNI unnecessary in this configuration, recommending no CNI\n"}
{"Time":"2023-05-31T12:03:10.25488-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.772174    4486 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:10.254889-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t{Name:old-k8s-version-035000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:true NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.16.0 ClusterName:old-k8s-version-035000 Namespace:"}
{"Time":"2023-05-31T12:03:10.254895-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.16.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Use"}
{"Time":"2023-05-31T12:03:10.254901-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"rs:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:10.254906-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.772271    4486 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:10.25491-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.786179    4486 out.go:177] * Starting control plane node old-k8s-version-035000 in cluster old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.254913-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790654    4486 preload.go:132] Checking if preload exists for k8s version v1.16.0 and runtime docker\n"}
{"Time":"2023-05-31T12:03:10.254917-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790685    4486 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:10.254921-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790808    4486 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:10.254927-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790896    4486 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.16.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:10.254931-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790904    4486 cache.go:60] Finished verifying existence of preloaded tar for  v1.16.0 on docker\n"}
{"Time":"2023-05-31T12:03:10.254935-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.790993    4486 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/old-k8s-version-035000/config.json ...\n"}
{"Time":"2023-05-31T12:03:10.254941-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.795148    4486 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:10.254945-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:02.795161    4486 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:10.254949-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.163347    4486 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 2.368168875s\n"}
{"Time":"2023-05-31T12:03:10.254953-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.163487    4486 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:10.254957-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.163503    4486 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:10.254962-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.164135    4486 fix.go:103] recreateIfNeeded on old-k8s-version-035000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:10.254965-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:05.164183    4486 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:10.254969-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.174801    4486 out.go:177] * Restarting existing qemu2 VM for \"old-k8s-version-035000\" ...\n"}
{"Time":"2023-05-31T12:03:10.254976-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.185076    4486 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=b2:96:bc:ef:62:9c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:10.254981-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.195039    4486 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:10.254985-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.195129    4486 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:10.254988-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.254993-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.195279    4486 fix.go:57] fixHost completed within 31.769833ms\n"}
{"Time":"2023-05-31T12:03:10.254996-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.195306    4486 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 31.901542ms\n"}
{"Time":"2023-05-31T12:03:10.255-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:05.195347    4486 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255005-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:05.195580    4486 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255011-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255015-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:05.195601    4486 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:10.255019-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.196007    4486 start.go:364] acquiring machines lock for old-k8s-version-035000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:10.255024-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.196421    4486 start.go:368] acquired machines lock for \"old-k8s-version-035000\" in 306.666µs\n"}
{"Time":"2023-05-31T12:03:10.255028-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.196559    4486 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:10.255032-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.196577    4486 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:10.255035-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.197304    4486 fix.go:103] recreateIfNeeded on old-k8s-version-035000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:10.25504-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:10.197331    4486 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:10.255044-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.204011    4486 out.go:177] * Restarting existing qemu2 VM for \"old-k8s-version-035000\" ...\n"}
{"Time":"2023-05-31T12:03:10.255052-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.208114    4486 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/qemu.pid -device virtio-net-pci,netdev=net0,mac=b2:96:bc:ef:62:9c -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/old-k8s-version-035000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:10.255058-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.217122    4486 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:10.255062-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.217187    4486 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:10.255065-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:10.255068-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.217288    4486 fix.go:57] fixHost completed within 20.709792ms\n"}
{"Time":"2023-05-31T12:03:10.255071-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.217309    4486 start.go:83] releasing machines lock for \"old-k8s-version-035000\", held for 20.86475ms\n"}
{"Time":"2023-05-31T12:03:10.255075-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:10.217507    4486 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p old-k8s-version-035000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255079-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p old-k8s-version-035000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255083-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.229976    4486 out.go:177] \n"}
{"Time":"2023-05-31T12:03:10.255087-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:10.234063    4486 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.25509-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:10.255096-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:10.234094    4486 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:10.255099-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:10.255103-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tW0531 12:03:10.235613    4486 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:10.255107-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255111-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:10.255115-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:10.255118-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255121-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:10.255125-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255129-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:10.255134-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:10.255139-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255142-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:10.255146-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:10.25515-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255154-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:10.255157-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:10.255161-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:10.255165-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tI0531 12:03:10.244934    4486 out.go:177] \n"}
{"Time":"2023-05-31T12:03:10.255168-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.255172-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:10.255178-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:259: failed to start minikube post-stop. args \"out/minikube-darwin-arm64 start -p old-k8s-version-035000 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --driver=qemu2  --kubernetes-version=v1.16.0\": exit status 80\n"}
{"Time":"2023-05-31T12:03:10.255183-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.255187-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.301748-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (46.99725ms)\n"}
{"Time":"2023-05-31T12:03:10.301765-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.301768-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.30177-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.301772-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.301773-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.301775-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.301779-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.30186-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop"}
{"Time":"2023-05-31T12:03:10.301864-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:10.302082-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:275: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"old-k8s-version-035000\" does not exist\n"}
{"Time":"2023-05-31T12:03:10.302086-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.30211-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.333431-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (31.242334ms)\n"}
{"Time":"2023-05-31T12:03:10.333447-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.333449-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.333451-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.333453-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.333454-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.333455-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.333457-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.333476-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop"}
{"Time":"2023-05-31T12:03:10.333478-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:10.333666-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:288: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"old-k8s-version-035000\" does not exist\n"}
{"Time":"2023-05-31T12:03:10.333707-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Run:  kubectl --context old-k8s-version-035000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\n"}
{"Time":"2023-05-31T12:03:10.362943-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Non-zero exit: kubectl --context old-k8s-version-035000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard: exit status 1 (29.166042ms)\n"}
{"Time":"2023-05-31T12:03:10.362958-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.36296-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:10.362962-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \terror: context \"old-k8s-version-035000\" does not exist\n"}
{"Time":"2023-05-31T12:03:10.362964-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.362965-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:10.362967-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:293: failed to get info on kubernetes-dashboard deployments. args \"kubectl --context old-k8s-version-035000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\": exit status 1\n"}
{"Time":"2023-05-31T12:03:10.362969-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:297: addon did not load correct image. Expected to contain \" registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:10.362971-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.363012-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.395678-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (32.619334ms)\n"}
{"Time":"2023-05-31T12:03:10.395693-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.395696-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.395698-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.395699-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.395701-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.395702-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.395704-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.395757-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages"}
{"Time":"2023-05-31T12:03:10.395759-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages\n"}
{"Time":"2023-05-31T12:03:10.395817-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 ssh -p old-k8s-version-035000 \"sudo crictl images -o json\"\n"}
{"Time":"2023-05-31T12:03:10.457156-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p old-k8s-version-035000 \"sudo crictl images -o json\": exit status 89 (61.258083ms)\n"}
{"Time":"2023-05-31T12:03:10.457173-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.457175-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.457177-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:10.457179-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \t  To start a cluster, run: \"minikube start -p old-k8s-version-035000\"\n"}
{"Time":"2023-05-31T12:03:10.45718-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.457182-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.457184-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to get images inside minikube. args \"out/minikube-darwin-arm64 ssh -p old-k8s-version-035000 \\\"sudo crictl images -o json\\\"\": exit status 89\n"}
{"Time":"2023-05-31T12:03:10.457187-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to decode images json invalid character '*' looking for beginning of value. output:\n"}
{"Time":"2023-05-31T12:03:10.457188-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:10.457189-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"          To start a cluster, run: \"minikube start -p old-k8s-version-035000\"\n"}
{"Time":"2023-05-31T12:03:10.45735-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: v1.16.0 images missing (-want +got):\n"}
{"Time":"2023-05-31T12:03:10.457354-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"          []string{\n"}
{"Time":"2023-05-31T12:03:10.457356-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/coredns:1.6.2\",\n"}
{"Time":"2023-05-31T12:03:10.457358-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/etcd:3.3.15-0\",\n"}
{"Time":"2023-05-31T12:03:10.457359-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/k8s-minikube/storage-provisioner:v5\",\n"}
{"Time":"2023-05-31T12:03:10.457361-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/kube-apiserver:v1.16.0\",\n"}
{"Time":"2023-05-31T12:03:10.457363-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/kube-controller-manager:v1.16.0\",\n"}
{"Time":"2023-05-31T12:03:10.457364-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/kube-proxy:v1.16.0\",\n"}
{"Time":"2023-05-31T12:03:10.457365-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/kube-scheduler:v1.16.0\",\n"}
{"Time":"2023-05-31T12:03:10.457367-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        - \t\"k8s.gcr.io/pause:3.1\",\n"}
{"Time":"2023-05-31T12:03:10.457368-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"          }\n"}
{"Time":"2023-05-31T12:03:10.45737-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.457372-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.485174-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (27.740958ms)\n"}
{"Time":"2023-05-31T12:03:10.485185-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.485187-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.485189-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.485191-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.485192-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.485193-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.485196-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.48523-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2023-05-31T12:03:10.485232-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2023-05-31T12:03:10.485254-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Run:  out/minikube-darwin-arm64 pause -p old-k8s-version-035000 --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T12:03:10.529669-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Non-zero exit: out/minikube-darwin-arm64 pause -p old-k8s-version-035000 --alsologtostderr -v=1: exit status 89 (44.301458ms)\n"}
{"Time":"2023-05-31T12:03:10.529681-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.529684-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.529685-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:10.529692-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \t  To start a cluster, run: \"minikube start -p old-k8s-version-035000\"\n"}
{"Time":"2023-05-31T12:03:10.529694-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.529695-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.529696-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:10.529697-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.511700    4612 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:10.529699-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512149    4612 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:10.529701-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512152    4612 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:10.529702-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512155    4612 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:10.529704-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512224    4612 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:10.529753-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512408    4612 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:10.52977-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512416    4612 mustload.go:65] Loading cluster: old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.529775-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.512582    4612 config.go:182] Loaded profile config \"old-k8s-version-035000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.16.0\n"}
{"Time":"2023-05-31T12:03:10.529791-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.516958    4612 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:10.529793-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tI0531 12:03:10.524912    4612 out.go:177]   To start a cluster, run: \"minikube start -p old-k8s-version-035000\"\n"}
{"Time":"2023-05-31T12:03:10.529795-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.529796-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:10.529798-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:311: out/minikube-darwin-arm64 pause -p old-k8s-version-035000 --alsologtostderr -v=1 failed: exit status 89\n"}
{"Time":"2023-05-31T12:03:10.529801-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.529804-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.557632-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (27.859416ms)\n"}
{"Time":"2023-05-31T12:03:10.557644-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.557646-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.557647-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.557648-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.55765-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.557656-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.557658-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.557661-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:10.557663-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.585484-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p old-k8s-version-035000 -n old-k8s-version-035000: exit status 7 (27.766833ms)\n"}
{"Time":"2023-05-31T12:03:10.585496-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.585499-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.5855-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:10.585502-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.585503-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.585505-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.585507-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    helpers_test.go:241: \"old-k8s-version-035000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:10.585602-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:162: (dbg) Run:  out/minikube-darwin-arm64 delete -p old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.689747-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:167: (dbg) Run:  kubectl config get-contexts old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.715454-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:167: (dbg) Non-zero exit: kubectl config get-contexts old-k8s-version-035000: exit status 1 (25.635833ms)\n"}
{"Time":"2023-05-31T12:03:10.715466-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.715468-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:10.715469-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2023-05-31T12:03:10.715471-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.715472-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:10.715474-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:10.715476-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \terror: context old-k8s-version-035000 not found\n"}
{"Time":"2023-05-31T12:03:10.715477-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:10.715478-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:10.715481-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:169: config context error: exit status 1 (may be ok)\n"}
{"Time":"2023-05-31T12:03:10.715509-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"    helpers_test.go:175: Cleaning up \"old-k8s-version-035000\" profile ...\n"}
{"Time":"2023-05-31T12:03:10.71552-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p old-k8s-version-035000\n"}
{"Time":"2023-05-31T12:03:10.950485-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs"}
{"Time":"2023-05-31T12:03:10.950498-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== CONT  TestStartStop/group/embed-certs\n"}
{"Time":"2023-05-31T12:03:10.950551-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial"}
{"Time":"2023-05-31T12:03:10.950555-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"=== RUN   TestStartStop/group/embed-certs/serial\n"}
{"Time":"2023-05-31T12:03:10.95057-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/FirstStart"}
{"Time":"2023-05-31T12:03:10.950572-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"=== RUN   TestStartStop/group/embed-certs/serial/FirstStart\n"}
{"Time":"2023-05-31T12:03:10.950624-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Run:  out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734028-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (10.104960542s)\n"}
{"Time":"2023-05-31T12:03:12.73405-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.734064-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:12.734069-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* [no-preload-457000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:12.734073-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:12.734077-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:12.734084-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:12.734088-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:12.734092-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:12.734096-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:12.7341-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:12.734104-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:12.734108-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Starting control plane node no-preload-457000 in cluster no-preload-457000\n"}
{"Time":"2023-05-31T12:03:12.734112-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:12.734116-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:12.73412-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:12.734124-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734128-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Deleting \"no-preload-457000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:12.734132-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:12.734135-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:12.734139-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:12.734143-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734146-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.73415-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734153-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.734156-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:12.73416-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:12.734164-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.655561    4487 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:12.734168-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.655684    4487 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:12.734173-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.655687    4487 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:12.734177-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.655689    4487 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:12.734182-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.655755    4487 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:12.734186-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.656726    4487 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:12.734191-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.672812    4487 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1953,\"bootTime\":1685557829,\"procs\":416,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:12.7342-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:02.672889    4487 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:12.734204-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.683263    4487 out.go:177] * [no-preload-457000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:12.734207-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.689644    4487 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:12.734211-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.689730    4487 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:12.734215-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.701981    4487 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:12.734219-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.714497    4487 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:12.734223-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.718169    4487 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:12.734227-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.722380    4487 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:12.734231-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.725731    4487 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:12.734236-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.728961    4487 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734241-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.729031    4487 config.go:182] Loaded profile config \"old-k8s-version-035000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.16.0\n"}
{"Time":"2023-05-31T12:03:12.734246-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.729079    4487 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:12.73425-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.733705    4487 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:12.734256-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.745670    4487 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:12.734263-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.745676    4487 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:12.734269-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.745682    4487 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:12.734274-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.747888    4487 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:12.734278-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.753708    4487 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:12.734282-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765680    4487 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:12.734287-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765711    4487 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:12.734292-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765721    4487 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:12.734296-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765728    4487 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:03:12.7343-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765739    4487 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:12.734309-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t{Name:no-preload-457000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:no-preload-457000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:d"}
{"Time":"2023-05-31T12:03:12.734319-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"ocker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:12.734327-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.765867    4487 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734332-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.773734    4487 out.go:177] * Starting control plane node no-preload-457000 in cluster no-preload-457000\n"}
{"Time":"2023-05-31T12:03:12.734336-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786178    4487 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:12.734341-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786273    4487 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/no-preload-457000/config.json ...\n"}
{"Time":"2023-05-31T12:03:12.734346-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786303    4487 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/no-preload-457000/config.json: {Name:mkd3fb9cbac82007a10f92dc8002e87d7dbcc575 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734351-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786299    4487 cache.go:107] acquiring lock: {Name:mk8806405f390f3cec717bbe4f9b348a64d9d691 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734357-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786300    4487 cache.go:107] acquiring lock: {Name:mk4e57cd1880c94c383c0b1e52bd7e202b9da6fe Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734362-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786344    4487 cache.go:107] acquiring lock: {Name:mk6f1a4e48608c2bc34652b13dfddaf46771e738 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734368-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786369    4487 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 exists\n"}
{"Time":"2023-05-31T12:03:12.734373-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786386    4487 cache.go:96] cache image \"gcr.io/k8s-minikube/storage-provisioner:v5\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5\" took 90.458µs\n"}
{"Time":"2023-05-31T12:03:12.734379-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786396    4487 cache.go:80] save to tar file gcr.io/k8s-minikube/storage-provisioner:v5 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734384-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786402    4487 cache.go:107] acquiring lock: {Name:mk4e2c8033f22a1345a66e475f0b986792009dd1 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.73439-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786727    4487 cache.go:107] acquiring lock: {Name:mkd6d6d76dfe06e2a4cdeef004ff024e35e8fa74 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734395-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786767    4487 cache.go:107] acquiring lock: {Name:mk36caadea503442045aa03db6c21e439c0828f5 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734402-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786447    4487 cache.go:107] acquiring lock: {Name:mk88824c046985da931a06e856e34a78f3de834e Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734407-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786826    4487 cache.go:107] acquiring lock: {Name:mk7e34c0eeb0af9ac98066074618b84b358e6e32 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734411-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786949    4487 image.go:134] retrieving image: registry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734415-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786953    4487 image.go:134] retrieving image: registry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734422-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.786949    4487 image.go:134] retrieving image: registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T12:03:12.734426-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.787153    4487 image.go:134] retrieving image: registry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.73443-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790736    4487 image.go:134] retrieving image: registry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T12:03:12.734435-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790758    4487 image.go:134] retrieving image: registry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T12:03:12.734439-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790774    4487 image.go:134] retrieving image: registry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734443-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790881    4487 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:12.734448-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790901    4487 start.go:364] acquiring machines lock for no-preload-457000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734453-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790943    4487 start.go:368] acquired machines lock for \"no-preload-457000\" in 34µs\n"}
{"Time":"2023-05-31T12:03:12.734465-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.790964    4487 start.go:93] Provisioning new machine with config: \u0026{Name:no-preload-457000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:12.734474-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:no-preload-457000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountM"}
{"Time":"2023-05-31T12:03:12.734481-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"Size:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:12.73449-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.791001    4487 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:12.734495-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.798669    4487 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:12.7345-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.804459    4487 image.go:177] daemon lookup for registry.k8s.io/pause:3.9: Error response from daemon: No such image: registry.k8s.io/pause:3.9\n"}
{"Time":"2023-05-31T12:03:12.734506-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.804875    4487 image.go:177] daemon lookup for registry.k8s.io/etcd:3.5.7-0: Error response from daemon: No such image: registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T12:03:12.734511-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.805627    4487 image.go:177] daemon lookup for registry.k8s.io/kube-proxy:v1.27.2: Error response from daemon: No such image: registry.k8s.io/kube-proxy:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734516-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.805665    4487 image.go:177] daemon lookup for registry.k8s.io/kube-apiserver:v1.27.2: Error response from daemon: No such image: registry.k8s.io/kube-apiserver:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734521-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.805743    4487 image.go:177] daemon lookup for registry.k8s.io/kube-scheduler:v1.27.2: Error response from daemon: No such image: registry.k8s.io/kube-scheduler:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734526-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.805830    4487 image.go:177] daemon lookup for registry.k8s.io/coredns/coredns:v1.10.1: Error response from daemon: No such image: registry.k8s.io/coredns/coredns:v1.10.1\n"}
{"Time":"2023-05-31T12:03:12.734533-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.806523    4487 image.go:177] daemon lookup for registry.k8s.io/kube-controller-manager:v1.27.2: Error response from daemon: No such image: registry.k8s.io/kube-controller-manager:v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734538-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816656    4487 start.go:159] libmachine.API.Create for \"no-preload-457000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:12.734545-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816685    4487 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:12.73455-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816754    4487 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:12.734554-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816777    4487 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:12.734558-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816788    4487 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:12.734562-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816846    4487 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:12.734567-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816862    4487 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:12.734573-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.816871    4487 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:12.734578-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:02.817224    4487 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:12.734583-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.017866    4487 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:12.734587-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.144814    4487 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:12.734591-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.144831    4487 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:12.734596-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.144999    4487 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.734601-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.153780    4487 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:12.734605-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.153799    4487 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:12.734609-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.153873    4487 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:12.734614-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.161204    4487 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:12.734618-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734622-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.161217    4487 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:12.734626-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.161233    4487 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.734631-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.161242    4487 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:12.734638-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.161286    4487 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/qemu.pid -device virtio-net-pci,netdev=net0,mac=6a:eb:9b:30:ca:d0 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.734645-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.162882    4487 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:12.734649-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.162906    4487 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:12.734655-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734659-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.162923    4487 client.go:171] LocalClient.Create took 346.236458ms\n"}
{"Time":"2023-05-31T12:03:12.734664-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.859347    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9\n"}
{"Time":"2023-05-31T12:03:12.734669-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.921084    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.7-0\n"}
{"Time":"2023-05-31T12:03:12.734675-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.970539    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734679-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.996384    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9 exists\n"}
{"Time":"2023-05-31T12:03:12.734684-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.996401    4487 cache.go:96] cache image \"registry.k8s.io/pause:3.9\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9\" took 1.210020792s\n"}
{"Time":"2023-05-31T12:03:12.734689-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:03.996408    4487 cache.go:80] save to tar file registry.k8s.io/pause:3.9 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734695-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:04.166155    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734699-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:04.322948    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734705-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:04.574184    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1\n"}
{"Time":"2023-05-31T12:03:12.73471-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:04.795927    4487 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2\n"}
{"Time":"2023-05-31T12:03:12.734719-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:05.163085    4487 start.go:128] duration metric: createHost completed in 2.372087916s\n"}
{"Time":"2023-05-31T12:03:12.734723-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:05.163133    4487 start.go:83] releasing machines lock for \"no-preload-457000\", held for 2.372215167s\n"}
{"Time":"2023-05-31T12:03:12.734728-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:05.163174    4487 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.734733-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:05.179726    4487 out.go:177] * Deleting \"no-preload-457000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:12.734738-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:05.203852    4487 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.734744-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.734748-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:05.203887    4487 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:12.734753-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:06.425983    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:12.734758-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:06.426037    4487 cache.go:96] cache image \"registry.k8s.io/kube-scheduler:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2\" took 3.639773833s\n"}
{"Time":"2023-05-31T12:03:12.734763-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:06.426079    4487 cache.go:80] save to tar file registry.k8s.io/kube-scheduler:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734768-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.345329    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:12.734773-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.345373    4487 cache.go:96] cache image \"registry.k8s.io/kube-proxy:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2\" took 4.559028709s\n"}
{"Time":"2023-05-31T12:03:12.734778-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.345399    4487 cache.go:80] save to tar file registry.k8s.io/kube-proxy:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734783-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.493610    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1 exists\n"}
{"Time":"2023-05-31T12:03:12.734789-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.493650    4487 cache.go:96] cache image \"registry.k8s.io/coredns/coredns:v1.10.1\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1\" took 4.707266834s\n"}
{"Time":"2023-05-31T12:03:12.734794-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.493675    4487 cache.go:80] save to tar file registry.k8s.io/coredns/coredns:v1.10.1 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734799-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.876638    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:12.734804-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.876682    4487 cache.go:96] cache image \"registry.k8s.io/kube-controller-manager:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2\" took 5.090456416s\n"}
{"Time":"2023-05-31T12:03:12.73481-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:07.876704    4487 cache.go:80] save to tar file registry.k8s.io/kube-controller-manager:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734818-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:08.532144    4487 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:12.734825-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:08.532194    4487 cache.go:96] cache image \"registry.k8s.io/kube-apiserver:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2\" took 5.745869792s\n"}
{"Time":"2023-05-31T12:03:12.734831-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:08.532221    4487 cache.go:80] save to tar file registry.k8s.io/kube-apiserver:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:12.734838-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.204328    4487 start.go:364] acquiring machines lock for no-preload-457000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:12.734843-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.217386    4487 start.go:368] acquired machines lock for \"no-preload-457000\" in 12.994375ms\n"}
{"Time":"2023-05-31T12:03:12.734856-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.217474    4487 start.go:93] Provisioning new machine with config: \u0026{Name:no-preload-457000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:12.734865-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:no-preload-457000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountM"}
{"Time":"2023-05-31T12:03:12.734873-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"Size:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:12.734878-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.217686    4487 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:12.734883-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.225937    4487 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:12.734889-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268630    4487 start.go:159] libmachine.API.Create for \"no-preload-457000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:12.734893-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268672    4487 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:12.734898-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268819    4487 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:12.734903-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268860    4487 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:12.734908-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268882    4487 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:12.734912-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268964    4487 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:12.734917-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.268993    4487 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:12.734922-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.269007    4487 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:12.734927-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.269489    4487 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:12.734932-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.424604    4487 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:12.734937-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.674409    4487 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:12.734941-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.674417    4487 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:12.734947-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.674600    4487 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.734952-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.683580    4487 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:12.734958-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.683598    4487 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:12.734962-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.683666    4487 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:12.734967-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.691400    4487 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:12.734971-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.734976-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.691424    4487 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:12.734981-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.691445    4487 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.734986-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.691452    4487 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:12.734993-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.691498    4487 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/qemu.pid -device virtio-net-pci,netdev=net0,mac=da:e1:b1:76:8e:db -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:12.735-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.693213    4487 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:12.735005-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.693227    4487 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:12.73501-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:12.735014-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:10.693251    4487 client.go:171] LocalClient.Create took 424.580875ms\n"}
{"Time":"2023-05-31T12:03:12.735019-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:12.694899    4487 start.go:128] duration metric: createHost completed in 2.477194167s\n"}
{"Time":"2023-05-31T12:03:12.735024-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:12.694961    4487 start.go:83] releasing machines lock for \"no-preload-457000\", held for 2.477583292s\n"}
{"Time":"2023-05-31T12:03:12.735029-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:12.695201    4487 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p no-preload-457000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.735035-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p no-preload-457000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.735041-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:12.702636    4487 out.go:177] \n"}
{"Time":"2023-05-31T12:03:12.735046-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:12.709757    4487 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.735052-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.735061-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:12.709799    4487 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:12.735065-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:12.735071-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tW0531 12:03:12.712624    4487 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:12.735077-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735081-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:12.735088-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:12.735093-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735097-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:12.735102-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735107-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:12.735113-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:12.73512-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735125-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:12.735129-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:12.735134-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735138-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:12.735143-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:12.735148-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:12.735154-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tI0531 12:03:12.721701    4487 out.go:177] \n"}
{"Time":"2023-05-31T12:03:12.735159-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.735163-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:12.735168-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    start_stop_delete_test.go:188: failed starting minikube -first start-. args \"out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:12.735173-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:12.735178-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:12.782523-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (48.353917ms)\n"}
{"Time":"2023-05-31T12:03:12.782539-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.782541-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:12.782544-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:12.782545-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.782547-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:12.78255-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:12.782552-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:12.782645-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/DeployApp"}
{"Time":"2023-05-31T12:03:12.78266-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"=== RUN   TestStartStop/group/no-preload/serial/DeployApp\n"}
{"Time":"2023-05-31T12:03:12.782713-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Run:  kubectl --context no-preload-457000 create -f testdata/busybox.yaml\n"}
{"Time":"2023-05-31T12:03:12.811726-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Non-zero exit: kubectl --context no-preload-457000 create -f testdata/busybox.yaml: exit status 1 (28.957375ms)\n"}
{"Time":"2023-05-31T12:03:12.811743-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.811745-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:12.811747-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \terror: context \"no-preload-457000\" does not exist\n"}
{"Time":"2023-05-31T12:03:12.811749-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.81175-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:12.811752-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    start_stop_delete_test.go:196: kubectl --context no-preload-457000 create -f testdata/busybox.yaml failed: exit status 1\n"}
{"Time":"2023-05-31T12:03:12.811759-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:12.811761-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:12.842694-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (30.856375ms)\n"}
{"Time":"2023-05-31T12:03:12.842715-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.842717-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:12.842719-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:12.84272-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.842722-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:12.842723-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:12.842726-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:12.842728-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:12.84273-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:12.872791-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (29.966208ms)\n"}
{"Time":"2023-05-31T12:03:12.872806-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.872808-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:12.872809-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:12.872823-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.872825-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:12.872826-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:12.872829-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:12.872835-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive"}
{"Time":"2023-05-31T12:03:12.872837-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"=== RUN   TestStartStop/group/no-preload/serial/EnableAddonWhileActive\n"}
{"Time":"2023-05-31T12:03:12.872903-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:205: (dbg) Run:  out/minikube-darwin-arm64 addons enable metrics-server -p no-preload-457000 --images=MetricsServer=registry.k8s.io/echoserver:1.4 --registries=MetricsServer=fake.domain\n"}
{"Time":"2023-05-31T12:03:12.957127-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Run:  kubectl --context no-preload-457000 describe deploy/metrics-server -n kube-system\n"}
{"Time":"2023-05-31T12:03:12.985592-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Non-zero exit: kubectl --context no-preload-457000 describe deploy/metrics-server -n kube-system: exit status 1 (28.396ms)\n"}
{"Time":"2023-05-31T12:03:12.985606-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.985609-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:12.985615-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \terror: context \"no-preload-457000\" does not exist\n"}
{"Time":"2023-05-31T12:03:12.985617-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:12.985618-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:12.98562-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:217: failed to get info on auto-pause deployments. args \"kubectl --context no-preload-457000 describe deploy/metrics-server -n kube-system\": exit status 1\n"}
{"Time":"2023-05-31T12:03:12.985623-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:221: addon did not load correct image. Expected to contain \" fake.domain/registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:12.985624-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:12.985627-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:13.014757-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (29.05175ms)\n"}
{"Time":"2023-05-31T12:03:13.014772-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:13.014774-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:13.014776-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:13.014777-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:13.014779-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:13.01478-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:13.014783-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:13.014805-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/Stop"}
{"Time":"2023-05-31T12:03:13.014807-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Stop","Output":"=== RUN   TestStartStop/group/no-preload/serial/Stop\n"}
{"Time":"2023-05-31T12:03:13.014857-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Stop","Output":"    start_stop_delete_test.go:228: (dbg) Run:  out/minikube-darwin-arm64 stop -p no-preload-457000 --alsologtostderr -v=3\n"}
{"Time":"2023-05-31T12:03:13.077368-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop"}
{"Time":"2023-05-31T12:03:13.07738-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/no-preload/serial/EnableAddonAfterStop\n"}
{"Time":"2023-05-31T12:03:13.077416-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:13.105592-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (28.081292ms)\n"}
{"Time":"2023-05-31T12:03:13.105605-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:13.105607-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:13.105609-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:13.105611-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:13.105612-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:13.105614-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:13.105616-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:246: (dbg) Run:  out/minikube-darwin-arm64 addons enable dashboard -p no-preload-457000 --images=MetricsScraper=registry.k8s.io/echoserver:1.4\n"}
{"Time":"2023-05-31T12:03:13.162345-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/SecondStart"}
{"Time":"2023-05-31T12:03:13.162357-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"=== RUN   TestStartStop/group/no-preload/serial/SecondStart\n"}
{"Time":"2023-05-31T12:03:13.162402-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Run:  out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:20.144112-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (6.980787458s)\n"}
{"Time":"2023-05-31T12:03:20.144139-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.144144-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.144149-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* [no-preload-457000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:20.144154-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:20.144165-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:20.14417-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:20.144174-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:20.144178-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:20.144182-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:20.144186-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:20.14419-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* Starting control plane node no-preload-457000 in cluster no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.144199-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"no-preload-457000\" ...\n"}
{"Time":"2023-05-31T12:03:20.144203-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:20.144207-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:20.144211-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.144215-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"no-preload-457000\" ...\n"}
{"Time":"2023-05-31T12:03:20.144219-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:20.144223-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:20.144226-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.14423-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.144234-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.144237-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.144241-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.144244-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:20.144248-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.188606    4667 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:20.144252-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.188733    4667 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:20.144256-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.188736    4667 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:20.14426-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.188738    4667 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:20.144264-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.188815    4667 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:20.144268-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.189845    4667 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:20.144275-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.205017    4667 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1964,\"bootTime\":1685557829,\"procs\":412,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:20.144283-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:13.205099    4667 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:20.144287-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.210577    4667 out.go:177] * [no-preload-457000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:20.144291-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.216573    4667 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:20.144298-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.216607    4667 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:20.144302-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.224515    4667 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:20.144306-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.232481    4667 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:20.14431-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.238902    4667 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:20.144315-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.247572    4667 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:20.144319-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.255544    4667 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:20.144323-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.260811    4667 config.go:182] Loaded profile config \"no-preload-457000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:20.144328-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.261116    4667 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:20.144333-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.265567    4667 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:20.144337-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.275528    4667 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:20.144348-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.275533    4667 start.go:875] validating driver \"qemu2\" against \u0026{Name:no-preload-457000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:03:20.144357-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:no-preload-457000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:"}
{"Time":"2023-05-31T12:03:20.144367-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:20.144372-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.275603    4667 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:20.144378-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.278093    4667 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:20.144383-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.278125    4667 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:20.144387-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.278134    4667 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:20.144392-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.278140    4667 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:20.144404-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t{Name:no-preload-457000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:no-preload-457000 Namespace:default A"}
{"Time":"2023-05-31T12:03:20.144412-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"PIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/mi"}
{"Time":"2023-05-31T12:03:20.144419-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"nikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:20.144425-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.278249    4667 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.14443-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.286548    4667 out.go:177] * Starting control plane node no-preload-457000 in cluster no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.144434-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290586    4667 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:20.144438-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290670    4667 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/no-preload-457000/config.json ...\n"}
{"Time":"2023-05-31T12:03:20.144443-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290711    4667 cache.go:107] acquiring lock: {Name:mk8806405f390f3cec717bbe4f9b348a64d9d691 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144448-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290714    4667 cache.go:107] acquiring lock: {Name:mk4e2c8033f22a1345a66e475f0b986792009dd1 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144453-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290792    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 exists\n"}
{"Time":"2023-05-31T12:03:20.144458-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290806    4667 cache.go:96] cache image \"gcr.io/k8s-minikube/storage-provisioner:v5\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5\" took 98.125µs\n"}
{"Time":"2023-05-31T12:03:20.144465-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290730    4667 cache.go:107] acquiring lock: {Name:mk4e57cd1880c94c383c0b1e52bd7e202b9da6fe Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144469-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290825    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:20.144475-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290833    4667 cache.go:96] cache image \"registry.k8s.io/kube-apiserver:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2\" took 135.375µs\n"}
{"Time":"2023-05-31T12:03:20.144482-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290838    4667 cache.go:80] save to tar file registry.k8s.io/kube-apiserver:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-apiserver_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144487-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290821    4667 cache.go:107] acquiring lock: {Name:mk7e34c0eeb0af9ac98066074618b84b358e6e32 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144492-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290786    4667 cache.go:107] acquiring lock: {Name:mk88824c046985da931a06e856e34a78f3de834e Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144497-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290856    4667 cache.go:107] acquiring lock: {Name:mkd6d6d76dfe06e2a4cdeef004ff024e35e8fa74 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144502-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290813    4667 cache.go:80] save to tar file gcr.io/k8s-minikube/storage-provisioner:v5 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/gcr.io/k8s-minikube/storage-provisioner_v5 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144507-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290894    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1 exists\n"}
{"Time":"2023-05-31T12:03:20.144512-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290900    4667 cache.go:96] cache image \"registry.k8s.io/coredns/coredns:v1.10.1\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1\" took 80.375µs\n"}
{"Time":"2023-05-31T12:03:20.144518-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290905    4667 cache.go:80] save to tar file registry.k8s.io/coredns/coredns:v1.10.1 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/coredns/coredns_v1.10.1 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144524-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290831    4667 cache.go:107] acquiring lock: {Name:mk6f1a4e48608c2bc34652b13dfddaf46771e738 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144529-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290908    4667 cache.go:107] acquiring lock: {Name:mk36caadea503442045aa03db6c21e439c0828f5 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144534-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290975    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:20.144538-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290983    4667 cache.go:96] cache image \"registry.k8s.io/kube-scheduler:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2\" took 151.333µs\n"}
{"Time":"2023-05-31T12:03:20.144544-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290988    4667 cache.go:80] save to tar file registry.k8s.io/kube-scheduler:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-scheduler_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144549-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290990    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9 exists\n"}
{"Time":"2023-05-31T12:03:20.144553-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291000    4667 cache.go:96] cache image \"registry.k8s.io/pause:3.9\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9\" took 227.791µs\n"}
{"Time":"2023-05-31T12:03:20.144559-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291011    4667 cache.go:80] save to tar file registry.k8s.io/pause:3.9 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/pause_3.9 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144564-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.290988    4667 image.go:134] retrieving image: registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T12:03:20.144568-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291039    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:20.144627-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291044    4667 cache.go:96] cache image \"registry.k8s.io/kube-controller-manager:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2\" took 330.25µs\n"}
{"Time":"2023-05-31T12:03:20.144661-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291050    4667 cache.go:80] save to tar file registry.k8s.io/kube-controller-manager:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-controller-manager_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144666-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291063    4667 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:20.144671-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291078    4667 start.go:364] acquiring machines lock for no-preload-457000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144677-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291115    4667 cache.go:115] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2 exists\n"}
{"Time":"2023-05-31T12:03:20.144695-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291130    4667 cache.go:96] cache image \"registry.k8s.io/kube-proxy:v1.27.2\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2\" took 248.167µs\n"}
{"Time":"2023-05-31T12:03:20.144701-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.291137    4667 cache.go:80] save to tar file registry.k8s.io/kube-proxy:v1.27.2 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/kube-proxy_v1.27.2 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144705-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:13.301328    4667 image.go:177] daemon lookup for registry.k8s.io/etcd:3.5.7-0: Error response from daemon: No such image: registry.k8s.io/etcd:3.5.7-0\n"}
{"Time":"2023-05-31T12:03:20.144709-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:14.318530    4667 cache.go:162] opening:  /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.7-0\n"}
{"Time":"2023-05-31T12:03:20.144713-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.033790    4667 start.go:368] acquired machines lock for \"no-preload-457000\" in 1.742711s\n"}
{"Time":"2023-05-31T12:03:20.14472-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.033910    4667 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:20.144725-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.033942    4667 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:20.144729-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.034564    4667 fix.go:103] recreateIfNeeded on no-preload-457000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:20.144733-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:15.034599    4667 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:20.144737-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.049708    4667 out.go:177] * Restarting existing qemu2 VM for \"no-preload-457000\" ...\n"}
{"Time":"2023-05-31T12:03:20.144743-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.061943    4667 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/qemu.pid -device virtio-net-pci,netdev=net0,mac=da:e1:b1:76:8e:db -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:20.144751-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.071500    4667 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:20.144755-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.071567    4667 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:20.144759-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.144763-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.071685    4667 fix.go:57] fixHost completed within 37.752375ms\n"}
{"Time":"2023-05-31T12:03:20.144768-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.071706    4667 start.go:83] releasing machines lock for \"no-preload-457000\", held for 37.878792ms\n"}
{"Time":"2023-05-31T12:03:20.144773-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:15.071736    4667 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144777-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:15.071903    4667 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144781-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144785-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:15.071918    4667 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:20.144813-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:19.574276    4667 cache.go:157] /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.7-0 exists\n"}
{"Time":"2023-05-31T12:03:20.144822-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:19.574321    4667 cache.go:96] cache image \"registry.k8s.io/etcd:3.5.7-0\" -\u003e \"/Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.7-0\" took 6.283581625s\n"}
{"Time":"2023-05-31T12:03:20.144828-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:19.574385    4667 cache.go:80] save to tar file registry.k8s.io/etcd:3.5.7-0 -\u003e /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/images/arm64/registry.k8s.io/etcd_3.5.7-0 succeeded\n"}
{"Time":"2023-05-31T12:03:20.144832-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:19.574435    4667 cache.go:87] Successfully saved all images to host disk.\n"}
{"Time":"2023-05-31T12:03:20.14484-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.074007    4667 start.go:364] acquiring machines lock for no-preload-457000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:20.144846-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.074501    4667 start.go:368] acquired machines lock for \"no-preload-457000\" in 372.583µs\n"}
{"Time":"2023-05-31T12:03:20.144851-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.074655    4667 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:20.144855-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.074676    4667 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:20.144858-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.075444    4667 fix.go:103] recreateIfNeeded on no-preload-457000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:20.144862-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:20.075474    4667 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:20.144866-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.087034    4667 out.go:177] * Restarting existing qemu2 VM for \"no-preload-457000\" ...\n"}
{"Time":"2023-05-31T12:03:20.144871-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.091303    4667 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/qemu.pid -device virtio-net-pci,netdev=net0,mac=da:e1:b1:76:8e:db -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/no-preload-457000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:20.144908-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.100808    4667 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:20.144916-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.100866    4667 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:20.144923-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:20.144929-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.100943    4667 fix.go:57] fixHost completed within 26.267375ms\n"}
{"Time":"2023-05-31T12:03:20.144934-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.100964    4667 start.go:83] releasing machines lock for \"no-preload-457000\", held for 26.437ms\n"}
{"Time":"2023-05-31T12:03:20.14494-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:20.101154    4667 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p no-preload-457000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144946-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p no-preload-457000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144952-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.118142    4667 out.go:177] \n"}
{"Time":"2023-05-31T12:03:20.144957-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:20.122042    4667 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144962-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:20.144968-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:20.122080    4667 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:20.144972-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:20.144978-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tW0531 12:03:20.124048    4667 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:20.145003-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145008-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:20.145013-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:20.145017-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145022-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:20.145026-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145032-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:20.145038-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:20.145044-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145048-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:20.145053-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:20.145057-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145062-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:20.145066-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:20.145071-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:20.145077-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tI0531 12:03:20.133013    4667 out.go:177] \n"}
{"Time":"2023-05-31T12:03:20.145084-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.145088-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:20.145097-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    start_stop_delete_test.go:259: failed to start minikube post-stop. args \"out/minikube-darwin-arm64 start -p no-preload-457000 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:20.145102-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.145107-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.1936-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (49.326666ms)\n"}
{"Time":"2023-05-31T12:03:20.193636-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.19364-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.193646-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.193648-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.19365-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.193652-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.193655-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.193659-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop"}
{"Time":"2023-05-31T12:03:20.193661-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/no-preload/serial/UserAppExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:20.193962-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:275: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"no-preload-457000\" does not exist\n"}
{"Time":"2023-05-31T12:03:20.193981-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.193987-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.224759-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (30.713375ms)\n"}
{"Time":"2023-05-31T12:03:20.224778-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.22478-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.224782-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.224784-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.224786-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.224799-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.224801-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.224805-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop"}
{"Time":"2023-05-31T12:03:20.224807-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/no-preload/serial/AddonExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:20.22503-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:288: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"no-preload-457000\" does not exist\n"}
{"Time":"2023-05-31T12:03:20.225102-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Run:  kubectl --context no-preload-457000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\n"}
{"Time":"2023-05-31T12:03:20.25359-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Non-zero exit: kubectl --context no-preload-457000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard: exit status 1 (28.424042ms)\n"}
{"Time":"2023-05-31T12:03:20.253606-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.253608-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:20.25361-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \terror: context \"no-preload-457000\" does not exist\n"}
{"Time":"2023-05-31T12:03:20.253612-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.253613-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:20.253616-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:293: failed to get info on kubernetes-dashboard deployments. args \"kubectl --context no-preload-457000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\": exit status 1\n"}
{"Time":"2023-05-31T12:03:20.253618-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:297: addon did not load correct image. Expected to contain \" registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:20.25362-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.253658-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.283805-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (30.079042ms)\n"}
{"Time":"2023-05-31T12:03:20.283821-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.283823-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.283825-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.283826-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.283828-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.283829-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.283837-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.283861-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages"}
{"Time":"2023-05-31T12:03:20.283864-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/no-preload/serial/VerifyKubernetesImages\n"}
{"Time":"2023-05-31T12:03:20.283926-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 ssh -p no-preload-457000 \"sudo crictl images -o json\"\n"}
{"Time":"2023-05-31T12:03:20.337876-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p no-preload-457000 \"sudo crictl images -o json\": exit status 89 (53.877959ms)\n"}
{"Time":"2023-05-31T12:03:20.337891-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.337893-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.337894-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:20.337896-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \t  To start a cluster, run: \"minikube start -p no-preload-457000\"\n"}
{"Time":"2023-05-31T12:03:20.337898-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.337899-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.3379-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to get images inside minikube. args \"out/minikube-darwin-arm64 ssh -p no-preload-457000 \\\"sudo crictl images -o json\\\"\": exit status 89\n"}
{"Time":"2023-05-31T12:03:20.337904-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to decode images json invalid character '*' looking for beginning of value. output:\n"}
{"Time":"2023-05-31T12:03:20.337949-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:20.337952-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"          To start a cluster, run: \"minikube start -p no-preload-457000\"\n"}
{"Time":"2023-05-31T12:03:20.338041-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: v1.27.2 images missing (-want +got):\n"}
{"Time":"2023-05-31T12:03:20.338079-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"          []string{\n"}
{"Time":"2023-05-31T12:03:20.338081-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"gcr.io/k8s-minikube/storage-provisioner:v5\",\n"}
{"Time":"2023-05-31T12:03:20.338093-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/coredns/coredns:v1.10.1\",\n"}
{"Time":"2023-05-31T12:03:20.338095-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/etcd:3.5.7-0\",\n"}
{"Time":"2023-05-31T12:03:20.338097-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-apiserver:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:20.338098-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-controller-manager:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:20.338099-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-proxy:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:20.338101-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-scheduler:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:20.338102-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/pause:3.9\",\n"}
{"Time":"2023-05-31T12:03:20.338104-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"          }\n"}
{"Time":"2023-05-31T12:03:20.338105-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.338108-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.367236-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (29.130583ms)\n"}
{"Time":"2023-05-31T12:03:20.367248-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.367251-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.367253-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.367254-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.367256-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.367257-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.367259-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.367281-07:00","Action":"run","Test":"TestStartStop/group/no-preload/serial/Pause"}
{"Time":"2023-05-31T12:03:20.367283-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"=== RUN   TestStartStop/group/no-preload/serial/Pause\n"}
{"Time":"2023-05-31T12:03:20.367405-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Run:  out/minikube-darwin-arm64 pause -p no-preload-457000 --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T12:03:20.407704-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Non-zero exit: out/minikube-darwin-arm64 pause -p no-preload-457000 --alsologtostderr -v=1: exit status 89 (40.261375ms)\n"}
{"Time":"2023-05-31T12:03:20.407716-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.407718-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.40772-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:20.407722-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \t  To start a cluster, run: \"minikube start -p no-preload-457000\"\n"}
{"Time":"2023-05-31T12:03:20.407723-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.407725-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.407726-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:20.407728-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394317    4766 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:20.407729-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394420    4766 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:20.407731-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394423    4766 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:20.407732-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394425    4766 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:20.407733-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394499    4766 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:20.407735-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394687    4766 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:20.407737-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394696    4766 mustload.go:65] Loading cluster: no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.407738-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.394872    4766 config.go:182] Loaded profile config \"no-preload-457000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:20.40774-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.399065    4766 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:20.407741-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tI0531 12:03:20.403169    4766 out.go:177]   To start a cluster, run: \"minikube start -p no-preload-457000\"\n"}
{"Time":"2023-05-31T12:03:20.407743-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.407744-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:20.407746-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    start_stop_delete_test.go:311: out/minikube-darwin-arm64 pause -p no-preload-457000 --alsologtostderr -v=1 failed: exit status 89\n"}
{"Time":"2023-05-31T12:03:20.407749-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.40775-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.435375-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (27.562ms)\n"}
{"Time":"2023-05-31T12:03:20.435387-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.435395-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.435396-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.435398-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.4354-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.435402-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.435404-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.435406-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:20.435417-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.462643-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p no-preload-457000 -n no-preload-457000: exit status 7 (27.155833ms)\n"}
{"Time":"2023-05-31T12:03:20.462656-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.462658-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.46266-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:20.462661-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.462663-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.462664-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.462674-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"    helpers_test.go:241: \"no-preload-457000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:20.462703-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"    start_stop_delete_test.go:162: (dbg) Run:  out/minikube-darwin-arm64 delete -p no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.558827-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"    start_stop_delete_test.go:167: (dbg) Run:  kubectl config get-contexts no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.58441-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"    start_stop_delete_test.go:167: (dbg) Non-zero exit: kubectl config get-contexts no-preload-457000: exit status 1 (25.522417ms)\n"}
{"Time":"2023-05-31T12:03:20.584424-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.584426-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:20.584427-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2023-05-31T12:03:20.584429-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.584431-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:20.584432-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:20.584433-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        \terror: context no-preload-457000 not found\n"}
{"Time":"2023-05-31T12:03:20.584435-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:20.584436-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:20.584437-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"    start_stop_delete_test.go:169: config context error: exit status 1 (may be ok)\n"}
{"Time":"2023-05-31T12:03:20.584444-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"    helpers_test.go:175: Cleaning up \"no-preload-457000\" profile ...\n"}
{"Time":"2023-05-31T12:03:20.584462-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p no-preload-457000\n"}
{"Time":"2023-05-31T12:03:20.823332-07:00","Action":"cont","Test":"TestStartStop/group/disable-driver-mounts"}
{"Time":"2023-05-31T12:03:20.823346-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"=== CONT  TestStartStop/group/disable-driver-mounts\n"}
{"Time":"2023-05-31T12:03:20.82335-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"    start_stop_delete_test.go:103: skipping TestStartStop/group/disable-driver-mounts - only runs on virtualbox\n"}
{"Time":"2023-05-31T12:03:20.823383-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"    helpers_test.go:175: Cleaning up \"disable-driver-mounts-291000\" profile ...\n"}
{"Time":"2023-05-31T12:03:20.823396-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p disable-driver-mounts-291000\n"}
{"Time":"2023-05-31T12:03:21.055602-07:00","Action":"cont","Test":"TestStartStop/group/default-k8s-diff-port"}
{"Time":"2023-05-31T12:03:21.055618-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"=== CONT  TestStartStop/group/default-k8s-diff-port\n"}
{"Time":"2023-05-31T12:03:21.055643-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial"}
{"Time":"2023-05-31T12:03:21.055645-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial\n"}
{"Time":"2023-05-31T12:03:21.055662-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart"}
{"Time":"2023-05-31T12:03:21.055663-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/FirstStart\n"}
{"Time":"2023-05-31T12:03:21.055707-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Run:  out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:22.585477-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (11.63292825s)\n"}
{"Time":"2023-05-31T12:03:22.585501-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.585532-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.585539-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* [embed-certs-478000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:22.585575-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:22.585635-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:22.58564-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:22.585645-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:22.585648-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:22.585652-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:22.585655-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:22.585659-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:22.585663-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Starting control plane node embed-certs-478000 in cluster embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.585667-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:22.58567-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:22.585674-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:22.585678-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.585683-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Deleting \"embed-certs-478000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:22.585687-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:22.585691-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:22.585695-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:22.585698-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.585701-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.585704-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.585708-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.585712-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.585716-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:22.585719-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.975582    4638 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:22.585723-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.975698    4638 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:22.585727-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.975702    4638 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:22.585749-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.975704    4638 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:22.585757-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.975782    4638 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:22.585762-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.976844    4638 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:22.585767-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.991707    4638 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1961,\"bootTime\":1685557829,\"procs\":410,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:22.585786-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:10.991772    4638 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:22.58579-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:10.995618    4638 out.go:177] * [embed-certs-478000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:22.585794-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.004662    4638 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:22.585798-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.001707    4638 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:22.585801-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.011686    4638 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:22.585805-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.015629    4638 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:22.585809-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.022657    4638 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:22.585812-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.026573    4638 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:22.585816-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.029618    4638 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:22.58582-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.032966    4638 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:22.585828-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.033031    4638 config.go:182] Loaded profile config \"no-preload-457000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:22.585832-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.033079    4638 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:22.585836-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.037615    4638 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:22.58584-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.044727    4638 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:22.585843-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.044730    4638 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:22.585849-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.044735    4638 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:22.585854-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.046522    4638 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:22.585858-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.050631    4638 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:22.585863-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054715    4638 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:22.585874-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054730    4638 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:22.585878-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054738    4638 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:22.585882-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054744    4638 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:03:22.585886-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054749    4638 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:22.585893-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t{Name:embed-certs-478000 KeepContext:false EmbedCerts:true MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:embed-certs-478000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:"}
{"Time":"2023-05-31T12:03:22.585903-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:22.585909-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.054821    4638 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:22.585914-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.063640    4638 out.go:177] * Starting control plane node embed-certs-478000 in cluster embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.585918-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067639    4638 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:22.585922-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067668    4638 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:22.585926-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067689    4638 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:22.58593-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067750    4638 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:22.585935-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067756    4638 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:22.585939-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067806    4638 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/embed-certs-478000/config.json ...\n"}
{"Time":"2023-05-31T12:03:22.585973-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.067819    4638 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/embed-certs-478000/config.json: {Name:mkf350c0eb6182f84c6bea77ee6c109e25df6c87 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:22.586003-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.068006    4638 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:22.58601-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:11.068021    4638 start.go:364] acquiring machines lock for embed-certs-478000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:22.586016-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.695109    4638 start.go:368] acquired machines lock for \"embed-certs-478000\" in 1.627034417s\n"}
{"Time":"2023-05-31T12:03:22.586027-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.695341    4638 start.go:93] Provisioning new machine with config: \u0026{Name:embed-certs-478000 KeepContext:false EmbedCerts:true MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:22.586036-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:embed-certs-478000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Mount"}
{"Time":"2023-05-31T12:03:22.586043-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"MSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:22.586049-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.695609    4638 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:22.586055-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.702652    4638 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:22.58606-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749581    4638 start.go:159] libmachine.API.Create for \"embed-certs-478000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:22.586065-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749622    4638 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:22.58607-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749740    4638 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:22.586076-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749784    4638 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:22.586081-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749802    4638 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:22.586086-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749849    4638 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:22.586092-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749877    4638 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:22.586097-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.749888    4638 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:22.586102-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.750407    4638 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:22.586179-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:12.982946    4638 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:22.586185-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.011768    4638 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:22.586189-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.011778    4638 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:22.586196-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.011917    4638 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.5862-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.021208    4638 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:22.586204-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.021225    4638 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:22.586208-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.021282    4638 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:22.586233-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.029523    4638 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:22.586238-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.586242-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.029541    4638 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:22.586246-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.029558    4638 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.586251-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.029564    4638 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:22.586256-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.029603    4638 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/qemu.pid -device virtio-net-pci,netdev=net0,mac=b2:a9:7d:c0:04:84 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.586261-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.031360    4638 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:22.586265-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.031373    4638 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:22.586269-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.586272-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:13.031393    4638 client.go:171] LocalClient.Create took 281.768792ms\n"}
{"Time":"2023-05-31T12:03:22.586275-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:15.033555    4638 start.go:128] duration metric: createHost completed in 2.337948542s\n"}
{"Time":"2023-05-31T12:03:22.586279-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:15.033626    4638 start.go:83] releasing machines lock for \"embed-certs-478000\", held for 2.338473708s\n"}
{"Time":"2023-05-31T12:03:22.586284-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:15.033712    4638 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586288-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:15.057719    4638 out.go:177] * Deleting \"embed-certs-478000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:22.586291-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:15.079349    4638 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586297-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586301-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:15.079379    4638 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:22.586304-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.081570    4638 start.go:364] acquiring machines lock for embed-certs-478000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:22.586309-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.101046    4638 start.go:368] acquired machines lock for \"embed-certs-478000\" in 19.401542ms\n"}
{"Time":"2023-05-31T12:03:22.586316-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.101156    4638 start.go:93] Provisioning new machine with config: \u0026{Name:embed-certs-478000 KeepContext:false EmbedCerts:true MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:22.586324-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:embed-certs-478000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: Mount"}
{"Time":"2023-05-31T12:03:22.586329-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"MSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:22.586334-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.101353    4638 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:22.586338-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.115075    4638 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:22.586342-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160292    4638 start.go:159] libmachine.API.Create for \"embed-certs-478000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:22.586346-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160376    4638 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:22.586351-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160497    4638 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:22.586355-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160534    4638 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:22.586359-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160556    4638 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:22.586362-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160639    4638 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:22.586366-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160667    4638 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:22.58637-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.160682    4638 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:22.586374-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.161125    4638 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:22.586378-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.353603    4638 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:22.586382-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.516003    4638 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:22.586385-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.516015    4638 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:22.586389-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.516194    4638 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.586393-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.524887    4638 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:22.586397-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.524908    4638 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:22.5864-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.524968    4638 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:22.586404-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.535740    4638 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:22.586407-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.58641-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.535764    4638 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:22.586414-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.535780    4638 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.586419-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.535786    4638 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:22.586424-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.535834    4638 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/qemu.pid -device virtio-net-pci,netdev=net0,mac=4a:de:70:51:d3:6b -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:22.58643-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.537960    4638 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:22.586433-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.537982    4638 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:22.586437-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:22.58644-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:20.537996    4638 client.go:171] LocalClient.Create took 377.618542ms\n"}
{"Time":"2023-05-31T12:03:22.586445-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:22.540147    4638 start.go:128] duration metric: createHost completed in 2.4387795s\n"}
{"Time":"2023-05-31T12:03:22.58645-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:22.540219    4638 start.go:83] releasing machines lock for \"embed-certs-478000\", held for 2.439182042s\n"}
{"Time":"2023-05-31T12:03:22.586475-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:22.540573    4638 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p embed-certs-478000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586486-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p embed-certs-478000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586492-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:22.559317    4638 out.go:177] \n"}
{"Time":"2023-05-31T12:03:22.586498-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:22.563465    4638 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.586505-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.58651-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:22.563525    4638 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:22.586515-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:22.58652-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tW0531 12:03:22.565605    4638 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:22.586531-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.586537-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:22.586542-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:22.586547-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.586552-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:22.586556-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.586561-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:22.586567-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:22.586573-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.58659-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:22.586595-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:22.586602-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.586606-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:22.586611-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:22.586616-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:22.586622-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tI0531 12:03:22.573253    4638 out.go:177] \n"}
{"Time":"2023-05-31T12:03:22.586626-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.586631-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:22.586639-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    start_stop_delete_test.go:188: failed starting minikube -first start-. args \"out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:22.586645-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:22.58665-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.6353-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (49.626709ms)\n"}
{"Time":"2023-05-31T12:03:22.635317-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.635319-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.635321-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:22.635323-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.635325-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.635327-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:22.635331-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:22.635365-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/DeployApp"}
{"Time":"2023-05-31T12:03:22.63538-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"=== RUN   TestStartStop/group/embed-certs/serial/DeployApp\n"}
{"Time":"2023-05-31T12:03:22.63546-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Run:  kubectl --context embed-certs-478000 create -f testdata/busybox.yaml\n"}
{"Time":"2023-05-31T12:03:22.664804-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Non-zero exit: kubectl --context embed-certs-478000 create -f testdata/busybox.yaml: exit status 1 (29.258ms)\n"}
{"Time":"2023-05-31T12:03:22.66482-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.664822-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:22.664824-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \terror: context \"embed-certs-478000\" does not exist\n"}
{"Time":"2023-05-31T12:03:22.664826-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.664827-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:22.664829-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:196: kubectl --context embed-certs-478000 create -f testdata/busybox.yaml failed: exit status 1\n"}
{"Time":"2023-05-31T12:03:22.664831-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:22.664845-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.695109-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (30.168625ms)\n"}
{"Time":"2023-05-31T12:03:22.695135-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.695137-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.695139-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:22.69514-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.695142-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.695143-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:22.695147-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:22.695148-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:22.695151-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.725345-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (30.126625ms)\n"}
{"Time":"2023-05-31T12:03:22.725362-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.725364-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.725367-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:22.725368-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.725369-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.725371-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:22.725374-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:22.725423-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive"}
{"Time":"2023-05-31T12:03:22.725425-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"=== RUN   TestStartStop/group/embed-certs/serial/EnableAddonWhileActive\n"}
{"Time":"2023-05-31T12:03:22.725476-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:205: (dbg) Run:  out/minikube-darwin-arm64 addons enable metrics-server -p embed-certs-478000 --images=MetricsServer=registry.k8s.io/echoserver:1.4 --registries=MetricsServer=fake.domain\n"}
{"Time":"2023-05-31T12:03:22.795264-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Run:  kubectl --context embed-certs-478000 describe deploy/metrics-server -n kube-system\n"}
{"Time":"2023-05-31T12:03:22.823278-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Non-zero exit: kubectl --context embed-certs-478000 describe deploy/metrics-server -n kube-system: exit status 1 (27.955167ms)\n"}
{"Time":"2023-05-31T12:03:22.823291-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.823293-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:22.823295-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \terror: context \"embed-certs-478000\" does not exist\n"}
{"Time":"2023-05-31T12:03:22.823297-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.823298-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:22.823301-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:217: failed to get info on auto-pause deployments. args \"kubectl --context embed-certs-478000 describe deploy/metrics-server -n kube-system\": exit status 1\n"}
{"Time":"2023-05-31T12:03:22.823303-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:221: addon did not load correct image. Expected to contain \" fake.domain/registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:22.823304-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:22.823318-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.851744-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (28.331375ms)\n"}
{"Time":"2023-05-31T12:03:22.851757-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.851759-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.85176-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:22.851762-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.851763-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.851765-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:22.851766-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:22.851792-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/Stop"}
{"Time":"2023-05-31T12:03:22.851794-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/Stop\n"}
{"Time":"2023-05-31T12:03:22.851852-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"    start_stop_delete_test.go:228: (dbg) Run:  out/minikube-darwin-arm64 stop -p embed-certs-478000 --alsologtostderr -v=3\n"}
{"Time":"2023-05-31T12:03:22.914058-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop"}
{"Time":"2023-05-31T12:03:22.914069-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/EnableAddonAfterStop\n"}
{"Time":"2023-05-31T12:03:22.914117-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:22.942518-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (28.3095ms)\n"}
{"Time":"2023-05-31T12:03:22.942531-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.942534-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:22.942535-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:22.942537-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:22.942538-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:22.942539-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:22.942541-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:246: (dbg) Run:  out/minikube-darwin-arm64 addons enable dashboard -p embed-certs-478000 --images=MetricsScraper=registry.k8s.io/echoserver:1.4\n"}
{"Time":"2023-05-31T12:03:23.003083-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/SecondStart"}
{"Time":"2023-05-31T12:03:23.003094-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"=== RUN   TestStartStop/group/embed-certs/serial/SecondStart\n"}
{"Time":"2023-05-31T12:03:23.00313-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Run:  out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:30.160819-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (7.15695475s)\n"}
{"Time":"2023-05-31T12:03:30.160843-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.160849-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.160853-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* [embed-certs-478000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:30.160858-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:30.160862-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:30.160867-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:30.160871-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:30.160876-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:30.16088-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:30.160883-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:30.160887-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* Starting control plane node embed-certs-478000 in cluster embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.160891-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"embed-certs-478000\" ...\n"}
{"Time":"2023-05-31T12:03:30.160895-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:30.160899-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:30.160903-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.160907-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"embed-certs-478000\" ...\n"}
{"Time":"2023-05-31T12:03:30.160911-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:30.160914-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:30.160918-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.160922-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.160925-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.160929-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.160932-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.160936-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:30.160939-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.029653    4835 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:30.160944-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.029758    4835 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:30.160948-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.029761    4835 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:30.160952-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.029763    4835 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:30.160982-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.029834    4835 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:30.160988-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.030804    4835 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:30.160993-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.046712    4835 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1974,\"bootTime\":1685557829,\"procs\":430,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:30.161002-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:23.046793    4835 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:30.161006-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.051200    4835 out.go:177] * [embed-certs-478000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:30.16101-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.062242    4835 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:30.161015-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.058320    4835 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:30.161019-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.070192    4835 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:30.161024-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.078180    4835 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:30.161028-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.081237    4835 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:30.161032-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.084241    4835 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:30.161036-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.088210    4835 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:30.16104-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.091489    4835 config.go:182] Loaded profile config \"embed-certs-478000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:30.161046-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.091749    4835 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:30.16105-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.096041    4835 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:30.161054-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.103235    4835 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:30.161065-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.103239    4835 start.go:875] validating driver \"qemu2\" against \u0026{Name:embed-certs-478000 KeepContext:false EmbedCerts:true MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:03:30.161086-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:embed-certs-478000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested"}
{"Time":"2023-05-31T12:03:30.161094-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":":false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:30.1611-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.103291    4835 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:30.161105-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.105239    4835 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:30.16111-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.105265    4835 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:30.161115-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.105272    4835 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:30.16112-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.105278    4835 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:30.161131-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t{Name:embed-certs-478000 KeepContext:false EmbedCerts:true MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:embed-certs-478000 Namespace:default "}
{"Time":"2023-05-31T12:03:30.161139-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/m"}
{"Time":"2023-05-31T12:03:30.161145-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"inikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:30.161151-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.105353    4835 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:30.161157-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.113193    4835 out.go:177] * Starting control plane node embed-certs-478000 in cluster embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.161162-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117261    4835 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:30.161167-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117276    4835 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:30.161172-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117290    4835 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:30.161176-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117339    4835 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:30.161181-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117344    4835 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:30.161187-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117406    4835 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/embed-certs-478000/config.json ...\n"}
{"Time":"2023-05-31T12:03:30.161192-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117775    4835 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:30.161196-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:23.117787    4835 start.go:364] acquiring machines lock for embed-certs-478000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:30.161201-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.059550    4835 start.go:368] acquired machines lock for \"embed-certs-478000\" in 1.9417615s\n"}
{"Time":"2023-05-31T12:03:30.161206-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.059694    4835 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:30.16121-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.059716    4835 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:30.161214-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.060364    4835 fix.go:103] recreateIfNeeded on embed-certs-478000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:30.161219-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:25.060404    4835 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:30.161223-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.072116    4835 out.go:177] * Restarting existing qemu2 VM for \"embed-certs-478000\" ...\n"}
{"Time":"2023-05-31T12:03:30.16123-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.084195    4835 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/qemu.pid -device virtio-net-pci,netdev=net0,mac=4a:de:70:51:d3:6b -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:30.161238-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.094237    4835 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:30.161242-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.094469    4835 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:30.161247-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.161251-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.094592    4835 fix.go:57] fixHost completed within 34.874917ms\n"}
{"Time":"2023-05-31T12:03:30.161255-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.094634    4835 start.go:83] releasing machines lock for \"embed-certs-478000\", held for 35.04475ms\n"}
{"Time":"2023-05-31T12:03:30.16126-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:25.094673    4835 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161265-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:25.094869    4835 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161273-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161278-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:25.094887    4835 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:30.161283-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.097047    4835 start.go:364] acquiring machines lock for embed-certs-478000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:30.161288-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.097605    4835 start.go:368] acquired machines lock for \"embed-certs-478000\" in 406.958µs\n"}
{"Time":"2023-05-31T12:03:30.161294-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.097748    4835 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:30.161298-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.097768    4835 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:30.161305-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.098455    4835 fix.go:103] recreateIfNeeded on embed-certs-478000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:30.161309-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:30.098482    4835 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:30.161314-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.109153    4835 out.go:177] * Restarting existing qemu2 VM for \"embed-certs-478000\" ...\n"}
{"Time":"2023-05-31T12:03:30.16132-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.113267    4835 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/qemu.pid -device virtio-net-pci,netdev=net0,mac=4a:de:70:51:d3:6b -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/embed-certs-478000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:30.161329-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.122674    4835 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:30.161333-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.122754    4835 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:30.161338-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:30.161342-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.122841    4835 fix.go:57] fixHost completed within 25.075166ms\n"}
{"Time":"2023-05-31T12:03:30.161346-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.122863    4835 start.go:83] releasing machines lock for \"embed-certs-478000\", held for 25.2365ms\n"}
{"Time":"2023-05-31T12:03:30.16135-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:30.123103    4835 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p embed-certs-478000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161355-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p embed-certs-478000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.16136-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.131079    4835 out.go:177] \n"}
{"Time":"2023-05-31T12:03:30.161364-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:30.138264    4835 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161369-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:30.161374-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:30.138300    4835 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:30.161378-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:30.161383-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tW0531 12:03:30.140453    4835 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:30.161389-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161394-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:30.161398-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:30.161402-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161407-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:30.161412-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161417-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:30.161423-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:30.161429-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161434-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:30.161438-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:30.161442-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161447-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:30.161452-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:30.161462-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:30.161468-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tI0531 12:03:30.150069    4835 out.go:177] \n"}
{"Time":"2023-05-31T12:03:30.161472-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.161476-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:30.161481-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:259: failed to start minikube post-stop. args \"out/minikube-darwin-arm64 start -p embed-certs-478000 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:30.161488-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.161493-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.210808-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (49.805375ms)\n"}
{"Time":"2023-05-31T12:03:30.210823-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.210826-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.210828-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.21083-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.210832-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.210834-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.210837-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.210877-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop"}
{"Time":"2023-05-31T12:03:30.210907-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:30.211127-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:275: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"embed-certs-478000\" does not exist\n"}
{"Time":"2023-05-31T12:03:30.211137-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.21114-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.243126-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (31.83525ms)\n"}
{"Time":"2023-05-31T12:03:30.243141-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.243143-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.243145-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.243146-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.243148-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.24315-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.243153-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.243167-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop"}
{"Time":"2023-05-31T12:03:30.243191-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/AddonExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:30.243393-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:288: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"embed-certs-478000\" does not exist\n"}
{"Time":"2023-05-31T12:03:30.24342-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Run:  kubectl --context embed-certs-478000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\n"}
{"Time":"2023-05-31T12:03:30.27198-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Non-zero exit: kubectl --context embed-certs-478000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard: exit status 1 (28.401166ms)\n"}
{"Time":"2023-05-31T12:03:30.271994-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.271996-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:30.271998-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \terror: context \"embed-certs-478000\" does not exist\n"}
{"Time":"2023-05-31T12:03:30.272-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.272001-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:30.272003-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:293: failed to get info on kubernetes-dashboard deployments. args \"kubectl --context embed-certs-478000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\": exit status 1\n"}
{"Time":"2023-05-31T12:03:30.272007-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:297: addon did not load correct image. Expected to contain \" registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:30.272008-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.272042-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.303452-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (31.335625ms)\n"}
{"Time":"2023-05-31T12:03:30.303467-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.30347-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.303471-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.303473-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.303474-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.303476-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.303478-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.303502-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages"}
{"Time":"2023-05-31T12:03:30.303506-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/embed-certs/serial/VerifyKubernetesImages\n"}
{"Time":"2023-05-31T12:03:30.303541-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 ssh -p embed-certs-478000 \"sudo crictl images -o json\"\n"}
{"Time":"2023-05-31T12:03:30.354773-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p embed-certs-478000 \"sudo crictl images -o json\": exit status 89 (51.147542ms)\n"}
{"Time":"2023-05-31T12:03:30.354786-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.354789-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.354791-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:30.354792-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \t  To start a cluster, run: \"minikube start -p embed-certs-478000\"\n"}
{"Time":"2023-05-31T12:03:30.354794-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.354795-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.354796-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to get images inside minikube. args \"out/minikube-darwin-arm64 ssh -p embed-certs-478000 \\\"sudo crictl images -o json\\\"\": exit status 89\n"}
{"Time":"2023-05-31T12:03:30.354799-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to decode images json invalid character '*' looking for beginning of value. output:\n"}
{"Time":"2023-05-31T12:03:30.354801-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:30.354802-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"          To start a cluster, run: \"minikube start -p embed-certs-478000\"\n"}
{"Time":"2023-05-31T12:03:30.354941-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: v1.27.2 images missing (-want +got):\n"}
{"Time":"2023-05-31T12:03:30.354949-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"          []string{\n"}
{"Time":"2023-05-31T12:03:30.35495-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"gcr.io/k8s-minikube/storage-provisioner:v5\",\n"}
{"Time":"2023-05-31T12:03:30.354953-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/coredns/coredns:v1.10.1\",\n"}
{"Time":"2023-05-31T12:03:30.354954-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/etcd:3.5.7-0\",\n"}
{"Time":"2023-05-31T12:03:30.354956-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-apiserver:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:30.354957-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-controller-manager:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:30.354959-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-proxy:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:30.35496-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-scheduler:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:30.354974-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/pause:3.9\",\n"}
{"Time":"2023-05-31T12:03:30.354975-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"          }\n"}
{"Time":"2023-05-31T12:03:30.354977-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.354978-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.382896-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (27.86225ms)\n"}
{"Time":"2023-05-31T12:03:30.382909-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.382911-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.382913-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.382915-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.382916-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.382917-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.382919-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.382967-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/Pause"}
{"Time":"2023-05-31T12:03:30.383005-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"=== RUN   TestStartStop/group/embed-certs/serial/Pause\n"}
{"Time":"2023-05-31T12:03:30.383008-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Run:  out/minikube-darwin-arm64 pause -p embed-certs-478000 --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T12:03:30.423818-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Non-zero exit: out/minikube-darwin-arm64 pause -p embed-certs-478000 --alsologtostderr -v=1: exit status 89 (40.724125ms)\n"}
{"Time":"2023-05-31T12:03:30.423831-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.423833-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.42384-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:30.423841-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \t  To start a cluster, run: \"minikube start -p embed-certs-478000\"\n"}
{"Time":"2023-05-31T12:03:30.423843-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.423844-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.423846-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:30.423847-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.409735    4874 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:30.423849-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.409852    4874 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:30.42385-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.409855    4874 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:30.423852-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.409858    4874 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:30.423853-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.409930    4874 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:30.423855-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.410126    4874 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:30.423856-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.410136    4874 mustload.go:65] Loading cluster: embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.423858-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.410323    4874 config.go:182] Loaded profile config \"embed-certs-478000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:30.42386-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.415052    4874 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:30.423862-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tI0531 12:03:30.419225    4874 out.go:177]   To start a cluster, run: \"minikube start -p embed-certs-478000\"\n"}
{"Time":"2023-05-31T12:03:30.423863-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.423864-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:30.423866-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:311: out/minikube-darwin-arm64 pause -p embed-certs-478000 --alsologtostderr -v=1 failed: exit status 89\n"}
{"Time":"2023-05-31T12:03:30.423868-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.42387-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.453256-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (29.322875ms)\n"}
{"Time":"2023-05-31T12:03:30.453271-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.453273-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.453275-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.453277-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.453278-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.453279-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.453281-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.453285-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:30.453287-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.482056-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p embed-certs-478000 -n embed-certs-478000: exit status 7 (28.699417ms)\n"}
{"Time":"2023-05-31T12:03:30.48207-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.482072-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.482073-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:30.482075-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.482076-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.482078-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.48208-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    helpers_test.go:241: \"embed-certs-478000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:30.482114-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:162: (dbg) Run:  out/minikube-darwin-arm64 delete -p embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.574895-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:167: (dbg) Run:  kubectl config get-contexts embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.600656-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:167: (dbg) Non-zero exit: kubectl config get-contexts embed-certs-478000: exit status 1 (25.696ms)\n"}
{"Time":"2023-05-31T12:03:30.600683-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.600686-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:30.600687-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2023-05-31T12:03:30.600689-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.60069-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:30.600691-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:30.600693-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \terror: context embed-certs-478000 not found\n"}
{"Time":"2023-05-31T12:03:30.600695-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:30.600696-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:30.600699-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:169: config context error: exit status 1 (may be ok)\n"}
{"Time":"2023-05-31T12:03:30.600703-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"    helpers_test.go:175: Cleaning up \"embed-certs-478000\" profile ...\n"}
{"Time":"2023-05-31T12:03:30.600714-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p embed-certs-478000\n"}
{"Time":"2023-05-31T12:03:30.83343-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni"}
{"Time":"2023-05-31T12:03:30.833442-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== CONT  TestStartStop/group/newest-cni\n"}
{"Time":"2023-05-31T12:03:30.833484-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial"}
{"Time":"2023-05-31T12:03:30.833486-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"=== RUN   TestStartStop/group/newest-cni/serial\n"}
{"Time":"2023-05-31T12:03:30.833499-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/FirstStart"}
{"Time":"2023-05-31T12:03:30.833504-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"=== RUN   TestStartStop/group/newest-cni/serial/FirstStart\n"}
{"Time":"2023-05-31T12:03:30.833544-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Run:  out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:32.50742-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (11.450746708s)\n"}
{"Time":"2023-05-31T12:03:32.507446-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.507452-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.507456-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* [default-k8s-diff-port-588000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:32.507461-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:32.507466-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:32.50747-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:32.507475-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:32.507479-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:32.507483-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:32.507486-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:32.50749-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:32.507494-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Starting control plane node default-k8s-diff-port-588000 in cluster default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.507499-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:32.507503-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:32.507507-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:32.507532-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.507536-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Deleting \"default-k8s-diff-port-588000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:32.50754-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:32.507544-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:32.507548-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:32.507552-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.507556-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.507559-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.507563-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.507566-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.50757-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:32.507574-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.081569    4804 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:32.507578-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.081679    4804 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:32.507582-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.081682    4804 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:32.507587-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.081685    4804 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:32.507591-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.081752    4804 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:32.507595-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.082661    4804 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:32.507601-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.098058    4804 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1972,\"bootTime\":1685557829,\"procs\":422,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:32.507609-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:21.098133    4804 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:32.507615-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.106601    4804 out.go:177] * [default-k8s-diff-port-588000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:32.50762-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.144552    4804 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:32.507624-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.119674    4804 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:32.507628-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.150546    4804 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:32.507633-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.160536    4804 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:32.507637-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.168537    4804 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:32.507655-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.176447    4804 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:32.50766-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.184594    4804 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:32.507664-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.186165    4804 config.go:182] Loaded profile config \"embed-certs-478000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:32.50767-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.186253    4804 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:32.507675-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.186306    4804 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:32.507679-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.190563    4804 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:32.507683-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.197451    4804 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:32.507689-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.197456    4804 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:32.507694-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.197463    4804 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:32.507699-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.200101    4804 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:32.507703-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.203571    4804 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:32.507708-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206699    4804 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:32.507713-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206721    4804 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:32.507718-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206732    4804 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:32.507724-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206738    4804 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:03:32.507729-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206747    4804 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:32.507738-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t{Name:default-k8s-diff-port-588000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:default-k8s-diff-port-588000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.lo"}
{"Time":"2023-05-31T12:03:32.507747-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"cal ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8444 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet Stat"}
{"Time":"2023-05-31T12:03:32.507754-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"icIP:}\n"}
{"Time":"2023-05-31T12:03:32.507759-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.206872    4804 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:32.507765-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.214584    4804 out.go:177] * Starting control plane node default-k8s-diff-port-588000 in cluster default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.507769-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218545    4804 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:32.507774-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218577    4804 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:32.507779-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218596    4804 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:32.507785-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218667    4804 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:32.50779-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218675    4804 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:32.507795-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218760    4804 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/default-k8s-diff-port-588000/config.json ...\n"}
{"Time":"2023-05-31T12:03:32.507802-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.218776    4804 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/default-k8s-diff-port-588000/config.json: {Name:mk4219f7f417cdd555d270277df97126bb3504f0 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:32.507807-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.219062    4804 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:32.507812-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:21.219083    4804 start.go:364] acquiring machines lock for default-k8s-diff-port-588000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:32.507816-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.540422    4804 start.go:368] acquired machines lock for \"default-k8s-diff-port-588000\" in 1.321272s\n"}
{"Time":"2023-05-31T12:03:32.507826-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.540587    4804 start.go:93] Provisioning new machine with config: \u0026{Name:default-k8s-diff-port-588000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 "}
{"Time":"2023-05-31T12:03:32.507842-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:default-k8s-diff-port-588000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8444 NodeName:} Nodes:[{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:"}
{"Time":"2023-05-31T12:03:32.50785-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:32.507856-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.540889    4804 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:32.507861-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.554306    4804 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:32.507867-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.601715    4804 start.go:159] libmachine.API.Create for \"default-k8s-diff-port-588000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:32.507873-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.601750    4804 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:32.507877-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602128    4804 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:32.507883-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602171    4804 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:32.507889-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602197    4804 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:32.507894-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602404    4804 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:32.507899-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602453    4804 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:32.507904-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.602466    4804 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:32.507911-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.603523    4804 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:32.507915-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:22.800227    4804 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:32.50792-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.032718    4804 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:32.507924-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.032726    4804 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:32.507929-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.032867    4804 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.507934-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.041362    4804 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:32.507939-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.041390    4804 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:32.507944-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.041465    4804 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:32.507949-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.055301    4804 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:32.507953-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.507957-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.055317    4804 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:32.507962-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.055362    4804 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.507966-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.055369    4804 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:32.507972-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.055411    4804 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/qemu.pid -device virtio-net-pci,netdev=net0,mac=9e:54:74:77:7c:00 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.507992-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.057055    4804 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:32.507997-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.057071    4804 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:32.508002-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.508006-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:23.057092    4804 client.go:171] LocalClient.Create took 455.342625ms\n"}
{"Time":"2023-05-31T12:03:32.50801-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:25.059268    4804 start.go:128] duration metric: createHost completed in 2.518381542s\n"}
{"Time":"2023-05-31T12:03:32.508015-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:25.059354    4804 start.go:83] releasing machines lock for \"default-k8s-diff-port-588000\", held for 2.518914333s\n"}
{"Time":"2023-05-31T12:03:32.508021-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:25.059408    4804 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508026-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:25.080026    4804 out.go:177] * Deleting \"default-k8s-diff-port-588000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:32.508031-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:25.102803    4804 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508037-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508042-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:25.102839    4804 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:32.508047-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.103209    4804 start.go:364] acquiring machines lock for default-k8s-diff-port-588000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:32.508052-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.122950    4804 start.go:368] acquired machines lock for \"default-k8s-diff-port-588000\" in 19.657125ms\n"}
{"Time":"2023-05-31T12:03:32.508062-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.123081    4804 start.go:93] Provisioning new machine with config: \u0026{Name:default-k8s-diff-port-588000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 "}
{"Time":"2023-05-31T12:03:32.50807-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:default-k8s-diff-port-588000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8444 NodeName:} Nodes:[{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:"}
{"Time":"2023-05-31T12:03:32.508079-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:32.508085-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.123279    4804 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:32.508091-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.134906    4804 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:32.508095-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178403    4804 start.go:159] libmachine.API.Create for \"default-k8s-diff-port-588000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:32.5081-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178455    4804 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:32.508107-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178564    4804 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:32.508112-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178600    4804 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:32.508116-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178619    4804 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:32.50812-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178688    4804 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:32.508125-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178716    4804 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:32.50813-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.178731    4804 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:32.508135-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.179184    4804 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:32.50814-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.326282    4804 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:32.508144-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.441413    4804 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:32.508148-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.441423    4804 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:32.508153-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.441605    4804 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.508158-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.450643    4804 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:32.508163-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.450663    4804 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:32.508168-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.450736    4804 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:32.508173-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.459022    4804 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:32.508177-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.508181-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.459046    4804 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:32.508186-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.459065    4804 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.508191-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.459073    4804 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:32.508198-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.459122    4804 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/qemu.pid -device virtio-net-pci,netdev=net0,mac=be:aa:bb:ec:d3:22 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:32.508206-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.460813    4804 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:32.50821-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.460828    4804 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:32.508215-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:32.508219-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:30.460841    4804 client.go:171] LocalClient.Create took 282.385167ms\n"}
{"Time":"2023-05-31T12:03:32.508224-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:32.463001    4804 start.go:128] duration metric: createHost completed in 2.339729041s\n"}
{"Time":"2023-05-31T12:03:32.508229-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:32.463064    4804 start.go:83] releasing machines lock for \"default-k8s-diff-port-588000\", held for 2.340115083s\n"}
{"Time":"2023-05-31T12:03:32.508234-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:32.463411    4804 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p default-k8s-diff-port-588000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508241-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p default-k8s-diff-port-588000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508247-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:32.478210    4804 out.go:177] \n"}
{"Time":"2023-05-31T12:03:32.508252-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:32.483416    4804 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.50826-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.508265-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:32.483450    4804 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:32.508269-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:32.508275-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tW0531 12:03:32.485420    4804 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:32.508282-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.508287-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:32.508292-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:32.508297-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.508302-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:32.508306-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.508311-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:32.508318-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:32.508324-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.50833-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:32.508334-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:32.508339-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.508344-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:32.508348-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:32.508354-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:32.50836-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tI0531 12:03:32.496142    4804 out.go:177] \n"}
{"Time":"2023-05-31T12:03:32.508364-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.508369-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:32.508378-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    start_stop_delete_test.go:188: failed starting minikube -first start-. args \"out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:32.508383-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:32.508388-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.555055-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (47.490541ms)\n"}
{"Time":"2023-05-31T12:03:32.555071-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.555073-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.555076-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:32.555077-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.555079-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.555081-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:32.555085-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:32.555119-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp"}
{"Time":"2023-05-31T12:03:32.555136-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/DeployApp\n"}
{"Time":"2023-05-31T12:03:32.555237-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Run:  kubectl --context default-k8s-diff-port-588000 create -f testdata/busybox.yaml\n"}
{"Time":"2023-05-31T12:03:32.584352-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    start_stop_delete_test.go:196: (dbg) Non-zero exit: kubectl --context default-k8s-diff-port-588000 create -f testdata/busybox.yaml: exit status 1 (29.043625ms)\n"}
{"Time":"2023-05-31T12:03:32.584367-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.584369-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:32.584371-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \terror: context \"default-k8s-diff-port-588000\" does not exist\n"}
{"Time":"2023-05-31T12:03:32.584373-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.584374-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:32.584376-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    start_stop_delete_test.go:196: kubectl --context default-k8s-diff-port-588000 create -f testdata/busybox.yaml failed: exit status 1\n"}
{"Time":"2023-05-31T12:03:32.584379-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:32.584381-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.616454-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (31.970166ms)\n"}
{"Time":"2023-05-31T12:03:32.61647-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.616472-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.616474-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:32.616475-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.616477-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.616478-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:32.61648-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:32.616483-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:32.616484-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.647107-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (30.5445ms)\n"}
{"Time":"2023-05-31T12:03:32.647124-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.647126-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.647128-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:32.647134-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.647136-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.647137-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:32.647139-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:32.647184-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive"}
{"Time":"2023-05-31T12:03:32.647186-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive\n"}
{"Time":"2023-05-31T12:03:32.647233-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:205: (dbg) Run:  out/minikube-darwin-arm64 addons enable metrics-server -p default-k8s-diff-port-588000 --images=MetricsServer=registry.k8s.io/echoserver:1.4 --registries=MetricsServer=fake.domain\n"}
{"Time":"2023-05-31T12:03:32.71794-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Run:  kubectl --context default-k8s-diff-port-588000 describe deploy/metrics-server -n kube-system\n"}
{"Time":"2023-05-31T12:03:32.744538-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:215: (dbg) Non-zero exit: kubectl --context default-k8s-diff-port-588000 describe deploy/metrics-server -n kube-system: exit status 1 (26.543791ms)\n"}
{"Time":"2023-05-31T12:03:32.744549-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.744551-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:32.744553-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \terror: context \"default-k8s-diff-port-588000\" does not exist\n"}
{"Time":"2023-05-31T12:03:32.744554-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.744556-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:32.744557-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:217: failed to get info on auto-pause deployments. args \"kubectl --context default-k8s-diff-port-588000 describe deploy/metrics-server -n kube-system\": exit status 1\n"}
{"Time":"2023-05-31T12:03:32.74456-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:221: addon did not load correct image. Expected to contain \" fake.domain/registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:32.744562-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:32.744564-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.772986-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (28.345375ms)\n"}
{"Time":"2023-05-31T12:03:32.773019-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.773047-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.773054-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:32.773056-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.773058-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.773059-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:32.773062-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:32.773065-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/Stop"}
{"Time":"2023-05-31T12:03:32.773067-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Stop","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/Stop\n"}
{"Time":"2023-05-31T12:03:32.773077-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Stop","Output":"    start_stop_delete_test.go:228: (dbg) Run:  out/minikube-darwin-arm64 stop -p default-k8s-diff-port-588000 --alsologtostderr -v=3\n"}
{"Time":"2023-05-31T12:03:32.831637-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop"}
{"Time":"2023-05-31T12:03:32.831652-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop\n"}
{"Time":"2023-05-31T12:03:32.831676-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:32.858739-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (26.993083ms)\n"}
{"Time":"2023-05-31T12:03:32.858751-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.858753-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:32.858754-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:32.858756-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:32.858757-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:32.858759-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:32.858761-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:246: (dbg) Run:  out/minikube-darwin-arm64 addons enable dashboard -p default-k8s-diff-port-588000 --images=MetricsScraper=registry.k8s.io/echoserver:1.4\n"}
{"Time":"2023-05-31T12:03:32.920476-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart"}
{"Time":"2023-05-31T12:03:32.920488-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/SecondStart\n"}
{"Time":"2023-05-31T12:03:32.920527-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Run:  out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:39.935859-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (7.014720667s)\n"}
{"Time":"2023-05-31T12:03:39.935883-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:39.935888-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:39.935892-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* [default-k8s-diff-port-588000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:39.935896-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:39.935899-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:39.935903-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:39.935949-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:39.935954-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:39.935965-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:39.935968-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:39.935971-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* Starting control plane node default-k8s-diff-port-588000 in cluster default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:39.935975-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"default-k8s-diff-port-588000\" ...\n"}
{"Time":"2023-05-31T12:03:39.935978-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:39.935982-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:39.935986-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.935989-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"default-k8s-diff-port-588000\" ...\n"}
{"Time":"2023-05-31T12:03:39.935994-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:39.935997-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:39.936-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.936003-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.936006-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.93601-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:39.936013-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:39.936016-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:39.93602-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.945849    4927 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:39.936024-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.945960    4927 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:39.936028-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.945963    4927 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:39.936031-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.945966    4927 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:39.936035-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.946032    4927 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:39.936038-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.946985    4927 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:39.936042-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.961820    4927 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1983,\"bootTime\":1685557829,\"procs\":418,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:39.936049-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:32.961889    4927 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:39.936052-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.966908    4927 out.go:177] * [default-k8s-diff-port-588000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:39.93611-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.978813    4927 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:39.936122-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.973960    4927 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:39.936127-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.984861    4927 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:39.936131-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:32.994860    4927 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:39.936135-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.004789    4927 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:39.936138-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.011868    4927 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:39.936145-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.018895    4927 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:39.93619-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.023066    4927 config.go:182] Loaded profile config \"default-k8s-diff-port-588000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:39.9362-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.023352    4927 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:39.936205-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.027824    4927 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:39.936221-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.037855    4927 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:39.936231-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.037865    4927 start.go:875] validating driver \"qemu2\" against \u0026{Name:default-k8s-diff-port-588000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 Kub"}
{"Time":"2023-05-31T12:03:39.936239-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"ernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:default-k8s-diff-port-588000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8444 NodeName:} Nodes:[{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subne"}
{"Time":"2023-05-31T12:03:39.936245-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"t: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:39.93625-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.037924    4927 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:39.936255-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.040168    4927 start_flags.go:919] Waiting for all components: map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true]\n"}
{"Time":"2023-05-31T12:03:39.936283-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.040199    4927 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:39.93629-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.040209    4927 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:39.936296-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.040214    4927 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:39.936307-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t{Name:default-k8s-diff-port-588000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:default-k8s-diff-port-5880"}
{"Time":"2023-05-31T12:03:39.936318-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"00 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8444 NodeName:} Nodes:[{Name: IP: Port:8444 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:true default_sa:true extra:true kubelet:true node_ready:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false "}
{"Time":"2023-05-31T12:03:39.936324-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:39.936329-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.040331    4927 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:39.936334-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.047813    4927 out.go:177] * Starting control plane node default-k8s-diff-port-588000 in cluster default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:39.936338-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.051848    4927 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:39.936342-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.051873    4927 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:39.936348-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.051885    4927 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:39.936352-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.051951    4927 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:39.936356-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.051958    4927 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:39.93636-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.052021    4927 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/default-k8s-diff-port-588000/config.json ...\n"}
{"Time":"2023-05-31T12:03:39.936364-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.052531    4927 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:39.936368-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:33.052548    4927 start.go:364] acquiring machines lock for default-k8s-diff-port-588000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:39.936373-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.835919    4927 start.go:368] acquired machines lock for \"default-k8s-diff-port-588000\" in 1.783369s\n"}
{"Time":"2023-05-31T12:03:39.936377-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.836034    4927 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:39.936384-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.836058    4927 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:39.936387-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.836713    4927 fix.go:103] recreateIfNeeded on default-k8s-diff-port-588000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:39.936391-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:34.836754    4927 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:39.936395-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.846338    4927 out.go:177] * Restarting existing qemu2 VM for \"default-k8s-diff-port-588000\" ...\n"}
{"Time":"2023-05-31T12:03:39.936401-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.856429    4927 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/qemu.pid -device virtio-net-pci,netdev=net0,mac=be:aa:bb:ec:d3:22 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:39.936407-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.866949    4927 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:39.936412-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.867022    4927 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:39.936416-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.936419-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.867151    4927 fix.go:57] fixHost completed within 31.089ms\n"}
{"Time":"2023-05-31T12:03:39.936423-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.867174    4927 start.go:83] releasing machines lock for \"default-k8s-diff-port-588000\", held for 31.202333ms\n"}
{"Time":"2023-05-31T12:03:39.936428-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:34.867212    4927 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.936432-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:34.867390    4927 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.936436-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.93644-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:34.867406    4927 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:39.936444-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.869594    4927 start.go:364] acquiring machines lock for default-k8s-diff-port-588000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:39.936448-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.870030    4927 start.go:368] acquired machines lock for \"default-k8s-diff-port-588000\" in 354.167µs\n"}
{"Time":"2023-05-31T12:03:39.936458-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.870158    4927 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:39.936462-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.870177    4927 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:39.936468-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.870914    4927 fix.go:103] recreateIfNeeded on default-k8s-diff-port-588000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:39.936472-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:39.870940    4927 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:39.936476-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.880595    4927 out.go:177] * Restarting existing qemu2 VM for \"default-k8s-diff-port-588000\" ...\n"}
{"Time":"2023-05-31T12:03:39.936482-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.883779    4927 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/qemu.pid -device virtio-net-pci,netdev=net0,mac=be:aa:bb:ec:d3:22 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/default-k8s-diff-port-588000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:39.936522-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.893192    4927 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:39.936526-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.893253    4927 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:39.93653-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:39.936533-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.893345    4927 fix.go:57] fixHost completed within 23.165917ms\n"}
{"Time":"2023-05-31T12:03:39.936541-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.893390    4927 start.go:83] releasing machines lock for \"default-k8s-diff-port-588000\", held for 23.315792ms\n"}
{"Time":"2023-05-31T12:03:39.936545-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:39.893598    4927 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p default-k8s-diff-port-588000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.93655-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p default-k8s-diff-port-588000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.936554-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.910615    4927 out.go:177] \n"}
{"Time":"2023-05-31T12:03:39.936558-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:39.914725    4927 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.936562-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:39.936566-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:39.914756    4927 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:39.93657-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:39.936574-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tW0531 12:03:39.916161    4927 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:39.936579-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936583-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:39.936587-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:39.936591-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936595-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:39.936599-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936603-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:39.936609-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:39.936614-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936618-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:39.936622-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:39.936625-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936629-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:39.936633-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:39.936638-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:39.936643-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tI0531 12:03:39.925576    4927 out.go:177] \n"}
{"Time":"2023-05-31T12:03:39.936646-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:39.93665-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:39.936654-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    start_stop_delete_test.go:259: failed to start minikube post-stop. args \"out/minikube-darwin-arm64 start -p default-k8s-diff-port-588000 --memory=2200 --alsologtostderr --wait=true --apiserver-port=8444 --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:39.936661-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:39.936665-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:39.979758-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (43.766334ms)\n"}
{"Time":"2023-05-31T12:03:39.979771-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:39.979774-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:39.979776-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:39.979777-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:39.979779-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:39.97978-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:39.979789-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:39.979804-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop"}
{"Time":"2023-05-31T12:03:39.979805-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:39.980054-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:275: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"default-k8s-diff-port-588000\" does not exist\n"}
{"Time":"2023-05-31T12:03:39.980059-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:39.980065-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.013686-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (33.543833ms)\n"}
{"Time":"2023-05-31T12:03:40.013701-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.013703-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.013705-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:40.013707-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.013708-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.01371-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.013712-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:40.013747-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop"}
{"Time":"2023-05-31T12:03:40.013749-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:40.013978-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:288: failed waiting for 'addon dashboard' pod post-stop-start: client config: context \"default-k8s-diff-port-588000\" does not exist\n"}
{"Time":"2023-05-31T12:03:40.014039-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Run:  kubectl --context default-k8s-diff-port-588000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\n"}
{"Time":"2023-05-31T12:03:40.042458-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:291: (dbg) Non-zero exit: kubectl --context default-k8s-diff-port-588000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard: exit status 1 (28.34625ms)\n"}
{"Time":"2023-05-31T12:03:40.042471-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.042473-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:40.042474-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \terror: context \"default-k8s-diff-port-588000\" does not exist\n"}
{"Time":"2023-05-31T12:03:40.042476-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.042478-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:40.042481-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:293: failed to get info on kubernetes-dashboard deployments. args \"kubectl --context default-k8s-diff-port-588000 describe deploy/dashboard-metrics-scraper -n kubernetes-dashboard\": exit status 1\n"}
{"Time":"2023-05-31T12:03:40.042483-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:297: addon did not load correct image. Expected to contain \" registry.k8s.io/echoserver:1.4\". Addon deployment info: \n"}
{"Time":"2023-05-31T12:03:40.042484-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:40.042502-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.07421-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (31.636125ms)\n"}
{"Time":"2023-05-31T12:03:40.074228-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.07423-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.074232-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:40.074234-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.074235-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.074237-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.074239-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:40.074258-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages"}
{"Time":"2023-05-31T12:03:40.07426-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages\n"}
{"Time":"2023-05-31T12:03:40.074297-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 ssh -p default-k8s-diff-port-588000 \"sudo crictl images -o json\"\n"}
{"Time":"2023-05-31T12:03:40.140551-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p default-k8s-diff-port-588000 \"sudo crictl images -o json\": exit status 89 (66.157583ms)\n"}
{"Time":"2023-05-31T12:03:40.140567-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.140569-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.140571-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:40.140573-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \t  To start a cluster, run: \"minikube start -p default-k8s-diff-port-588000\"\n"}
{"Time":"2023-05-31T12:03:40.140575-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.140577-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.14058-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to get images inside minikube. args \"out/minikube-darwin-arm64 ssh -p default-k8s-diff-port-588000 \\\"sudo crictl images -o json\\\"\": exit status 89\n"}
{"Time":"2023-05-31T12:03:40.140582-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to decode images json invalid character '*' looking for beginning of value. output:\n"}
{"Time":"2023-05-31T12:03:40.140584-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:40.140585-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"          To start a cluster, run: \"minikube start -p default-k8s-diff-port-588000\"\n"}
{"Time":"2023-05-31T12:03:40.14073-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: v1.27.2 images missing (-want +got):\n"}
{"Time":"2023-05-31T12:03:40.140734-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"          []string{\n"}
{"Time":"2023-05-31T12:03:40.140737-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"gcr.io/k8s-minikube/storage-provisioner:v5\",\n"}
{"Time":"2023-05-31T12:03:40.140739-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/coredns/coredns:v1.10.1\",\n"}
{"Time":"2023-05-31T12:03:40.14074-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/etcd:3.5.7-0\",\n"}
{"Time":"2023-05-31T12:03:40.140742-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-apiserver:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:40.140744-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-controller-manager:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:40.140745-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-proxy:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:40.140748-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-scheduler:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:40.140749-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/pause:3.9\",\n"}
{"Time":"2023-05-31T12:03:40.14075-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"          }\n"}
{"Time":"2023-05-31T12:03:40.140752-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:40.140755-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.170166-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (29.329583ms)\n"}
{"Time":"2023-05-31T12:03:40.170181-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.170183-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.170185-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:40.170187-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.170188-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.17019-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.170193-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:40.170214-07:00","Action":"run","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause"}
{"Time":"2023-05-31T12:03:40.170216-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"=== RUN   TestStartStop/group/default-k8s-diff-port/serial/Pause\n"}
{"Time":"2023-05-31T12:03:40.170266-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Run:  out/minikube-darwin-arm64 pause -p default-k8s-diff-port-588000 --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T12:03:40.213377-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Non-zero exit: out/minikube-darwin-arm64 pause -p default-k8s-diff-port-588000 --alsologtostderr -v=1: exit status 89 (43.011125ms)\n"}
{"Time":"2023-05-31T12:03:40.21339-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.213392-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.213394-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:40.213395-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \t  To start a cluster, run: \"minikube start -p default-k8s-diff-port-588000\"\n"}
{"Time":"2023-05-31T12:03:40.213397-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.213398-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.2134-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:40.213401-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197255    4954 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:40.213409-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197373    4954 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:40.21341-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197376    4954 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:40.213412-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197378    4954 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:40.213413-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197466    4954 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:40.213415-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197655    4954 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:40.213417-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197665    4954 mustload.go:65] Loading cluster: default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.213418-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.197839    4954 config.go:182] Loaded profile config \"default-k8s-diff-port-588000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:40.21342-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.201691    4954 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:40.213422-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tI0531 12:03:40.209609    4954 out.go:177]   To start a cluster, run: \"minikube start -p default-k8s-diff-port-588000\"\n"}
{"Time":"2023-05-31T12:03:40.213423-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.21343-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:40.213431-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    start_stop_delete_test.go:311: out/minikube-darwin-arm64 pause -p default-k8s-diff-port-588000 --alsologtostderr -v=1 failed: exit status 89\n"}
{"Time":"2023-05-31T12:03:40.213434-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:40.213435-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.240688-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (27.205167ms)\n"}
{"Time":"2023-05-31T12:03:40.2407-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.240702-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.240704-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:40.240705-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.240707-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.240709-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.240712-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:40.240713-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:40.240715-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.267669-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p default-k8s-diff-port-588000 -n default-k8s-diff-port-588000: exit status 7 (26.846459ms)\n"}
{"Time":"2023-05-31T12:03:40.26768-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.267682-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.267683-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:40.267685-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.267686-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.267688-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.26769-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"    helpers_test.go:241: \"default-k8s-diff-port-588000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:40.267694-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"    start_stop_delete_test.go:162: (dbg) Run:  out/minikube-darwin-arm64 delete -p default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.361516-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"    start_stop_delete_test.go:167: (dbg) Run:  kubectl config get-contexts default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.387756-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"    start_stop_delete_test.go:167: (dbg) Non-zero exit: kubectl config get-contexts default-k8s-diff-port-588000: exit status 1 (26.174375ms)\n"}
{"Time":"2023-05-31T12:03:40.38777-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.387772-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:40.387774-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2023-05-31T12:03:40.387775-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.387777-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:40.387778-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:40.38778-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        \terror: context default-k8s-diff-port-588000 not found\n"}
{"Time":"2023-05-31T12:03:40.387781-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:40.387787-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:40.387789-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"    start_stop_delete_test.go:169: config context error: exit status 1 (may be ok)\n"}
{"Time":"2023-05-31T12:03:40.387793-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"    helpers_test.go:175: Cleaning up \"default-k8s-diff-port-588000\" profile ...\n"}
{"Time":"2023-05-31T12:03:40.387809-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p default-k8s-diff-port-588000\n"}
{"Time":"2023-05-31T12:03:40.618246-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"--- FAIL: TestNetworkPlugins (423.65s)\n"}
{"Time":"2023-05-31T12:03:40.618257-07:00","Action":"output","Test":"TestNetworkPlugins/group","Output":"    --- FAIL: TestNetworkPlugins/group (2.36s)\n"}
{"Time":"2023-05-31T12:03:40.61826-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        --- SKIP: TestNetworkPlugins/group/cilium (2.36s)\n"}
{"Time":"2023-05-31T12:03:40.618262-07:00","Action":"skip","Test":"TestNetworkPlugins/group/cilium","Elapsed":2.36}
{"Time":"2023-05-31T12:03:40.618265-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        --- FAIL: TestNetworkPlugins/group/auto (11.76s)\n"}
{"Time":"2023-05-31T12:03:40.618267-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"            --- FAIL: TestNetworkPlugins/group/auto/Start (9.68s)\n"}
{"Time":"2023-05-31T12:03:40.618268-07:00","Action":"fail","Test":"TestNetworkPlugins/group/auto/Start","Elapsed":9.68}
{"Time":"2023-05-31T12:03:40.61827-07:00","Action":"fail","Test":"TestNetworkPlugins/group/auto","Elapsed":11.76}
{"Time":"2023-05-31T12:03:40.618271-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        --- FAIL: TestNetworkPlugins/group/calico (12.10s)\n"}
{"Time":"2023-05-31T12:03:40.618273-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"            --- FAIL: TestNetworkPlugins/group/calico/Start (9.82s)\n"}
{"Time":"2023-05-31T12:03:40.618274-07:00","Action":"fail","Test":"TestNetworkPlugins/group/calico/Start","Elapsed":9.82}
{"Time":"2023-05-31T12:03:40.618276-07:00","Action":"fail","Test":"TestNetworkPlugins/group/calico","Elapsed":12.1}
{"Time":"2023-05-31T12:03:40.618277-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel","Output":"        --- FAIL: TestNetworkPlugins/group/custom-flannel (12.07s)\n"}
{"Time":"2023-05-31T12:03:40.618278-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-flannel/Start","Output":"            --- FAIL: TestNetworkPlugins/group/custom-flannel/Start (9.84s)\n"}
{"Time":"2023-05-31T12:03:40.61828-07:00","Action":"fail","Test":"TestNetworkPlugins/group/custom-flannel/Start","Elapsed":9.84}
{"Time":"2023-05-31T12:03:40.618281-07:00","Action":"fail","Test":"TestNetworkPlugins/group/custom-flannel","Elapsed":12.07}
{"Time":"2023-05-31T12:03:40.618282-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        --- FAIL: TestNetworkPlugins/group/false (11.75s)\n"}
{"Time":"2023-05-31T12:03:40.618284-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"            --- FAIL: TestNetworkPlugins/group/false/Start (9.64s)\n"}
{"Time":"2023-05-31T12:03:40.618285-07:00","Action":"fail","Test":"TestNetworkPlugins/group/false/Start","Elapsed":9.64}
{"Time":"2023-05-31T12:03:40.618286-07:00","Action":"fail","Test":"TestNetworkPlugins/group/false","Elapsed":11.75}
{"Time":"2023-05-31T12:03:40.618288-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        --- FAIL: TestNetworkPlugins/group/kindnet (11.97s)\n"}
{"Time":"2023-05-31T12:03:40.618289-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"            --- FAIL: TestNetworkPlugins/group/kindnet/Start (9.79s)\n"}
{"Time":"2023-05-31T12:03:40.618291-07:00","Action":"fail","Test":"TestNetworkPlugins/group/kindnet/Start","Elapsed":9.79}
{"Time":"2023-05-31T12:03:40.618292-07:00","Action":"fail","Test":"TestNetworkPlugins/group/kindnet","Elapsed":11.97}
{"Time":"2023-05-31T12:03:40.618293-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        --- FAIL: TestNetworkPlugins/group/flannel (11.95s)\n"}
{"Time":"2023-05-31T12:03:40.618295-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel/Start","Output":"            --- FAIL: TestNetworkPlugins/group/flannel/Start (9.68s)\n"}
{"Time":"2023-05-31T12:03:40.618296-07:00","Action":"fail","Test":"TestNetworkPlugins/group/flannel/Start","Elapsed":9.68}
{"Time":"2023-05-31T12:03:40.618297-07:00","Action":"fail","Test":"TestNetworkPlugins/group/flannel","Elapsed":11.95}
{"Time":"2023-05-31T12:03:40.618298-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        --- FAIL: TestNetworkPlugins/group/enable-default-cni (11.89s)\n"}
{"Time":"2023-05-31T12:03:40.6183-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"            --- FAIL: TestNetworkPlugins/group/enable-default-cni/Start (9.82s)\n"}
{"Time":"2023-05-31T12:03:40.618301-07:00","Action":"fail","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Elapsed":9.82}
{"Time":"2023-05-31T12:03:40.618303-07:00","Action":"fail","Test":"TestNetworkPlugins/group/enable-default-cni","Elapsed":11.89}
{"Time":"2023-05-31T12:03:40.618304-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        --- FAIL: TestNetworkPlugins/group/bridge (11.85s)\n"}
{"Time":"2023-05-31T12:03:40.618305-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"            --- FAIL: TestNetworkPlugins/group/bridge/Start (9.74s)\n"}
{"Time":"2023-05-31T12:03:40.618307-07:00","Action":"fail","Test":"TestNetworkPlugins/group/bridge/Start","Elapsed":9.74}
{"Time":"2023-05-31T12:03:40.618308-07:00","Action":"fail","Test":"TestNetworkPlugins/group/bridge","Elapsed":11.85}
{"Time":"2023-05-31T12:03:40.618309-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        --- FAIL: TestNetworkPlugins/group/kubenet (11.94s)\n"}
{"Time":"2023-05-31T12:03:40.618315-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"            --- FAIL: TestNetworkPlugins/group/kubenet/Start (9.76s)\n"}
{"Time":"2023-05-31T12:03:42.265547-07:00","Action":"fail","Test":"TestNetworkPlugins/group/kubenet/Start","Elapsed":9.76}
{"Time":"2023-05-31T12:03:42.265594-07:00","Action":"fail","Test":"TestNetworkPlugins/group/kubenet","Elapsed":11.94}
{"Time":"2023-05-31T12:03:42.265602-07:00","Action":"fail","Test":"TestNetworkPlugins/group","Elapsed":2.36}
{"Time":"2023-05-31T12:03:42.26561-07:00","Action":"fail","Test":"TestNetworkPlugins","Elapsed":423.65}
{"Time":"2023-05-31T12:03:42.26562-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    start_stop_delete_test.go:186: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (11.429946125s)\n"}
{"Time":"2023-05-31T12:03:42.265637-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.265644-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:42.265652-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* [newest-cni-415000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:42.265675-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:42.265683-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:42.265691-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:42.265698-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:42.265707-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:42.265713-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:42.26572-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:42.265727-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:42.265739-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Starting control plane node newest-cni-415000 in cluster newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:42.265746-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:42.265753-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:42.26576-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:42.265766-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.265773-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Deleting \"newest-cni-415000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:42.26578-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:42.265787-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:42.265793-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:42.2658-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.265807-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.265813-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.265819-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.265829-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:42.265836-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:42.265843-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.858616    4900 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:42.26585-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.858716    4900 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:42.265858-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.858719    4900 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:42.265866-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.858722    4900 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:42.265874-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.858793    4900 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:42.265882-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.859768    4900 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:42.265891-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.874570    4900 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1981,\"bootTime\":1685557829,\"procs\":418,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:42.265911-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:30.874621    4900 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:42.26592-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.879680    4900 out.go:177] * [newest-cni-415000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:42.265927-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.886592    4900 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:42.265937-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.890644    4900 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:42.265944-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.886640    4900 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:42.265951-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.896586    4900 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:42.265958-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.899652    4900 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:42.265965-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.902614    4900 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:42.265972-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.905636    4900 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:42.265979-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.908966    4900 config.go:182] Loaded profile config \"default-k8s-diff-port-588000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:42.265988-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.909026    4900 config.go:182] Loaded profile config \"multinode-073000-m01\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:42.265995-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.909073    4900 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:42.266003-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.916626    4900 out.go:177] * Using the qemu2 driver based on user configuration\n"}
{"Time":"2023-05-31T12:03:42.26601-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.923653    4900 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:42.266019-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.923661    4900 start.go:875] validating driver \"qemu2\" against \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:42.266029-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.923670    4900 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:42.266037-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.925665    4900 start_flags.go:305] no existing cluster config was found, will generate one from the flags \n"}
{"Time":"2023-05-31T12:03:42.26605-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:30.925686    4900 out.go:239] ! With --network-plugin=cni, you will need to provide your own CNI. See --cni flag as a user-friendly alternative\n"}
{"Time":"2023-05-31T12:03:42.266058-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t! With --network-plugin=cni, you will need to provide your own CNI. See --cni flag as a user-friendly alternative\n"}
{"Time":"2023-05-31T12:03:42.266065-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.933583    4900 out.go:177] * Automatically selected the socket_vmnet network\n"}
{"Time":"2023-05-31T12:03:42.266073-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936716    4900 start_flags.go:938] Waiting for components: map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true]\n"}
{"Time":"2023-05-31T12:03:42.266081-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936728    4900 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:42.266088-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936735    4900 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:42.266096-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936739    4900 start_flags.go:314] Found \"bridge CNI\" CNI - setting NetworkPlugin=cni\n"}
{"Time":"2023-05-31T12:03:42.266104-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936743    4900 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:42.266114-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t{Name:newest-cni-415000 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:newest-cni-415000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:d"}
{"Time":"2023-05-31T12:03:42.266125-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"ocker CRISocket: NetworkPlugin:cni FeatureGates:ServerSideApply=true ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:kubeadm Key:pod-network-cidr Value:10.42.0.0/16}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/s"}
{"Time":"2023-05-31T12:03:42.266133-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"ocket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:42.266139-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.936824    4900 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:42.266145-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.944614    4900 out.go:177] * Starting control plane node newest-cni-415000 in cluster newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:42.26615-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948630    4900 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:42.266157-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948651    4900 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:42.266163-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948660    4900 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:42.266169-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948720    4900 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:42.266174-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948726    4900 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:42.266183-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948779    4900 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/newest-cni-415000/config.json ...\n"}
{"Time":"2023-05-31T12:03:42.266189-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948792    4900 lock.go:35] WriteFile acquiring /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/newest-cni-415000/config.json: {Name:mk7b9506c82272732fa8d6aed6b17bb62d9563e0 Clock:{} Delay:500ms Timeout:1m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:42.266196-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948984    4900 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:42.266201-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:30.948997    4900 start.go:364] acquiring machines lock for newest-cni-415000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:42.266207-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.463231    4900 start.go:368] acquired machines lock for \"newest-cni-415000\" in 1.514212375s\n"}
{"Time":"2023-05-31T12:03:42.266217-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.463401    4900 start.go:93] Provisioning new machine with config: \u0026{Name:newest-cni-415000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:42.266228-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:newest-cni-415000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates:ServerSideApply=true ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:kubeadm Key:pod-network-cidr Value:10.42.0.0/16}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountS"}
{"Time":"2023-05-31T12:03:42.266236-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"tring:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:42.266244-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.463614    4900 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:42.266251-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.471261    4900 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:42.266256-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.519673    4900 start.go:159] libmachine.API.Create for \"newest-cni-415000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:42.266261-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.519715    4900 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:42.266267-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.519852    4900 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:42.266272-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.519894    4900 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:42.266277-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.519918    4900 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:42.266283-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.520003    4900 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:42.266288-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.520034    4900 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:42.266294-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.520061    4900 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:42.266299-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.520629    4900 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:42.266308-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.674364    4900 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:42.266314-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.808138    4900 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:42.266319-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.808146    4900 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:42.266327-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.808300    4900 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266333-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.823072    4900 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:42.266338-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.823097    4900 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:42.266344-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.823174    4900 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:42.26635-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.831427    4900 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:42.266358-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.266363-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.831448    4900 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:42.266369-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.831475    4900 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266375-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.831480    4900 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:42.266383-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.831519    4900 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/qemu.pid -device virtio-net-pci,netdev=net0,mac=3a:89:ff:dc:50:00 -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266392-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.833287    4900 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:42.266397-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.833301    4900 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:42.266402-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.266407-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:32.833319    4900 client.go:171] LocalClient.Create took 313.599875ms\n"}
{"Time":"2023-05-31T12:03:42.266412-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:34.835518    4900 start.go:128] duration metric: createHost completed in 2.371907166s\n"}
{"Time":"2023-05-31T12:03:42.266419-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:34.835600    4900 start.go:83] releasing machines lock for \"newest-cni-415000\", held for 2.372352625s\n"}
{"Time":"2023-05-31T12:03:42.266424-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:34.835834    4900 start.go:687] error starting host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.26643-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:34.853332    4900 out.go:177] * Deleting \"newest-cni-415000\" in qemu2 ...\n"}
{"Time":"2023-05-31T12:03:42.266437-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:34.874799    4900 out.go:239] ! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266443-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t! StartHost failed, but will try again: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266449-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:34.874831    4900 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:42.266455-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.876944    4900 start.go:364] acquiring machines lock for newest-cni-415000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:42.266461-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.893473    4900 start.go:368] acquired machines lock for \"newest-cni-415000\" in 16.422417ms\n"}
{"Time":"2023-05-31T12:03:42.266472-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.893604    4900 start.go:93] Provisioning new machine with config: \u0026{Name:newest-cni-415000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesC"}
{"Time":"2023-05-31T12:03:42.26649-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"onfig:{KubernetesVersion:v1.27.2 ClusterName:newest-cni-415000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates:ServerSideApply=true ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:kubeadm Key:pod-network-cidr Value:10.42.0.0/16}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountS"}
{"Time":"2023-05-31T12:03:42.266499-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"tring:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:} \u0026{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}\n"}
{"Time":"2023-05-31T12:03:42.266506-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.893820    4900 start.go:125] createHost starting for \"\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:42.266511-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.902658    4900 out.go:204] * Creating qemu2 VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...\n"}
{"Time":"2023-05-31T12:03:42.266517-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943125    4900 start.go:159] libmachine.API.Create for \"newest-cni-415000\" (driver=\"qemu2\")\n"}
{"Time":"2023-05-31T12:03:42.266523-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943167    4900 client.go:168] LocalClient.Create starting\n"}
{"Time":"2023-05-31T12:03:42.26653-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943291    4900 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/ca.pem\n"}
{"Time":"2023-05-31T12:03:42.266536-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943345    4900 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:42.266541-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943362    4900 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:42.266547-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943434    4900 main.go:141] libmachine: Reading certificate data from /Users/jenkins/minikube-integration/16569-1035/.minikube/certs/cert.pem\n"}
{"Time":"2023-05-31T12:03:42.266553-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943462    4900 main.go:141] libmachine: Decoding PEM data...\n"}
{"Time":"2023-05-31T12:03:42.266558-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943477    4900 main.go:141] libmachine: Parsing certificate...\n"}
{"Time":"2023-05-31T12:03:42.266564-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:39.943907    4900 main.go:141] libmachine: Downloading /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/boot2docker.iso from file:///Users/jenkins/minikube-integration/16569-1035/.minikube/cache/iso/arm64/minikube-v1.30.1-1684885329-16572-arm64.iso...\n"}
{"Time":"2023-05-31T12:03:42.26657-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.143227    4900 main.go:141] libmachine: Creating SSH key...\n"}
{"Time":"2023-05-31T12:03:42.266576-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.206250    4900 main.go:141] libmachine: Creating Disk image...\n"}
{"Time":"2023-05-31T12:03:42.266581-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.206258    4900 main.go:141] libmachine: Creating 20000 MB hard disk image...\n"}
{"Time":"2023-05-31T12:03:42.266589-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.206409    4900 main.go:141] libmachine: executing: qemu-img convert -f raw -O qcow2 /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2.raw /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266594-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.215074    4900 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:42.266599-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.215096    4900 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:42.266605-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.215155    4900 main.go:141] libmachine: executing: qemu-img resize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2 +20000M\n"}
{"Time":"2023-05-31T12:03:42.266613-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.222676    4900 main.go:141] libmachine: STDOUT: Image resized.\n"}
{"Time":"2023-05-31T12:03:42.266621-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.266627-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.222696    4900 main.go:141] libmachine: STDERR: \n"}
{"Time":"2023-05-31T12:03:42.266633-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.222712    4900 main.go:141] libmachine: DONE writing to /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2.raw and /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266639-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.222719    4900 main.go:141] libmachine: Starting QEMU VM...\n"}
{"Time":"2023-05-31T12:03:42.266647-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.222761    4900 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/qemu.pid -device virtio-net-pci,netdev=net0,mac=0a:2a:c0:43:da:3a -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:42.266656-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.224482    4900 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:42.266662-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.224497    4900 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:42.266667-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:42.266673-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:40.224509    4900 client.go:171] LocalClient.Create took 281.337917ms\n"}
{"Time":"2023-05-31T12:03:42.266679-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:42.226681    4900 start.go:128] duration metric: createHost completed in 2.332855417s\n"}
{"Time":"2023-05-31T12:03:42.266685-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:42.226777    4900 start.go:83] releasing machines lock for \"newest-cni-415000\", held for 2.333313208s\n"}
{"Time":"2023-05-31T12:03:42.266692-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:42.227224    4900 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p newest-cni-415000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266699-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p newest-cni-415000\" may fix it: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266704-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:42.235904    4900 out.go:177] \n"}
{"Time":"2023-05-31T12:03:42.26671-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:42.239973    4900 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266717-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: creating host: create: creating: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:42.266723-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:42.240001    4900 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:42.266728-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:42.266734-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tW0531 12:03:42.242262    4900 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:42.266742-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266747-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:42.266753-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:42.266758-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266763-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:42.266769-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266775-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:42.266782-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:42.266792-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266797-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:42.266802-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:42.266807-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266812-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:42.266818-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:42.266825-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:42.266831-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tI0531 12:03:42.249864    4900 out.go:177] \n"}
{"Time":"2023-05-31T12:03:42.266836-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.266841-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:42.26685-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    start_stop_delete_test.go:188: failed starting minikube -first start-. args \"out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:42.266862-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:42.266868-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:42.330334-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (64.512875ms)\n"}
{"Time":"2023-05-31T12:03:42.33035-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.330353-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:42.330355-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:42.330357-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.330359-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:42.330361-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:42.330364-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    helpers_test.go:241: \"newest-cni-415000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:42.330474-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/DeployApp"}
{"Time":"2023-05-31T12:03:42.330479-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Output":"=== RUN   TestStartStop/group/newest-cni/serial/DeployApp\n"}
{"Time":"2023-05-31T12:03:42.330486-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive"}
{"Time":"2023-05-31T12:03:42.330488-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive","Output":"=== RUN   TestStartStop/group/newest-cni/serial/EnableAddonWhileActive\n"}
{"Time":"2023-05-31T12:03:42.330585-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:205: (dbg) Run:  out/minikube-darwin-arm64 addons enable metrics-server -p newest-cni-415000 --images=MetricsServer=registry.k8s.io/echoserver:1.4 --registries=MetricsServer=fake.domain\n"}
{"Time":"2023-05-31T12:03:42.388874-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive","Output":"    start_stop_delete_test.go:211: WARNING: cni mode requires additional setup before pods can schedule :(\n"}
{"Time":"2023-05-31T12:03:42.388906-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/Stop"}
{"Time":"2023-05-31T12:03:42.388908-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/Stop\n"}
{"Time":"2023-05-31T12:03:42.388976-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"    start_stop_delete_test.go:228: (dbg) Run:  out/minikube-darwin-arm64 stop -p newest-cni-415000 --alsologtostderr -v=3\n"}
{"Time":"2023-05-31T12:03:42.448905-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop"}
{"Time":"2023-05-31T12:03:42.448917-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/EnableAddonAfterStop\n"}
{"Time":"2023-05-31T12:03:42.448935-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:42.477759-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (28.752083ms)\n"}
{"Time":"2023-05-31T12:03:42.477771-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.477772-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:42.477774-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:42.477776-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2023-05-31T12:03:42.477777-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:42.477779-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:42.477784-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:246: (dbg) Run:  out/minikube-darwin-arm64 addons enable dashboard -p newest-cni-415000 --images=MetricsScraper=registry.k8s.io/echoserver:1.4\n"}
{"Time":"2023-05-31T12:03:42.536901-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/SecondStart"}
{"Time":"2023-05-31T12:03:42.536912-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"=== RUN   TestStartStop/group/newest-cni/serial/SecondStart\n"}
{"Time":"2023-05-31T12:03:42.536939-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Run:  out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2\n"}
{"Time":"2023-05-31T12:03:47.706642-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:256: (dbg) Non-zero exit: out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2: exit status 80 (5.168349875s)\n"}
{"Time":"2023-05-31T12:03:47.706707-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.706716-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.706725-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* [newest-cni-415000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:47.706732-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:47.70674-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:47.706751-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:47.706776-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:47.706785-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:47.706792-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t  - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:47.706798-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:47.706806-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* Starting control plane node newest-cni-415000 in cluster newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.706813-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"newest-cni-415000\" ...\n"}
{"Time":"2023-05-31T12:03:47.70682-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:47.706826-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:47.706834-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.706842-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* Restarting existing qemu2 VM for \"newest-cni-415000\" ...\n"}
{"Time":"2023-05-31T12:03:47.706849-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tOUTPUT: \n"}
{"Time":"2023-05-31T12:03:47.706855-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tERROR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:47.706862-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.706869-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.706876-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.706882-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.706889-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.706895-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:47.706902-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.563531    4990 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:47.706909-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.563647    4990 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:47.706917-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.563649    4990 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:47.706924-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.563652    4990 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:47.706931-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.563720    4990 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:47.706938-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.564712    4990 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:47.706966-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.579448    4990 start.go:127] hostinfo: {\"hostname\":\"MacOS-M1-Agent-1.local\",\"uptime\":1993,\"bootTime\":1685557829,\"procs\":424,\"os\":\"darwin\",\"platform\":\"darwin\",\"platformFamily\":\"Standalone Workstation\",\"platformVersion\":\"13.4\",\"kernelVersion\":\"22.5.0\",\"kernelArch\":\"arm64\",\"virtualizationSystem\":\"\",\"virtualizationRole\":\"\",\"hostId\":\"5b726c3a-f72c-561b-b03e-814251f12bfa\"}\n"}
{"Time":"2023-05-31T12:03:47.706982-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:42.579504    4990 start.go:135] gopshost.Virtualization returned error: not implemented yet\n"}
{"Time":"2023-05-31T12:03:47.706989-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.583249    4990 out.go:177] * [newest-cni-415000] minikube v1.30.1 on Darwin 13.4 (arm64)\n"}
{"Time":"2023-05-31T12:03:47.706996-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.590239    4990 out.go:177]   - MINIKUBE_LOCATION=16569\n"}
{"Time":"2023-05-31T12:03:47.707003-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.590246    4990 notify.go:220] Checking for updates...\n"}
{"Time":"2023-05-31T12:03:47.707011-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.593994    4990 out.go:177]   - KUBECONFIG=/Users/jenkins/minikube-integration/16569-1035/kubeconfig\n"}
{"Time":"2023-05-31T12:03:47.707019-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.597146    4990 out.go:177]   - MINIKUBE_BIN=out/minikube-darwin-arm64\n"}
{"Time":"2023-05-31T12:03:47.707027-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.600195    4990 out.go:177]   - MINIKUBE_SUPPRESS_DOCKER_PERFORMANCE=true\n"}
{"Time":"2023-05-31T12:03:47.707034-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.603197    4990 out.go:177]   - MINIKUBE_HOME=/Users/jenkins/minikube-integration/16569-1035/.minikube\n"}
{"Time":"2023-05-31T12:03:47.707041-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.606176    4990 out.go:177]   - MINIKUBE_FORCE_SYSTEMD=\n"}
{"Time":"2023-05-31T12:03:47.707049-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.609427    4990 config.go:182] Loaded profile config \"newest-cni-415000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:47.707057-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.609682    4990 driver.go:375] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2023-05-31T12:03:47.707064-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.614231    4990 out.go:177] * Using the qemu2 driver based on existing profile\n"}
{"Time":"2023-05-31T12:03:47.707072-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.621156    4990 start.go:297] selected driver: qemu2\n"}
{"Time":"2023-05-31T12:03:47.707089-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.621161    4990 start.go:875] validating driver \"qemu2\" against \u0026{Name:newest-cni-415000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConf"}
{"Time":"2023-05-31T12:03:47.707105-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"ig:{KubernetesVersion:v1.27.2 ClusterName:newest-cni-415000 Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates:ServerSideApply=true ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:kubeadm Key:pod-network-cidr Value:10.42.0.0/16}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cn"}
{"Time":"2023-05-31T12:03:47.707117-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"il\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:47.707127-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.621200    4990 start.go:886] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:\u003cnil\u003e Reason: Fix: Doc: Version:}\n"}
{"Time":"2023-05-31T12:03:47.707141-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.622985    4990 start_flags.go:938] Waiting for components: map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true]\n"}
{"Time":"2023-05-31T12:03:47.707149-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.623004    4990 cni.go:84] Creating CNI manager for \"\"\n"}
{"Time":"2023-05-31T12:03:47.707157-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.623011    4990 cni.go:157] \"qemu2\" driver + \"docker\" container runtime found on kubernetes v1.24+, recommending bridge\n"}
{"Time":"2023-05-31T12:03:47.707165-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.623016    4990 start_flags.go:319] config:\n"}
{"Time":"2023-05-31T12:03:47.707183-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t{Name:newest-cni-415000 KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16572/minikube-v1.30.1-1684885329-16572-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase-builds:v0.0.39-1685034446-16582@sha256:aa728b22374c829d1e5b0a5d64d51d3e0ae0f2b191381d957516fdff68f357c8 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.2 ClusterName:newest-cni-415000 Namespace:default A"}
{"Time":"2023-05-31T12:03:47.707196-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"PIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates:ServerSideApply=true ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[{Component:kubeadm Key:pod-network-cidr Value:10.42.0.0/16}] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.2 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true metrics-server:true] CustomAddonImages:map[MetricsScraper:registry.k8s.io/echoserver:1.4 MetricsServer:registry.k8s.io/echoserver:1.4] CustomAddonRegistries:map[MetricsServer:fake.domain] VerifyComponents:map[apiserver:true apps_running:false default_sa:true extra:false kubelet:false node_ready:false system_pods:true] StartHostTimeout:6m0s ScheduledStop:\u003cnil\u003e ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeReques"}
{"Time":"2023-05-31T12:03:47.707208-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"ted:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet StaticIP:}\n"}
{"Time":"2023-05-31T12:03:47.707216-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.623102    4990 iso.go:125] acquiring lock: {Name:mk1c40ec4029847163093b2d18098a3398dc0050 Clock:{} Delay:500ms Timeout:10m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:47.707224-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.630169    4990 out.go:177] * Starting control plane node newest-cni-415000 in cluster newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.707232-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634201    4990 preload.go:132] Checking if preload exists for k8s version v1.27.2 and runtime docker\n"}
{"Time":"2023-05-31T12:03:47.707239-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634220    4990 preload.go:148] Found local preload: /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4\n"}
{"Time":"2023-05-31T12:03:47.707248-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634229    4990 cache.go:57] Caching tarball of preloaded images\n"}
{"Time":"2023-05-31T12:03:47.707255-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634284    4990 preload.go:174] Found /Users/jenkins/minikube-integration/16569-1035/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.2-docker-overlay2-arm64.tar.lz4 in cache, skipping download\n"}
{"Time":"2023-05-31T12:03:47.707263-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634289    4990 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.2 on docker\n"}
{"Time":"2023-05-31T12:03:47.707271-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634348    4990 profile.go:148] Saving config to /Users/jenkins/minikube-integration/16569-1035/.minikube/profiles/newest-cni-415000/config.json ...\n"}
{"Time":"2023-05-31T12:03:47.70728-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634698    4990 cache.go:195] Successfully downloaded all kic artifacts\n"}
{"Time":"2023-05-31T12:03:47.707288-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634710    4990 start.go:364] acquiring machines lock for newest-cni-415000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:47.707297-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634743    4990 start.go:368] acquired machines lock for \"newest-cni-415000\" in 28.042µs\n"}
{"Time":"2023-05-31T12:03:47.707306-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634753    4990 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:47.707314-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634756    4990 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:47.707321-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.634865    4990 fix.go:103] recreateIfNeeded on newest-cni-415000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:47.707329-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:42.634873    4990 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:47.707337-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.639127    4990 out.go:177] * Restarting existing qemu2 VM for \"newest-cni-415000\" ...\n"}
{"Time":"2023-05-31T12:03:47.707348-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.647167    4990 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/qemu.pid -device virtio-net-pci,netdev=net0,mac=0a:2a:c0:43:da:3a -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:47.70736-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.648937    4990 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:47.707368-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.648954    4990 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:47.707375-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.707382-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.648992    4990 fix.go:57] fixHost completed within 14.234291ms\n"}
{"Time":"2023-05-31T12:03:47.707389-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.648997    4990 start.go:83] releasing machines lock for \"newest-cni-415000\", held for 14.250667ms\n"}
{"Time":"2023-05-31T12:03:47.707397-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:42.649004    4990 start.go:687] error starting host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707405-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:42.649032    4990 out.go:239] ! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707417-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t! StartHost failed, but will try again: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707426-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:42.649037    4990 start.go:702] Will try again in 5 seconds ...\n"}
{"Time":"2023-05-31T12:03:47.707433-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.651148    4990 start.go:364] acquiring machines lock for newest-cni-415000: {Name:mkc88a79be5b99df33d46ba1f84dc087a3b71eb1 Clock:{} Delay:500ms Timeout:13m0s Cancel:\u003cnil\u003e}\n"}
{"Time":"2023-05-31T12:03:47.707441-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.651570    4990 start.go:368] acquired machines lock for \"newest-cni-415000\" in 294.917µs\n"}
{"Time":"2023-05-31T12:03:47.707455-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.651723    4990 start.go:96] Skipping create...Using existing machine configuration\n"}
{"Time":"2023-05-31T12:03:47.707462-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.651742    4990 fix.go:55] fixHost starting: \n"}
{"Time":"2023-05-31T12:03:47.70747-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.652482    4990 fix.go:103] recreateIfNeeded on newest-cni-415000: state=Stopped err=\u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:47.707478-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:47.652509    4990 fix.go:129] unexpected machine state, will restart: \u003cnil\u003e\n"}
{"Time":"2023-05-31T12:03:47.707485-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.656882    4990 out.go:177] * Restarting existing qemu2 VM for \"newest-cni-415000\" ...\n"}
{"Time":"2023-05-31T12:03:47.707499-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.665103    4990 main.go:141] libmachine: executing: /opt/socket_vmnet/bin/socket_vmnet_client /var/run/socket_vmnet qemu-system-aarch64 -M virt,highmem=off -cpu host -drive file=/opt/homebrew/Cellar/qemu/7.2.0/share/qemu/edk2-aarch64-code.fd,readonly=on,format=raw,if=pflash -display none -accel hvf -m 2200 -smp 2 -boot d -cdrom /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/boot2docker.iso -qmp unix:/Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/monitor,server,nowait -pidfile /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/qemu.pid -device virtio-net-pci,netdev=net0,mac=0a:2a:c0:43:da:3a -netdev socket,id=net0,fd=3 -daemonize /Users/jenkins/minikube-integration/16569-1035/.minikube/machines/newest-cni-415000/disk.qcow2\n"}
{"Time":"2023-05-31T12:03:47.707514-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.674292    4990 main.go:141] libmachine: STDOUT: \n"}
{"Time":"2023-05-31T12:03:47.707522-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.674344    4990 main.go:141] libmachine: STDERR: Failed to connect to \"/var/run/socket_vmnet\": Connection refused\n"}
{"Time":"2023-05-31T12:03:47.707529-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t\n"}
{"Time":"2023-05-31T12:03:47.707536-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.674443    4990 fix.go:57] fixHost completed within 22.704042ms\n"}
{"Time":"2023-05-31T12:03:47.707543-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.674463    4990 start.go:83] releasing machines lock for \"newest-cni-415000\", held for 22.870625ms\n"}
{"Time":"2023-05-31T12:03:47.707556-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:47.674639    4990 out.go:239] * Failed to start qemu2 VM. Running \"minikube delete -p newest-cni-415000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707566-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* Failed to start qemu2 VM. Running \"minikube delete -p newest-cni-415000\" may fix it: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707574-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.680106    4990 out.go:177] \n"}
{"Time":"2023-05-31T12:03:47.707582-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:47.684114    4990 out.go:239] X Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707591-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tX Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: driver start: Failed to connect to \"/var/run/socket_vmnet\": Connection refused: exit status 1\n"}
{"Time":"2023-05-31T12:03:47.707599-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:47.684165    4990 out.go:239] * \n"}
{"Time":"2023-05-31T12:03:47.70761-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t* \n"}
{"Time":"2023-05-31T12:03:47.707618-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tW0531 12:03:47.687058    4990 out.go:239] ╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:47.70763-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707639-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:47.707647-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:47.707654-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707661-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:47.707668-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707676-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:47.707687-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"}
{"Time":"2023-05-31T12:03:47.707697-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707704-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│    * If the above advice does not help, please let us know:                                 │\n"}
{"Time":"2023-05-31T12:03:47.707711-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│      https://github.com/kubernetes/minikube/issues/new/choose                               │\n"}
{"Time":"2023-05-31T12:03:47.707718-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707726-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│    * Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    │\n"}
{"Time":"2023-05-31T12:03:47.707733-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t│                                                                                             │\n"}
{"Time":"2023-05-31T12:03:47.707743-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \t╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"}
{"Time":"2023-05-31T12:03:47.707751-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tI0531 12:03:47.693920    4990 out.go:177] \n"}
{"Time":"2023-05-31T12:03:47.707759-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.707765-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:47.707778-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:259: failed to start minikube post-stop. args \"out/minikube-darwin-arm64 start -p newest-cni-415000 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubeadm.pod-network-cidr=10.42.0.0/16 --driver=qemu2  --kubernetes-version=v1.27.2\": exit status 80\n"}
{"Time":"2023-05-31T12:03:47.707787-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:47.707795-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.775114-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (68.239959ms)\n"}
{"Time":"2023-05-31T12:03:47.77513-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.775133-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.775135-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:47.775136-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.775138-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.77514-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:47.775143-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    helpers_test.go:241: \"newest-cni-415000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:47.775188-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop"}
{"Time":"2023-05-31T12:03:47.775197-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:47.775221-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:273: WARNING: cni mode requires additional setup before pods can schedule :(\n"}
{"Time":"2023-05-31T12:03:47.775298-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop"}
{"Time":"2023-05-31T12:03:47.775323-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/AddonExistsAfterStop\n"}
{"Time":"2023-05-31T12:03:47.775326-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:284: WARNING: cni mode requires additional setup before pods can schedule :(\n"}
{"Time":"2023-05-31T12:03:47.775329-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages"}
{"Time":"2023-05-31T12:03:47.775331-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/newest-cni/serial/VerifyKubernetesImages\n"}
{"Time":"2023-05-31T12:03:47.775337-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Run:  out/minikube-darwin-arm64 ssh -p newest-cni-415000 \"sudo crictl images -o json\"\n"}
{"Time":"2023-05-31T12:03:47.820604-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: (dbg) Non-zero exit: out/minikube-darwin-arm64 ssh -p newest-cni-415000 \"sudo crictl images -o json\": exit status 89 (45.237125ms)\n"}
{"Time":"2023-05-31T12:03:47.820615-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.820618-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.820619-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:47.820621-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \t  To start a cluster, run: \"minikube start -p newest-cni-415000\"\n"}
{"Time":"2023-05-31T12:03:47.820623-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.820624-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.820633-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to get images inside minikube. args \"out/minikube-darwin-arm64 ssh -p newest-cni-415000 \\\"sudo crictl images -o json\\\"\": exit status 89\n"}
{"Time":"2023-05-31T12:03:47.820638-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: failed to decode images json invalid character '*' looking for beginning of value. output:\n"}
{"Time":"2023-05-31T12:03:47.82064-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:47.820642-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"          To start a cluster, run: \"minikube start -p newest-cni-415000\"\n"}
{"Time":"2023-05-31T12:03:47.82076-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:304: v1.27.2 images missing (-want +got):\n"}
{"Time":"2023-05-31T12:03:47.820763-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"          []string{\n"}
{"Time":"2023-05-31T12:03:47.820765-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"gcr.io/k8s-minikube/storage-provisioner:v5\",\n"}
{"Time":"2023-05-31T12:03:47.820767-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/coredns/coredns:v1.10.1\",\n"}
{"Time":"2023-05-31T12:03:47.820768-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/etcd:3.5.7-0\",\n"}
{"Time":"2023-05-31T12:03:47.82077-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-apiserver:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:47.820771-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-controller-manager:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:47.820772-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-proxy:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:47.820774-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/kube-scheduler:v1.27.2\",\n"}
{"Time":"2023-05-31T12:03:47.820775-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        - \t\"registry.k8s.io/pause:3.9\",\n"}
{"Time":"2023-05-31T12:03:47.820777-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"          }\n"}
{"Time":"2023-05-31T12:03:47.820778-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:47.82078-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.850029-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (29.194625ms)\n"}
{"Time":"2023-05-31T12:03:47.850042-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.850044-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.850045-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:47.850047-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.850048-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.85005-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:47.850053-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    helpers_test.go:241: \"newest-cni-415000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:47.850087-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/Pause"}
{"Time":"2023-05-31T12:03:47.850089-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"=== RUN   TestStartStop/group/newest-cni/serial/Pause\n"}
{"Time":"2023-05-31T12:03:47.850156-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Run:  out/minikube-darwin-arm64 pause -p newest-cni-415000 --alsologtostderr -v=1\n"}
{"Time":"2023-05-31T12:03:47.888741-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:311: (dbg) Non-zero exit: out/minikube-darwin-arm64 pause -p newest-cni-415000 --alsologtostderr -v=1: exit status 89 (38.4825ms)\n"}
{"Time":"2023-05-31T12:03:47.888754-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.888756-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.888757-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \t* The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:47.88876-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \t  To start a cluster, run: \"minikube start -p newest-cni-415000\"\n"}
{"Time":"2023-05-31T12:03:47.888761-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.888762-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.888764-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:47.888765-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.877747    5005 out.go:296] Setting OutFile to fd 1 ...\n"}
{"Time":"2023-05-31T12:03:47.888767-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.877889    5005 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:47.888768-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.877892    5005 out.go:309] Setting ErrFile to fd 2...\n"}
{"Time":"2023-05-31T12:03:47.88877-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.877895    5005 out.go:343] TERM=,COLORTERM=, which probably does not support color\n"}
{"Time":"2023-05-31T12:03:47.888771-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.877975    5005 root.go:336] Updating PATH: /Users/jenkins/minikube-integration/16569-1035/.minikube/bin\n"}
{"Time":"2023-05-31T12:03:47.888773-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.878198    5005 out.go:303] Setting JSON to false\n"}
{"Time":"2023-05-31T12:03:47.88878-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.878206    5005 mustload.go:65] Loading cluster: newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.888782-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.878397    5005 config.go:182] Loaded profile config \"newest-cni-415000\": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.27.2\n"}
{"Time":"2023-05-31T12:03:47.888783-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.880013    5005 out.go:177] * The control plane node must be running for this command\n"}
{"Time":"2023-05-31T12:03:47.888785-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tI0531 12:03:47.884122    5005 out.go:177]   To start a cluster, run: \"minikube start -p newest-cni-415000\"\n"}
{"Time":"2023-05-31T12:03:47.888786-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.888788-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:47.888789-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:311: out/minikube-darwin-arm64 pause -p newest-cni-415000 --alsologtostderr -v=1 failed: exit status 89\n"}
{"Time":"2023-05-31T12:03:47.888791-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:47.888793-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.917601-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (28.742375ms)\n"}
{"Time":"2023-05-31T12:03:47.91762-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.917622-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.917623-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:47.917625-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.917626-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.917628-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:47.917632-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:241: \"newest-cni-415000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:47.917634-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:222: -----------------------post-mortem--------------------------------\n"}
{"Time":"2023-05-31T12:03:47.917639-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: (dbg) Run:  out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:47.946941-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: (dbg) Non-zero exit: out/minikube-darwin-arm64 status --format={{.Host}} -p newest-cni-415000 -n newest-cni-415000: exit status 7 (29.2135ms)\n"}
{"Time":"2023-05-31T12:03:47.946953-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.946955-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:47.946957-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2023-05-31T12:03:47.946958-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2023-05-31T12:03:47.94696-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:47.946961-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:239: status error: exit status 7 (may be ok)\n"}
{"Time":"2023-05-31T12:03:47.946964-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    helpers_test.go:241: \"newest-cni-415000\" host is not running, skipping log retrieval (state=\"Stopped\")\n"}
{"Time":"2023-05-31T12:03:47.947018-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:162: (dbg) Run:  out/minikube-darwin-arm64 delete -p newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:48.040911-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:167: (dbg) Run:  kubectl config get-contexts newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:48.067595-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:167: (dbg) Non-zero exit: kubectl config get-contexts newest-cni-415000: exit status 1 (26.621416ms)\n"}
{"Time":"2023-05-31T12:03:48.067608-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:48.06761-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        -- stdout --\n"}
{"Time":"2023-05-31T12:03:48.067611-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2023-05-31T12:03:48.067613-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:48.067615-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        -- /stdout --\n"}
{"Time":"2023-05-31T12:03:48.067616-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        ** stderr ** \n"}
{"Time":"2023-05-31T12:03:48.067617-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \terror: context newest-cni-415000 not found\n"}
{"Time":"2023-05-31T12:03:48.067619-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2023-05-31T12:03:48.06762-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        ** /stderr **\n"}
{"Time":"2023-05-31T12:03:48.067622-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:169: config context error: exit status 1 (may be ok)\n"}
{"Time":"2023-05-31T12:03:48.067626-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"    helpers_test.go:175: Cleaning up \"newest-cni-415000\" profile ...\n"}
{"Time":"2023-05-31T12:03:48.067647-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"    helpers_test.go:178: (dbg) Run:  out/minikube-darwin-arm64 delete -p newest-cni-415000\n"}
{"Time":"2023-05-31T12:03:48.312772-07:00","Action":"output","Test":"TestStartStop","Output":"--- FAIL: TestStartStop (189.80s)\n"}
{"Time":"2023-05-31T12:03:48.312789-07:00","Action":"output","Test":"TestStartStop/group","Output":"    --- FAIL: TestStartStop/group (0.00s)\n"}
{"Time":"2023-05-31T12:03:48.312791-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"        --- FAIL: TestStartStop/group/old-k8s-version (18.62s)\n"}
{"Time":"2023-05-31T12:03:48.312794-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"            --- FAIL: TestStartStop/group/old-k8s-version/serial (18.38s)\n"}
{"Time":"2023-05-31T12:03:48.312796-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/FirstStart (9.93s)\n"}
{"Time":"2023-05-31T12:03:48.312797-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Elapsed":9.93}
{"Time":"2023-05-31T12:03:48.312801-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/DeployApp (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312803-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312804-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive (0.11s)\n"}
{"Time":"2023-05-31T12:03:48.312806-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonWhileActive","Elapsed":0.11}
{"Time":"2023-05-31T12:03:48.312808-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/Stop (0.07s)\n"}
{"Time":"2023-05-31T12:03:48.312809-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Elapsed":0.07}
{"Time":"2023-05-31T12:03:48.312811-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312812-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312813-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/SecondStart (7.68s)\n"}
{"Time":"2023-05-31T12:03:48.312815-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Elapsed":7.68}
{"Time":"2023-05-31T12:03:48.312816-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop (0.03s)\n"}
{"Time":"2023-05-31T12:03:48.312818-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Elapsed":0.03}
{"Time":"2023-05-31T12:03:48.312819-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312821-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312822-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312823-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312824-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"                --- FAIL: TestStartStop/group/old-k8s-version/serial/Pause (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.312826-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.312827-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version/serial","Elapsed":18.38}
{"Time":"2023-05-31T12:03:48.312829-07:00","Action":"fail","Test":"TestStartStop/group/old-k8s-version","Elapsed":18.62}
{"Time":"2023-05-31T12:03:48.31283-07:00","Action":"output","Test":"TestStartStop/group/no-preload","Output":"        --- FAIL: TestStartStop/group/no-preload (18.20s)\n"}
{"Time":"2023-05-31T12:03:48.312832-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial","Output":"            --- FAIL: TestStartStop/group/no-preload/serial (17.96s)\n"}
{"Time":"2023-05-31T12:03:48.312833-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/FirstStart","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/FirstStart (10.16s)\n"}
{"Time":"2023-05-31T12:03:48.312835-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/FirstStart","Elapsed":10.16}
{"Time":"2023-05-31T12:03:48.312836-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/DeployApp","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/DeployApp (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312838-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/DeployApp","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312839-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/EnableAddonWhileActive (0.14s)\n"}
{"Time":"2023-05-31T12:03:48.31284-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/EnableAddonWhileActive","Elapsed":0.14}
{"Time":"2023-05-31T12:03:48.312842-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Stop","Output":"                --- PASS: TestStartStop/group/no-preload/serial/Stop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312843-07:00","Action":"pass","Test":"TestStartStop/group/no-preload/serial/Stop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312844-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/no-preload/serial/EnableAddonAfterStop (0.08s)\n"}
{"Time":"2023-05-31T12:03:48.312846-07:00","Action":"pass","Test":"TestStartStop/group/no-preload/serial/EnableAddonAfterStop","Elapsed":0.08}
{"Time":"2023-05-31T12:03:48.312847-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/SecondStart","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/SecondStart (7.03s)\n"}
{"Time":"2023-05-31T12:03:48.312849-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/SecondStart","Elapsed":7.03}
{"Time":"2023-05-31T12:03:48.31285-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/UserAppExistsAfterStop (0.03s)\n"}
{"Time":"2023-05-31T12:03:48.312851-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/UserAppExistsAfterStop","Elapsed":0.03}
{"Time":"2023-05-31T12:03:48.312853-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/AddonExistsAfterStop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312854-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/AddonExistsAfterStop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312856-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/VerifyKubernetesImages (0.08s)\n"}
{"Time":"2023-05-31T12:03:48.312857-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/VerifyKubernetesImages","Elapsed":0.08}
{"Time":"2023-05-31T12:03:48.312858-07:00","Action":"output","Test":"TestStartStop/group/no-preload/serial/Pause","Output":"                --- FAIL: TestStartStop/group/no-preload/serial/Pause (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.31286-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial/Pause","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.312861-07:00","Action":"fail","Test":"TestStartStop/group/no-preload/serial","Elapsed":17.96}
{"Time":"2023-05-31T12:03:48.312862-07:00","Action":"fail","Test":"TestStartStop/group/no-preload","Elapsed":18.2}
{"Time":"2023-05-31T12:03:48.312863-07:00","Action":"output","Test":"TestStartStop/group/disable-driver-mounts","Output":"        --- SKIP: TestStartStop/group/disable-driver-mounts (0.23s)\n"}
{"Time":"2023-05-31T12:03:48.312865-07:00","Action":"skip","Test":"TestStartStop/group/disable-driver-mounts","Elapsed":0.23}
{"Time":"2023-05-31T12:03:48.312866-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"        --- FAIL: TestStartStop/group/embed-certs (19.88s)\n"}
{"Time":"2023-05-31T12:03:48.312868-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"            --- FAIL: TestStartStop/group/embed-certs/serial (19.65s)\n"}
{"Time":"2023-05-31T12:03:48.312871-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/FirstStart (11.68s)\n"}
{"Time":"2023-05-31T12:03:48.312873-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Elapsed":11.68}
{"Time":"2023-05-31T12:03:48.312874-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/DeployApp (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312876-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312877-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/EnableAddonWhileActive (0.13s)\n"}
{"Time":"2023-05-31T12:03:48.312878-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/EnableAddonWhileActive","Elapsed":0.13}
{"Time":"2023-05-31T12:03:48.31288-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/Stop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312881-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/Stop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312882-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/EnableAddonAfterStop (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312884-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312885-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/SecondStart (7.21s)\n"}
{"Time":"2023-05-31T12:03:48.312887-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Elapsed":7.21}
{"Time":"2023-05-31T12:03:48.312888-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop (0.03s)\n"}
{"Time":"2023-05-31T12:03:48.31289-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Elapsed":0.03}
{"Time":"2023-05-31T12:03:48.312892-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/AddonExistsAfterStop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312893-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312895-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/VerifyKubernetesImages (0.08s)\n"}
{"Time":"2023-05-31T12:03:48.312896-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Elapsed":0.08}
{"Time":"2023-05-31T12:03:48.312897-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"                --- FAIL: TestStartStop/group/embed-certs/serial/Pause (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.312899-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial/Pause","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.3129-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs/serial","Elapsed":19.65}
{"Time":"2023-05-31T12:03:48.312901-07:00","Action":"fail","Test":"TestStartStop/group/embed-certs","Elapsed":19.88}
{"Time":"2023-05-31T12:03:48.312903-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port","Output":"        --- FAIL: TestStartStop/group/default-k8s-diff-port (19.56s)\n"}
{"Time":"2023-05-31T12:03:48.312904-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial","Output":"            --- FAIL: TestStartStop/group/default-k8s-diff-port/serial (19.33s)\n"}
{"Time":"2023-05-31T12:03:48.312906-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/FirstStart (11.50s)\n"}
{"Time":"2023-05-31T12:03:48.312907-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/FirstStart","Elapsed":11.5}
{"Time":"2023-05-31T12:03:48.312909-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/DeployApp (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312911-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/DeployApp","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312912-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive (0.13s)\n"}
{"Time":"2023-05-31T12:03:48.312913-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonWhileActive","Elapsed":0.13}
{"Time":"2023-05-31T12:03:48.312915-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Stop","Output":"                --- PASS: TestStartStop/group/default-k8s-diff-port/serial/Stop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312917-07:00","Action":"pass","Test":"TestStartStop/group/default-k8s-diff-port/serial/Stop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312918-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.31292-07:00","Action":"pass","Test":"TestStartStop/group/default-k8s-diff-port/serial/EnableAddonAfterStop","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312921-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/SecondStart (7.06s)\n"}
{"Time":"2023-05-31T12:03:48.312922-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/SecondStart","Elapsed":7.06}
{"Time":"2023-05-31T12:03:48.312925-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop (0.03s)\n"}
{"Time":"2023-05-31T12:03:48.312927-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/UserAppExistsAfterStop","Elapsed":0.03}
{"Time":"2023-05-31T12:03:48.312928-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.31293-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/AddonExistsAfterStop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312931-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.312933-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/VerifyKubernetesImages","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.312934-07:00","Action":"output","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Output":"                --- FAIL: TestStartStop/group/default-k8s-diff-port/serial/Pause (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.312936-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial/Pause","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.312937-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port/serial","Elapsed":19.33}
{"Time":"2023-05-31T12:03:48.312938-07:00","Action":"fail","Test":"TestStartStop/group/default-k8s-diff-port","Elapsed":19.56}
{"Time":"2023-05-31T12:03:48.31294-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"        --- FAIL: TestStartStop/group/newest-cni (17.48s)\n"}
{"Time":"2023-05-31T12:03:48.312942-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"            --- FAIL: TestStartStop/group/newest-cni/serial (17.23s)\n"}
{"Time":"2023-05-31T12:03:48.312943-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"                --- FAIL: TestStartStop/group/newest-cni/serial/FirstStart (11.50s)\n"}
{"Time":"2023-05-31T12:03:48.312945-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Elapsed":11.5}
{"Time":"2023-05-31T12:03:48.312946-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/DeployApp (0.00s)\n"}
{"Time":"2023-05-31T12:03:48.312948-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Elapsed":0}
{"Time":"2023-05-31T12:03:48.312949-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/EnableAddonWhileActive (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312951-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/EnableAddonWhileActive","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312952-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/Stop (0.06s)\n"}
{"Time":"2023-05-31T12:03:48.312954-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/Stop","Elapsed":0.06}
{"Time":"2023-05-31T12:03:48.312955-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/EnableAddonAfterStop (0.09s)\n"}
{"Time":"2023-05-31T12:03:48.312957-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Elapsed":0.09}
{"Time":"2023-05-31T12:03:48.312958-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"                --- FAIL: TestStartStop/group/newest-cni/serial/SecondStart (5.24s)\n"}
{"Time":"2023-05-31T12:03:48.31296-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Elapsed":5.24}
{"Time":"2023-05-31T12:03:48.312961-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop (0.00s)\n"}
{"Time":"2023-05-31T12:03:48.312964-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Elapsed":0}
{"Time":"2023-05-31T12:03:48.312965-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/AddonExistsAfterStop (0.00s)\n"}
{"Time":"2023-05-31T12:03:48.312967-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Elapsed":0}
{"Time":"2023-05-31T12:03:48.312968-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"                --- FAIL: TestStartStop/group/newest-cni/serial/VerifyKubernetesImages (0.07s)\n"}
{"Time":"2023-05-31T12:03:48.312969-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Elapsed":0.07}
{"Time":"2023-05-31T12:03:48.312971-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"                --- FAIL: TestStartStop/group/newest-cni/serial/Pause (0.10s)\n"}
{"Time":"2023-05-31T12:03:48.312972-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni/serial/Pause","Elapsed":0.1}
{"Time":"2023-05-31T12:03:48.312973-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni/serial","Elapsed":17.23}
{"Time":"2023-05-31T12:03:48.312975-07:00","Action":"fail","Test":"TestStartStop/group/newest-cni","Elapsed":17.48}
{"Time":"2023-05-31T12:03:48.312976-07:00","Action":"fail","Test":"TestStartStop/group","Elapsed":0}
{"Time":"2023-05-31T12:03:48.312977-07:00","Action":"fail","Test":"TestStartStop","Elapsed":189.8}
{"Time":"2023-05-31T12:03:48.312979-07:00","Action":"output","Output":"FAIL\n"}
{"Time":"2023-05-31T12:03:48.312981-07:00","Action":"output","Output":"Tests completed in 21m2.448088s (result code 1)\n"}
{"Time":"2023-05-31T12:03:48.314124-07:00","Action":"fail","Elapsed":1263.018}
