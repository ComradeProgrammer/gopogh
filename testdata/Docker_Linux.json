{"Time":"2020-07-21T00:34:41.282851102-07:00","Action":"output","Output":"Found 8 cores, limiting parallelism with --test.parallel=4\n"}
{"Time":"2020-07-21T00:34:41.283173397-07:00","Action":"run","Test":"TestDownloadOnly"}
{"Time":"2020-07-21T00:34:41.283179862-07:00","Action":"output","Test":"TestDownloadOnly","Output":"=== RUN   TestDownloadOnly\n"}
{"Time":"2020-07-21T00:34:41.283184442-07:00","Action":"run","Test":"TestDownloadOnly/crio"}
{"Time":"2020-07-21T00:34:41.283188202-07:00","Action":"output","Test":"TestDownloadOnly/crio","Output":"=== RUN   TestDownloadOnly/crio\n"}
{"Time":"2020-07-21T00:34:41.283195244-07:00","Action":"run","Test":"TestDownloadOnly/crio/v1.13.0"}
{"Time":"2020-07-21T00:34:41.283201903-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.13.0","Output":"=== RUN   TestDownloadOnly/crio/v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.283208911-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=crio --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283216543-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Done: out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=crio --driver=docker : (6.440092354s)\n"}
{"Time":"2020-07-21T00:34:41.283221009-07:00","Action":"run","Test":"TestDownloadOnly/crio/v1.18.3"}
{"Time":"2020-07-21T00:34:41.283224708-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.3","Output":"=== RUN   TestDownloadOnly/crio/v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.283228615-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=crio --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283232873-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=crio --driver=docker : (6.49505089s)\n"}
{"Time":"2020-07-21T00:34:41.283237126-07:00","Action":"run","Test":"TestDownloadOnly/crio/v1.18.4-rc.0"}
{"Time":"2020-07-21T00:34:41.283240687-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.4-rc.0","Output":"=== RUN   TestDownloadOnly/crio/v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.283247418-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=crio --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283251747-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p crio-20200721000237-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=crio --driver=docker : (6.418007547s)\n"}
{"Time":"2020-07-21T00:34:41.283258856-07:00","Action":"run","Test":"TestDownloadOnly/crio/DeleteAll"}
{"Time":"2020-07-21T00:34:41.283262398-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAll","Output":"=== RUN   TestDownloadOnly/crio/DeleteAll\n"}
{"Time":"2020-07-21T00:34:41.283296465-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAll","Output":"    aaa_download_only_test.go:133: (dbg) Run:  out/minikube-linux-amd64 delete --all\n"}
{"Time":"2020-07-21T00:34:41.283308225-07:00","Action":"run","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds"}
{"Time":"2020-07-21T00:34:41.283314017-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds","Output":"=== RUN   TestDownloadOnly/crio/DeleteAlwaysSucceeds\n"}
{"Time":"2020-07-21T00:34:41.283333797-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds","Output":"    aaa_download_only_test.go:145: (dbg) Run:  out/minikube-linux-amd64 delete -p crio-20200721000237-23787\n"}
{"Time":"2020-07-21T00:34:41.283341263-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds","Output":"    aaa_download_only_test.go:145: (dbg) Done: out/minikube-linux-amd64 delete -p crio-20200721000237-23787: (1.261480328s)\n"}
{"Time":"2020-07-21T00:34:41.283348268-07:00","Action":"cont","Test":"TestDownloadOnly/crio"}
{"Time":"2020-07-21T00:34:41.283351939-07:00","Action":"output","Test":"TestDownloadOnly/crio","Output":"=== CONT  TestDownloadOnly/crio\n"}
{"Time":"2020-07-21T00:34:41.283356007-07:00","Action":"output","Test":"TestDownloadOnly/crio","Output":"    helpers_test.go:170: Cleaning up \"crio-20200721000237-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.283360078-07:00","Action":"output","Test":"TestDownloadOnly/crio","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p crio-20200721000237-23787\n"}
{"Time":"2020-07-21T00:34:41.283364111-07:00","Action":"run","Test":"TestDownloadOnly/docker"}
{"Time":"2020-07-21T00:34:41.283367724-07:00","Action":"output","Test":"TestDownloadOnly/docker","Output":"=== RUN   TestDownloadOnly/docker\n"}
{"Time":"2020-07-21T00:34:41.28337175-07:00","Action":"run","Test":"TestDownloadOnly/docker/v1.13.0"}
{"Time":"2020-07-21T00:34:41.283375293-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.13.0","Output":"=== RUN   TestDownloadOnly/docker/v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.283379531-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=docker --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283383819-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Done: out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=docker --driver=docker : (5.692144707s)\n"}
{"Time":"2020-07-21T00:34:41.283388099-07:00","Action":"run","Test":"TestDownloadOnly/docker/v1.18.3"}
{"Time":"2020-07-21T00:34:41.283391561-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.3","Output":"=== RUN   TestDownloadOnly/docker/v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.283395513-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=docker --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283399701-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=docker --driver=docker : (5.699870762s)\n"}
{"Time":"2020-07-21T00:34:41.28340388-07:00","Action":"run","Test":"TestDownloadOnly/docker/v1.18.4-rc.0"}
{"Time":"2020-07-21T00:34:41.283407478-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.4-rc.0","Output":"=== RUN   TestDownloadOnly/docker/v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.283411538-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=docker --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283418169-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p docker-20200721000258-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=docker --driver=docker : (14.026071048s)\n"}
{"Time":"2020-07-21T00:34:41.2834255-07:00","Action":"run","Test":"TestDownloadOnly/docker/DeleteAll"}
{"Time":"2020-07-21T00:34:41.28343131-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAll","Output":"=== RUN   TestDownloadOnly/docker/DeleteAll\n"}
{"Time":"2020-07-21T00:34:41.283437347-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAll","Output":"    aaa_download_only_test.go:133: (dbg) Run:  out/minikube-linux-amd64 delete --all\n"}
{"Time":"2020-07-21T00:34:41.283442646-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAll","Output":"    aaa_download_only_test.go:133: (dbg) Done: out/minikube-linux-amd64 delete --all: (11.592082492s)\n"}
{"Time":"2020-07-21T00:34:41.283452213-07:00","Action":"run","Test":"TestDownloadOnly/docker/DeleteAlwaysSucceeds"}
{"Time":"2020-07-21T00:34:41.2834575-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAlwaysSucceeds","Output":"=== RUN   TestDownloadOnly/docker/DeleteAlwaysSucceeds\n"}
{"Time":"2020-07-21T00:34:41.283508556-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAlwaysSucceeds","Output":"    aaa_download_only_test.go:145: (dbg) Run:  out/minikube-linux-amd64 delete -p docker-20200721000258-23787\n"}
{"Time":"2020-07-21T00:34:41.283531576-07:00","Action":"cont","Test":"TestDownloadOnly/docker"}
{"Time":"2020-07-21T00:34:41.283536281-07:00","Action":"output","Test":"TestDownloadOnly/docker","Output":"=== CONT  TestDownloadOnly/docker\n"}
{"Time":"2020-07-21T00:34:41.283547513-07:00","Action":"output","Test":"TestDownloadOnly/docker","Output":"    helpers_test.go:170: Cleaning up \"docker-20200721000258-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.283552439-07:00","Action":"output","Test":"TestDownloadOnly/docker","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p docker-20200721000258-23787\n"}
{"Time":"2020-07-21T00:34:41.283557204-07:00","Action":"run","Test":"TestDownloadOnly/containerd"}
{"Time":"2020-07-21T00:34:41.283561138-07:00","Action":"output","Test":"TestDownloadOnly/containerd","Output":"=== RUN   TestDownloadOnly/containerd\n"}
{"Time":"2020-07-21T00:34:41.283565505-07:00","Action":"run","Test":"TestDownloadOnly/containerd/v1.13.0"}
{"Time":"2020-07-21T00:34:41.283569511-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.13.0","Output":"=== RUN   TestDownloadOnly/containerd/v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.283573926-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=containerd --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283578466-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.13.0","Output":"    aaa_download_only_test.go:65: (dbg) Done: out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.13.0 --container-runtime=containerd --driver=docker : (11.826898104s)\n"}
{"Time":"2020-07-21T00:34:41.283582926-07:00","Action":"run","Test":"TestDownloadOnly/containerd/v1.18.3"}
{"Time":"2020-07-21T00:34:41.283586429-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.3","Output":"=== RUN   TestDownloadOnly/containerd/v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.283590247-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=containerd --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283594571-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.3","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.18.3 --container-runtime=containerd --driver=docker : (9.959935642s)\n"}
{"Time":"2020-07-21T00:34:41.28361391-07:00","Action":"run","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0"}
{"Time":"2020-07-21T00:34:41.283618394-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0","Output":"=== RUN   TestDownloadOnly/containerd/v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.283622359-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=containerd --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.28362672-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0","Output":"    aaa_download_only_test.go:67: (dbg) Done: out/minikube-linux-amd64 start --download-only -p containerd-20200721000335-23787 --force --alsologtostderr --kubernetes-version=v1.18.4-rc.0 --container-runtime=containerd --driver=docker : (17.287000594s)\n"}
{"Time":"2020-07-21T00:34:41.283631011-07:00","Action":"run","Test":"TestDownloadOnly/containerd/DeleteAll"}
{"Time":"2020-07-21T00:34:41.283637186-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAll","Output":"=== RUN   TestDownloadOnly/containerd/DeleteAll\n"}
{"Time":"2020-07-21T00:34:41.283641087-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAll","Output":"    aaa_download_only_test.go:133: (dbg) Run:  out/minikube-linux-amd64 delete --all\n"}
{"Time":"2020-07-21T00:34:41.283644998-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAll","Output":"    aaa_download_only_test.go:133: (dbg) Done: out/minikube-linux-amd64 delete --all: (2.974385998s)\n"}
{"Time":"2020-07-21T00:34:41.283649409-07:00","Action":"run","Test":"TestDownloadOnly/containerd/DeleteAlwaysSucceeds"}
{"Time":"2020-07-21T00:34:41.283653147-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAlwaysSucceeds","Output":"=== RUN   TestDownloadOnly/containerd/DeleteAlwaysSucceeds\n"}
{"Time":"2020-07-21T00:34:41.2836573-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAlwaysSucceeds","Output":"    aaa_download_only_test.go:145: (dbg) Run:  out/minikube-linux-amd64 delete -p containerd-20200721000335-23787\n"}
{"Time":"2020-07-21T00:34:41.283661555-07:00","Action":"cont","Test":"TestDownloadOnly/containerd"}
{"Time":"2020-07-21T00:34:41.283668006-07:00","Action":"output","Test":"TestDownloadOnly/containerd","Output":"=== CONT  TestDownloadOnly/containerd\n"}
{"Time":"2020-07-21T00:34:41.283671896-07:00","Action":"output","Test":"TestDownloadOnly/containerd","Output":"    helpers_test.go:170: Cleaning up \"containerd-20200721000335-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.28367588-07:00","Action":"output","Test":"TestDownloadOnly/containerd","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p containerd-20200721000335-23787\n"}
{"Time":"2020-07-21T00:34:41.283683148-07:00","Action":"output","Test":"TestDownloadOnly","Output":"--- PASS: TestDownloadOnly (101.25s)\n"}
{"Time":"2020-07-21T00:34:41.283688159-07:00","Action":"output","Test":"TestDownloadOnly/crio","Output":"    --- PASS: TestDownloadOnly/crio (21.30s)\n"}
{"Time":"2020-07-21T00:34:41.283692929-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.13.0","Output":"        --- PASS: TestDownloadOnly/crio/v1.13.0 (6.44s)\n"}
{"Time":"2020-07-21T00:34:41.283697243-07:00","Action":"pass","Test":"TestDownloadOnly/crio/v1.13.0","Elapsed":6.44}
{"Time":"2020-07-21T00:34:41.283704657-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.3","Output":"        --- PASS: TestDownloadOnly/crio/v1.18.3 (6.50s)\n"}
{"Time":"2020-07-21T00:34:41.283714508-07:00","Action":"pass","Test":"TestDownloadOnly/crio/v1.18.3","Elapsed":6.5}
{"Time":"2020-07-21T00:34:41.283718608-07:00","Action":"output","Test":"TestDownloadOnly/crio/v1.18.4-rc.0","Output":"        --- PASS: TestDownloadOnly/crio/v1.18.4-rc.0 (6.42s)\n"}
{"Time":"2020-07-21T00:34:41.283722902-07:00","Action":"pass","Test":"TestDownloadOnly/crio/v1.18.4-rc.0","Elapsed":6.42}
{"Time":"2020-07-21T00:34:41.283726729-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAll","Output":"        --- PASS: TestDownloadOnly/crio/DeleteAll (0.40s)\n"}
{"Time":"2020-07-21T00:34:41.283731332-07:00","Action":"pass","Test":"TestDownloadOnly/crio/DeleteAll","Elapsed":0.4}
{"Time":"2020-07-21T00:34:41.283735243-07:00","Action":"output","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds","Output":"        --- PASS: TestDownloadOnly/crio/DeleteAlwaysSucceeds (1.26s)\n"}
{"Time":"2020-07-21T00:34:41.283739476-07:00","Action":"pass","Test":"TestDownloadOnly/crio/DeleteAlwaysSucceeds","Elapsed":1.26}
{"Time":"2020-07-21T00:34:41.283743162-07:00","Action":"pass","Test":"TestDownloadOnly/crio","Elapsed":21.3}
{"Time":"2020-07-21T00:34:41.283746943-07:00","Action":"output","Test":"TestDownloadOnly/docker","Output":"    --- PASS: TestDownloadOnly/docker (37.45s)\n"}
{"Time":"2020-07-21T00:34:41.283751268-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.13.0","Output":"        --- PASS: TestDownloadOnly/docker/v1.13.0 (5.69s)\n"}
{"Time":"2020-07-21T00:34:41.283755623-07:00","Action":"pass","Test":"TestDownloadOnly/docker/v1.13.0","Elapsed":5.69}
{"Time":"2020-07-21T00:34:41.283759398-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.3","Output":"        --- PASS: TestDownloadOnly/docker/v1.18.3 (5.70s)\n"}
{"Time":"2020-07-21T00:34:41.28376374-07:00","Action":"pass","Test":"TestDownloadOnly/docker/v1.18.3","Elapsed":5.7}
{"Time":"2020-07-21T00:34:41.283767474-07:00","Action":"output","Test":"TestDownloadOnly/docker/v1.18.4-rc.0","Output":"        --- PASS: TestDownloadOnly/docker/v1.18.4-rc.0 (14.03s)\n"}
{"Time":"2020-07-21T00:34:41.283771646-07:00","Action":"pass","Test":"TestDownloadOnly/docker/v1.18.4-rc.0","Elapsed":14.03}
{"Time":"2020-07-21T00:34:41.283775492-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAll","Output":"        --- PASS: TestDownloadOnly/docker/DeleteAll (11.59s)\n"}
{"Time":"2020-07-21T00:34:41.283784631-07:00","Action":"pass","Test":"TestDownloadOnly/docker/DeleteAll","Elapsed":11.59}
{"Time":"2020-07-21T00:34:41.283788696-07:00","Action":"output","Test":"TestDownloadOnly/docker/DeleteAlwaysSucceeds","Output":"        --- PASS: TestDownloadOnly/docker/DeleteAlwaysSucceeds (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.283796304-07:00","Action":"pass","Test":"TestDownloadOnly/docker/DeleteAlwaysSucceeds","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.283800169-07:00","Action":"pass","Test":"TestDownloadOnly/docker","Elapsed":37.45}
{"Time":"2020-07-21T00:34:41.283803885-07:00","Action":"output","Test":"TestDownloadOnly/containerd","Output":"    --- PASS: TestDownloadOnly/containerd (42.50s)\n"}
{"Time":"2020-07-21T00:34:41.283808116-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.13.0","Output":"        --- PASS: TestDownloadOnly/containerd/v1.13.0 (11.83s)\n"}
{"Time":"2020-07-21T00:34:41.283812339-07:00","Action":"pass","Test":"TestDownloadOnly/containerd/v1.13.0","Elapsed":11.83}
{"Time":"2020-07-21T00:34:41.28381614-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.3","Output":"        --- PASS: TestDownloadOnly/containerd/v1.18.3 (9.96s)\n"}
{"Time":"2020-07-21T00:34:41.283820268-07:00","Action":"pass","Test":"TestDownloadOnly/containerd/v1.18.3","Elapsed":9.96}
{"Time":"2020-07-21T00:34:41.283824054-07:00","Action":"output","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0","Output":"        --- PASS: TestDownloadOnly/containerd/v1.18.4-rc.0 (17.29s)\n"}
{"Time":"2020-07-21T00:34:41.283828224-07:00","Action":"pass","Test":"TestDownloadOnly/containerd/v1.18.4-rc.0","Elapsed":17.29}
{"Time":"2020-07-21T00:34:41.283832218-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAll","Output":"        --- PASS: TestDownloadOnly/containerd/DeleteAll (2.97s)\n"}
{"Time":"2020-07-21T00:34:41.283842526-07:00","Action":"pass","Test":"TestDownloadOnly/containerd/DeleteAll","Elapsed":2.97}
{"Time":"2020-07-21T00:34:41.283846585-07:00","Action":"output","Test":"TestDownloadOnly/containerd/DeleteAlwaysSucceeds","Output":"        --- PASS: TestDownloadOnly/containerd/DeleteAlwaysSucceeds (0.23s)\n"}
{"Time":"2020-07-21T00:34:41.283850783-07:00","Action":"pass","Test":"TestDownloadOnly/containerd/DeleteAlwaysSucceeds","Elapsed":0.23}
{"Time":"2020-07-21T00:34:41.283854364-07:00","Action":"pass","Test":"TestDownloadOnly/containerd","Elapsed":42.5}
{"Time":"2020-07-21T00:34:41.283857901-07:00","Action":"pass","Test":"TestDownloadOnly","Elapsed":101.25}
{"Time":"2020-07-21T00:34:41.283861523-07:00","Action":"run","Test":"TestDownloadOnlyKic"}
{"Time":"2020-07-21T00:34:41.283865017-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"=== RUN   TestDownloadOnlyKic\n"}
{"Time":"2020-07-21T00:34:41.28386895-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    aaa_download_only_test.go:168: (dbg) Run:  out/minikube-linux-amd64 start --download-only -p download-docker-20200721000418-23787 --force --alsologtostderr --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283877908-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    aaa_download_only_test.go:168: (dbg) Done: out/minikube-linux-amd64 start --download-only -p download-docker-20200721000418-23787 --force --alsologtostderr --driver=docker : (1.101971842s)\n"}
{"Time":"2020-07-21T00:34:41.283882486-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    helpers_test.go:170: Cleaning up \"download-docker-20200721000418-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.283886493-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p download-docker-20200721000418-23787\n"}
{"Time":"2020-07-21T00:34:41.283890511-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p download-docker-20200721000418-23787: (7.834576918s)\n"}
{"Time":"2020-07-21T00:34:41.283895025-07:00","Action":"output","Test":"TestDownloadOnlyKic","Output":"--- PASS: TestDownloadOnlyKic (10.30s)\n"}
{"Time":"2020-07-21T00:34:41.283899041-07:00","Action":"pass","Test":"TestDownloadOnlyKic","Elapsed":10.3}
{"Time":"2020-07-21T00:34:41.283902805-07:00","Action":"run","Test":"TestOffline"}
{"Time":"2020-07-21T00:34:41.28390632-07:00","Action":"output","Test":"TestOffline","Output":"=== RUN   TestOffline\n"}
{"Time":"2020-07-21T00:34:41.283910229-07:00","Action":"run","Test":"TestOffline/group"}
{"Time":"2020-07-21T00:34:41.283913764-07:00","Action":"output","Test":"TestOffline/group","Output":"=== RUN   TestOffline/group\n"}
{"Time":"2020-07-21T00:34:41.283917712-07:00","Action":"run","Test":"TestOffline/group/docker"}
{"Time":"2020-07-21T00:34:41.28392127-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"=== RUN   TestOffline/group/docker\n"}
{"Time":"2020-07-21T00:34:41.28392551-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"=== PAUSE TestOffline/group/docker\n"}
{"Time":"2020-07-21T00:34:41.283929167-07:00","Action":"pause","Test":"TestOffline/group/docker"}
{"Time":"2020-07-21T00:34:41.283932932-07:00","Action":"run","Test":"TestOffline/group/crio"}
{"Time":"2020-07-21T00:34:41.283936385-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"=== RUN   TestOffline/group/crio\n"}
{"Time":"2020-07-21T00:34:41.283940427-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"=== PAUSE TestOffline/group/crio\n"}
{"Time":"2020-07-21T00:34:41.283943932-07:00","Action":"pause","Test":"TestOffline/group/crio"}
{"Time":"2020-07-21T00:34:41.28394755-07:00","Action":"run","Test":"TestOffline/group/containerd"}
{"Time":"2020-07-21T00:34:41.28395108-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"=== RUN   TestOffline/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.283958209-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"=== PAUSE TestOffline/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.283961895-07:00","Action":"pause","Test":"TestOffline/group/containerd"}
{"Time":"2020-07-21T00:34:41.283965621-07:00","Action":"cont","Test":"TestOffline/group/docker"}
{"Time":"2020-07-21T00:34:41.283969189-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"=== CONT  TestOffline/group/docker\n"}
{"Time":"2020-07-21T00:34:41.28397299-07:00","Action":"cont","Test":"TestOffline/group/containerd"}
{"Time":"2020-07-21T00:34:41.28397647-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"=== CONT  TestOffline/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.283980299-07:00","Action":"cont","Test":"TestOffline/group/docker"}
{"Time":"2020-07-21T00:34:41.283983907-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"=== CONT  TestOffline/group/docker\n"}
{"Time":"2020-07-21T00:34:41.283991162-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"    aab_offline_test.go:53: (dbg) Run:  out/minikube-linux-amd64 start -p offline-docker-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime docker --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.283996154-07:00","Action":"cont","Test":"TestOffline/group/crio"}
{"Time":"2020-07-21T00:34:41.284002187-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"=== CONT  TestOffline/group/crio\n"}
{"Time":"2020-07-21T00:34:41.284006026-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"    aab_offline_test.go:53: (dbg) Run:  out/minikube-linux-amd64 start -p offline-crio-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime crio --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.284010221-07:00","Action":"cont","Test":"TestOffline/group/containerd"}
{"Time":"2020-07-21T00:34:41.284013669-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"=== CONT  TestOffline/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.284019735-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"    aab_offline_test.go:53: (dbg) Run:  out/minikube-linux-amd64 start -p offline-containerd-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime containerd --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.284024024-07:00","Action":"cont","Test":"TestOffline/group/docker"}
{"Time":"2020-07-21T00:34:41.284027556-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"=== CONT  TestOffline/group/docker\n"}
{"Time":"2020-07-21T00:34:41.284031361-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"    aab_offline_test.go:53: (dbg) Done: out/minikube-linux-amd64 start -p offline-docker-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime docker --driver=docker : (1m17.198643447s)\n"}
{"Time":"2020-07-21T00:34:41.28403564-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"    helpers_test.go:170: Cleaning up \"offline-docker-20200721000428-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.284039689-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p offline-docker-20200721000428-23787\n"}
{"Time":"2020-07-21T00:34:41.284043642-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p offline-docker-20200721000428-23787: (2.608637417s)\n"}
{"Time":"2020-07-21T00:34:41.284047706-07:00","Action":"cont","Test":"TestOffline/group/crio"}
{"Time":"2020-07-21T00:34:41.284051187-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"=== CONT  TestOffline/group/crio\n"}
{"Time":"2020-07-21T00:34:41.284054951-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"    aab_offline_test.go:53: (dbg) Done: out/minikube-linux-amd64 start -p offline-crio-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime crio --driver=docker : (1m44.533606669s)\n"}
{"Time":"2020-07-21T00:34:41.284062058-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"    helpers_test.go:170: Cleaning up \"offline-crio-20200721000428-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.284066158-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p offline-crio-20200721000428-23787\n"}
{"Time":"2020-07-21T00:34:41.284070161-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p offline-crio-20200721000428-23787: (2.605611175s)\n"}
{"Time":"2020-07-21T00:34:41.2840742-07:00","Action":"cont","Test":"TestOffline/group/containerd"}
{"Time":"2020-07-21T00:34:41.284077707-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"=== CONT  TestOffline/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.284081646-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"    aab_offline_test.go:53: (dbg) Done: out/minikube-linux-amd64 start -p offline-containerd-20200721000428-23787 --alsologtostderr -v=1 --memory=2000 --wait=true --container-runtime containerd --driver=docker : (2m7.442665837s)\n"}
{"Time":"2020-07-21T00:34:41.28408594-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"    helpers_test.go:170: Cleaning up \"offline-containerd-20200721000428-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.284089967-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p offline-containerd-20200721000428-23787\n"}
{"Time":"2020-07-21T00:34:41.284093939-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p offline-containerd-20200721000428-23787: (2.714945696s)\n"}
{"Time":"2020-07-21T00:34:41.284098636-07:00","Action":"output","Test":"TestOffline","Output":"--- PASS: TestOffline (130.16s)\n"}
{"Time":"2020-07-21T00:34:41.284102979-07:00","Action":"output","Test":"TestOffline/group","Output":"    --- PASS: TestOffline/group (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.284107373-07:00","Action":"output","Test":"TestOffline/group/docker","Output":"        --- PASS: TestOffline/group/docker (79.81s)\n"}
{"Time":"2020-07-21T00:34:41.284111612-07:00","Action":"pass","Test":"TestOffline/group/docker","Elapsed":79.81}
{"Time":"2020-07-21T00:34:41.28411559-07:00","Action":"output","Test":"TestOffline/group/crio","Output":"        --- PASS: TestOffline/group/crio (107.14s)\n"}
{"Time":"2020-07-21T00:34:41.284119664-07:00","Action":"pass","Test":"TestOffline/group/crio","Elapsed":107.14}
{"Time":"2020-07-21T00:34:41.284123508-07:00","Action":"output","Test":"TestOffline/group/containerd","Output":"        --- PASS: TestOffline/group/containerd (130.16s)\n"}
{"Time":"2020-07-21T00:34:41.284127573-07:00","Action":"pass","Test":"TestOffline/group/containerd","Elapsed":130.16}
{"Time":"2020-07-21T00:34:41.284131262-07:00","Action":"pass","Test":"TestOffline/group","Elapsed":0}
{"Time":"2020-07-21T00:34:41.28413484-07:00","Action":"pass","Test":"TestOffline","Elapsed":130.16}
{"Time":"2020-07-21T00:34:41.284138359-07:00","Action":"run","Test":"TestAddons"}
{"Time":"2020-07-21T00:34:41.284141766-07:00","Action":"output","Test":"TestAddons","Output":"=== RUN   TestAddons\n"}
{"Time":"2020-07-21T00:34:41.284145618-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:44: (dbg) Run:  out/minikube-linux-amd64 start -p addons-20200721000638-23787 --wait=false --memory=2600 --alsologtostderr --addons=ingress --addons=registry --addons=metrics-server --addons=helm-tiller --addons=olm --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.284150546-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:44: (dbg) Done: out/minikube-linux-amd64 start -p addons-20200721000638-23787 --wait=false --memory=2600 --alsologtostderr --addons=ingress --addons=registry --addons=metrics-server --addons=helm-tiller --addons=olm --driver=docker : (1m48.740572948s)\n"}
{"Time":"2020-07-21T00:34:41.284160923-07:00","Action":"run","Test":"TestAddons/parallel"}
{"Time":"2020-07-21T00:34:41.284164639-07:00","Action":"output","Test":"TestAddons/parallel","Output":"=== RUN   TestAddons/parallel\n"}
{"Time":"2020-07-21T00:34:41.284168547-07:00","Action":"run","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284172029-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== RUN   TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284176084-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== PAUSE TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284179623-07:00","Action":"pause","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284183252-07:00","Action":"run","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284186699-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== RUN   TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284190708-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== PAUSE TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.2841943-07:00","Action":"pause","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284197954-07:00","Action":"run","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284201544-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== RUN   TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284205607-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== PAUSE TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284214086-07:00","Action":"pause","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.28421784-07:00","Action":"run","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284221335-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== RUN   TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284230712-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== PAUSE TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284237469-07:00","Action":"pause","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284243849-07:00","Action":"run","Test":"TestAddons/parallel/Olm"}
{"Time":"2020-07-21T00:34:41.284247649-07:00","Action":"output","Test":"TestAddons/parallel/Olm","Output":"=== RUN   TestAddons/parallel/Olm\n"}
{"Time":"2020-07-21T00:34:41.284251823-07:00","Action":"output","Test":"TestAddons/parallel/Olm","Output":"=== PAUSE TestAddons/parallel/Olm\n"}
{"Time":"2020-07-21T00:34:41.284255416-07:00","Action":"pause","Test":"TestAddons/parallel/Olm"}
{"Time":"2020-07-21T00:34:41.284259126-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284264854-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284268733-07:00","Action":"cont","Test":"TestAddons/parallel/Olm"}
{"Time":"2020-07-21T00:34:41.28427219-07:00","Action":"output","Test":"TestAddons/parallel/Olm","Output":"=== CONT  TestAddons/parallel/Olm\n"}
{"Time":"2020-07-21T00:34:41.284276069-07:00","Action":"output","Test":"TestAddons/parallel/Olm","Output":"    addons_test.go:334: Skipping olm test till this timeout issue is solved https://github.com/operator-framework/operator-lifecycle-manager/issues/1534#issuecomment-632342257\n"}
{"Time":"2020-07-21T00:34:41.284280309-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284283777-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284290646-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284294263-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284298055-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.28430154-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284305339-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:293: tiller-deploy stabilized in 16.184102ms\n"}
{"Time":"2020-07-21T00:34:41.28430932-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284312775-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284316551-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:173: registry stabilized in 18.94206ms\n"}
{"Time":"2020-07-21T00:34:41.284320551-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284324067-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284331277-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:249: metrics-server stabilized in 18.290466ms\n"}
{"Time":"2020-07-21T00:34:41.28433524-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284340886-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.28434487-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:175: (dbg) TestAddons/parallel/Registry: waiting 6m0s for pods matching \"actual-registry=true\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.28434919-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284352674-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284356489-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:295: (dbg) TestAddons/parallel/HelmTiller: waiting 6m0s for pods matching \"app=helm\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.284364116-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284367644-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284371457-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:251: (dbg) TestAddons/parallel/MetricsServer: waiting 6m0s for pods matching \"k8s-app=metrics-server\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.284375715-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284379185-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284383009-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:100: (dbg) TestAddons/parallel/Ingress: waiting 12m0s for pods matching \"app.kubernetes.io/name=ingress-nginx\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.284387275-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284390737-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284394555-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    helpers_test.go:332: \"metrics-server-7bc6d75975-5xvgk\" [07e90042-7f55-4284-acab-73fddb45df8c] Running\n"}
{"Time":"2020-07-21T00:34:41.284401689-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284405288-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.28443887-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    helpers_test.go:332: \"tiller-deploy-78ff886c54-6c5x6\" [f7a84a35-39fd-454c-9bac-2894493bb152] Running\n"}
{"Time":"2020-07-21T00:34:41.284443405-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284446927-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.28445076-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    helpers_test.go:332: \"ingress-nginx-admission-create-pkm7m\" [036c3103-d540-46ad-9f3d-245e8e318e92] Succeeded: Initialized:PodCompleted / Ready:PodCompleted / ContainersReady:PodCompleted\n"}
{"Time":"2020-07-21T00:34:41.284455083-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:100: (dbg) TestAddons/parallel/Ingress: app.kubernetes.io/name=ingress-nginx healthy within 30.430768ms\n"}
{"Time":"2020-07-21T00:34:41.284459144-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Run:  kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml\n"}
{"Time":"2020-07-21T00:34:41.284463281-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284466755-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284470509-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    helpers_test.go:332: \"registry-7vfbz\" [ccd3ad0b-976b-4c9e-98f6-7552303687bc] Running\n"}
{"Time":"2020-07-21T00:34:41.284474481-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.28447796-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284481739-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml: exit status 1 (1.536183243s)\n"}
{"Time":"2020-07-21T00:34:41.284488235-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284492411-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284496407-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \tError from server (InternalError): Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": Post https://ingress-nginx-controller-admission.kube-system.svc:443/extensions/v1beta1/ingresses?timeout=30s: dial tcp 10.101.243.191:443: connect: connection refused\n"}
{"Time":"2020-07-21T00:34:41.284506591-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284510491-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284514278-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Run:  kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml\n"}
{"Time":"2020-07-21T00:34:41.284518305-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml: exit status 1 (1.199677734s)\n"}
{"Time":"2020-07-21T00:34:41.284525613-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284529545-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.28453485-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \tError from server (InternalError): Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": Post https://ingress-nginx-controller-admission.kube-system.svc:443/extensions/v1beta1/ingresses?timeout=30s: dial tcp 10.101.243.191:443: connect: connection refused\n"}
{"Time":"2020-07-21T00:34:41.284539436-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284543199-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284547005-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284550509-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284554443-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:251: (dbg) TestAddons/parallel/MetricsServer: k8s-app=metrics-server healthy within 5.035093367s\n"}
{"Time":"2020-07-21T00:34:41.284558443-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284561946-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284565699-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:295: (dbg) TestAddons/parallel/HelmTiller: app=helm healthy within 5.035802156s\n"}
{"Time":"2020-07-21T00:34:41.284569652-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284573126-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284576872-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.284580803-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.284584314-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.28458812-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:310: (dbg) Run:  kubectl --context addons-20200721000638-23787 run --rm helm-test --restart=Never --image=alpine/helm:2.16.3 -it --namespace=kube-system --serviceaccount=tiller -- version\n"}
{"Time":"2020-07-21T00:34:41.284592369-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284595825-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284599586-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:175: (dbg) TestAddons/parallel/Registry: actual-registry=true healthy within 5.036706123s\n"}
{"Time":"2020-07-21T00:34:41.284606583-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:178: (dbg) TestAddons/parallel/Registry: waiting 10m0s for pods matching \"registry-proxy=true\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.284610847-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    helpers_test.go:332: \"registry-proxy-nmrzz\" [b7611ffb-6441-467b-8133-59646affb3c2] Running\n"}
{"Time":"2020-07-21T00:34:41.284614891-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284621207-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284627499-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (107.956924ms)\n"}
{"Time":"2020-07-21T00:34:41.284634014-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284637848-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284643861-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: metrics not available yet\n"}
{"Time":"2020-07-21T00:34:41.284647755-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284651531-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284655253-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284658741-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284662471-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Run:  kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml\n"}
{"Time":"2020-07-21T00:34:41.284666529-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml: exit status 1 (1.202331466s)\n"}
{"Time":"2020-07-21T00:34:41.284670533-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284674363-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.28468069-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \tError from server (InternalError): Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": Post https://ingress-nginx-controller-admission.kube-system.svc:443/extensions/v1beta1/ingresses?timeout=30s: dial tcp 10.101.243.191:443: connect: connection refused\n"}
{"Time":"2020-07-21T00:34:41.284685312-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284689035-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284692758-07:00","Action":"cont","Test":"TestAddons/parallel/HelmTiller"}
{"Time":"2020-07-21T00:34:41.28469623-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"=== CONT  TestAddons/parallel/HelmTiller\n"}
{"Time":"2020-07-21T00:34:41.284700062-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:310: (dbg) Done: kubectl --context addons-20200721000638-23787 run --rm helm-test --restart=Never --image=alpine/helm:2.16.3 -it --namespace=kube-system --serviceaccount=tiller -- version: (3.543174561s)\n"}
{"Time":"2020-07-21T00:34:41.284704314-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:315: kubectl --context addons-20200721000638-23787 run --rm helm-test --restart=Never --image=alpine/helm:2.16.3 -it --namespace=kube-system --serviceaccount=tiller -- version: unexpected stderr: Unable to use a TTY - input is not a terminal or the right kind of file\n"}
{"Time":"2020-07-21T00:34:41.284712421-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"        If you don't see a command prompt, try pressing enter.\n"}
{"Time":"2020-07-21T00:34:41.284718872-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"        Error attaching, falling back to logs: \n"}
{"Time":"2020-07-21T00:34:41.284725617-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"    addons_test.go:327: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 addons disable helm-tiller --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.284729796-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284733313-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284737106-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.2847411-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (99.007605ms)\n"}
{"Time":"2020-07-21T00:34:41.284745117-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284748912-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284752622-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: metrics not available yet\n"}
{"Time":"2020-07-21T00:34:41.284756431-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284760173-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.28476391-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284767365-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284771215-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:105: (dbg) Run:  kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-ing.yaml\n"}
{"Time":"2020-07-21T00:34:41.284775212-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:119: (dbg) Run:  kubectl --context addons-20200721000638-23787 replace --force -f testdata/nginx-pod-svc.yaml\n"}
{"Time":"2020-07-21T00:34:41.284779215-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:124: (dbg) TestAddons/parallel/Ingress: waiting 4m0s for pods matching \"run=nginx\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.284783848-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    helpers_test.go:332: \"nginx\" [f2ea209f-1b87-44bc-ae81-bcd662c83e9b] Pending / Ready:ContainersNotReady (containers with unready status: [nginx]) / ContainersReady:ContainersNotReady (containers with unready status: [nginx])\n"}
{"Time":"2020-07-21T00:34:41.284788218-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284791721-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284795517-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:178: (dbg) TestAddons/parallel/Registry: registry-proxy=true healthy within 5.007250094s\n"}
{"Time":"2020-07-21T00:34:41.284799513-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:183: (dbg) Run:  kubectl --context addons-20200721000638-23787 delete po -l run=registry-test --now\n"}
{"Time":"2020-07-21T00:34:41.284803554-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:188: (dbg) Run:  kubectl --context addons-20200721000638-23787 run --rm registry-test --restart=Never --image=busybox -it -- sh -c \"wget --spider -S http://registry.kube-system.svc.cluster.local\"\n"}
{"Time":"2020-07-21T00:34:41.2848136-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284817239-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.28482108-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    helpers_test.go:332: \"nginx\" [f2ea209f-1b87-44bc-ae81-bcd662c83e9b] Running\n"}
{"Time":"2020-07-21T00:34:41.284825066-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284828723-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284832501-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.284836462-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (92.285682ms)\n"}
{"Time":"2020-07-21T00:34:41.284840425-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284844172-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284847933-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: metrics not available yet\n"}
{"Time":"2020-07-21T00:34:41.284851713-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.28485544-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284859195-07:00","Action":"cont","Test":"TestAddons/parallel/Registry"}
{"Time":"2020-07-21T00:34:41.284862664-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"=== CONT  TestAddons/parallel/Registry\n"}
{"Time":"2020-07-21T00:34:41.284866543-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:188: (dbg) Done: kubectl --context addons-20200721000638-23787 run --rm registry-test --restart=Never --image=busybox -it -- sh -c \"wget --spider -S http://registry.kube-system.svc.cluster.local\": (3.813186276s)\n"}
{"Time":"2020-07-21T00:34:41.284870912-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:202: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 ip\n"}
{"Time":"2020-07-21T00:34:41.284874832-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"2020/07/21 00:08:41 [DEBUG] GET http://172.17.0.3:5000\n"}
{"Time":"2020-07-21T00:34:41.284878627-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"    addons_test.go:231: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 addons disable registry --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.284882681-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284886134-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.28488988-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:124: (dbg) TestAddons/parallel/Ingress: run=nginx healthy within 9.008063164s\n"}
{"Time":"2020-07-21T00:34:41.284893807-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:134: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 ssh \"curl -s http://127.0.0.1/ -H 'Host: nginx.example.com'\"\n"}
{"Time":"2020-07-21T00:34:41.284897918-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:155: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 addons disable ingress --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.284904432-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284908034-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284911812-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.284918061-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (88.56177ms)\n"}
{"Time":"2020-07-21T00:34:41.284922078-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284925804-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284931601-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: metrics not available yet\n"}
{"Time":"2020-07-21T00:34:41.284935501-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284939255-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.28494307-07:00","Action":"cont","Test":"TestAddons/parallel/Ingress"}
{"Time":"2020-07-21T00:34:41.284946536-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"=== CONT  TestAddons/parallel/Ingress\n"}
{"Time":"2020-07-21T00:34:41.284950318-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"    addons_test.go:155: (dbg) Done: out/minikube-linux-amd64 -p addons-20200721000638-23787 addons disable ingress --alsologtostderr -v=1: (2.212148388s)\n"}
{"Time":"2020-07-21T00:34:41.284954342-07:00","Action":"cont","Test":"TestAddons/parallel/MetricsServer"}
{"Time":"2020-07-21T00:34:41.284957844-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"=== CONT  TestAddons/parallel/MetricsServer\n"}
{"Time":"2020-07-21T00:34:41.284961656-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.284965551-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (80.293197ms)\n"}
{"Time":"2020-07-21T00:34:41.284969587-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284975355-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.284979122-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: metrics not available yet\n"}
{"Time":"2020-07-21T00:34:41.284982975-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.284986687-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.284990416-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.284994318-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Non-zero exit: kubectl --context addons-20200721000638-23787 top pods -n kube-system: exit status 1 (80.238825ms)\n"}
{"Time":"2020-07-21T00:34:41.285000729-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285004611-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.285008411-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \tW0721 00:09:04.556209   15705 top_pod.go:274] Metrics not available for pod kube-system/etcd-addons-20200721000638-23787, age: 2m1.556199617s\n"}
{"Time":"2020-07-21T00:34:41.285012568-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \terror: Metrics not available for pod kube-system/etcd-addons-20200721000638-23787, age: 2m1.556199617s\n"}
{"Time":"2020-07-21T00:34:41.285016484-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285020264-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.285023995-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:257: (dbg) Run:  kubectl --context addons-20200721000638-23787 top pods -n kube-system\n"}
{"Time":"2020-07-21T00:34:41.285027863-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"    addons_test.go:275: (dbg) Run:  out/minikube-linux-amd64 -p addons-20200721000638-23787 addons disable metrics-server --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.285031963-07:00","Action":"cont","Test":"TestAddons"}
{"Time":"2020-07-21T00:34:41.285035406-07:00","Action":"output","Test":"TestAddons","Output":"=== CONT  TestAddons\n"}
{"Time":"2020-07-21T00:34:41.285039657-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:71: (dbg) Run:  out/minikube-linux-amd64 stop -p addons-20200721000638-23787\n"}
{"Time":"2020-07-21T00:34:41.285043524-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:71: (dbg) Done: out/minikube-linux-amd64 stop -p addons-20200721000638-23787: (6.27218817s)\n"}
{"Time":"2020-07-21T00:34:41.285049851-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:75: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p addons-20200721000638-23787\n"}
{"Time":"2020-07-21T00:34:41.28505388-07:00","Action":"output","Test":"TestAddons","Output":"    addons_test.go:79: (dbg) Run:  out/minikube-linux-amd64 addons disable dashboard -p addons-20200721000638-23787\n"}
{"Time":"2020-07-21T00:34:41.285057867-07:00","Action":"output","Test":"TestAddons","Output":"    helpers_test.go:170: Cleaning up \"addons-20200721000638-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.285061827-07:00","Action":"output","Test":"TestAddons","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p addons-20200721000638-23787\n"}
{"Time":"2020-07-21T00:34:41.285068861-07:00","Action":"output","Test":"TestAddons","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p addons-20200721000638-23787: (2.483137459s)\n"}
{"Time":"2020-07-21T00:34:41.285075916-07:00","Action":"output","Test":"TestAddons","Output":"--- PASS: TestAddons (168.82s)\n"}
{"Time":"2020-07-21T00:34:41.28508044-07:00","Action":"output","Test":"TestAddons/parallel","Output":"    --- PASS: TestAddons/parallel (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.285084738-07:00","Action":"output","Test":"TestAddons/parallel/Olm","Output":"        --- SKIP: TestAddons/parallel/Olm (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.285088995-07:00","Action":"skip","Test":"TestAddons/parallel/Olm","Elapsed":0}
{"Time":"2020-07-21T00:34:41.28509287-07:00","Action":"output","Test":"TestAddons/parallel/HelmTiller","Output":"        --- PASS: TestAddons/parallel/HelmTiller (9.06s)\n"}
{"Time":"2020-07-21T00:34:41.285097051-07:00","Action":"pass","Test":"TestAddons/parallel/HelmTiller","Elapsed":9.06}
{"Time":"2020-07-21T00:34:41.285100961-07:00","Action":"output","Test":"TestAddons/parallel/Registry","Output":"        --- PASS: TestAddons/parallel/Registry (14.62s)\n"}
{"Time":"2020-07-21T00:34:41.285107779-07:00","Action":"pass","Test":"TestAddons/parallel/Registry","Elapsed":14.62}
{"Time":"2020-07-21T00:34:41.285111724-07:00","Action":"output","Test":"TestAddons/parallel/Ingress","Output":"        --- PASS: TestAddons/parallel/Ingress (21.36s)\n"}
{"Time":"2020-07-21T00:34:41.28511572-07:00","Action":"pass","Test":"TestAddons/parallel/Ingress","Elapsed":21.36}
{"Time":"2020-07-21T00:34:41.285119511-07:00","Action":"output","Test":"TestAddons/parallel/MetricsServer","Output":"        --- PASS: TestAddons/parallel/MetricsServer (51.11s)\n"}
{"Time":"2020-07-21T00:34:41.285123451-07:00","Action":"pass","Test":"TestAddons/parallel/MetricsServer","Elapsed":51.11}
{"Time":"2020-07-21T00:34:41.285127127-07:00","Action":"pass","Test":"TestAddons/parallel","Elapsed":0}
{"Time":"2020-07-21T00:34:41.285130683-07:00","Action":"pass","Test":"TestAddons","Elapsed":168.82}
{"Time":"2020-07-21T00:34:41.285134245-07:00","Action":"run","Test":"TestCertOptions"}
{"Time":"2020-07-21T00:34:41.285137656-07:00","Action":"output","Test":"TestCertOptions","Output":"=== RUN   TestCertOptions\n"}
{"Time":"2020-07-21T00:34:41.285152832-07:00","Action":"output","Test":"TestCertOptions","Output":"=== PAUSE TestCertOptions\n"}
{"Time":"2020-07-21T00:34:41.285156938-07:00","Action":"pause","Test":"TestCertOptions"}
{"Time":"2020-07-21T00:34:41.285160616-07:00","Action":"run","Test":"TestDockerFlags"}
{"Time":"2020-07-21T00:34:41.285164045-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== RUN   TestDockerFlags\n"}
{"Time":"2020-07-21T00:34:41.285168154-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== PAUSE TestDockerFlags\n"}
{"Time":"2020-07-21T00:34:41.285171756-07:00","Action":"pause","Test":"TestDockerFlags"}
{"Time":"2020-07-21T00:34:41.285175451-07:00","Action":"run","Test":"TestForceSystemdFlag"}
{"Time":"2020-07-21T00:34:41.2851789-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== RUN   TestForceSystemdFlag\n"}
{"Time":"2020-07-21T00:34:41.285185546-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== PAUSE TestForceSystemdFlag\n"}
{"Time":"2020-07-21T00:34:41.285189207-07:00","Action":"pause","Test":"TestForceSystemdFlag"}
{"Time":"2020-07-21T00:34:41.285192789-07:00","Action":"run","Test":"TestForceSystemdEnv"}
{"Time":"2020-07-21T00:34:41.285196232-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== RUN   TestForceSystemdEnv\n"}
{"Time":"2020-07-21T00:34:41.285200329-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== PAUSE TestForceSystemdEnv\n"}
{"Time":"2020-07-21T00:34:41.285208518-07:00","Action":"pause","Test":"TestForceSystemdEnv"}
{"Time":"2020-07-21T00:34:41.285213519-07:00","Action":"run","Test":"TestKVMDriverInstallOrUpdate"}
{"Time":"2020-07-21T00:34:41.28521707-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"=== RUN   TestKVMDriverInstallOrUpdate\n"}
{"Time":"2020-07-21T00:34:41.285229952-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"=== PAUSE TestKVMDriverInstallOrUpdate\n"}
{"Time":"2020-07-21T00:34:41.285233651-07:00","Action":"pause","Test":"TestKVMDriverInstallOrUpdate"}
{"Time":"2020-07-21T00:34:41.285240167-07:00","Action":"run","Test":"TestHyperKitDriverInstallOrUpdate"}
{"Time":"2020-07-21T00:34:41.285243742-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"=== RUN   TestHyperKitDriverInstallOrUpdate\n"}
{"Time":"2020-07-21T00:34:41.285247639-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"    driver_install_or_update_test.go:102: Skip if not darwin.\n"}
{"Time":"2020-07-21T00:34:41.285252312-07:00","Action":"output","Test":"TestHyperKitDriverInstallOrUpdate","Output":"--- SKIP: TestHyperKitDriverInstallOrUpdate (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.285256316-07:00","Action":"skip","Test":"TestHyperKitDriverInstallOrUpdate","Elapsed":0}
{"Time":"2020-07-21T00:34:41.28526609-07:00","Action":"run","Test":"TestErrorSpam"}
{"Time":"2020-07-21T00:34:41.285269995-07:00","Action":"output","Test":"TestErrorSpam","Output":"=== RUN   TestErrorSpam\n"}
{"Time":"2020-07-21T00:34:41.285274085-07:00","Action":"output","Test":"TestErrorSpam","Output":"=== PAUSE TestErrorSpam\n"}
{"Time":"2020-07-21T00:34:41.285277507-07:00","Action":"pause","Test":"TestErrorSpam"}
{"Time":"2020-07-21T00:34:41.285281153-07:00","Action":"run","Test":"TestFunctional"}
{"Time":"2020-07-21T00:34:41.285284598-07:00","Action":"output","Test":"TestFunctional","Output":"=== RUN   TestFunctional\n"}
{"Time":"2020-07-21T00:34:41.285288443-07:00","Action":"run","Test":"TestFunctional/serial"}
{"Time":"2020-07-21T00:34:41.285291883-07:00","Action":"output","Test":"TestFunctional/serial","Output":"=== RUN   TestFunctional/serial\n"}
{"Time":"2020-07-21T00:34:41.285295827-07:00","Action":"run","Test":"TestFunctional/serial/CopySyncFile"}
{"Time":"2020-07-21T00:34:41.285299352-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"=== RUN   TestFunctional/serial/CopySyncFile\n"}
{"Time":"2020-07-21T00:34:41.285303333-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"    functional_test.go:903: local sync path: /home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube/files/etc/test/nested/copy/23787/hosts\n"}
{"Time":"2020-07-21T00:34:41.285307601-07:00","Action":"run","Test":"TestFunctional/serial/StartWithProxy"}
{"Time":"2020-07-21T00:34:41.285311092-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"=== RUN   TestFunctional/serial/StartWithProxy\n"}
{"Time":"2020-07-21T00:34:41.285314959-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"    functional_test.go:220: (dbg) Run:  out/minikube-linux-amd64 start -p functional-20200721000927-23787 --memory=2800 --apiserver-port=8441 --wait=true --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.28531971-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"    functional_test.go:220: (dbg) Done: out/minikube-linux-amd64 start -p functional-20200721000927-23787 --memory=2800 --apiserver-port=8441 --wait=true --driver=docker : (48.802858859s)\n"}
{"Time":"2020-07-21T00:34:41.28532643-07:00","Action":"run","Test":"TestFunctional/serial/SoftStart"}
{"Time":"2020-07-21T00:34:41.285329929-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"=== RUN   TestFunctional/serial/SoftStart\n"}
{"Time":"2020-07-21T00:34:41.285333793-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:252: (dbg) Run:  out/minikube-linux-amd64 start -p functional-20200721000927-23787\n"}
{"Time":"2020-07-21T00:34:41.28533779-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:252: (dbg) Done: out/minikube-linux-amd64 start -p functional-20200721000927-23787: (4.7160701s)\n"}
{"Time":"2020-07-21T00:34:41.285341676-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"    functional_test.go:256: soft start took 4.716696069s for \"functional-20200721000927-23787\" cluster.\n"}
{"Time":"2020-07-21T00:34:41.285345822-07:00","Action":"run","Test":"TestFunctional/serial/KubeContext"}
{"Time":"2020-07-21T00:34:41.285349299-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"=== RUN   TestFunctional/serial/KubeContext\n"}
{"Time":"2020-07-21T00:34:41.285353091-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"    functional_test.go:273: (dbg) Run:  kubectl config current-context\n"}
{"Time":"2020-07-21T00:34:41.285364504-07:00","Action":"run","Test":"TestFunctional/serial/KubectlGetPods"}
{"Time":"2020-07-21T00:34:41.285368141-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"=== RUN   TestFunctional/serial/KubectlGetPods\n"}
{"Time":"2020-07-21T00:34:41.285371934-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"    functional_test.go:286: (dbg) Run:  kubectl --context functional-20200721000927-23787 get po -A\n"}
{"Time":"2020-07-21T00:34:41.285379172-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd"}
{"Time":"2020-07-21T00:34:41.285382825-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd","Output":"=== RUN   TestFunctional/serial/CacheCmd\n"}
{"Time":"2020-07-21T00:34:41.285386693-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache"}
{"Time":"2020-07-21T00:34:41.285395083-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache\n"}
{"Time":"2020-07-21T00:34:41.28541755-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/add"}
{"Time":"2020-07-21T00:34:41.285422032-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/add\n"}
{"Time":"2020-07-21T00:34:41.285425975-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add busybox:latest\n"}
{"Time":"2020-07-21T00:34:41.285430112-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add busybox:latest: (1.356908545s)\n"}
{"Time":"2020-07-21T00:34:41.285434255-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.285438232-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add busybox:1.28.4-glibc: (1.468209738s)\n"}
{"Time":"2020-07-21T00:34:41.2854453-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add k8s.gcr.io/pause:latest\n"}
{"Time":"2020-07-21T00:34:41.285449407-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"    functional_test.go:457: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 cache add k8s.gcr.io/pause:latest: (1.31129604s)\n"}
{"Time":"2020-07-21T00:34:41.285456941-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc"}
{"Time":"2020-07-21T00:34:41.285460754-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.285464855-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc","Output":"    functional_test.go:464: (dbg) Run:  out/minikube-linux-amd64 cache delete busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.285471652-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/list"}
{"Time":"2020-07-21T00:34:41.285475329-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/list\n"}
{"Time":"2020-07-21T00:34:41.285479207-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"    functional_test.go:471: (dbg) Run:  out/minikube-linux-amd64 cache list\n"}
{"Time":"2020-07-21T00:34:41.285483222-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node"}
{"Time":"2020-07-21T00:34:41.285486802-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node\n"}
{"Time":"2020-07-21T00:34:41.285490742-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"    functional_test.go:484: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh sudo crictl images\n"}
{"Time":"2020-07-21T00:34:41.285498225-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload"}
{"Time":"2020-07-21T00:34:41.285501918-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/cache_reload\n"}
{"Time":"2020-07-21T00:34:41.28550583-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:497: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh sudo docker rmi busybox:latest\n"}
{"Time":"2020-07-21T00:34:41.285509866-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:503: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh sudo crictl inspecti busybox:latest\n"}
{"Time":"2020-07-21T00:34:41.285514016-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:503: (dbg) Non-zero exit: out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh sudo crictl inspecti busybox:latest: exit status 1 (293.219285ms)\n"}
{"Time":"2020-07-21T00:34:41.285518147-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285521909-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.285525758-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \t\u001b[31mFATA\u001b[0m[0000] no such image \"busybox:latest\" present       \n"}
{"Time":"2020-07-21T00:34:41.285530377-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285534123-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.285537921-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.28554181-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2020-07-21T00:34:41.285545641-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285549366-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.285553134-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:508: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 cache reload\n"}
{"Time":"2020-07-21T00:34:41.285557095-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"    functional_test.go:513: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh sudo crictl inspecti busybox:latest\n"}
{"Time":"2020-07-21T00:34:41.28556117-07:00","Action":"run","Test":"TestFunctional/serial/CacheCmd/cache/delete"}
{"Time":"2020-07-21T00:34:41.285564638-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"=== RUN   TestFunctional/serial/CacheCmd/cache/delete\n"}
{"Time":"2020-07-21T00:34:41.28556848-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"    functional_test.go:522: (dbg) Run:  out/minikube-linux-amd64 cache delete busybox:latest\n"}
{"Time":"2020-07-21T00:34:41.285572477-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"    functional_test.go:522: (dbg) Run:  out/minikube-linux-amd64 cache delete k8s.gcr.io/pause:latest\n"}
{"Time":"2020-07-21T00:34:41.285578931-07:00","Action":"run","Test":"TestFunctional/serial/MinikubeKubectlCmd"}
{"Time":"2020-07-21T00:34:41.285582541-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"=== RUN   TestFunctional/serial/MinikubeKubectlCmd\n"}
{"Time":"2020-07-21T00:34:41.285586393-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"    functional_test.go:304: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 kubectl -- --context functional-20200721000927-23787 get pods\n"}
{"Time":"2020-07-21T00:34:41.285593078-07:00","Action":"output","Test":"TestFunctional","Output":"=== PAUSE TestFunctional\n"}
{"Time":"2020-07-21T00:34:41.285596598-07:00","Action":"pause","Test":"TestFunctional"}
{"Time":"2020-07-21T00:34:41.285600174-07:00","Action":"run","Test":"TestGvisorAddon"}
{"Time":"2020-07-21T00:34:41.285603591-07:00","Action":"output","Test":"TestGvisorAddon","Output":"=== RUN   TestGvisorAddon\n"}
{"Time":"2020-07-21T00:34:41.285607407-07:00","Action":"output","Test":"TestGvisorAddon","Output":"    gvisor_addon_test.go:33: skipping test because --gvisor=false\n"}
{"Time":"2020-07-21T00:34:41.285611945-07:00","Action":"output","Test":"TestGvisorAddon","Output":"--- SKIP: TestGvisorAddon (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.285615816-07:00","Action":"skip","Test":"TestGvisorAddon","Elapsed":0}
{"Time":"2020-07-21T00:34:41.285619399-07:00","Action":"run","Test":"TestJSONOutput"}
{"Time":"2020-07-21T00:34:41.285622791-07:00","Action":"output","Test":"TestJSONOutput","Output":"=== RUN   TestJSONOutput\n"}
{"Time":"2020-07-21T00:34:41.285626558-07:00","Action":"output","Test":"TestJSONOutput","Output":"    json_output_test.go:31: skipping: test drivers once all JSON output is enabled\n"}
{"Time":"2020-07-21T00:34:41.285633651-07:00","Action":"output","Test":"TestJSONOutput","Output":"--- SKIP: TestJSONOutput (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.285637787-07:00","Action":"skip","Test":"TestJSONOutput","Elapsed":0}
{"Time":"2020-07-21T00:34:41.285641256-07:00","Action":"run","Test":"TestMultiNode"}
{"Time":"2020-07-21T00:34:41.285644623-07:00","Action":"output","Test":"TestMultiNode","Output":"=== RUN   TestMultiNode\n"}
{"Time":"2020-07-21T00:34:41.285648339-07:00","Action":"run","Test":"TestMultiNode/serial"}
{"Time":"2020-07-21T00:34:41.285651784-07:00","Action":"output","Test":"TestMultiNode/serial","Output":"=== RUN   TestMultiNode/serial\n"}
{"Time":"2020-07-21T00:34:41.285655641-07:00","Action":"run","Test":"TestMultiNode/serial/FreshStart2Nodes"}
{"Time":"2020-07-21T00:34:41.285659216-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"=== RUN   TestMultiNode/serial/FreshStart2Nodes\n"}
{"Time":"2020-07-21T00:34:41.285666144-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:66: (dbg) Run:  out/minikube-linux-amd64 start -p multinode-20200721001028-23787 --wait=true --memory=2200 --nodes=2 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.285672422-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:66: (dbg) Done: out/minikube-linux-amd64 start -p multinode-20200721001028-23787 --wait=true --memory=2200 --nodes=2 --driver=docker : (1m3.308600498s)\n"}
{"Time":"2020-07-21T00:34:41.285676531-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"    multinode_test.go:72: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.285680581-07:00","Action":"run","Test":"TestMultiNode/serial/AddNode"}
{"Time":"2020-07-21T00:34:41.285684024-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"=== RUN   TestMultiNode/serial/AddNode\n"}
{"Time":"2020-07-21T00:34:41.285687842-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:90: (dbg) Run:  out/minikube-linux-amd64 node add -p multinode-20200721001028-23787 -v 3 --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.285694687-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:90: (dbg) Done: out/minikube-linux-amd64 node add -p multinode-20200721001028-23787 -v 3 --alsologtostderr: (35.062709972s)\n"}
{"Time":"2020-07-21T00:34:41.285698844-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"    multinode_test.go:96: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.285702828-07:00","Action":"run","Test":"TestMultiNode/serial/StopNode"}
{"Time":"2020-07-21T00:34:41.285706284-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"=== RUN   TestMultiNode/serial/StopNode\n"}
{"Time":"2020-07-21T00:34:41.285710075-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:112: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 node stop m03\n"}
{"Time":"2020-07-21T00:34:41.285713986-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:112: (dbg) Done: out/minikube-linux-amd64 -p multinode-20200721001028-23787 node stop m03: (1.427433264s)\n"}
{"Time":"2020-07-21T00:34:41.285717899-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:118: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status\n"}
{"Time":"2020-07-21T00:34:41.28572181-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:118: (dbg) Non-zero exit: out/minikube-linux-amd64 -p multinode-20200721001028-23787 status: exit status 7 (621.45358ms)\n"}
{"Time":"2020-07-21T00:34:41.285725829-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285729573-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.285733354-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.285737145-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2020-07-21T00:34:41.285740952-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Running\n"}
{"Time":"2020-07-21T00:34:41.28574477-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Running\n"}
{"Time":"2020-07-21T00:34:41.285748609-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tapiserver: Running\n"}
{"Time":"2020-07-21T00:34:41.285754791-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubeconfig: Configured\n"}
{"Time":"2020-07-21T00:34:41.285758593-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285762388-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.285766168-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.285769918-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Running\n"}
{"Time":"2020-07-21T00:34:41.285773665-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Running\n"}
{"Time":"2020-07-21T00:34:41.285781471-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285785321-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787-m03\n"}
{"Time":"2020-07-21T00:34:41.28578911-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.285795759-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.285799641-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.285803321-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285807018-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285810742-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.285814652-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:125: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.285818649-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"    multinode_test.go:125: (dbg) Non-zero exit: out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr: exit status 7 (628.4619ms)\n"}
{"Time":"2020-07-21T00:34:41.285822693-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285826378-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.285830168-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.285833961-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2020-07-21T00:34:41.285837678-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Running\n"}
{"Time":"2020-07-21T00:34:41.285841375-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Running\n"}
{"Time":"2020-07-21T00:34:41.285847361-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tapiserver: Running\n"}
{"Time":"2020-07-21T00:34:41.285851237-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubeconfig: Configured\n"}
{"Time":"2020-07-21T00:34:41.285854985-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285858756-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.285862505-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.285866198-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Running\n"}
{"Time":"2020-07-21T00:34:41.28586993-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Running\n"}
{"Time":"2020-07-21T00:34:41.285873646-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285877382-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tmultinode-20200721001028-23787-m03\n"}
{"Time":"2020-07-21T00:34:41.285881125-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.285884836-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.285888509-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.285892302-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.285896008-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.285899738-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.285906141-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.285926252-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.093894     691 mustload.go:64] Loading cluster: multinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.285930492-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.094253     691 status.go:124] checking status of multinode-20200721001028-23787 ...\n"}
{"Time":"2020-07-21T00:34:41.285934493-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.094758     691 cli_runner.go:109] Run: docker container inspect multinode-20200721001028-23787 --format={{.State.Status}}\n"}
{"Time":"2020-07-21T00:34:41.285938562-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.143072     691 status.go:188] multinode-20200721001028-23787 host status = \"Running\" (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.285942934-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.143127     691 host.go:65] Checking if \"multinode-20200721001028-23787\" exists ...\n"}
{"Time":"2020-07-21T00:34:41.285947111-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.143531     691 cli_runner.go:109] Run: docker container inspect -f \"{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}\" multinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.285952014-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.196204     691 host.go:65] Checking if \"multinode-20200721001028-23787\" exists ...\n"}
{"Time":"2020-07-21T00:34:41.285959805-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.196494     691 system_pods.go:161] Checking kubelet status ...\n"}
{"Time":"2020-07-21T00:34:41.285968433-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.196588     691 ssh_runner.go:148] Run: systemctl --version\n"}
{"Time":"2020-07-21T00:34:41.285972433-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.196650     691 cli_runner.go:109] Run: docker container inspect -f \"'{{(index (index .NetworkSettings.Ports \"22/tcp\") 0).HostPort}}'\" multinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.285976918-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.245876     691 sshutil.go:44] new ssh client: \u0026{IP:127.0.0.1 Port:32963 SSHKeyPath:/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube/machines/multinode-20200721001028-23787/id_rsa Username:docker}\n"}
{"Time":"2020-07-21T00:34:41.285981315-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.340419     691 ssh_runner.go:148] Run: sudo systemctl is-active --quiet service kubelet\n"}
{"Time":"2020-07-21T00:34:41.28598527-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.351087     691 status.go:232] multinode-20200721001028-23787 kubelet status = Running\n"}
{"Time":"2020-07-21T00:34:41.285989288-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.352189     691 kubeconfig.go:93] found \"multinode-20200721001028-23787\" server: \"https://172.17.0.4:8443\"\n"}
{"Time":"2020-07-21T00:34:41.28599347-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.352215     691 api_server.go:146] Checking apiserver status ...\n"}
{"Time":"2020-07-21T00:34:41.285997412-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.352252     691 ssh_runner.go:148] Run: sudo pgrep -xnf kube-apiserver.*minikube.*\n"}
{"Time":"2020-07-21T00:34:41.286004427-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.362395     691 ssh_runner.go:148] Run: sudo egrep ^[0-9]+:freezer: /proc/1823/cgroup\n"}
{"Time":"2020-07-21T00:34:41.286008579-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.371410     691 api_server.go:162] apiserver freezer: \"10:freezer:/docker/45facc2696f97f1bec255d01e34b1e292fb0ab6a3a1f06880dfbfc3b2cc10ae6/kubepods/burstable/pod8ea3eff5406575bb435cdaedf3d1c764/dae0557fd487622c99d04f3383543f7dad0f869d460d52eb96ae93a6754770da\"\n"}
{"Time":"2020-07-21T00:34:41.286013092-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.371485     691 ssh_runner.go:148] Run: sudo cat /sys/fs/cgroup/freezer/docker/45facc2696f97f1bec255d01e34b1e292fb0ab6a3a1f06880dfbfc3b2cc10ae6/kubepods/burstable/pod8ea3eff5406575bb435cdaedf3d1c764/dae0557fd487622c99d04f3383543f7dad0f869d460d52eb96ae93a6754770da/freezer.state\n"}
{"Time":"2020-07-21T00:34:41.286017473-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.379135     691 api_server.go:184] freezer state: \"THAWED\"\n"}
{"Time":"2020-07-21T00:34:41.286021509-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.379185     691 api_server.go:221] Checking apiserver healthz at https://172.17.0.4:8443/healthz ...\n"}
{"Time":"2020-07-21T00:34:41.286025501-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.384530     691 api_server.go:241] https://172.17.0.4:8443/healthz returned 200:\n"}
{"Time":"2020-07-21T00:34:41.286029499-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tok\n"}
{"Time":"2020-07-21T00:34:41.286038704-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.384552     691 status.go:253] multinode-20200721001028-23787 apiserver status = Running (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.286042953-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.384562     691 status.go:126] multinode-20200721001028-23787 status: \u0026{Name:multinode-20200721001028-23787 Host:Running Kubelet:Running APIServer:Running Kubeconfig:Configured Worker:false}\n"}
{"Time":"2020-07-21T00:34:41.286047187-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.384583     691 status.go:124] checking status of multinode-20200721001028-23787-m02 ...\n"}
{"Time":"2020-07-21T00:34:41.286054025-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.384869     691 cli_runner.go:109] Run: docker container inspect multinode-20200721001028-23787-m02 --format={{.State.Status}}\n"}
{"Time":"2020-07-21T00:34:41.286058066-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.435039     691 status.go:188] multinode-20200721001028-23787-m02 host status = \"Running\" (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.286062302-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.435074     691 host.go:65] Checking if \"multinode-20200721001028-23787-m02\" exists ...\n"}
{"Time":"2020-07-21T00:34:41.286067045-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.435426     691 cli_runner.go:109] Run: docker container inspect -f \"{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}\" multinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.286071445-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.483578     691 host.go:65] Checking if \"multinode-20200721001028-23787-m02\" exists ...\n"}
{"Time":"2020-07-21T00:34:41.286078837-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.483949     691 system_pods.go:161] Checking kubelet status ...\n"}
{"Time":"2020-07-21T00:34:41.286082868-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.483993     691 ssh_runner.go:148] Run: sudo systemctl is-active --quiet service kubelet\n"}
{"Time":"2020-07-21T00:34:41.286086825-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.484115     691 cli_runner.go:109] Run: docker container inspect -f \"'{{(index (index .NetworkSettings.Ports \"22/tcp\") 0).HostPort}}'\" multinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.286091167-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.530788     691 sshutil.go:44] new ssh client: \u0026{IP:127.0.0.1 Port:32967 SSHKeyPath:/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube/machines/multinode-20200721001028-23787-m02/id_rsa Username:docker}\n"}
{"Time":"2020-07-21T00:34:41.28609841-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.623020     691 status.go:232] multinode-20200721001028-23787-m02 kubelet status = Running\n"}
{"Time":"2020-07-21T00:34:41.286102633-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.623058     691 status.go:126] multinode-20200721001028-23787-m02 status: \u0026{Name:multinode-20200721001028-23787-m02 Host:Running Kubelet:Running APIServer:Irrelevant Kubeconfig:Irrelevant Worker:true}\n"}
{"Time":"2020-07-21T00:34:41.286106911-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.623077     691 status.go:124] checking status of multinode-20200721001028-23787-m03 ...\n"}
{"Time":"2020-07-21T00:34:41.286110848-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.623434     691 cli_runner.go:109] Run: docker container inspect multinode-20200721001028-23787-m03 --format={{.State.Status}}\n"}
{"Time":"2020-07-21T00:34:41.28611488-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.671237     691 status.go:188] multinode-20200721001028-23787-m03 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.286118997-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.671265     691 status.go:201] host is not running, skipping remaining checks\n"}
{"Time":"2020-07-21T00:34:41.286122938-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \tI0721 00:12:10.671306     691 status.go:126] multinode-20200721001028-23787-m03 status: \u0026{Name:multinode-20200721001028-23787-m03 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:true}\n"}
{"Time":"2020-07-21T00:34:41.286127185-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.28613095-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.28613488-07:00","Action":"run","Test":"TestMultiNode/serial/StartAfterStop"}
{"Time":"2020-07-21T00:34:41.286138353-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"=== RUN   TestMultiNode/serial/StartAfterStop\n"}
{"Time":"2020-07-21T00:34:41.286144935-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:145: (dbg) Run:  docker version -f {{.Server.Version}}\n"}
{"Time":"2020-07-21T00:34:41.286148847-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:155: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 node start m03 --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.286152851-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:155: (dbg) Done: out/minikube-linux-amd64 -p multinode-20200721001028-23787 node start m03 --alsologtostderr: (1m10.719259024s)\n"}
{"Time":"2020-07-21T00:34:41.286162163-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:162: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status\n"}
{"Time":"2020-07-21T00:34:41.28616627-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"    multinode_test.go:176: (dbg) Run:  kubectl get nodes\n"}
{"Time":"2020-07-21T00:34:41.286170187-07:00","Action":"run","Test":"TestMultiNode/serial/DeleteNode"}
{"Time":"2020-07-21T00:34:41.286173746-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"=== RUN   TestMultiNode/serial/DeleteNode\n"}
{"Time":"2020-07-21T00:34:41.28617767-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:265: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 node delete m03\n"}
{"Time":"2020-07-21T00:34:41.286181592-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:265: (dbg) Done: out/minikube-linux-amd64 -p multinode-20200721001028-23787 node delete m03: (5.565878924s)\n"}
{"Time":"2020-07-21T00:34:41.286185568-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:271: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.286189535-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"    multinode_test.go:285: (dbg) Run:  docker volume ls\n"}
{"Time":"2020-07-21T00:34:41.286193368-07:00","Action":"run","Test":"TestMultiNode/serial/StopMultiNode"}
{"Time":"2020-07-21T00:34:41.286196851-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"=== RUN   TestMultiNode/serial/StopMultiNode\n"}
{"Time":"2020-07-21T00:34:41.286200641-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:184: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 stop\n"}
{"Time":"2020-07-21T00:34:41.286204603-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:184: (dbg) Done: out/minikube-linux-amd64 -p multinode-20200721001028-23787 stop: (7.39500443s)\n"}
{"Time":"2020-07-21T00:34:41.286208533-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:190: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status\n"}
{"Time":"2020-07-21T00:34:41.286212436-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:190: (dbg) Non-zero exit: out/minikube-linux-amd64 -p multinode-20200721001028-23787 status: exit status 7 (141.352387ms)\n"}
{"Time":"2020-07-21T00:34:41.286216409-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.286220148-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.286223876-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.28622768-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2020-07-21T00:34:41.286231491-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286235289-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286239111-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286245294-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286251979-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.286258152-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.286261959-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.286265756-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286269479-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286273194-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.286276869-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.286280537-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.286284637-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:197: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.286288673-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"    multinode_test.go:197: (dbg) Non-zero exit: out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr: exit status 7 (144.203726ms)\n"}
{"Time":"2020-07-21T00:34:41.286292687-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.286296391-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.286300154-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.286304033-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Control Plane\n"}
{"Time":"2020-07-21T00:34:41.286307739-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286313556-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286317449-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tapiserver: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286321159-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubeconfig: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286324847-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.286328624-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tmultinode-20200721001028-23787-m02\n"}
{"Time":"2020-07-21T00:34:41.286332388-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \ttype: Worker\n"}
{"Time":"2020-07-21T00:34:41.286336268-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \thost: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286340057-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tkubelet: Stopped\n"}
{"Time":"2020-07-21T00:34:41.286343751-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.286347392-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.286351098-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.286357585-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.286363412-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.456449    6091 mustload.go:64] Loading cluster: multinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.286367872-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.456736    6091 status.go:124] checking status of multinode-20200721001028-23787 ...\n"}
{"Time":"2020-07-21T00:34:41.286371833-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.457207    6091 cli_runner.go:109] Run: docker container inspect multinode-20200721001028-23787 --format={{.State.Status}}\n"}
{"Time":"2020-07-21T00:34:41.286375875-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.505252    6091 status.go:188] multinode-20200721001028-23787 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.286385156-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.505301    6091 status.go:201] host is not running, skipping remaining checks\n"}
{"Time":"2020-07-21T00:34:41.286389263-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.505312    6091 status.go:126] multinode-20200721001028-23787 status: \u0026{Name:multinode-20200721001028-23787 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:false}\n"}
{"Time":"2020-07-21T00:34:41.286393508-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.505340    6091 status.go:124] checking status of multinode-20200721001028-23787-m02 ...\n"}
{"Time":"2020-07-21T00:34:41.286397481-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.505693    6091 cli_runner.go:109] Run: docker container inspect multinode-20200721001028-23787-m02 --format={{.State.Status}}\n"}
{"Time":"2020-07-21T00:34:41.286401527-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.553552    6091 status.go:188] multinode-20200721001028-23787-m02 host status = \"Stopped\" (err=\u003cnil\u003e)\n"}
{"Time":"2020-07-21T00:34:41.28640561-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.553604    6091 status.go:201] host is not running, skipping remaining checks\n"}
{"Time":"2020-07-21T00:34:41.286416585-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \tI0721 00:13:36.553612    6091 status.go:126] multinode-20200721001028-23787-m02 status: \u0026{Name:multinode-20200721001028-23787-m02 Host:Stopped Kubelet:Stopped APIServer:Stopped Kubeconfig:Stopped Worker:true}\n"}
{"Time":"2020-07-21T00:34:41.286421243-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.286424983-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.286428967-07:00","Action":"run","Test":"TestMultiNode/serial/RestartMultiNode"}
{"Time":"2020-07-21T00:34:41.286432506-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"=== RUN   TestMultiNode/serial/RestartMultiNode\n"}
{"Time":"2020-07-21T00:34:41.286436377-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:213: (dbg) Run:  docker version -f {{.Server.Version}}\n"}
{"Time":"2020-07-21T00:34:41.286440271-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:223: (dbg) Run:  out/minikube-linux-amd64 start -p multinode-20200721001028-23787 --wait=true --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.286444413-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:223: (dbg) Done: out/minikube-linux-amd64 start -p multinode-20200721001028-23787 --wait=true --driver=docker : (2m11.240791064s)\n"}
{"Time":"2020-07-21T00:34:41.286451768-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:229: (dbg) Run:  out/minikube-linux-amd64 -p multinode-20200721001028-23787 status --alsologtostderr\n"}
{"Time":"2020-07-21T00:34:41.286455841-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:245: (dbg) Run:  kubectl get nodes\n"}
{"Time":"2020-07-21T00:34:41.286459772-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"    multinode_test.go:253: (dbg) Run:  kubectl get nodes -o \"go-template='{{range .items}}{{range .status.conditions}}{{if eq .type \"Ready\"}} {{.status}}{{\"\\n\"}}{{end}}{{end}}{{end}}'\"\n"}
{"Time":"2020-07-21T00:34:41.286464435-07:00","Action":"cont","Test":"TestMultiNode"}
{"Time":"2020-07-21T00:34:41.286467864-07:00","Action":"output","Test":"TestMultiNode","Output":"=== CONT  TestMultiNode\n"}
{"Time":"2020-07-21T00:34:41.286471581-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:170: Cleaning up \"multinode-20200721001028-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.286475566-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p multinode-20200721001028-23787\n"}
{"Time":"2020-07-21T00:34:41.286479471-07:00","Action":"output","Test":"TestMultiNode","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p multinode-20200721001028-23787: (4.676924523s)\n"}
{"Time":"2020-07-21T00:34:41.286484013-07:00","Action":"output","Test":"TestMultiNode","Output":"--- PASS: TestMultiNode (355.37s)\n"}
{"Time":"2020-07-21T00:34:41.28648825-07:00","Action":"output","Test":"TestMultiNode/serial","Output":"    --- PASS: TestMultiNode/serial (350.70s)\n"}
{"Time":"2020-07-21T00:34:41.286492641-07:00","Action":"output","Test":"TestMultiNode/serial/FreshStart2Nodes","Output":"        --- PASS: TestMultiNode/serial/FreshStart2Nodes (63.91s)\n"}
{"Time":"2020-07-21T00:34:41.2864992-07:00","Action":"pass","Test":"TestMultiNode/serial/FreshStart2Nodes","Elapsed":63.91}
{"Time":"2020-07-21T00:34:41.286503483-07:00","Action":"output","Test":"TestMultiNode/serial/AddNode","Output":"        --- PASS: TestMultiNode/serial/AddNode (35.93s)\n"}
{"Time":"2020-07-21T00:34:41.286507572-07:00","Action":"pass","Test":"TestMultiNode/serial/AddNode","Elapsed":35.93}
{"Time":"2020-07-21T00:34:41.286511414-07:00","Action":"output","Test":"TestMultiNode/serial/StopNode","Output":"        --- PASS: TestMultiNode/serial/StopNode (2.68s)\n"}
{"Time":"2020-07-21T00:34:41.286515504-07:00","Action":"pass","Test":"TestMultiNode/serial/StopNode","Elapsed":2.68}
{"Time":"2020-07-21T00:34:41.286519352-07:00","Action":"output","Test":"TestMultiNode/serial/StartAfterStop","Output":"        --- PASS: TestMultiNode/serial/StartAfterStop (72.00s)\n"}
{"Time":"2020-07-21T00:34:41.286523374-07:00","Action":"pass","Test":"TestMultiNode/serial/StartAfterStop","Elapsed":72}
{"Time":"2020-07-21T00:34:41.286530051-07:00","Action":"output","Test":"TestMultiNode/serial/DeleteNode","Output":"        --- PASS: TestMultiNode/serial/DeleteNode (6.20s)\n"}
{"Time":"2020-07-21T00:34:41.286534459-07:00","Action":"pass","Test":"TestMultiNode/serial/DeleteNode","Elapsed":6.2}
{"Time":"2020-07-21T00:34:41.286538346-07:00","Action":"output","Test":"TestMultiNode/serial/StopMultiNode","Output":"        --- PASS: TestMultiNode/serial/StopMultiNode (7.68s)\n"}
{"Time":"2020-07-21T00:34:41.286542449-07:00","Action":"pass","Test":"TestMultiNode/serial/StopMultiNode","Elapsed":7.68}
{"Time":"2020-07-21T00:34:41.286546375-07:00","Action":"output","Test":"TestMultiNode/serial/RestartMultiNode","Output":"        --- PASS: TestMultiNode/serial/RestartMultiNode (162.29s)\n"}
{"Time":"2020-07-21T00:34:41.286554079-07:00","Action":"pass","Test":"TestMultiNode/serial/RestartMultiNode","Elapsed":162.29}
{"Time":"2020-07-21T00:34:41.286563496-07:00","Action":"pass","Test":"TestMultiNode/serial","Elapsed":350.7}
{"Time":"2020-07-21T00:34:41.286569378-07:00","Action":"pass","Test":"TestMultiNode","Elapsed":355.37}
{"Time":"2020-07-21T00:34:41.286573026-07:00","Action":"run","Test":"TestNetworkPlugins"}
{"Time":"2020-07-21T00:34:41.286582509-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== RUN   TestNetworkPlugins\n"}
{"Time":"2020-07-21T00:34:41.286586711-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== PAUSE TestNetworkPlugins\n"}
{"Time":"2020-07-21T00:34:41.286590261-07:00","Action":"pause","Test":"TestNetworkPlugins"}
{"Time":"2020-07-21T00:34:41.286593901-07:00","Action":"run","Test":"TestChangeNoneUser"}
{"Time":"2020-07-21T00:34:41.286597341-07:00","Action":"output","Test":"TestChangeNoneUser","Output":"=== RUN   TestChangeNoneUser\n"}
{"Time":"2020-07-21T00:34:41.2866011-07:00","Action":"output","Test":"TestChangeNoneUser","Output":"    none_test.go:38: Only test none driver.\n"}
{"Time":"2020-07-21T00:34:41.286605434-07:00","Action":"output","Test":"TestChangeNoneUser","Output":"--- SKIP: TestChangeNoneUser (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.286609299-07:00","Action":"skip","Test":"TestChangeNoneUser","Elapsed":0}
{"Time":"2020-07-21T00:34:41.286612885-07:00","Action":"run","Test":"TestPause"}
{"Time":"2020-07-21T00:34:41.286616458-07:00","Action":"output","Test":"TestPause","Output":"=== RUN   TestPause\n"}
{"Time":"2020-07-21T00:34:41.286620376-07:00","Action":"output","Test":"TestPause","Output":"=== PAUSE TestPause\n"}
{"Time":"2020-07-21T00:34:41.286623751-07:00","Action":"pause","Test":"TestPause"}
{"Time":"2020-07-21T00:34:41.286627354-07:00","Action":"run","Test":"TestPreload"}
{"Time":"2020-07-21T00:34:41.286630735-07:00","Action":"output","Test":"TestPreload","Output":"=== RUN   TestPreload\n"}
{"Time":"2020-07-21T00:34:41.286634905-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:43: (dbg) Run:  out/minikube-linux-amd64 start -p test-preload-20200721001623-23787 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=docker  --kubernetes-version=v1.17.0\n"}
{"Time":"2020-07-21T00:34:41.286639152-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:43: (dbg) Done: out/minikube-linux-amd64 start -p test-preload-20200721001623-23787 --memory=2200 --alsologtostderr --wait=true --preload=false --driver=docker  --kubernetes-version=v1.17.0: (59.804128769s)\n"}
{"Time":"2020-07-21T00:34:41.286645632-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:50: (dbg) Run:  out/minikube-linux-amd64 ssh -p test-preload-20200721001623-23787 -- docker pull busybox\n"}
{"Time":"2020-07-21T00:34:41.286649569-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:50: (dbg) Done: out/minikube-linux-amd64 ssh -p test-preload-20200721001623-23787 -- docker pull busybox: (5.174208681s)\n"}
{"Time":"2020-07-21T00:34:41.286653543-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:60: (dbg) Run:  out/minikube-linux-amd64 start -p test-preload-20200721001623-23787 --memory=2200 --alsologtostderr -v=1 --wait=true --driver=docker  --kubernetes-version=v1.17.3\n"}
{"Time":"2020-07-21T00:34:41.286657636-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:60: (dbg) Done: out/minikube-linux-amd64 start -p test-preload-20200721001623-23787 --memory=2200 --alsologtostderr -v=1 --wait=true --driver=docker  --kubernetes-version=v1.17.3: (1m5.635236414s)\n"}
{"Time":"2020-07-21T00:34:41.286661771-07:00","Action":"output","Test":"TestPreload","Output":"    preload_test.go:64: (dbg) Run:  out/minikube-linux-amd64 ssh -p test-preload-20200721001623-23787 -- docker images\n"}
{"Time":"2020-07-21T00:34:41.286668404-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:170: Cleaning up \"test-preload-20200721001623-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.286675764-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p test-preload-20200721001623-23787\n"}
{"Time":"2020-07-21T00:34:41.286679867-07:00","Action":"output","Test":"TestPreload","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p test-preload-20200721001623-23787: (2.676989563s)\n"}
{"Time":"2020-07-21T00:34:41.28668423-07:00","Action":"output","Test":"TestPreload","Output":"--- PASS: TestPreload (133.64s)\n"}
{"Time":"2020-07-21T00:34:41.286688045-07:00","Action":"pass","Test":"TestPreload","Elapsed":133.64}
{"Time":"2020-07-21T00:34:41.286691679-07:00","Action":"run","Test":"TestStartStop"}
{"Time":"2020-07-21T00:34:41.286695112-07:00","Action":"output","Test":"TestStartStop","Output":"=== RUN   TestStartStop\n"}
{"Time":"2020-07-21T00:34:41.286699031-07:00","Action":"output","Test":"TestStartStop","Output":"=== PAUSE TestStartStop\n"}
{"Time":"2020-07-21T00:34:41.286702552-07:00","Action":"pause","Test":"TestStartStop"}
{"Time":"2020-07-21T00:34:41.286706184-07:00","Action":"run","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.286713305-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== RUN   TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286717433-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== PAUSE TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286720917-07:00","Action":"pause","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.286724534-07:00","Action":"run","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.286727992-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== RUN   TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.28673194-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== PAUSE TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286735431-07:00","Action":"pause","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.286738977-07:00","Action":"run","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.286742594-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== RUN   TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286746585-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== PAUSE TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286750165-07:00","Action":"pause","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.286753727-07:00","Action":"run","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.286757225-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== RUN   TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286763588-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== PAUSE TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.286767216-07:00","Action":"pause","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.286770798-07:00","Action":"cont","Test":"TestCertOptions"}
{"Time":"2020-07-21T00:34:41.286774217-07:00","Action":"output","Test":"TestCertOptions","Output":"=== CONT  TestCertOptions\n"}
{"Time":"2020-07-21T00:34:41.286778126-07:00","Action":"cont","Test":"TestPause"}
{"Time":"2020-07-21T00:34:41.28678151-07:00","Action":"output","Test":"TestPause","Output":"=== CONT  TestPause\n"}
{"Time":"2020-07-21T00:34:41.286785302-07:00","Action":"cont","Test":"TestCertOptions"}
{"Time":"2020-07-21T00:34:41.286788701-07:00","Action":"output","Test":"TestCertOptions","Output":"=== CONT  TestCertOptions\n"}
{"Time":"2020-07-21T00:34:41.286792631-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:46: (dbg) Run:  out/minikube-linux-amd64 start -p cert-options-20200721001837-23787 --memory=1900 --apiserver-ips=127.0.0.1 --apiserver-ips=192.168.15.15 --apiserver-names=localhost --apiserver-names=www.google.com --apiserver-port=8555 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.286800008-07:00","Action":"run","Test":"TestPause/serial"}
{"Time":"2020-07-21T00:34:41.286803593-07:00","Action":"output","Test":"TestPause/serial","Output":"=== RUN   TestPause/serial\n"}
{"Time":"2020-07-21T00:34:41.286807374-07:00","Action":"cont","Test":"TestKVMDriverInstallOrUpdate"}
{"Time":"2020-07-21T00:34:41.286810823-07:00","Action":"output","Test":"TestKVMDriverInstallOrUpdate","Output":"=== CONT  TestKVMDriverInstallOrUpdate\n"}
{"Time":"2020-07-21T00:34:41.286814656-07:00","Action":"run","Test":"TestPause/serial/Start"}
{"Time":"2020-07-21T00:34:41.286818146-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"=== RUN   TestPause/serial/Start\n"}
{"Time":"2020-07-21T00:34:41.286825802-07:00","Action":"cont","Test":"TestNetworkPlugins"}
{"Time":"2020-07-21T00:34:41.28682935-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"=== CONT  TestNetworkPlugins\n"}
{"Time":"2020-07-21T00:34:41.286833084-07:00","Action":"cont","Test":"TestPause/serial/Start"}
{"Time":"2020-07-21T00:34:41.286836519-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"=== CONT  TestPause/serial/Start\n"}
{"Time":"2020-07-21T00:34:41.286840289-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    pause_test.go:67: (dbg) Run:  out/minikube-linux-amd64 start -p pause-20200721001837-23787 --memory=1800 --install-addons=false --wait=all --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.286844356-07:00","Action":"run","Test":"TestNetworkPlugins/group"}
{"Time":"2020-07-21T00:34:41.286850672-07:00","Action":"output","Test":"TestNetworkPlugins/group","Output":"=== RUN   TestNetworkPlugins/group\n"}
{"Time":"2020-07-21T00:34:41.286854492-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2020-07-21T00:34:41.286857934-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== RUN   TestNetworkPlugins/group/auto\n"}
{"Time":"2020-07-21T00:34:41.286861891-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== PAUSE TestNetworkPlugins/group/auto\n"}
{"Time":"2020-07-21T00:34:41.286865419-07:00","Action":"pause","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2020-07-21T00:34:41.286869058-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2020-07-21T00:34:41.286872555-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== RUN   TestNetworkPlugins/group/kubenet\n"}
{"Time":"2020-07-21T00:34:41.286876515-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== PAUSE TestNetworkPlugins/group/kubenet\n"}
{"Time":"2020-07-21T00:34:41.286880026-07:00","Action":"pause","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2020-07-21T00:34:41.286883602-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2020-07-21T00:34:41.286887044-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== RUN   TestNetworkPlugins/group/bridge\n"}
{"Time":"2020-07-21T00:34:41.286891057-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== PAUSE TestNetworkPlugins/group/bridge\n"}
{"Time":"2020-07-21T00:34:41.286894617-07:00","Action":"pause","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2020-07-21T00:34:41.286898302-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2020-07-21T00:34:41.28690386-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2020-07-21T00:34:41.286908103-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== PAUSE TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2020-07-21T00:34:41.286911716-07:00","Action":"pause","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2020-07-21T00:34:41.286915311-07:00","Action":"run","Test":"TestNetworkPlugins/group/flannel"}
{"Time":"2020-07-21T00:34:41.286920985-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"=== RUN   TestNetworkPlugins/group/flannel\n"}
{"Time":"2020-07-21T00:34:41.286927693-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"    net_test.go:66: flannel is not yet compatible with Docker driver: iptables v1.8.3 (legacy): Couldn't load target `CNI-x': No such file or directory\n"}
{"Time":"2020-07-21T00:34:41.286932013-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2020-07-21T00:34:41.286935456-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== RUN   TestNetworkPlugins/group/kindnet\n"}
{"Time":"2020-07-21T00:34:41.286939376-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== PAUSE TestNetworkPlugins/group/kindnet\n"}
{"Time":"2020-07-21T00:34:41.286942886-07:00","Action":"pause","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2020-07-21T00:34:41.286946444-07:00","Action":"run","Test":"TestNetworkPlugins/group/false"}
{"Time":"2020-07-21T00:34:41.28694986-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== RUN   TestNetworkPlugins/group/false\n"}
{"Time":"2020-07-21T00:34:41.286958728-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== PAUSE TestNetworkPlugins/group/false\n"}
{"Time":"2020-07-21T00:34:41.286962333-07:00","Action":"pause","Test":"TestNetworkPlugins/group/false"}
{"Time":"2020-07-21T00:34:41.286966056-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-weave"}
{"Time":"2020-07-21T00:34:41.286969559-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"=== RUN   TestNetworkPlugins/group/custom-weave\n"}
{"Time":"2020-07-21T00:34:41.286978135-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"=== PAUSE TestNetworkPlugins/group/custom-weave\n"}
{"Time":"2020-07-21T00:34:41.286982042-07:00","Action":"pause","Test":"TestNetworkPlugins/group/custom-weave"}
{"Time":"2020-07-21T00:34:41.286985611-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2020-07-21T00:34:41.286989034-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== RUN   TestNetworkPlugins/group/calico\n"}
{"Time":"2020-07-21T00:34:41.286993147-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== PAUSE TestNetworkPlugins/group/calico\n"}
{"Time":"2020-07-21T00:34:41.286996754-07:00","Action":"pause","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2020-07-21T00:34:41.287000351-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2020-07-21T00:34:41.287003751-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== RUN   TestNetworkPlugins/group/cilium\n"}
{"Time":"2020-07-21T00:34:41.287010431-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== PAUSE TestNetworkPlugins/group/cilium\n"}
{"Time":"2020-07-21T00:34:41.287014043-07:00","Action":"pause","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2020-07-21T00:34:41.287017725-07:00","Action":"cont","Test":"TestFunctional"}
{"Time":"2020-07-21T00:34:41.287021162-07:00","Action":"output","Test":"TestFunctional","Output":"=== CONT  TestFunctional\n"}
{"Time":"2020-07-21T00:34:41.287024946-07:00","Action":"run","Test":"TestFunctional/parallel"}
{"Time":"2020-07-21T00:34:41.287028365-07:00","Action":"output","Test":"TestFunctional/parallel","Output":"=== RUN   TestFunctional/parallel\n"}
{"Time":"2020-07-21T00:34:41.28703223-07:00","Action":"run","Test":"TestFunctional/parallel/ComponentHealth"}
{"Time":"2020-07-21T00:34:41.287035682-07:00","Action":"output","Test":"TestFunctional/parallel/ComponentHealth","Output":"=== RUN   TestFunctional/parallel/ComponentHealth\n"}
{"Time":"2020-07-21T00:34:41.287041952-07:00","Action":"output","Test":"TestFunctional/parallel/ComponentHealth","Output":"=== PAUSE TestFunctional/parallel/ComponentHealth\n"}
{"Time":"2020-07-21T00:34:41.2870456-07:00","Action":"pause","Test":"TestFunctional/parallel/ComponentHealth"}
{"Time":"2020-07-21T00:34:41.287049222-07:00","Action":"run","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2020-07-21T00:34:41.287055775-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== RUN   TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2020-07-21T00:34:41.28706008-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== PAUSE TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2020-07-21T00:34:41.287063692-07:00","Action":"pause","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2020-07-21T00:34:41.287067279-07:00","Action":"run","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2020-07-21T00:34:41.287070719-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== RUN   TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2020-07-21T00:34:41.287074685-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== PAUSE TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2020-07-21T00:34:41.287078305-07:00","Action":"pause","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2020-07-21T00:34:41.287081893-07:00","Action":"run","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2020-07-21T00:34:41.287085303-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== RUN   TestFunctional/parallel/DryRun\n"}
{"Time":"2020-07-21T00:34:41.28708923-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== PAUSE TestFunctional/parallel/DryRun\n"}
{"Time":"2020-07-21T00:34:41.287092797-07:00","Action":"pause","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2020-07-21T00:34:41.287096356-07:00","Action":"run","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2020-07-21T00:34:41.287099795-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== RUN   TestFunctional/parallel/StatusCmd\n"}
{"Time":"2020-07-21T00:34:41.287104151-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== PAUSE TestFunctional/parallel/StatusCmd\n"}
{"Time":"2020-07-21T00:34:41.287107668-07:00","Action":"pause","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2020-07-21T00:34:41.287111267-07:00","Action":"run","Test":"TestFunctional/parallel/LogsCmd"}
{"Time":"2020-07-21T00:34:41.287114687-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"=== RUN   TestFunctional/parallel/LogsCmd\n"}
{"Time":"2020-07-21T00:34:41.287118637-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"=== PAUSE TestFunctional/parallel/LogsCmd\n"}
{"Time":"2020-07-21T00:34:41.287122239-07:00","Action":"pause","Test":"TestFunctional/parallel/LogsCmd"}
{"Time":"2020-07-21T00:34:41.287128001-07:00","Action":"run","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.287131421-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== RUN   TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.287135359-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== PAUSE TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.287138878-07:00","Action":"pause","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.287142494-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2020-07-21T00:34:41.287145918-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== RUN   TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2020-07-21T00:34:41.287149852-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== PAUSE TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2020-07-21T00:34:41.287153372-07:00","Action":"pause","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2020-07-21T00:34:41.28715697-07:00","Action":"run","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2020-07-21T00:34:41.287160509-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== RUN   TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2020-07-21T00:34:41.287164424-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== PAUSE TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2020-07-21T00:34:41.287170949-07:00","Action":"pause","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2020-07-21T00:34:41.287174676-07:00","Action":"run","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2020-07-21T00:34:41.287178072-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== RUN   TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2020-07-21T00:34:41.287184151-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== PAUSE TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2020-07-21T00:34:41.28718781-07:00","Action":"pause","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2020-07-21T00:34:41.28719138-07:00","Action":"run","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2020-07-21T00:34:41.287194841-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== RUN   TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2020-07-21T00:34:41.287198849-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== PAUSE TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2020-07-21T00:34:41.287202481-07:00","Action":"pause","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2020-07-21T00:34:41.287206087-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2020-07-21T00:34:41.287209529-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== RUN   TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2020-07-21T00:34:41.287213411-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== PAUSE TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2020-07-21T00:34:41.287216914-07:00","Action":"pause","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2020-07-21T00:34:41.287220466-07:00","Action":"run","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2020-07-21T00:34:41.287223867-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== RUN   TestFunctional/parallel/SSHCmd\n"}
{"Time":"2020-07-21T00:34:41.287227827-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== PAUSE TestFunctional/parallel/SSHCmd\n"}
{"Time":"2020-07-21T00:34:41.287231375-07:00","Action":"pause","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2020-07-21T00:34:41.287234974-07:00","Action":"run","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.287238378-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== RUN   TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.287242938-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== PAUSE TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.287249871-07:00","Action":"pause","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.287253442-07:00","Action":"run","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2020-07-21T00:34:41.287263195-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== RUN   TestFunctional/parallel/FileSync\n"}
{"Time":"2020-07-21T00:34:41.287267299-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== PAUSE TestFunctional/parallel/FileSync\n"}
{"Time":"2020-07-21T00:34:41.287301743-07:00","Action":"pause","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2020-07-21T00:34:41.287309435-07:00","Action":"run","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2020-07-21T00:34:41.287315104-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== RUN   TestFunctional/parallel/CertSync\n"}
{"Time":"2020-07-21T00:34:41.287321315-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== PAUSE TestFunctional/parallel/CertSync\n"}
{"Time":"2020-07-21T00:34:41.287326873-07:00","Action":"pause","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2020-07-21T00:34:41.287331176-07:00","Action":"run","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2020-07-21T00:34:41.287334667-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== RUN   TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2020-07-21T00:34:41.287342634-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== PAUSE TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2020-07-21T00:34:41.287346449-07:00","Action":"pause","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2020-07-21T00:34:41.28735008-07:00","Action":"run","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2020-07-21T00:34:41.287353653-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== RUN   TestFunctional/parallel/DockerEnv\n"}
{"Time":"2020-07-21T00:34:41.287357692-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== PAUSE TestFunctional/parallel/DockerEnv\n"}
{"Time":"2020-07-21T00:34:41.287365047-07:00","Action":"pause","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2020-07-21T00:34:41.287368748-07:00","Action":"run","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2020-07-21T00:34:41.287372204-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== RUN   TestFunctional/parallel/NodeLabels\n"}
{"Time":"2020-07-21T00:34:41.2873762-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== PAUSE TestFunctional/parallel/NodeLabels\n"}
{"Time":"2020-07-21T00:34:41.287379786-07:00","Action":"pause","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2020-07-21T00:34:41.287383526-07:00","Action":"cont","Test":"TestErrorSpam"}
{"Time":"2020-07-21T00:34:41.287387212-07:00","Action":"output","Test":"TestErrorSpam","Output":"=== CONT  TestErrorSpam\n"}
{"Time":"2020-07-21T00:34:41.287391096-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:58: (dbg) Run:  out/minikube-linux-amd64 start -p nospam-20200721001837-23787 -n=1 --memory=2250 --wait=false --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.28739539-07:00","Action":"output","Test":"TestErrorSpam","Output":"    \u003e docker-machine-driver-kvm2.sha256: 65 B / 65 B [-------] 100.00% ? p/s 0s    \u003e docker-machine-driver-kvm2: 27.35 MiB / 48.57 MiB [---\u003e__] 56.31% ? p/s ?    \u003e docker-machine-driver-kvm2: 46.45 MiB / 48.57 MiB [-----\u003e] 95.63% ? p/s ?    \u003e docker-machine-driver-kvm2: 48.57 MiB / 48.57 MiB  100.00% 218.14 MiB p/s    \u003e docker-machine-driver-kvm2.sha256: 65 B / 65 B [-------] 100.00% ? p/s 0s    \u003e docker-machine-driver-kvm2: 22.95 MiB / 48.57 MiB [--\u003e___] 47.25% ? p/s ?    \u003e docker-machine-driver-kvm2: 42.04 MiB / 48.57 MiB [-----\u003e] 86.54% ? p/s ?    \u003e docker-machine-driver-kvm2: 48.57 MiB / 48.57 MiB  100.00% 180.14 MiB p/s--- PASS: TestKVMDriverInstallOrUpdate (2.75s)\n"}
{"Time":"2020-07-21T00:34:41.287405778-07:00","Action":"cont","Test":"TestForceSystemdFlag"}
{"Time":"2020-07-21T00:34:41.287414877-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== CONT  TestForceSystemdFlag\n"}
{"Time":"2020-07-21T00:34:41.287418963-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p force-systemd-flag-20200721001839-23787 --memory=1800 --force-systemd --alsologtostderr -v=5 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.287423234-07:00","Action":"cont","Test":"TestCertOptions"}
{"Time":"2020-07-21T00:34:41.28742672-07:00","Action":"output","Test":"TestCertOptions","Output":"=== CONT  TestCertOptions\n"}
{"Time":"2020-07-21T00:34:41.287430592-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:46: (dbg) Done: out/minikube-linux-amd64 start -p cert-options-20200721001837-23787 --memory=1900 --apiserver-ips=127.0.0.1 --apiserver-ips=192.168.15.15 --apiserver-names=localhost --apiserver-names=www.google.com --apiserver-port=8555 --driver=docker : (48.768292929s)\n"}
{"Time":"2020-07-21T00:34:41.2874351-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:57: (dbg) Run:  out/minikube-linux-amd64 -p cert-options-20200721001837-23787 ssh \"openssl x509 -text -noout -in /var/lib/minikube/certs/apiserver.crt\"\n"}
{"Time":"2020-07-21T00:34:41.287447986-07:00","Action":"output","Test":"TestCertOptions","Output":"    cert_options_test.go:72: (dbg) Run:  kubectl --context cert-options-20200721001837-23787 config view\n"}
{"Time":"2020-07-21T00:34:41.287452128-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:170: Cleaning up \"cert-options-20200721001837-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.287463607-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p cert-options-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.28746992-07:00","Action":"output","Test":"TestCertOptions","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p cert-options-20200721001837-23787: (2.812117225s)\n"}
{"Time":"2020-07-21T00:34:41.287474821-07:00","Action":"output","Test":"TestCertOptions","Output":"--- PASS: TestCertOptions (52.06s)\n"}
{"Time":"2020-07-21T00:34:41.28747874-07:00","Action":"pass","Test":"TestCertOptions","Elapsed":52.06}
{"Time":"2020-07-21T00:34:41.287482704-07:00","Action":"cont","Test":"TestForceSystemdEnv"}
{"Time":"2020-07-21T00:34:41.287486209-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== CONT  TestForceSystemdEnv\n"}
{"Time":"2020-07-21T00:34:41.28748996-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:108: (dbg) Run:  out/minikube-linux-amd64 start -p force-systemd-env-20200721001929-23787 --memory=1800 --alsologtostderr -v=5 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.287494129-07:00","Action":"cont","Test":"TestErrorSpam"}
{"Time":"2020-07-21T00:34:41.287497537-07:00","Action":"output","Test":"TestErrorSpam","Output":"=== CONT  TestErrorSpam\n"}
{"Time":"2020-07-21T00:34:41.287501281-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:58: (dbg) Done: out/minikube-linux-amd64 start -p nospam-20200721001837-23787 -n=1 --memory=2250 --wait=false --driver=docker : (1m4.003988902s)\n"}
{"Time":"2020-07-21T00:34:41.287505317-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:77: unexpected stderr: \"! 'docker' driver reported a issue that could affect the performance.\"\n"}
{"Time":"2020-07-21T00:34:41.287509288-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:77: unexpected stderr: \"* Suggestion: enable overlayfs kernel module on your Linux\"\n"}
{"Time":"2020-07-21T00:34:41.287513201-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:91: minikube stdout:\n"}
{"Time":"2020-07-21T00:34:41.28751708-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * [nospam-20200721001837-23787] minikube v1.12.1 on Debian 9.13\n"}
{"Time":"2020-07-21T00:34:41.287521374-07:00","Action":"output","Test":"TestErrorSpam","Output":"          - KUBECONFIG=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/kubeconfig\n"}
{"Time":"2020-07-21T00:34:41.287530613-07:00","Action":"output","Test":"TestErrorSpam","Output":"          - MINIKUBE_BIN=out/minikube-linux-amd64\n"}
{"Time":"2020-07-21T00:34:41.287534531-07:00","Action":"output","Test":"TestErrorSpam","Output":"          - MINIKUBE_HOME=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube\n"}
{"Time":"2020-07-21T00:34:41.287538516-07:00","Action":"output","Test":"TestErrorSpam","Output":"          - MINIKUBE_LOCATION=8786\n"}
{"Time":"2020-07-21T00:34:41.287542272-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Using the docker driver based on user configuration\n"}
{"Time":"2020-07-21T00:34:41.287546017-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Starting control plane node nospam-20200721001837-23787 in cluster nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.287553672-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Creating docker container (CPUs=2, Memory=2250MB) ...\n"}
{"Time":"2020-07-21T00:34:41.287557605-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Preparing Kubernetes v1.18.3 on Docker 19.03.2 ...\n"}
{"Time":"2020-07-21T00:34:41.287561363-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Verifying Kubernetes components...\n"}
{"Time":"2020-07-21T00:34:41.287565145-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Enabled addons: default-storageclass, storage-provisioner\n"}
{"Time":"2020-07-21T00:34:41.287569026-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Done! kubectl is now configured to use \"nospam-20200721001837-23787\"\n"}
{"Time":"2020-07-21T00:34:41.287573007-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:92: minikube stderr:\n"}
{"Time":"2020-07-21T00:34:41.287576859-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.287580589-07:00","Action":"output","Test":"TestErrorSpam","Output":"        ! 'docker' driver reported a issue that could affect the performance.\n"}
{"Time":"2020-07-21T00:34:41.287584443-07:00","Action":"output","Test":"TestErrorSpam","Output":"        * Suggestion: enable overlayfs kernel module on your Linux\n"}
{"Time":"2020-07-21T00:34:41.287588247-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.287591898-07:00","Action":"output","Test":"TestErrorSpam","Output":"    error_spam_test.go:94: *** TestErrorSpam FAILED at 2020-07-21 00:19:41.170124813 -0700 PDT m=+1024.071514805\n"}
{"Time":"2020-07-21T00:34:41.287595789-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:215: -----------------------post-mortem--------------------------------\n"}
{"Time":"2020-07-21T00:34:41.287599916-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:223: ======\u003e  post-mortem[TestErrorSpam]: docker inspect \u003c======\n"}
{"Time":"2020-07-21T00:34:41.287603938-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:224: (dbg) Run:  docker inspect nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.287607712-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:228: (dbg) docker inspect nospam-20200721001837-23787:\n"}
{"Time":"2020-07-21T00:34:41.287611494-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.287615222-07:00","Action":"output","Test":"TestErrorSpam","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.28761909-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t[\n"}
{"Time":"2020-07-21T00:34:41.287624989-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t    {\n"}
{"Time":"2020-07-21T00:34:41.287628897-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Id\": \"a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284\",\n"}
{"Time":"2020-07-21T00:34:41.28763321-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Created\": \"2020-07-21T07:18:47.275807876Z\",\n"}
{"Time":"2020-07-21T00:34:41.287637275-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Path\": \"/usr/local/bin/entrypoint\",\n"}
{"Time":"2020-07-21T00:34:41.287641349-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Args\": [\n"}
{"Time":"2020-07-21T00:34:41.287645194-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"/sbin/init\"\n"}
{"Time":"2020-07-21T00:34:41.287649034-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        ],\n"}
{"Time":"2020-07-21T00:34:41.287652783-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"State\": {\n"}
{"Time":"2020-07-21T00:34:41.287656884-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Status\": \"running\",\n"}
{"Time":"2020-07-21T00:34:41.287667789-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Running\": true,\n"}
{"Time":"2020-07-21T00:34:41.287671943-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Paused\": false,\n"}
{"Time":"2020-07-21T00:34:41.287675798-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Restarting\": false,\n"}
{"Time":"2020-07-21T00:34:41.287679643-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"OOMKilled\": false,\n"}
{"Time":"2020-07-21T00:34:41.287686091-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Dead\": false,\n"}
{"Time":"2020-07-21T00:34:41.287690117-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Pid\": 26324,\n"}
{"Time":"2020-07-21T00:34:41.287693919-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ExitCode\": 0,\n"}
{"Time":"2020-07-21T00:34:41.287697714-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Error\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287701594-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"StartedAt\": \"2020-07-21T07:18:47.781604465Z\",\n"}
{"Time":"2020-07-21T00:34:41.287705586-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"FinishedAt\": \"0001-01-01T00:00:00Z\"\n"}
{"Time":"2020-07-21T00:34:41.287709563-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        },\n"}
{"Time":"2020-07-21T00:34:41.287713323-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Image\": \"sha256:e6bc41c39dc48b2b472936db36aedb28527ce0f675ed1bc20d029125c9ccf578\",\n"}
{"Time":"2020-07-21T00:34:41.28771746-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"ResolvConfPath\": \"/var/lib/docker/containers/a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284/resolv.conf\",\n"}
{"Time":"2020-07-21T00:34:41.287721672-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"HostnamePath\": \"/var/lib/docker/containers/a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284/hostname\",\n"}
{"Time":"2020-07-21T00:34:41.287725866-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"HostsPath\": \"/var/lib/docker/containers/a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284/hosts\",\n"}
{"Time":"2020-07-21T00:34:41.287729994-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"LogPath\": \"/var/lib/docker/containers/a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284/a12ddbb36b26d329f4cc85f8ca8055638f000f0677d3a0ef4684319860b16284-json.log\",\n"}
{"Time":"2020-07-21T00:34:41.287734343-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Name\": \"/nospam-20200721001837-23787\",\n"}
{"Time":"2020-07-21T00:34:41.287738244-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"RestartCount\": 0,\n"}
{"Time":"2020-07-21T00:34:41.287742074-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Driver\": \"overlay2\",\n"}
{"Time":"2020-07-21T00:34:41.287746022-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Platform\": \"linux\",\n"}
{"Time":"2020-07-21T00:34:41.287749982-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"MountLabel\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287753824-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"ProcessLabel\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287757677-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"AppArmorProfile\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287761471-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"ExecIDs\": null,\n"}
{"Time":"2020-07-21T00:34:41.287765266-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"HostConfig\": {\n"}
{"Time":"2020-07-21T00:34:41.287772306-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Binds\": [\n"}
{"Time":"2020-07-21T00:34:41.287776232-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"/lib/modules:/lib/modules:ro\",\n"}
{"Time":"2020-07-21T00:34:41.287780191-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"nospam-20200721001837-23787:/var\"\n"}
{"Time":"2020-07-21T00:34:41.287784104-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            ],\n"}
{"Time":"2020-07-21T00:34:41.287787855-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ContainerIDFile\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287791674-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"LogConfig\": {\n"}
{"Time":"2020-07-21T00:34:41.287797669-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Type\": \"json-file\",\n"}
{"Time":"2020-07-21T00:34:41.287801586-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Config\": {}\n"}
{"Time":"2020-07-21T00:34:41.287805477-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.287809178-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"NetworkMode\": \"default\",\n"}
{"Time":"2020-07-21T00:34:41.2878131-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"PortBindings\": {\n"}
{"Time":"2020-07-21T00:34:41.287819449-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"22/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.287823543-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.287827415-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.287831335-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.287835251-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.28783967-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.287843541-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"2376/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.28784734-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.287851039-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.287854894-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.287861077-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.287864807-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.28786855-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"5000/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.2878724-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.287876106-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.287879924-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.287883804-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.287892447-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.287897015-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"8443/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.287905869-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.287909874-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.287913797-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.28791763-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.287921329-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ]\n"}
{"Time":"2020-07-21T00:34:41.28792513-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.287928858-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"RestartPolicy\": {\n"}
{"Time":"2020-07-21T00:34:41.287932651-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Name\": \"no\",\n"}
{"Time":"2020-07-21T00:34:41.287936705-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"MaximumRetryCount\": 0\n"}
{"Time":"2020-07-21T00:34:41.287940646-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.287944344-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"AutoRemove\": false,\n"}
{"Time":"2020-07-21T00:34:41.287948103-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"VolumeDriver\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287951981-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"VolumesFrom\": null,\n"}
{"Time":"2020-07-21T00:34:41.287955776-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CapAdd\": null,\n"}
{"Time":"2020-07-21T00:34:41.287959569-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CapDrop\": null,\n"}
{"Time":"2020-07-21T00:34:41.287963356-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Capabilities\": null,\n"}
{"Time":"2020-07-21T00:34:41.287967191-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Dns\": [],\n"}
{"Time":"2020-07-21T00:34:41.287970974-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"DnsOptions\": [],\n"}
{"Time":"2020-07-21T00:34:41.287974734-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"DnsSearch\": [],\n"}
{"Time":"2020-07-21T00:34:41.287978581-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ExtraHosts\": null,\n"}
{"Time":"2020-07-21T00:34:41.287982424-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"GroupAdd\": null,\n"}
{"Time":"2020-07-21T00:34:41.287986219-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IpcMode\": \"private\",\n"}
{"Time":"2020-07-21T00:34:41.287990087-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Cgroup\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.287993977-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Links\": null,\n"}
{"Time":"2020-07-21T00:34:41.287997883-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"OomScoreAdj\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288004661-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"PidMode\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288008658-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Privileged\": true,\n"}
{"Time":"2020-07-21T00:34:41.288015275-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"PublishAllPorts\": false,\n"}
{"Time":"2020-07-21T00:34:41.288019254-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ReadonlyRootfs\": false,\n"}
{"Time":"2020-07-21T00:34:41.288023049-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"SecurityOpt\": [\n"}
{"Time":"2020-07-21T00:34:41.288026827-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"seccomp=unconfined\",\n"}
{"Time":"2020-07-21T00:34:41.288030822-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"apparmor=unconfined\",\n"}
{"Time":"2020-07-21T00:34:41.28803482-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"label=disable\"\n"}
{"Time":"2020-07-21T00:34:41.288038798-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            ],\n"}
{"Time":"2020-07-21T00:34:41.288042522-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Tmpfs\": {\n"}
{"Time":"2020-07-21T00:34:41.288046269-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"/run\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288050067-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"/tmp\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.288053884-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288057544-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"UTSMode\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288061332-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"UsernsMode\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288065358-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ShmSize\": 67108864,\n"}
{"Time":"2020-07-21T00:34:41.28806932-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Runtime\": \"runc\",\n"}
{"Time":"2020-07-21T00:34:41.288073347-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ConsoleSize\": [\n"}
{"Time":"2020-07-21T00:34:41.288077119-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                0,\n"}
{"Time":"2020-07-21T00:34:41.28808088-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                0\n"}
{"Time":"2020-07-21T00:34:41.288084651-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            ],\n"}
{"Time":"2020-07-21T00:34:41.288088426-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Isolation\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288092287-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuShares\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288096115-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Memory\": 2359296000,\n"}
{"Time":"2020-07-21T00:34:41.288099914-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"NanoCpus\": 2000000000,\n"}
{"Time":"2020-07-21T00:34:41.288103704-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CgroupParent\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.28810973-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioWeight\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288113764-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioWeightDevice\": [],\n"}
{"Time":"2020-07-21T00:34:41.288117602-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioDeviceReadBps\": null,\n"}
{"Time":"2020-07-21T00:34:41.288121521-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioDeviceWriteBps\": null,\n"}
{"Time":"2020-07-21T00:34:41.288125355-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioDeviceReadIOps\": null,\n"}
{"Time":"2020-07-21T00:34:41.288132957-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"BlkioDeviceWriteIOps\": null,\n"}
{"Time":"2020-07-21T00:34:41.288140372-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuPeriod\": 0,\n"}
{"Time":"2020-07-21T00:34:41.28814427-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuQuota\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288148034-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuRealtimePeriod\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288151828-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuRealtimeRuntime\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288155629-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpusetCpus\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.28815951-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpusetMems\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288163369-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Devices\": [],\n"}
{"Time":"2020-07-21T00:34:41.288169572-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"DeviceCgroupRules\": null,\n"}
{"Time":"2020-07-21T00:34:41.288173418-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"DeviceRequests\": null,\n"}
{"Time":"2020-07-21T00:34:41.288180174-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"KernelMemory\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288183983-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"KernelMemoryTCP\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288190384-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"MemoryReservation\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288194252-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"MemorySwap\": -1,\n"}
{"Time":"2020-07-21T00:34:41.288198054-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"MemorySwappiness\": null,\n"}
{"Time":"2020-07-21T00:34:41.288201872-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"OomKillDisable\": false,\n"}
{"Time":"2020-07-21T00:34:41.288205632-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"PidsLimit\": null,\n"}
{"Time":"2020-07-21T00:34:41.288209395-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Ulimits\": null,\n"}
{"Time":"2020-07-21T00:34:41.288213134-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuCount\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288217103-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"CpuPercent\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288220901-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IOMaximumIOps\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288224786-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IOMaximumBandwidth\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288228569-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"MaskedPaths\": null,\n"}
{"Time":"2020-07-21T00:34:41.288232345-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ReadonlyPaths\": null\n"}
{"Time":"2020-07-21T00:34:41.288236146-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        },\n"}
{"Time":"2020-07-21T00:34:41.288242077-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"GraphDriver\": {\n"}
{"Time":"2020-07-21T00:34:41.288248304-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Data\": {\n"}
{"Time":"2020-07-21T00:34:41.288253149-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"LowerDir\": \"/var/lib/docker/overlay2/d769de1614b2c34b3b1e90f00f5d79a344afbb8ac66ff5e0dc24fc9a187c8ac0-init/diff:/var/lib/docker/overlay2/842cfb80f5123bafae2466fc7efa639aa41e065f3255b19f9debf027ea5ee70f/diff:/var/lib/docker/overlay2/52955c8ec40656be74515789d00b745e87d9b7fef6138e7b17a5363a06dbcfa5/diff:/var/lib/docker/overlay2/03cddd8e08a064f361b14f4944cfb79c7f8046479d95520269069705f7ab0528/diff:/var/lib/docker/overlay2/c64285a2182b3e7c4c0b57464030adbef4778934f113881df08564634b1f6221/diff:/var/lib/docker/overlay2/90f13b458ed1b350c6216e1ace4dd61d3d2d9dfee23ffc01aa7c9bb98bd421f6/diff:/var/lib/docker/overlay2/fe1683c816f3c3398f9921579d07f6c594583c7c0e5afad822f05cb5888c1268/diff:/var/lib/docker/overlay2/10612719aad9c166640f8cee6edd67101fe099610e2f6c88fcb61b31af35fd9d/diff:/var/lib/docker/overlay2/7c4cc5926eeaa0fefbc7d4a40004d880251629462c856500bafda9daac74d118/diff:/var/lib/docker/overlay2/9aa9a9f3601aea1f46ee059e5089e93043b90fd2fd30e3cd2d15f9183becf2a5/diff:/var/lib/docker/overlay2/5b620b"}
{"Time":"2020-07-21T00:34:41.288265909-07:00","Action":"output","Test":"TestErrorSpam","Output":"7b826525fd3203105b70fc1df648dcf00d91b123f32977d15a9aa24d42/diff:/var/lib/docker/overlay2/430918b4b183807894e9422553842dab55b537cc61905b96da054e1bd70225c3/diff:/var/lib/docker/overlay2/487a49458a3b877836066ca9e28d566b97e11dcaeaaa3b2645fb4c57d9e4322f/diff:/var/lib/docker/overlay2/02a4aa873547c0f7358529bad7f6983f4ae79dda4704251d86f5cffd924ecc22/diff:/var/lib/docker/overlay2/57242607bb68a1205e6073d4d78984d3a8ca810645de93f0578d911ff171e91f/diff:/var/lib/docker/overlay2/f7b86afeb24318436caa8fb2ecc416589f3e02ddec1addf6f367987b50ec4671/diff:/var/lib/docker/overlay2/f18bbd9e4f03562d739288185addb9e977807f3f93d0637976cc612e9e703752/diff:/var/lib/docker/overlay2/4a3511ac2d9c89e7a38909f5646b9a5983e5fbd4b20269aa0a438365ac9d960a/diff:/var/lib/docker/overlay2/3a357f9db4e41d2c676e3426a10c5404f0d121c954ac8cae7b1d34babb42323e/diff:/var/lib/docker/overlay2/422f1db82f9e94b7c185a899dfd8d725528b6ffa7b344759697faeae9246dd79/diff:/var/lib/docker/overlay2/135303c7fde9f4ebf5c3b0dfd5d9bc4a70c2bd3d259345543f4b85328bf5afab/diff:/var/lib/d"}
{"Time":"2020-07-21T00:34:41.288272025-07:00","Action":"output","Test":"TestErrorSpam","Output":"ocker/overlay2/54798ffee37e6b1949e5e9cb69ea12f7d2fceb53b37445ea1739701a82bae4f3/diff:/var/lib/docker/overlay2/f0432ec26d1b881669832c1d9e9179a47fd26f19eb4ddfba1232f2c00b978c33/diff\",\n"}
{"Time":"2020-07-21T00:34:41.288278571-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"MergedDir\": \"/var/lib/docker/overlay2/d769de1614b2c34b3b1e90f00f5d79a344afbb8ac66ff5e0dc24fc9a187c8ac0/merged\",\n"}
{"Time":"2020-07-21T00:34:41.288282848-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"UpperDir\": \"/var/lib/docker/overlay2/d769de1614b2c34b3b1e90f00f5d79a344afbb8ac66ff5e0dc24fc9a187c8ac0/diff\",\n"}
{"Time":"2020-07-21T00:34:41.288287084-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"WorkDir\": \"/var/lib/docker/overlay2/d769de1614b2c34b3b1e90f00f5d79a344afbb8ac66ff5e0dc24fc9a187c8ac0/work\"\n"}
{"Time":"2020-07-21T00:34:41.288293403-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288297169-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Name\": \"overlay2\"\n"}
{"Time":"2020-07-21T00:34:41.288301138-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        },\n"}
{"Time":"2020-07-21T00:34:41.288304907-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Mounts\": [\n"}
{"Time":"2020-07-21T00:34:41.288308744-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            {\n"}
{"Time":"2020-07-21T00:34:41.28831256-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Type\": \"bind\",\n"}
{"Time":"2020-07-21T00:34:41.288316461-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Source\": \"/lib/modules\",\n"}
{"Time":"2020-07-21T00:34:41.288323145-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Destination\": \"/lib/modules\",\n"}
{"Time":"2020-07-21T00:34:41.288327263-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Mode\": \"ro\",\n"}
{"Time":"2020-07-21T00:34:41.288331214-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"RW\": false,\n"}
{"Time":"2020-07-21T00:34:41.28833503-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Propagation\": \"rprivate\"\n"}
{"Time":"2020-07-21T00:34:41.288338926-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288342646-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            {\n"}
{"Time":"2020-07-21T00:34:41.288349024-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Type\": \"volume\",\n"}
{"Time":"2020-07-21T00:34:41.288353116-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Name\": \"nospam-20200721001837-23787\",\n"}
{"Time":"2020-07-21T00:34:41.288357084-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Source\": \"/var/lib/docker/volumes/nospam-20200721001837-23787/_data\",\n"}
{"Time":"2020-07-21T00:34:41.288361052-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Destination\": \"/var\",\n"}
{"Time":"2020-07-21T00:34:41.288364902-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Driver\": \"local\",\n"}
{"Time":"2020-07-21T00:34:41.288368768-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Mode\": \"z\",\n"}
{"Time":"2020-07-21T00:34:41.288372601-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"RW\": true,\n"}
{"Time":"2020-07-21T00:34:41.288376386-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"Propagation\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.288380224-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            }\n"}
{"Time":"2020-07-21T00:34:41.288383923-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        ],\n"}
{"Time":"2020-07-21T00:34:41.288387603-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"Config\": {\n"}
{"Time":"2020-07-21T00:34:41.288391396-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Hostname\": \"nospam-20200721001837-23787\",\n"}
{"Time":"2020-07-21T00:34:41.288395266-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Domainname\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288399151-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"User\": \"root\",\n"}
{"Time":"2020-07-21T00:34:41.288402965-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"AttachStdin\": false,\n"}
{"Time":"2020-07-21T00:34:41.288406782-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"AttachStdout\": false,\n"}
{"Time":"2020-07-21T00:34:41.288417235-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"AttachStderr\": false,\n"}
{"Time":"2020-07-21T00:34:41.288421148-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"ExposedPorts\": {\n"}
{"Time":"2020-07-21T00:34:41.28842491-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"22/tcp\": {},\n"}
{"Time":"2020-07-21T00:34:41.288428702-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"2376/tcp\": {},\n"}
{"Time":"2020-07-21T00:34:41.288432546-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"5000/tcp\": {},\n"}
{"Time":"2020-07-21T00:34:41.288436423-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"8443/tcp\": {}\n"}
{"Time":"2020-07-21T00:34:41.288443113-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288447269-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Tty\": true,\n"}
{"Time":"2020-07-21T00:34:41.28845373-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"OpenStdin\": false,\n"}
{"Time":"2020-07-21T00:34:41.288457738-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"StdinOnce\": false,\n"}
{"Time":"2020-07-21T00:34:41.28846163-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Env\": [\n"}
{"Time":"2020-07-21T00:34:41.288465461-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"container=docker\",\n"}
{"Time":"2020-07-21T00:34:41.28846933-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n"}
{"Time":"2020-07-21T00:34:41.288473343-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            ],\n"}
{"Time":"2020-07-21T00:34:41.288477044-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Cmd\": null,\n"}
{"Time":"2020-07-21T00:34:41.28848095-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Image\": \"gcr.io/k8s-minikube/kicbase:v0.0.10@sha256:f58e0c4662bac8a9b5dda7984b185bad8502ade5d9fa364bf2755d636ab51438\",\n"}
{"Time":"2020-07-21T00:34:41.288485087-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Volumes\": null,\n"}
{"Time":"2020-07-21T00:34:41.28848882-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"WorkingDir\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288492688-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Entrypoint\": [\n"}
{"Time":"2020-07-21T00:34:41.288496443-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"/usr/local/bin/entrypoint\",\n"}
{"Time":"2020-07-21T00:34:41.288500259-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"/sbin/init\"\n"}
{"Time":"2020-07-21T00:34:41.288504033-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            ],\n"}
{"Time":"2020-07-21T00:34:41.288507768-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"OnBuild\": null,\n"}
{"Time":"2020-07-21T00:34:41.288521378-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Labels\": {\n"}
{"Time":"2020-07-21T00:34:41.28852533-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"created_by.minikube.sigs.k8s.io\": \"true\",\n"}
{"Time":"2020-07-21T00:34:41.288529355-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"mode.minikube.sigs.k8s.io\": \"nospam-20200721001837-23787\",\n"}
{"Time":"2020-07-21T00:34:41.288533319-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"name.minikube.sigs.k8s.io\": \"nospam-20200721001837-23787\",\n"}
{"Time":"2020-07-21T00:34:41.28853717-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"role.minikube.sigs.k8s.io\": \"\"\n"}
{"Time":"2020-07-21T00:34:41.288544267-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288547942-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"StopSignal\": \"SIGRTMIN+3\"\n"}
{"Time":"2020-07-21T00:34:41.288551853-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        },\n"}
{"Time":"2020-07-21T00:34:41.288555513-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        \"NetworkSettings\": {\n"}
{"Time":"2020-07-21T00:34:41.288559326-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Bridge\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288567954-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"SandboxID\": \"da5f15fe22844cb241c9d12cd715b761cfb76e1baadf17722e584d99e9cbec2f\",\n"}
{"Time":"2020-07-21T00:34:41.288572157-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"HairpinMode\": false,\n"}
{"Time":"2020-07-21T00:34:41.288578122-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"LinkLocalIPv6Address\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288582167-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"LinkLocalIPv6PrefixLen\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288586116-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Ports\": {\n"}
{"Time":"2020-07-21T00:34:41.288592509-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"22/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.288596361-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.288606306-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.288699445-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"32995\"\n"}
{"Time":"2020-07-21T00:34:41.288703696-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.288707502-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.288711216-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"2376/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.288714971-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.288718617-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.288722544-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"32994\"\n"}
{"Time":"2020-07-21T00:34:41.288729419-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.288733225-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.288737318-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"5000/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.288741075-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.28874475-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.28874871-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"32993\"\n"}
{"Time":"2020-07-21T00:34:41.28875254-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.288756241-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ],\n"}
{"Time":"2020-07-21T00:34:41.288759893-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"8443/tcp\": [\n"}
{"Time":"2020-07-21T00:34:41.28876365-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    {\n"}
{"Time":"2020-07-21T00:34:41.288767278-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostIp\": \"127.0.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.288774613-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                        \"HostPort\": \"32992\"\n"}
{"Time":"2020-07-21T00:34:41.288778607-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    }\n"}
{"Time":"2020-07-21T00:34:41.288785914-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                ]\n"}
{"Time":"2020-07-21T00:34:41.288790012-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            },\n"}
{"Time":"2020-07-21T00:34:41.288793797-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"SandboxKey\": \"/var/run/docker/netns/da5f15fe2284\",\n"}
{"Time":"2020-07-21T00:34:41.288797864-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"SecondaryIPAddresses\": null,\n"}
{"Time":"2020-07-21T00:34:41.288801679-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"SecondaryIPv6Addresses\": null,\n"}
{"Time":"2020-07-21T00:34:41.288805535-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"EndpointID\": \"95cc2d287e683b244bbf2d4e015aef4a6f8596093839e31e589abca7e310e03b\",\n"}
{"Time":"2020-07-21T00:34:41.288809663-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Gateway\": \"172.17.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.288813574-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"GlobalIPv6Address\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288817373-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"GlobalIPv6PrefixLen\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288821135-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IPAddress\": \"172.17.0.5\",\n"}
{"Time":"2020-07-21T00:34:41.288825023-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IPPrefixLen\": 16,\n"}
{"Time":"2020-07-21T00:34:41.288831676-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"IPv6Gateway\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288835558-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"MacAddress\": \"02:42:ac:11:00:05\",\n"}
{"Time":"2020-07-21T00:34:41.288839401-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            \"Networks\": {\n"}
{"Time":"2020-07-21T00:34:41.288843255-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                \"bridge\": {\n"}
{"Time":"2020-07-21T00:34:41.288847073-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"IPAMConfig\": null,\n"}
{"Time":"2020-07-21T00:34:41.288850996-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"Links\": null,\n"}
{"Time":"2020-07-21T00:34:41.288854796-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"Aliases\": null,\n"}
{"Time":"2020-07-21T00:34:41.288858619-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"NetworkID\": \"a8c267af2474e5d1123e05feb11c6ef4e0f285299f94bef037cb694533f8cacb\",\n"}
{"Time":"2020-07-21T00:34:41.288862806-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"EndpointID\": \"95cc2d287e683b244bbf2d4e015aef4a6f8596093839e31e589abca7e310e03b\",\n"}
{"Time":"2020-07-21T00:34:41.288866798-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"Gateway\": \"172.17.0.1\",\n"}
{"Time":"2020-07-21T00:34:41.288870645-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"IPAddress\": \"172.17.0.5\",\n"}
{"Time":"2020-07-21T00:34:41.288874521-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"IPPrefixLen\": 16,\n"}
{"Time":"2020-07-21T00:34:41.288878291-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"IPv6Gateway\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288882136-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"GlobalIPv6Address\": \"\",\n"}
{"Time":"2020-07-21T00:34:41.288888981-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"GlobalIPv6PrefixLen\": 0,\n"}
{"Time":"2020-07-21T00:34:41.288895879-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"MacAddress\": \"02:42:ac:11:00:05\",\n"}
{"Time":"2020-07-21T00:34:41.288899949-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                    \"DriverOpts\": null\n"}
{"Time":"2020-07-21T00:34:41.288903934-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t                }\n"}
{"Time":"2020-07-21T00:34:41.288907758-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t            }\n"}
{"Time":"2020-07-21T00:34:41.288911469-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t        }\n"}
{"Time":"2020-07-21T00:34:41.288915294-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t    }\n"}
{"Time":"2020-07-21T00:34:41.288918981-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t]\n"}
{"Time":"2020-07-21T00:34:41.288922756-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.288926454-07:00","Action":"output","Test":"TestErrorSpam","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.288930274-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:232: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p nospam-20200721001837-23787 -n nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.288934297-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:237: \u003c\u003c\u003c TestErrorSpam FAILED: start of post-mortem logs \u003c\u003c\u003c\n"}
{"Time":"2020-07-21T00:34:41.28893859-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:238: ======\u003e  post-mortem[TestErrorSpam]: minikube logs \u003c======\n"}
{"Time":"2020-07-21T00:34:41.288942707-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:240: (dbg) Run:  out/minikube-linux-amd64 -p nospam-20200721001837-23787 logs -n 25\n"}
{"Time":"2020-07-21T00:34:41.288952028-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:240: (dbg) Done: out/minikube-linux-amd64 -p nospam-20200721001837-23787 logs -n 25: (2.596479812s)\n"}
{"Time":"2020-07-21T00:34:41.288956004-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:245: TestErrorSpam logs: \n"}
{"Time":"2020-07-21T00:34:41.288959754-07:00","Action":"output","Test":"TestErrorSpam","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.288963513-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e Docker \u003c==\n"}
{"Time":"2020-07-21T00:34:41.288967462-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* -- Logs begin at Tue 2020-07-21 07:18:48 UTC, end at Tue 2020-07-21 07:19:42 UTC. --\n"}
{"Time":"2020-07-21T00:34:41.28897189-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.629646301Z\" level=info msg=\"scheme \\\"unix\\\" not registered, fallback to default scheme\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.28897664-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.629671061Z\" level=info msg=\"ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock 0  \u003cnil\u003e}] }\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.28898141-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.629685544Z\" level=info msg=\"ClientConn switching balancer to \\\"pick_first\\\"\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.288985931-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.629781674Z\" level=info msg=\"pickfirstBalancer: HandleSubConnStateChange: 0xc0001d2ba0, CONNECTING\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.288993096-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.629825321Z\" level=info msg=\"blockingPicker: the picked transport is not ready, loop back to repick\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.288997531-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.630169090Z\" level=info msg=\"pickfirstBalancer: HandleSubConnStateChange: 0xc0001d2ba0, READY\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289001751-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.630973646Z\" level=info msg=\"parsed scheme: \\\"unix\\\"\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289006065-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631000652Z\" level=info msg=\"scheme \\\"unix\\\" not registered, fallback to default scheme\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289012845-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631015882Z\" level=info msg=\"ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock 0  \u003cnil\u003e}] }\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289017331-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631025447Z\" level=info msg=\"ClientConn switching balancer to \\\"pick_first\\\"\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289021774-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631083513Z\" level=info msg=\"pickfirstBalancer: HandleSubConnStateChange: 0xc0008ba410, CONNECTING\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289026038-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631096011Z\" level=info msg=\"blockingPicker: the picked transport is not ready, loop back to repick\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289030197-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.631388682Z\" level=info msg=\"pickfirstBalancer: HandleSubConnStateChange: 0xc0008ba410, READY\" module=grpc\n"}
{"Time":"2020-07-21T00:34:41.289042226-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.634400173Z\" level=info msg=\"[graphdriver] using prior storage driver: overlay2\"\n"}
{"Time":"2020-07-21T00:34:41.289046515-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.647700576Z\" level=warning msg=\"Your kernel does not support swap memory limit\"\n"}
{"Time":"2020-07-21T00:34:41.289050783-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.647733946Z\" level=warning msg=\"Your kernel does not support cgroup rt period\"\n"}
{"Time":"2020-07-21T00:34:41.289054992-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.647741419Z\" level=warning msg=\"Your kernel does not support cgroup rt runtime\"\n"}
{"Time":"2020-07-21T00:34:41.289059115-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.647901142Z\" level=info msg=\"Loading containers: start.\"\n"}
{"Time":"2020-07-21T00:34:41.2890665-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.771352326Z\" level=info msg=\"Default bridge (docker0) is assigned with an IP address 172.18.0.0/16. Daemon option --bip can be used to set a preferred IP address\"\n"}
{"Time":"2020-07-21T00:34:41.289071155-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.820903859Z\" level=info msg=\"Loading containers: done.\"\n"}
{"Time":"2020-07-21T00:34:41.289077465-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.860176639Z\" level=info msg=\"Docker daemon\" commit=6a30dfca03 graphdriver(s)=overlay2 version=19.03.2\n"}
{"Time":"2020-07-21T00:34:41.289082258-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.860246774Z\" level=info msg=\"Daemon has completed initialization\"\n"}
{"Time":"2020-07-21T00:34:41.289087032-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 systemd[1]: Started Docker Application Container Engine.\n"}
{"Time":"2020-07-21T00:34:41.28909101-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.874073911Z\" level=info msg=\"API listen on [::]:2376\"\n"}
{"Time":"2020-07-21T00:34:41.289095141-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:18:53 nospam-20200721001837-23787 dockerd[355]: time=\"2020-07-21T07:18:53.874060216Z\" level=info msg=\"API listen on /var/run/docker.sock\"\n"}
{"Time":"2020-07-21T00:34:41.289099231-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289102992-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e container status \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289107137-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID\n"}
{"Time":"2020-07-21T00:34:41.289111123-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 67d9fc8ce740c       303ce5db0e90d       21 seconds ago      Running             etcd                      0                   6801b30d3f1b3\n"}
{"Time":"2020-07-21T00:34:41.289115713-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 234ed30c83c54       da26705ccb4b5       21 seconds ago      Running             kube-controller-manager   0                   afcef86bc660e\n"}
{"Time":"2020-07-21T00:34:41.289122063-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 8e850d806e336       7e28efa976bd1       21 seconds ago      Running             kube-apiserver            0                   ac533af09ed0c\n"}
{"Time":"2020-07-21T00:34:41.289126038-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 8e615f25f8a52       76216c34ed0c7       22 seconds ago      Running             kube-scheduler            0                   931235a165e80\n"}
{"Time":"2020-07-21T00:34:41.289131967-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289135937-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e describe nodes \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289140233-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Name:               nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.289144158-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Roles:              master\n"}
{"Time":"2020-07-21T00:34:41.289150616-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Labels:             beta.kubernetes.io/arch=amd64\n"}
{"Time":"2020-07-21T00:34:41.289154581-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     beta.kubernetes.io/os=linux\n"}
{"Time":"2020-07-21T00:34:41.289158406-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     kubernetes.io/arch=amd64\n"}
{"Time":"2020-07-21T00:34:41.289162315-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     kubernetes.io/hostname=nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.289166196-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     kubernetes.io/os=linux\n"}
{"Time":"2020-07-21T00:34:41.28917276-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     minikube.k8s.io/commit=87f05341c1e0d7b14466d399e739fd428441ad65-dirty\n"}
{"Time":"2020-07-21T00:34:41.289176752-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     minikube.k8s.io/name=nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.289180641-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     minikube.k8s.io/updated_at=2020_07_21T00_19_39_0700\n"}
{"Time":"2020-07-21T00:34:41.289184545-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     minikube.k8s.io/version=v1.12.1\n"}
{"Time":"2020-07-21T00:34:41.289188603-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     node-role.kubernetes.io/master=\n"}
{"Time":"2020-07-21T00:34:41.289192453-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock\n"}
{"Time":"2020-07-21T00:34:41.289196417-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*                     volumes.kubernetes.io/controller-managed-attach-detach: true\n"}
{"Time":"2020-07-21T00:34:41.289200232-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* CreationTimestamp:  Tue, 21 Jul 2020 07:19:29 +0000\n"}
{"Time":"2020-07-21T00:34:41.289204015-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Taints:             node.kubernetes.io/not-ready:NoSchedule\n"}
{"Time":"2020-07-21T00:34:41.289207806-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Unschedulable:      false\n"}
{"Time":"2020-07-21T00:34:41.289211587-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Lease:\n"}
{"Time":"2020-07-21T00:34:41.289215271-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   HolderIdentity:  nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.289219029-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   AcquireTime:     \u003cunset\u003e\n"}
{"Time":"2020-07-21T00:34:41.289222902-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   RenewTime:       Tue, 21 Jul 2020 07:19:39 +0000\n"}
{"Time":"2020-07-21T00:34:41.289226674-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Conditions:\n"}
{"Time":"2020-07-21T00:34:41.289230484-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n"}
{"Time":"2020-07-21T00:34:41.289234472-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ----             ------  -----------------                 ------------------                ------                       -------\n"}
{"Time":"2020-07-21T00:34:41.289238577-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   MemoryPressure   False   Tue, 21 Jul 2020 07:19:40 +0000   Tue, 21 Jul 2020 07:19:28 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n"}
{"Time":"2020-07-21T00:34:41.289242828-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   DiskPressure     False   Tue, 21 Jul 2020 07:19:40 +0000   Tue, 21 Jul 2020 07:19:28 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n"}
{"Time":"2020-07-21T00:34:41.289257928-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   PIDPressure      False   Tue, 21 Jul 2020 07:19:40 +0000   Tue, 21 Jul 2020 07:19:28 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n"}
{"Time":"2020-07-21T00:34:41.289262435-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Ready            False   Tue, 21 Jul 2020 07:19:40 +0000   Tue, 21 Jul 2020 07:19:40 +0000   KubeletNotReady              container runtime status check may not have completed yet\n"}
{"Time":"2020-07-21T00:34:41.289266512-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Addresses:\n"}
{"Time":"2020-07-21T00:34:41.289270242-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   InternalIP:  172.17.0.5\n"}
{"Time":"2020-07-21T00:34:41.289274025-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Hostname:    nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.289277824-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Capacity:\n"}
{"Time":"2020-07-21T00:34:41.289281522-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   cpu:                8\n"}
{"Time":"2020-07-21T00:34:41.289285312-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ephemeral-storage:  515928484Ki\n"}
{"Time":"2020-07-21T00:34:41.289289071-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-1Gi:      0\n"}
{"Time":"2020-07-21T00:34:41.289292884-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-2Mi:      0\n"}
{"Time":"2020-07-21T00:34:41.289296692-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   memory:             30887004Ki\n"}
{"Time":"2020-07-21T00:34:41.289300693-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   pods:               110\n"}
{"Time":"2020-07-21T00:34:41.28930452-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Allocatable:\n"}
{"Time":"2020-07-21T00:34:41.289308274-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   cpu:                8\n"}
{"Time":"2020-07-21T00:34:41.289311944-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ephemeral-storage:  515928484Ki\n"}
{"Time":"2020-07-21T00:34:41.289315713-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-1Gi:      0\n"}
{"Time":"2020-07-21T00:34:41.289321899-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-2Mi:      0\n"}
{"Time":"2020-07-21T00:34:41.289325619-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   memory:             30887004Ki\n"}
{"Time":"2020-07-21T00:34:41.289329413-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   pods:               110\n"}
{"Time":"2020-07-21T00:34:41.289333136-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* System Info:\n"}
{"Time":"2020-07-21T00:34:41.289336891-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Machine ID:                 d22f0068b79b4dc88991ebeee2c2efc4\n"}
{"Time":"2020-07-21T00:34:41.289340749-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   System UUID:                57061529-ce4b-4304-930a-7caf412c9f96\n"}
{"Time":"2020-07-21T00:34:41.289344578-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Boot ID:                    2d097853-6484-427a-9d55-f548cafd47d6\n"}
{"Time":"2020-07-21T00:34:41.28935103-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Kernel Version:             4.9.0-13-amd64\n"}
{"Time":"2020-07-21T00:34:41.289355125-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   OS Image:                   Ubuntu 19.10\n"}
{"Time":"2020-07-21T00:34:41.289361916-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Operating System:           linux\n"}
{"Time":"2020-07-21T00:34:41.289365805-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Architecture:               amd64\n"}
{"Time":"2020-07-21T00:34:41.289369549-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Container Runtime Version:  docker://19.3.2\n"}
{"Time":"2020-07-21T00:34:41.289373306-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Kubelet Version:            v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.289377061-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Kube-Proxy Version:         v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.289380796-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Non-terminated Pods:          (4 in total)\n"}
{"Time":"2020-07-21T00:34:41.289384611-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Namespace                   Name                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE\n"}
{"Time":"2020-07-21T00:34:41.289388672-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ---------                   ----                                                   ------------  ----------  ---------------  -------------  ---\n"}
{"Time":"2020-07-21T00:34:41.289392794-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   kube-system                 etcd-nospam-20200721001837-23787                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n"}
{"Time":"2020-07-21T00:34:41.289399147-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   kube-system                 kube-apiserver-nospam-20200721001837-23787             250m (3%)     0 (0%)      0 (0%)           0 (0%)         2s\n"}
{"Time":"2020-07-21T00:34:41.289403153-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   kube-system                 kube-controller-manager-nospam-20200721001837-23787    200m (2%)     0 (0%)      0 (0%)           0 (0%)         2s\n"}
{"Time":"2020-07-21T00:34:41.289407118-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   kube-system                 kube-scheduler-nospam-20200721001837-23787             100m (1%)     0 (0%)      0 (0%)           0 (0%)         2s\n"}
{"Time":"2020-07-21T00:34:41.28941876-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Allocated resources:\n"}
{"Time":"2020-07-21T00:34:41.289425841-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   (Total limits may be over 100 percent, i.e., overcommitted.)\n"}
{"Time":"2020-07-21T00:34:41.28942973-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Resource           Requests   Limits\n"}
{"Time":"2020-07-21T00:34:41.289433493-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   --------           --------   ------\n"}
{"Time":"2020-07-21T00:34:41.289437258-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   cpu                550m (6%)  0 (0%)\n"}
{"Time":"2020-07-21T00:34:41.289441037-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   memory             0 (0%)     0 (0%)\n"}
{"Time":"2020-07-21T00:34:41.28944476-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ephemeral-storage  0 (0%)     0 (0%)\n"}
{"Time":"2020-07-21T00:34:41.289448465-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-1Gi      0 (0%)     0 (0%)\n"}
{"Time":"2020-07-21T00:34:41.289452179-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   hugepages-2Mi      0 (0%)     0 (0%)\n"}
{"Time":"2020-07-21T00:34:41.289455916-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Events:\n"}
{"Time":"2020-07-21T00:34:41.289459669-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Type    Reason                   Age                From                                  Message\n"}
{"Time":"2020-07-21T00:34:41.289466633-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   ----    ------                   ----               ----                                  -------\n"}
{"Time":"2020-07-21T00:34:41.289470701-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeAllocatableEnforced  37s                kubelet, nospam-20200721001837-23787  Updated Node Allocatable limit across pods\n"}
{"Time":"2020-07-21T00:34:41.289474933-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasSufficientMemory  34s (x8 over 41s)  kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasSufficientMemory\n"}
{"Time":"2020-07-21T00:34:41.289479114-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasNoDiskPressure    34s (x8 over 41s)  kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2020-07-21T00:34:41.289483325-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasSufficientPID     34s (x7 over 41s)  kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasSufficientPID\n"}
{"Time":"2020-07-21T00:34:41.289487662-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  Starting                 3s                 kubelet, nospam-20200721001837-23787  Starting kubelet.\n"}
{"Time":"2020-07-21T00:34:41.289491641-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasSufficientMemory  2s                 kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasSufficientMemory\n"}
{"Time":"2020-07-21T00:34:41.28949573-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasNoDiskPressure    2s                 kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasNoDiskPressure\n"}
{"Time":"2020-07-21T00:34:41.289499774-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeHasSufficientPID     2s                 kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeHasSufficientPID\n"}
{"Time":"2020-07-21T00:34:41.289503876-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeNotReady             2s                 kubelet, nospam-20200721001837-23787  Node nospam-20200721001837-23787 status is now: NodeNotReady\n"}
{"Time":"2020-07-21T00:34:41.289510659-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*   Normal  NodeAllocatableEnforced  2s                 kubelet, nospam-20200721001837-23787  Updated Node Allocatable limit across pods\n"}
{"Time":"2020-07-21T00:34:41.28951471-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289518588-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e dmesg \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289522454-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000004]  [\u003cffffffffa540a18b\u003e] ? dump_header+0x78/0x1fd\n"}
{"Time":"2020-07-21T00:34:41.289526484-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000002]  [\u003cffffffffa5402a1c\u003e] ? mem_cgroup_scan_tasks+0xcc/0x100\n"}
{"Time":"2020-07-21T00:34:41.289530454-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000004]  [\u003cffffffffa53897da\u003e] ? oom_kill_process+0x22a/0x3f0\n"}
{"Time":"2020-07-21T00:34:41.28953444-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000002]  [\u003cffffffffa5389c71\u003e] ? out_of_memory+0x111/0x470\n"}
{"Time":"2020-07-21T00:34:41.289538463-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000004]  [\u003cffffffffa53fdb69\u003e] ? mem_cgroup_out_of_memory+0x49/0x80\n"}
{"Time":"2020-07-21T00:34:41.289545197-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000002]  [\u003cffffffffa5403395\u003e] ? mem_cgroup_oom_synchronize+0x325/0x340\n"}
{"Time":"2020-07-21T00:34:41.28954928-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000002]  [\u003cffffffffa53fe630\u003e] ? mem_cgroup_css_reset+0xd0/0xd0\n"}
{"Time":"2020-07-21T00:34:41.289553168-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000003]  [\u003cffffffffa5389fff\u003e] ? pagefault_out_of_memory+0x2f/0x80\n"}
{"Time":"2020-07-21T00:34:41.289557006-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000003]  [\u003cffffffffa52636dd\u003e] ? __do_page_fault+0x4bd/0x4f0\n"}
{"Time":"2020-07-21T00:34:41.289560874-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000005]  [\u003cffffffffa58206a8\u003e] ? page_fault+0x28/0x30\n"}
{"Time":"2020-07-21T00:34:41.289564786-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.000254] Memory cgroup out of memory: Kill process 12998 (registry-server) score 1799 or sacrifice child\n"}
{"Time":"2020-07-21T00:34:41.289568968-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +0.010550] Killed process 12998 (registry-server) total-vm:236256kB, anon-rss:70104kB, file-rss:13940kB, shmem-rss:0kB\n"}
{"Time":"2020-07-21T00:34:41.289573182-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:09] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289579329-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:10] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289583372-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:11] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289587447-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [ +13.449497] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289591244-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:12] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289595094-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:13] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289598917-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:15] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289602725-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:16] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.28960654-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:18] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289613154-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +7.704791] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289617001-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [  +8.153894] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289620797-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [Jul21 07:19] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289624573-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* [ +17.683612] cgroup: cgroup2: unknown option \"nsdelegate\"\n"}
{"Time":"2020-07-21T00:34:41.289628407-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289632114-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e etcd [67d9fc8ce740] \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289636049-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* raft2020/07/21 07:19:22 INFO: 952f31ff200093ba became candidate at term 2\n"}
{"Time":"2020-07-21T00:34:41.289642684-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* raft2020/07/21 07:19:22 INFO: 952f31ff200093ba received MsgVoteResp from 952f31ff200093ba at term 2\n"}
{"Time":"2020-07-21T00:34:41.289646782-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* raft2020/07/21 07:19:22 INFO: 952f31ff200093ba became leader at term 2\n"}
{"Time":"2020-07-21T00:34:41.289650673-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* raft2020/07/21 07:19:22 INFO: raft.node: 952f31ff200093ba elected leader 952f31ff200093ba at term 2\n"}
{"Time":"2020-07-21T00:34:41.289656984-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.908246 I | etcdserver: published {Name:nospam-20200721001837-23787 ClientURLs:[https://172.17.0.5:2379]} to cluster 5af0857ece1ce0e5\n"}
{"Time":"2020-07-21T00:34:41.289661191-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.908658 I | embed: ready to serve client requests\n"}
{"Time":"2020-07-21T00:34:41.289667246-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.908802 I | etcdserver: setting up the initial cluster version to 3.4\n"}
{"Time":"2020-07-21T00:34:41.289671171-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.910009 N | etcdserver/membership: set the initial cluster version to 3.4\n"}
{"Time":"2020-07-21T00:34:41.289675093-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.910160 I | etcdserver/api: enabled capabilities for version 3.4\n"}
{"Time":"2020-07-21T00:34:41.289681502-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.910644 I | embed: serving client requests on 127.0.0.1:2379\n"}
{"Time":"2020-07-21T00:34:41.289685844-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.933017 I | embed: ready to serve client requests\n"}
{"Time":"2020-07-21T00:34:41.289689851-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:22.935226 I | embed: serving client requests on 172.17.0.5:2379\n"}
{"Time":"2020-07-21T00:34:41.289693693-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:33.982316 W | etcdserver: read-only range request \"key:\\\"/registry/health\\\" \" with result \"range_response_count:0 size:5\" took too long (2.979041105s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289698198-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:33.982433 W | etcdserver: read-only range request \"key:\\\"/registry/minions/nospam-20200721001837-23787\\\" \" with result \"range_response_count:1 size:4436\" took too long (2.770813918s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289703263-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:33.982493 W | etcdserver: request \"header:\u003cID:10644947595153300468 username:\\\"kube-apiserver-etcd-client\\\" auth_revision:1 \u003e txn:\u003ccompare:\u003ctarget:MOD key:\\\"/registry/certificatesigningrequests/csr-gqdtv\\\" mod_revision:0 \u003e success:\u003crequest_put:\u003ckey:\\\"/registry/certificatesigningrequests/csr-gqdtv\\\" value_size:929 \u003e\u003e failure:\u003c\u003e\u003e\" with result \"size:16\" took too long (791.16194ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289712129-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:33.982675 W | etcdserver: read-only range request \"key:\\\"/registry/events/default/nospam-20200721001837-23787.1623b365979e76db\\\" \" with result \"range_response_count:0 size:5\" took too long (2.883698547s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289719714-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:34.338108 W | wal: sync duration of 1.146908952s, expected less than 1s\n"}
{"Time":"2020-07-21T00:34:41.289726435-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:34.562595 W | etcdserver: request \"header:\u003cID:10644947595153300469 username:\\\"kube-apiserver-etcd-client\\\" auth_revision:1 \u003e txn:\u003ccompare:\u003ctarget:MOD key:\\\"/registry/events/default/nospam-20200721001837-23787.1623b365979e76db\\\" mod_revision:0 \u003e success:\u003crequest_put:\u003ckey:\\\"/registry/events/default/nospam-20200721001837-23787.1623b365979e76db\\\" value_size:631 lease:1421575558298524641 \u003e\u003e failure:\u003c\u003e\u003e\" with result \"size:16\" took too long (224.263539ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289732627-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:34.563410 W | etcdserver: read-only range request \"key:\\\"/registry/health\\\" \" with result \"range_response_count:0 size:5\" took too long (559.942134ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289737051-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:37.745050 W | etcdserver: read-only range request \"key:\\\"/registry/minions/nospam-20200721001837-23787\\\" \" with result \"range_response_count:1 size:4633\" took too long (2.677115581s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289741464-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:37.745316 W | etcdserver: read-only range request \"key:\\\"/registry/events/default/nospam-20200721001837-23787.1623b365979e6330\\\" \" with result \"range_response_count:1 size:735\" took too long (3.171250917s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289745858-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:37.745808 W | etcdserver: read-only range request \"key:\\\"/registry/serviceaccounts/kube-system/replicaset-controller\\\" \" with result \"range_response_count:0 size:5\" took too long (2.925565398s) to execute\n"}
{"Time":"2020-07-21T00:34:41.289750228-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:38.573719 W | etcdserver: read-only range request \"key:\\\"/registry/namespaces/kube-system\\\" \" with result \"range_response_count:1 size:263\" took too long (825.490979ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289754643-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:38.574420 W | etcdserver: request \"header:\u003cID:10644947595153300477 username:\\\"kube-apiserver-etcd-client\\\" auth_revision:1 \u003e txn:\u003ccompare:\u003ctarget:MOD key:\\\"/registry/minions/nospam-20200721001837-23787\\\" mod_revision:167 \u003e success:\u003crequest_put:\u003ckey:\\\"/registry/minions/nospam-20200721001837-23787\\\" value_size:4656 \u003e\u003e failure:\u003crequest_range:\u003ckey:\\\"/registry/minions/nospam-20200721001837-23787\\\" \u003e \u003e\u003e\" with result \"size:16\" took too long (237.44687ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289760642-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* 2020-07-21 07:19:38.576026 W | etcdserver: read-only range request \"key:\\\"/registry/events/default/nospam-20200721001837-23787.1623b365979e76db\\\" \" with result \"range_response_count:1 size:733\" took too long (825.738456ms) to execute\n"}
{"Time":"2020-07-21T00:34:41.289765076-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289768884-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e kernel \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289772745-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t*  07:19:43 up  2:02,  0 users,  load average: 8.66, 3.67, 2.32\n"}
{"Time":"2020-07-21T00:34:41.289776582-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Linux nospam-20200721001837-23787 4.9.0-13-amd64 #1 SMP Debian 4.9.228-1 (2020-07-05) x86_64 x86_64 x86_64 GNU/Linux\n"}
{"Time":"2020-07-21T00:34:41.289780631-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* PRETTY_NAME=\"Ubuntu 19.10\"\n"}
{"Time":"2020-07-21T00:34:41.289787376-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289798098-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e kube-apiserver [8e850d806e33] \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289802304-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1305707896]: [573.390052ms] [571.637421ms] Transaction committed\n"}
{"Time":"2020-07-21T00:34:41.289806185-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:34.564997       1 trace.go:116] Trace[713877979]: \"Patch\" url:/api/v1/nodes/nospam-20200721001837-23787,user-agent:kubeadm/v1.18.3 (linux/amd64) kubernetes/2e7996e,client:172.17.0.5 (started: 2020-07-21 07:19:33.990769447 +0000 UTC m=+11.834289887) (total time: 574.198191ms):\n"}
{"Time":"2020-07-21T00:34:41.289810717-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[713877979]: [573.775505ms] [572.189622ms] Object stored in database\n"}
{"Time":"2020-07-21T00:34:41.289817929-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:37.746352       1 trace.go:116] Trace[1925777456]: \"Get\" url:/api/v1/nodes/nospam-20200721001837-23787,user-agent:kubeadm/v1.18.3 (linux/amd64) kubernetes/2e7996e,client:172.17.0.5 (started: 2020-07-21 07:19:35.067391139 +0000 UTC m=+12.910911672) (total time: 2.67891803s):\n"}
{"Time":"2020-07-21T00:34:41.289822808-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1925777456]: [2.678538487s] [2.678503887s] About to write a response\n"}
{"Time":"2020-07-21T00:34:41.289829407-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:37.746585       1 trace.go:116] Trace[2042037107]: \"Get\" url:/api/v1/namespaces/kube-system/serviceaccounts/replicaset-controller,user-agent:kube-controller-manager/v1.18.3 (linux/amd64) kubernetes/2e7996e/kube-controller-manager,client:172.17.0.5 (started: 2020-07-21 07:19:34.81970316 +0000 UTC m=+12.663223615) (total time: 2.926859198s):\n"}
{"Time":"2020-07-21T00:34:41.289834189-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[2042037107]: [2.926859198s] [2.926848081s] END\n"}
{"Time":"2020-07-21T00:34:41.289838096-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:37.748417       1 trace.go:116] Trace[1950267736]: \"GuaranteedUpdate etcd3\" type:*core.Event (started: 2020-07-21 07:19:34.573301641 +0000 UTC m=+12.416822098) (total time: 3.175089603s):\n"}
{"Time":"2020-07-21T00:34:41.289845322-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1950267736]: [3.172588759s] [3.172588759s] initial value restored\n"}
{"Time":"2020-07-21T00:34:41.289849337-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:37.748519       1 trace.go:116] Trace[1964630528]: \"Patch\" url:/api/v1/namespaces/default/events/nospam-20200721001837-23787.1623b365979e6330,user-agent:kubelet/v1.18.3 (linux/amd64) kubernetes/2e7996e,client:172.17.0.5 (started: 2020-07-21 07:19:34.573230627 +0000 UTC m=+12.416751067) (total time: 3.175265262s):\n"}
{"Time":"2020-07-21T00:34:41.28985401-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1964630528]: [3.17266333s] [3.172639617s] About to apply patch\n"}
{"Time":"2020-07-21T00:34:41.289857947-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.576407       1 trace.go:116] Trace[1179122375]: \"GuaranteedUpdate etcd3\" type:*core.Node (started: 2020-07-21 07:19:37.748930833 +0000 UTC m=+15.592451278) (total time: 827.438391ms):\n"}
{"Time":"2020-07-21T00:34:41.289862122-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1179122375]: [827.349257ms] [825.467571ms] Transaction committed\n"}
{"Time":"2020-07-21T00:34:41.289865982-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.576885       1 trace.go:116] Trace[1657550882]: \"Patch\" url:/api/v1/nodes/nospam-20200721001837-23787,user-agent:kubeadm/v1.18.3 (linux/amd64) kubernetes/2e7996e,client:172.17.0.5 (started: 2020-07-21 07:19:37.748774208 +0000 UTC m=+15.592294710) (total time: 828.0758ms):\n"}
{"Time":"2020-07-21T00:34:41.28987365-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1657550882]: [827.683014ms] [825.951458ms] Object stored in database\n"}
{"Time":"2020-07-21T00:34:41.28987787-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.577152       1 trace.go:116] Trace[471443820]: \"Get\" url:/api/v1/namespaces/kube-system,user-agent:kube-controller-manager/v1.18.3 (linux/amd64) kubernetes/2e7996e/kube-controller-manager,client:172.17.0.5 (started: 2020-07-21 07:19:37.747873515 +0000 UTC m=+15.591393954) (total time: 829.251297ms):\n"}
{"Time":"2020-07-21T00:34:41.28988235-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[471443820]: [829.210236ms] [829.202346ms] About to write a response\n"}
{"Time":"2020-07-21T00:34:41.289886354-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.581880       1 trace.go:116] Trace[1726898635]: \"GuaranteedUpdate etcd3\" type:*core.Event (started: 2020-07-21 07:19:37.749879362 +0000 UTC m=+15.593399810) (total time: 831.97206ms):\n"}
{"Time":"2020-07-21T00:34:41.289890571-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[1726898635]: [827.604425ms] [827.604425ms] initial value restored\n"}
{"Time":"2020-07-21T00:34:41.289894462-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.582035       1 trace.go:116] Trace[756141693]: \"Patch\" url:/api/v1/namespaces/default/events/nospam-20200721001837-23787.1623b365979e76db,user-agent:kubelet/v1.18.3 (linux/amd64) kubernetes/2e7996e,client:172.17.0.5 (started: 2020-07-21 07:19:37.749796214 +0000 UTC m=+15.593316652) (total time: 832.213549ms):\n"}
{"Time":"2020-07-21T00:34:41.289898976-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Trace[756141693]: [827.690188ms] [827.656667ms] About to apply patch\n"}
{"Time":"2020-07-21T00:34:41.289902911-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.582336       1 controller.go:606] quota admission added evaluator for: serviceaccounts\n"}
{"Time":"2020-07-21T00:34:41.289906857-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:38.938680       1 controller.go:606] quota admission added evaluator for: deployments.apps\n"}
{"Time":"2020-07-21T00:34:41.289910767-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:39.014546       1 controller.go:606] quota admission added evaluator for: daemonsets.apps\n"}
{"Time":"2020-07-21T00:34:41.289914668-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:39.951720       1 controller.go:606] quota admission added evaluator for: leases.coordination.k8s.io\n"}
{"Time":"2020-07-21T00:34:41.289918573-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.289922286-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e kube-controller-manager [234ed30c83c5] \u003c==\n"}
{"Time":"2020-07-21T00:34:41.289926251-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.583821       1 controllermanager.go:533] Started \"statefulset\"\n"}
{"Time":"2020-07-21T00:34:41.289930276-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.583906       1 stateful_set.go:146] Starting stateful set controller\n"}
{"Time":"2020-07-21T00:34:41.289934524-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.583916       1 shared_informer.go:223] Waiting for caches to sync for stateful set\n"}
{"Time":"2020-07-21T00:34:41.289938504-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.732990       1 node_lifecycle_controller.go:78] Sending events to api server\n"}
{"Time":"2020-07-21T00:34:41.289945279-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:41.733039       1 core.go:229] failed to start cloud node lifecycle controller: no cloud provider provided\n"}
{"Time":"2020-07-21T00:34:41.289949415-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:41.733052       1 controllermanager.go:525] Skipping \"cloud-node-lifecycle\"\n"}
{"Time":"2020-07-21T00:34:41.289953366-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:41.733069       1 controllermanager.go:525] Skipping \"ttl-after-finished\"\n"}
{"Time":"2020-07-21T00:34:41.289957323-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.992311       1 controllermanager.go:533] Started \"namespace\"\n"}
{"Time":"2020-07-21T00:34:41.289961243-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.992348       1 namespace_controller.go:200] Starting namespace controller\n"}
{"Time":"2020-07-21T00:34:41.289965128-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:41.992358       1 shared_informer.go:223] Waiting for caches to sync for namespace\n"}
{"Time":"2020-07-21T00:34:41.289971581-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.133378       1 controllermanager.go:533] Started \"csrcleaner\"\n"}
{"Time":"2020-07-21T00:34:41.289975525-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.133473       1 cleaner.go:82] Starting CSR cleaner controller\n"}
{"Time":"2020-07-21T00:34:41.289979474-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.383826       1 controllermanager.go:533] Started \"bootstrapsigner\"\n"}
{"Time":"2020-07-21T00:34:41.289985868-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.383862       1 core.go:239] Will not configure cloud provider routes for allocate-node-cidrs: false, configure-cloud-routes: true.\n"}
{"Time":"2020-07-21T00:34:41.289989932-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:42.383870       1 controllermanager.go:525] Skipping \"route\"\n"}
{"Time":"2020-07-21T00:34:41.289993808-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.383963       1 shared_informer.go:223] Waiting for caches to sync for bootstrap_signer\n"}
{"Time":"2020-07-21T00:34:41.289997692-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.634459       1 controllermanager.go:533] Started \"persistentvolume-binder\"\n"}
{"Time":"2020-07-21T00:34:41.290001597-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.634538       1 pv_controller_base.go:295] Starting persistent volume controller\n"}
{"Time":"2020-07-21T00:34:41.290005462-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.634562       1 shared_informer.go:223] Waiting for caches to sync for persistent volume\n"}
{"Time":"2020-07-21T00:34:41.290009356-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.884049       1 controllermanager.go:533] Started \"pvc-protection\"\n"}
{"Time":"2020-07-21T00:34:41.290013264-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.884128       1 pvc_protection_controller.go:101] Starting PVC protection controller\n"}
{"Time":"2020-07-21T00:34:41.290017102-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:42.884137       1 shared_informer.go:223] Waiting for caches to sync for PVC protection\n"}
{"Time":"2020-07-21T00:34:41.290020982-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:43.147525       1 controllermanager.go:533] Started \"serviceaccount\"\n"}
{"Time":"2020-07-21T00:34:41.290024863-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:43.147620       1 serviceaccounts_controller.go:117] Starting service account controller\n"}
{"Time":"2020-07-21T00:34:41.290031545-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:43.147631       1 shared_informer.go:223] Waiting for caches to sync for service account\n"}
{"Time":"2020-07-21T00:34:41.290035553-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.290039233-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e kube-scheduler [8e615f25f8a5] \u003c==\n"}
{"Time":"2020-07-21T00:34:41.290045469-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:28.996563       1 authentication.go:297] Error looking up in-cluster authentication configuration: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot get resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2020-07-21T00:34:41.2900503-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:28.996777       1 authentication.go:298] Continuing without authentication configuration. This may treat all requests as anonymous.\n"}
{"Time":"2020-07-21T00:34:41.290056539-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:28.997018       1 authentication.go:299] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false\n"}
{"Time":"2020-07-21T00:34:41.290060716-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.013360       1 registry.go:150] Registering EvenPodsSpread predicate and priority function\n"}
{"Time":"2020-07-21T00:34:41.290064649-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.013397       1 registry.go:150] Registering EvenPodsSpread predicate and priority function\n"}
{"Time":"2020-07-21T00:34:41.290068616-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:29.015511       1 authorization.go:47] Authorization is disabled\n"}
{"Time":"2020-07-21T00:34:41.290072494-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* W0721 07:19:29.015539       1 authentication.go:40] Authentication is disabled\n"}
{"Time":"2020-07-21T00:34:41.290076326-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.015556       1 deprecated_insecure_serving.go:51] Serving healthz insecurely on [::]:10251\n"}
{"Time":"2020-07-21T00:34:41.290080208-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.024524       1 secure_serving.go:178] Serving securely on 127.0.0.1:10259\n"}
{"Time":"2020-07-21T00:34:41.290084133-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.080032       1 configmap_cafile_content.go:202] Starting client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2020-07-21T00:34:41.290088231-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.080067       1 shared_informer.go:223] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file\n"}
{"Time":"2020-07-21T00:34:41.290092488-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:29.082854       1 tlsconfig.go:240] Starting DynamicServingCertificateController\n"}
{"Time":"2020-07-21T00:34:41.290096448-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.085333       1 reflector.go:178] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2020-07-21T00:34:41.290113231-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.087655       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.29012323-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.088712       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290128431-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.087921       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1beta1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290133161-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.087991       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290137556-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.088010       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290142124-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.088157       1 reflector.go:178] k8s.io/kubernetes/cmd/kube-scheduler/app/server.go:233: Failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290146523-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.088461       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.29015098-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.088902       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290155453-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:29.976721       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290162884-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:30.145098       1 reflector.go:178] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope\n"}
{"Time":"2020-07-21T00:34:41.290167374-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* E0721 07:19:30.264313       1 reflector.go:178] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"\n"}
{"Time":"2020-07-21T00:34:41.290175125-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* I0721 07:19:32.880415       1 shared_informer.go:230] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file \n"}
{"Time":"2020-07-21T00:34:41.2901793-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* \n"}
{"Time":"2020-07-21T00:34:41.290183013-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* ==\u003e kubelet \u003c==\n"}
{"Time":"2020-07-21T00:34:41.290186914-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* -- Logs begin at Tue 2020-07-21 07:18:48 UTC, end at Tue 2020-07-21 07:19:43 UTC. --\n"}
{"Time":"2020-07-21T00:34:41.290190817-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.552872    2307 state_mem.go:36] [cpumanager] initializing new in-memory state store\n"}
{"Time":"2020-07-21T00:34:41.290195-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.553113    2307 state_mem.go:88] [cpumanager] updated default cpuset: \"\"\n"}
{"Time":"2020-07-21T00:34:41.290202573-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.553129    2307 state_mem.go:96] [cpumanager] updated cpuset assignments: \"map[]\"\n"}
{"Time":"2020-07-21T00:34:41.290207085-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.553148    2307 policy_none.go:43] [cpumanager] none policy: Start\n"}
{"Time":"2020-07-21T00:34:41.290213511-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.558624    2307 plugin_manager.go:114] Starting Kubelet Plugin Manager\n"}
{"Time":"2020-07-21T00:34:41.290217765-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.697545    2307 topology_manager.go:233] [topologymanager] Topology Admit Handler\n"}
{"Time":"2020-07-21T00:34:41.290225121-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.701714    2307 topology_manager.go:233] [topologymanager] Topology Admit Handler\n"}
{"Time":"2020-07-21T00:34:41.29022914-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.705250    2307 topology_manager.go:233] [topologymanager] Topology Admit Handler\n"}
{"Time":"2020-07-21T00:34:41.290233315-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.724865    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/484e7c0718c2559ba40cc73195f5d1a3-etc-ca-certificates\") pod \"kube-apiserver-nospam-20200721001837-23787\" (UID: \"484e7c0718c2559ba40cc73195f5d1a3\")\n"}
{"Time":"2020-07-21T00:34:41.290238281-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.724915    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-flexvolume-dir\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290243187-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.724955    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/5f2ad4edecad8512f21a60d374cb7dec-etcd-certs\") pod \"etcd-nospam-20200721001837-23787\" (UID: \"5f2ad4edecad8512f21a60d374cb7dec\")\n"}
{"Time":"2020-07-21T00:34:41.290251102-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.724999    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-k8s-certs\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290255971-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725030    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/484e7c0718c2559ba40cc73195f5d1a3-k8s-certs\") pod \"kube-apiserver-nospam-20200721001837-23787\" (UID: \"484e7c0718c2559ba40cc73195f5d1a3\")\n"}
{"Time":"2020-07-21T00:34:41.290260828-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725065    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/484e7c0718c2559ba40cc73195f5d1a3-usr-local-share-ca-certificates\") pod \"kube-apiserver-nospam-20200721001837-23787\" (UID: \"484e7c0718c2559ba40cc73195f5d1a3\")\n"}
{"Time":"2020-07-21T00:34:41.290268933-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725101    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-etc-ca-certificates\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290273797-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725130    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/484e7c0718c2559ba40cc73195f5d1a3-ca-certs\") pod \"kube-apiserver-nospam-20200721001837-23787\" (UID: \"484e7c0718c2559ba40cc73195f5d1a3\")\n"}
{"Time":"2020-07-21T00:34:41.290279328-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725162    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/484e7c0718c2559ba40cc73195f5d1a3-usr-share-ca-certificates\") pod \"kube-apiserver-nospam-20200721001837-23787\" (UID: \"484e7c0718c2559ba40cc73195f5d1a3\")\n"}
{"Time":"2020-07-21T00:34:41.290284201-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725195    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-ca-certs\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290291075-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725230    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-kubeconfig\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290299359-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725268    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-usr-local-share-ca-certificates\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.290306662-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725308    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/8a9925b92c1bf68a9656aa86994b3aca-usr-share-ca-certificates\") pod \"kube-controller-manager-nospam-20200721001837-23787\" (UID: \"8a9925b92c1bf68a9656aa86994b3aca\")\n"}
{"Time":"2020-07-21T00:34:41.29031146-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.725337    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/5f2ad4edecad8512f21a60d374cb7dec-etcd-data\") pod \"etcd-nospam-20200721001837-23787\" (UID: \"5f2ad4edecad8512f21a60d374cb7dec\")\n"}
{"Time":"2020-07-21T00:34:41.29031621-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.727799    2307 topology_manager.go:233] [topologymanager] Topology Admit Handler\n"}
{"Time":"2020-07-21T00:34:41.290320258-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.826050    2307 reconciler.go:224] operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/dcddbd0cc8c89e2cbf4de5d3cca8769f-kubeconfig\") pod \"kube-scheduler-nospam-20200721001837-23787\" (UID: \"dcddbd0cc8c89e2cbf4de5d3cca8769f\")\n"}
{"Time":"2020-07-21T00:34:41.290324929-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \t* Jul 21 07:19:40 nospam-20200721001837-23787 kubelet[2307]: I0721 07:19:40.826212    2307 reconciler.go:157] Reconciler: start to sync state\n"}
{"Time":"2020-07-21T00:34:41.290331494-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290335337-07:00","Action":"output","Test":"TestErrorSpam","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.29033926-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:247: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p nospam-20200721001837-23787 -n nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.290343374-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:254: (dbg) Run:  kubectl --context nospam-20200721001837-23787 get po -o=jsonpath={.items[*].metadata.name} -A --field-selector=status.phase!=Running\n"}
{"Time":"2020-07-21T00:34:41.290350143-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:260: non-running pods: storage-provisioner\n"}
{"Time":"2020-07-21T00:34:41.290354126-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:262: ======\u003e post-mortem[TestErrorSpam]: describe non-running pods \u003c======\n"}
{"Time":"2020-07-21T00:34:41.290358285-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:265: (dbg) Run:  kubectl --context nospam-20200721001837-23787 describe pod storage-provisioner\n"}
{"Time":"2020-07-21T00:34:41.290365702-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:265: (dbg) Non-zero exit: kubectl --context nospam-20200721001837-23787 describe pod storage-provisioner: exit status 1 (194.878338ms)\n"}
{"Time":"2020-07-21T00:34:41.290372493-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290376335-07:00","Action":"output","Test":"TestErrorSpam","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.290380165-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \tError from server (NotFound): pods \"storage-provisioner\" not found\n"}
{"Time":"2020-07-21T00:34:41.290384096-07:00","Action":"output","Test":"TestErrorSpam","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290387772-07:00","Action":"output","Test":"TestErrorSpam","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.290391818-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:267: kubectl --context nospam-20200721001837-23787 describe pod storage-provisioner: exit status 1\n"}
{"Time":"2020-07-21T00:34:41.290395845-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:170: Cleaning up \"nospam-20200721001837-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.290404754-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p nospam-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.290413543-07:00","Action":"output","Test":"TestErrorSpam","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p nospam-20200721001837-23787: (2.578351741s)\n"}
{"Time":"2020-07-21T00:34:41.290419212-07:00","Action":"output","Test":"TestErrorSpam","Output":"--- FAIL: TestErrorSpam (70.90s)\n"}
{"Time":"2020-07-21T00:34:41.29042331-07:00","Action":"fail","Test":"TestErrorSpam","Elapsed":70.9}
{"Time":"2020-07-21T00:34:41.290427685-07:00","Action":"cont","Test":"TestDockerFlags"}
{"Time":"2020-07-21T00:34:41.290431508-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== CONT  TestDockerFlags\n"}
{"Time":"2020-07-21T00:34:41.290435652-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:41: (dbg) Run:  out/minikube-linux-amd64 start -p docker-flags-20200721001948-23787 --cache-images=false --memory=1800 --install-addons=false --wait=false --docker-env=FOO=BAR --docker-env=BAZ=BAT --docker-opt=debug --docker-opt=icc=true --alsologtostderr -v=5 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290440118-07:00","Action":"cont","Test":"TestForceSystemdFlag"}
{"Time":"2020-07-21T00:34:41.290443669-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"=== CONT  TestForceSystemdFlag\n"}
{"Time":"2020-07-21T00:34:41.290447499-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p force-systemd-flag-20200721001839-23787 --memory=1800 --force-systemd --alsologtostderr -v=5 --driver=docker : (1m9.294968141s)\n"}
{"Time":"2020-07-21T00:34:41.290451788-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    docker_test.go:85: (dbg) Run:  out/minikube-linux-amd64 -p force-systemd-flag-20200721001839-23787 ssh \"docker info --format {{.CgroupDriver}}\"\n"}
{"Time":"2020-07-21T00:34:41.290455929-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:170: Cleaning up \"force-systemd-flag-20200721001839-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.290459962-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p force-systemd-flag-20200721001839-23787\n"}
{"Time":"2020-07-21T00:34:41.290463992-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p force-systemd-flag-20200721001839-23787: (5.219711039s)\n"}
{"Time":"2020-07-21T00:34:41.29046852-07:00","Action":"output","Test":"TestForceSystemdFlag","Output":"--- PASS: TestForceSystemdFlag (74.98s)\n"}
{"Time":"2020-07-21T00:34:41.290478011-07:00","Action":"pass","Test":"TestForceSystemdFlag","Elapsed":74.98}
{"Time":"2020-07-21T00:34:41.290481952-07:00","Action":"cont","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.290485452-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== CONT  TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290489259-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:163: (dbg) Run:  out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.13.0 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290493573-07:00","Action":"cont","Test":"TestPause/serial/Start"}
{"Time":"2020-07-21T00:34:41.290497328-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"=== CONT  TestPause/serial/Start\n"}
{"Time":"2020-07-21T00:34:41.290501187-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"    pause_test.go:67: (dbg) Done: out/minikube-linux-amd64 start -p pause-20200721001837-23787 --memory=1800 --install-addons=false --wait=all --driver=docker : (1m46.710937323s)\n"}
{"Time":"2020-07-21T00:34:41.29050561-07:00","Action":"run","Test":"TestPause/serial/SecondStartNoReconfiguration"}
{"Time":"2020-07-21T00:34:41.290509253-07:00","Action":"output","Test":"TestPause/serial/SecondStartNoReconfiguration","Output":"=== RUN   TestPause/serial/SecondStartNoReconfiguration\n"}
{"Time":"2020-07-21T00:34:41.290513147-07:00","Action":"output","Test":"TestPause/serial/SecondStartNoReconfiguration","Output":"    pause_test.go:78: (dbg) Run:  out/minikube-linux-amd64 start -p pause-20200721001837-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.290517196-07:00","Action":"cont","Test":"TestForceSystemdEnv"}
{"Time":"2020-07-21T00:34:41.290520679-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== CONT  TestForceSystemdEnv\n"}
{"Time":"2020-07-21T00:34:41.290524576-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:108: (dbg) Done: out/minikube-linux-amd64 start -p force-systemd-env-20200721001929-23787 --memory=1800 --alsologtostderr -v=5 --driver=docker : (58.633243357s)\n"}
{"Time":"2020-07-21T00:34:41.290528776-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    docker_test.go:113: (dbg) Run:  out/minikube-linux-amd64 -p force-systemd-env-20200721001929-23787 ssh \"docker info --format {{.CgroupDriver}}\"\n"}
{"Time":"2020-07-21T00:34:41.290532948-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:170: Cleaning up \"force-systemd-env-20200721001929-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.290536917-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p force-systemd-env-20200721001929-23787\n"}
{"Time":"2020-07-21T00:34:41.290544848-07:00","Action":"cont","Test":"TestPause/serial/SecondStartNoReconfiguration"}
{"Time":"2020-07-21T00:34:41.290548494-07:00","Action":"output","Test":"TestPause/serial/SecondStartNoReconfiguration","Output":"=== CONT  TestPause/serial/SecondStartNoReconfiguration\n"}
{"Time":"2020-07-21T00:34:41.290552339-07:00","Action":"output","Test":"TestPause/serial/SecondStartNoReconfiguration","Output":"    pause_test.go:78: (dbg) Done: out/minikube-linux-amd64 start -p pause-20200721001837-23787 --alsologtostderr -v=1: (14.727403634s)\n"}
{"Time":"2020-07-21T00:34:41.290556463-07:00","Action":"run","Test":"TestPause/serial/Pause"}
{"Time":"2020-07-21T00:34:41.290559928-07:00","Action":"output","Test":"TestPause/serial/Pause","Output":"=== RUN   TestPause/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.290565831-07:00","Action":"output","Test":"TestPause/serial/Pause","Output":"    pause_test.go:95: (dbg) Run:  out/minikube-linux-amd64 pause -p pause-20200721001837-23787 --alsologtostderr -v=5\n"}
{"Time":"2020-07-21T00:34:41.290570034-07:00","Action":"cont","Test":"TestForceSystemdEnv"}
{"Time":"2020-07-21T00:34:41.290576268-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"=== CONT  TestForceSystemdEnv\n"}
{"Time":"2020-07-21T00:34:41.290580246-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p force-systemd-env-20200721001929-23787: (10.419425467s)\n"}
{"Time":"2020-07-21T00:34:41.290584622-07:00","Action":"output","Test":"TestForceSystemdEnv","Output":"--- PASS: TestForceSystemdEnv (69.52s)\n"}
{"Time":"2020-07-21T00:34:41.290588607-07:00","Action":"pass","Test":"TestForceSystemdEnv","Elapsed":69.52}
{"Time":"2020-07-21T00:34:41.2905924-07:00","Action":"cont","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.290595827-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== CONT  TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290599659-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:245: (dbg) Run:  /tmp/minikube-v1.9.1.713824261.exe start -p missing-upgrade-20200721002038-23787 --memory=2200 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290603798-07:00","Action":"run","Test":"TestPause/serial/Unpause"}
{"Time":"2020-07-21T00:34:41.290607232-07:00","Action":"output","Test":"TestPause/serial/Unpause","Output":"=== RUN   TestPause/serial/Unpause\n"}
{"Time":"2020-07-21T00:34:41.290611022-07:00","Action":"output","Test":"TestPause/serial/Unpause","Output":"    pause_test.go:105: (dbg) Run:  out/minikube-linux-amd64 unpause -p pause-20200721001837-23787 --alsologtostderr -v=5\n"}
{"Time":"2020-07-21T00:34:41.29061502-07:00","Action":"run","Test":"TestPause/serial/PauseAgain"}
{"Time":"2020-07-21T00:34:41.290625032-07:00","Action":"output","Test":"TestPause/serial/PauseAgain","Output":"=== RUN   TestPause/serial/PauseAgain\n"}
{"Time":"2020-07-21T00:34:41.290628856-07:00","Action":"output","Test":"TestPause/serial/PauseAgain","Output":"    pause_test.go:95: (dbg) Run:  out/minikube-linux-amd64 pause -p pause-20200721001837-23787 --alsologtostderr -v=5\n"}
{"Time":"2020-07-21T00:34:41.290632853-07:00","Action":"run","Test":"TestPause/serial/DeletePaused"}
{"Time":"2020-07-21T00:34:41.290638548-07:00","Action":"output","Test":"TestPause/serial/DeletePaused","Output":"=== RUN   TestPause/serial/DeletePaused\n"}
{"Time":"2020-07-21T00:34:41.290642348-07:00","Action":"output","Test":"TestPause/serial/DeletePaused","Output":"    pause_test.go:115: (dbg) Run:  out/minikube-linux-amd64 delete -p pause-20200721001837-23787 --alsologtostderr -v=5\n"}
{"Time":"2020-07-21T00:34:41.290646347-07:00","Action":"cont","Test":"TestDockerFlags"}
{"Time":"2020-07-21T00:34:41.290649819-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== CONT  TestDockerFlags\n"}
{"Time":"2020-07-21T00:34:41.290653946-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:41: (dbg) Done: out/minikube-linux-amd64 start -p docker-flags-20200721001948-23787 --cache-images=false --memory=1800 --install-addons=false --wait=false --docker-env=FOO=BAR --docker-env=BAZ=BAT --docker-opt=debug --docker-opt=icc=true --alsologtostderr -v=5 --driver=docker : (53.465386487s)\n"}
{"Time":"2020-07-21T00:34:41.290658765-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:46: (dbg) Run:  out/minikube-linux-amd64 -p docker-flags-20200721001948-23787 ssh \"sudo systemctl show docker --property=Environment --no-pager\"\n"}
{"Time":"2020-07-21T00:34:41.290662902-07:00","Action":"output","Test":"TestDockerFlags","Output":"    docker_test.go:57: (dbg) Run:  out/minikube-linux-amd64 -p docker-flags-20200721001948-23787 ssh \"sudo systemctl show docker --property=ExecStart --no-pager\"\n"}
{"Time":"2020-07-21T00:34:41.290667013-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:170: Cleaning up \"docker-flags-20200721001948-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.290670954-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p docker-flags-20200721001948-23787\n"}
{"Time":"2020-07-21T00:34:41.290677851-07:00","Action":"cont","Test":"TestPause/serial/DeletePaused"}
{"Time":"2020-07-21T00:34:41.290681519-07:00","Action":"output","Test":"TestPause/serial/DeletePaused","Output":"=== CONT  TestPause/serial/DeletePaused\n"}
{"Time":"2020-07-21T00:34:41.290685333-07:00","Action":"output","Test":"TestPause/serial/DeletePaused","Output":"    pause_test.go:115: (dbg) Done: out/minikube-linux-amd64 delete -p pause-20200721001837-23787 --alsologtostderr -v=5: (2.910637906s)\n"}
{"Time":"2020-07-21T00:34:41.290689348-07:00","Action":"run","Test":"TestPause/serial/VerifyDeletedResources"}
{"Time":"2020-07-21T00:34:41.29069285-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"=== RUN   TestPause/serial/VerifyDeletedResources\n"}
{"Time":"2020-07-21T00:34:41.290696703-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"    pause_test.go:125: (dbg) Run:  out/minikube-linux-amd64 profile list --output json\n"}
{"Time":"2020-07-21T00:34:41.290700695-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"    pause_test.go:151: (dbg) Run:  docker ps -a\n"}
{"Time":"2020-07-21T00:34:41.290704537-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"    pause_test.go:156: (dbg) Run:  docker volume inspect pause-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.290708439-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"    pause_test.go:156: (dbg) Non-zero exit: docker volume inspect pause-20200721001837-23787: exit status 1 (58.653817ms)\n"}
{"Time":"2020-07-21T00:34:41.290712402-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290716214-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.290720001-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        \t[]\n"}
{"Time":"2020-07-21T00:34:41.290723788-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290727541-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.290731282-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.290735082-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        \tError: No such volume: pause-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.290743911-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290747722-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.290751563-07:00","Action":"cont","Test":"TestPause"}
{"Time":"2020-07-21T00:34:41.290755009-07:00","Action":"output","Test":"TestPause","Output":"=== CONT  TestPause\n"}
{"Time":"2020-07-21T00:34:41.290758732-07:00","Action":"output","Test":"TestPause","Output":"    helpers_test.go:170: Cleaning up \"pause-20200721001837-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.290762773-07:00","Action":"output","Test":"TestPause","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p pause-20200721001837-23787\n"}
{"Time":"2020-07-21T00:34:41.290767128-07:00","Action":"output","Test":"TestPause","Output":"--- PASS: TestPause (127.49s)\n"}
{"Time":"2020-07-21T00:34:41.290771443-07:00","Action":"output","Test":"TestPause/serial","Output":"    --- PASS: TestPause/serial (126.99s)\n"}
{"Time":"2020-07-21T00:34:41.290782293-07:00","Action":"output","Test":"TestPause/serial/Start","Output":"        --- PASS: TestPause/serial/Start (106.71s)\n"}
{"Time":"2020-07-21T00:34:41.290790294-07:00","Action":"pass","Test":"TestPause/serial/Start","Elapsed":106.71}
{"Time":"2020-07-21T00:34:41.2907945-07:00","Action":"output","Test":"TestPause/serial/SecondStartNoReconfiguration","Output":"        --- PASS: TestPause/serial/SecondStartNoReconfiguration (14.74s)\n"}
{"Time":"2020-07-21T00:34:41.290798886-07:00","Action":"pass","Test":"TestPause/serial/SecondStartNoReconfiguration","Elapsed":14.74}
{"Time":"2020-07-21T00:34:41.290802786-07:00","Action":"output","Test":"TestPause/serial/Pause","Output":"        --- PASS: TestPause/serial/Pause (0.70s)\n"}
{"Time":"2020-07-21T00:34:41.290806786-07:00","Action":"pass","Test":"TestPause/serial/Pause","Elapsed":0.7}
{"Time":"2020-07-21T00:34:41.290810596-07:00","Action":"output","Test":"TestPause/serial/Unpause","Output":"        --- PASS: TestPause/serial/Unpause (0.61s)\n"}
{"Time":"2020-07-21T00:34:41.29081468-07:00","Action":"pass","Test":"TestPause/serial/Unpause","Elapsed":0.61}
{"Time":"2020-07-21T00:34:41.290818457-07:00","Action":"output","Test":"TestPause/serial/PauseAgain","Output":"        --- PASS: TestPause/serial/PauseAgain (0.89s)\n"}
{"Time":"2020-07-21T00:34:41.290822476-07:00","Action":"pass","Test":"TestPause/serial/PauseAgain","Elapsed":0.89}
{"Time":"2020-07-21T00:34:41.290826183-07:00","Action":"output","Test":"TestPause/serial/DeletePaused","Output":"        --- PASS: TestPause/serial/DeletePaused (2.91s)\n"}
{"Time":"2020-07-21T00:34:41.290830493-07:00","Action":"pass","Test":"TestPause/serial/DeletePaused","Elapsed":2.91}
{"Time":"2020-07-21T00:34:41.290834335-07:00","Action":"output","Test":"TestPause/serial/VerifyDeletedResources","Output":"        --- PASS: TestPause/serial/VerifyDeletedResources (0.43s)\n"}
{"Time":"2020-07-21T00:34:41.290841337-07:00","Action":"pass","Test":"TestPause/serial/VerifyDeletedResources","Elapsed":0.43}
{"Time":"2020-07-21T00:34:41.290845091-07:00","Action":"pass","Test":"TestPause/serial","Elapsed":126.99}
{"Time":"2020-07-21T00:34:41.290848628-07:00","Action":"pass","Test":"TestPause","Elapsed":127.49}
{"Time":"2020-07-21T00:34:41.290852143-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.290855685-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290859548-07:00","Action":"cont","Test":"TestDockerFlags"}
{"Time":"2020-07-21T00:34:41.29086298-07:00","Action":"output","Test":"TestDockerFlags","Output":"=== CONT  TestDockerFlags\n"}
{"Time":"2020-07-21T00:34:41.290866794-07:00","Action":"output","Test":"TestDockerFlags","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p docker-flags-20200721001948-23787: (2.275737593s)\n"}
{"Time":"2020-07-21T00:34:41.290873643-07:00","Action":"output","Test":"TestDockerFlags","Output":"--- PASS: TestDockerFlags (56.65s)\n"}
{"Time":"2020-07-21T00:34:41.290877638-07:00","Action":"pass","Test":"TestDockerFlags","Elapsed":56.65}
{"Time":"2020-07-21T00:34:41.290881279-07:00","Action":"cont","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.290884769-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== CONT  TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290888562-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:133: (dbg) Run:  /tmp/minikube-v1.8.0.787154559.exe start -p stopped-upgrade-20200721002044-23787 --memory=2200 --vm-driver=docker \n"}
{"Time":"2020-07-21T00:34:41.29089268-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.290896113-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290899867-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    version_upgrade_test.go:90: (dbg) Run:  /tmp/minikube-v1.9.0.409310624.exe start -p running-upgrade-20200721002044-23787 --memory=2200 --vm-driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290903971-07:00","Action":"cont","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.290910783-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== CONT  TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290914811-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:163: (dbg) Done: out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.13.0 --alsologtostderr -v=1 --driver=docker : (1m53.349498339s)\n"}
{"Time":"2020-07-21T00:34:41.29091902-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:168: (dbg) Run:  out/minikube-linux-amd64 stop -p kubernetes-upgrade-20200721001954-23787\n"}
{"Time":"2020-07-21T00:34:41.290923031-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:168: (dbg) Done: out/minikube-linux-amd64 stop -p kubernetes-upgrade-20200721001954-23787: (11.199896436s)\n"}
{"Time":"2020-07-21T00:34:41.290927052-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:173: (dbg) Run:  out/minikube-linux-amd64 -p kubernetes-upgrade-20200721001954-23787 status --format={{.Host}}\n"}
{"Time":"2020-07-21T00:34:41.290931054-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:173: (dbg) Non-zero exit: out/minikube-linux-amd64 -p kubernetes-upgrade-20200721001954-23787 status --format={{.Host}}: exit status 7 (119.854297ms)\n"}
{"Time":"2020-07-21T00:34:41.2909351-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290938814-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.290942505-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.290946274-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.290952483-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.290956494-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:175: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.290960388-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:184: (dbg) Run:  out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.18.4-rc.0 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290964579-07:00","Action":"cont","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.290970201-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== CONT  TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.290974249-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:245: (dbg) Done: /tmp/minikube-v1.9.1.713824261.exe start -p missing-upgrade-20200721002038-23787 --memory=2200 --driver=docker : (1m27.058439323s)\n"}
{"Time":"2020-07-21T00:34:41.290978384-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:254: (dbg) Run:  docker stop missing-upgrade-20200721002038-23787\n"}
{"Time":"2020-07-21T00:34:41.290982328-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:254: (dbg) Done: docker stop missing-upgrade-20200721002038-23787: (2.109671888s)\n"}
{"Time":"2020-07-21T00:34:41.290986376-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:259: (dbg) Run:  docker rm missing-upgrade-20200721002038-23787\n"}
{"Time":"2020-07-21T00:34:41.290990364-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:265: (dbg) Run:  out/minikube-linux-amd64 start -p missing-upgrade-20200721002038-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.290998492-07:00","Action":"cont","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.291002186-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== CONT  TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291005951-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:133: (dbg) Done: /tmp/minikube-v1.8.0.787154559.exe start -p stopped-upgrade-20200721002044-23787 --memory=2200 --vm-driver=docker : (1m56.267286581s)\n"}
{"Time":"2020-07-21T00:34:41.291012139-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:142: (dbg) Run:  /tmp/minikube-v1.8.0.787154559.exe -p stopped-upgrade-20200721002044-23787 stop\n"}
{"Time":"2020-07-21T00:34:41.29101633-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.29101984-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291023623-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    version_upgrade_test.go:90: (dbg) Done: /tmp/minikube-v1.9.0.409310624.exe start -p running-upgrade-20200721002044-23787 --memory=2200 --vm-driver=docker : (2m0.033057102s)\n"}
{"Time":"2020-07-21T00:34:41.291027822-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    version_upgrade_test.go:100: (dbg) Run:  out/minikube-linux-amd64 start -p running-upgrade-20200721002044-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291034212-07:00","Action":"cont","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.291040461-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== CONT  TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291044282-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:142: (dbg) Done: /tmp/minikube-v1.8.0.787154559.exe -p stopped-upgrade-20200721002044-23787 stop: (10.670273301s)\n"}
{"Time":"2020-07-21T00:34:41.291048237-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:148: (dbg) Run:  out/minikube-linux-amd64 start -p stopped-upgrade-20200721002044-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291052263-07:00","Action":"cont","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.291058375-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== CONT  TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291062147-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    version_upgrade_test.go:265: (dbg) Done: out/minikube-linux-amd64 start -p missing-upgrade-20200721002038-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker : (1m24.179782347s)\n"}
{"Time":"2020-07-21T00:34:41.291066321-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    helpers_test.go:170: Cleaning up \"missing-upgrade-20200721002038-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291070352-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p missing-upgrade-20200721002038-23787\n"}
{"Time":"2020-07-21T00:34:41.291074377-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.291077932-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291081629-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    version_upgrade_test.go:100: (dbg) Done: out/minikube-linux-amd64 start -p running-upgrade-20200721002044-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker : (48.570179206s)\n"}
{"Time":"2020-07-21T00:34:41.291085708-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:170: Cleaning up \"running-upgrade-20200721002044-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291092332-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p running-upgrade-20200721002044-23787\n"}
{"Time":"2020-07-21T00:34:41.291096482-07:00","Action":"cont","Test":"TestMissingContainerUpgrade"}
{"Time":"2020-07-21T00:34:41.29109992-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"=== CONT  TestMissingContainerUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291103724-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p missing-upgrade-20200721002038-23787: (2.78564048s)\n"}
{"Time":"2020-07-21T00:34:41.291108226-07:00","Action":"output","Test":"TestMissingContainerUpgrade","Output":"--- PASS: TestMissingContainerUpgrade (176.54s)\n"}
{"Time":"2020-07-21T00:34:41.291112262-07:00","Action":"pass","Test":"TestMissingContainerUpgrade","Elapsed":176.54}
{"Time":"2020-07-21T00:34:41.291115946-07:00","Action":"cont","Test":"TestStartStop"}
{"Time":"2020-07-21T00:34:41.291119412-07:00","Action":"output","Test":"TestStartStop","Output":"=== CONT  TestStartStop\n"}
{"Time":"2020-07-21T00:34:41.291123206-07:00","Action":"run","Test":"TestStartStop/group"}
{"Time":"2020-07-21T00:34:41.291126682-07:00","Action":"output","Test":"TestStartStop/group","Output":"=== RUN   TestStartStop/group\n"}
{"Time":"2020-07-21T00:34:41.291130457-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2020-07-21T00:34:41.291133943-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== RUN   TestStartStop/group/old-k8s-version\n"}
{"Time":"2020-07-21T00:34:41.291138098-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== PAUSE TestStartStop/group/old-k8s-version\n"}
{"Time":"2020-07-21T00:34:41.291141683-07:00","Action":"pause","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2020-07-21T00:34:41.2911453-07:00","Action":"run","Test":"TestStartStop/group/newest-cni"}
{"Time":"2020-07-21T00:34:41.291148733-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== RUN   TestStartStop/group/newest-cni\n"}
{"Time":"2020-07-21T00:34:41.291152751-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== PAUSE TestStartStop/group/newest-cni\n"}
{"Time":"2020-07-21T00:34:41.291156257-07:00","Action":"pause","Test":"TestStartStop/group/newest-cni"}
{"Time":"2020-07-21T00:34:41.291159805-07:00","Action":"run","Test":"TestStartStop/group/containerd"}
{"Time":"2020-07-21T00:34:41.291163195-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"=== RUN   TestStartStop/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.291170043-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"=== PAUSE TestStartStop/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.291173647-07:00","Action":"pause","Test":"TestStartStop/group/containerd"}
{"Time":"2020-07-21T00:34:41.291177232-07:00","Action":"run","Test":"TestStartStop/group/crio"}
{"Time":"2020-07-21T00:34:41.291180663-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"=== RUN   TestStartStop/group/crio\n"}
{"Time":"2020-07-21T00:34:41.291184593-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"=== PAUSE TestStartStop/group/crio\n"}
{"Time":"2020-07-21T00:34:41.291188084-07:00","Action":"pause","Test":"TestStartStop/group/crio"}
{"Time":"2020-07-21T00:34:41.291191635-07:00","Action":"run","Test":"TestStartStop/group/embed-certs"}
{"Time":"2020-07-21T00:34:41.291195052-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== RUN   TestStartStop/group/embed-certs\n"}
{"Time":"2020-07-21T00:34:41.291201201-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== PAUSE TestStartStop/group/embed-certs\n"}
{"Time":"2020-07-21T00:34:41.291204868-07:00","Action":"pause","Test":"TestStartStop/group/embed-certs"}
{"Time":"2020-07-21T00:34:41.291208528-07:00","Action":"cont","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2020-07-21T00:34:41.291214996-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== CONT  TestNetworkPlugins/group/auto\n"}
{"Time":"2020-07-21T00:34:41.291219012-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/Start"}
{"Time":"2020-07-21T00:34:41.291225239-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"=== RUN   TestNetworkPlugins/group/auto/Start\n"}
{"Time":"2020-07-21T00:34:41.291229323-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p auto-20200721002335-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291233505-07:00","Action":"cont","Test":"TestRunningBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.291236982-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"=== CONT  TestRunningBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291240755-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p running-upgrade-20200721002044-23787: (2.968463045s)\n"}
{"Time":"2020-07-21T00:34:41.291245147-07:00","Action":"output","Test":"TestRunningBinaryUpgrade","Output":"--- PASS: TestRunningBinaryUpgrade (172.39s)\n"}
{"Time":"2020-07-21T00:34:41.291249002-07:00","Action":"pass","Test":"TestRunningBinaryUpgrade","Elapsed":172.39}
{"Time":"2020-07-21T00:34:41.29125258-07:00","Action":"cont","Test":"TestNetworkPlugins/group/false"}
{"Time":"2020-07-21T00:34:41.291256009-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== CONT  TestNetworkPlugins/group/false\n"}
{"Time":"2020-07-21T00:34:41.291259883-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/Start"}
{"Time":"2020-07-21T00:34:41.291263317-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"=== RUN   TestNetworkPlugins/group/false/Start\n"}
{"Time":"2020-07-21T00:34:41.29126722-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p false-20200721002337-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=false --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291290021-07:00","Action":"cont","Test":"TestStoppedBinaryUpgrade"}
{"Time":"2020-07-21T00:34:41.291296518-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"=== CONT  TestStoppedBinaryUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291307091-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    version_upgrade_test.go:148: (dbg) Done: out/minikube-linux-amd64 start -p stopped-upgrade-20200721002044-23787 --memory=2200 --alsologtostderr -v=1 --driver=docker : (1m40.667798694s)\n"}
{"Time":"2020-07-21T00:34:41.291313474-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:170: Cleaning up \"stopped-upgrade-20200721002044-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291322827-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p stopped-upgrade-20200721002044-23787\n"}
{"Time":"2020-07-21T00:34:41.291326952-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p stopped-upgrade-20200721002044-23787: (3.051145698s)\n"}
{"Time":"2020-07-21T00:34:41.291334475-07:00","Action":"output","Test":"TestStoppedBinaryUpgrade","Output":"--- PASS: TestStoppedBinaryUpgrade (231.06s)\n"}
{"Time":"2020-07-21T00:34:41.291338687-07:00","Action":"pass","Test":"TestStoppedBinaryUpgrade","Elapsed":231.06}
{"Time":"2020-07-21T00:34:41.29134247-07:00","Action":"cont","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2020-07-21T00:34:41.291345994-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== CONT  TestNetworkPlugins/group/cilium\n"}
{"Time":"2020-07-21T00:34:41.291353299-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/Start"}
{"Time":"2020-07-21T00:34:41.291357003-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Start","Output":"=== RUN   TestNetworkPlugins/group/cilium/Start\n"}
{"Time":"2020-07-21T00:34:41.29136107-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p cilium-20200721002435-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=cilium --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291365263-07:00","Action":"cont","Test":"TestNetworkPlugins/group/auto/Start"}
{"Time":"2020-07-21T00:34:41.291368769-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"=== CONT  TestNetworkPlugins/group/auto/Start\n"}
{"Time":"2020-07-21T00:34:41.291372562-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p auto-20200721002335-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --driver=docker : (1m0.642081727s)\n"}
{"Time":"2020-07-21T00:34:41.291376714-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.291380357-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/auto/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.29138422-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p auto-20200721002335-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.291391712-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/NetCatPod"}
{"Time":"2020-07-21T00:34:41.291395262-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/auto/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291404459-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context auto-20200721002335-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.291413972-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/auto/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.291418606-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-zwx44\" [dfd219a5-c484-4702-b155-cbbc94b12800] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.291423061-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-zwx44\" [dfd219a5-c484-4702-b155-cbbc94b12800] Running\n"}
{"Time":"2020-07-21T00:34:41.291429852-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/auto/NetCatPod: app=netcat healthy within 9.006049533s\n"}
{"Time":"2020-07-21T00:34:41.291433955-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/DNS"}
{"Time":"2020-07-21T00:34:41.291437404-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/DNS","Output":"=== RUN   TestNetworkPlugins/group/auto/DNS\n"}
{"Time":"2020-07-21T00:34:41.291443417-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context auto-20200721002335-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.291447469-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/Localhost"}
{"Time":"2020-07-21T00:34:41.291450937-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Localhost","Output":"=== RUN   TestNetworkPlugins/group/auto/Localhost\n"}
{"Time":"2020-07-21T00:34:41.291458043-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context auto-20200721002335-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291462442-07:00","Action":"run","Test":"TestNetworkPlugins/group/auto/HairPin"}
{"Time":"2020-07-21T00:34:41.291465935-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"=== RUN   TestNetworkPlugins/group/auto/HairPin\n"}
{"Time":"2020-07-21T00:34:41.291469775-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context auto-20200721002335-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291473935-07:00","Action":"cont","Test":"TestNetworkPlugins/group/false/Start"}
{"Time":"2020-07-21T00:34:41.291477471-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"=== CONT  TestNetworkPlugins/group/false/Start\n"}
{"Time":"2020-07-21T00:34:41.291481325-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p false-20200721002337-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=false --driver=docker : (1m12.876037111s)\n"}
{"Time":"2020-07-21T00:34:41.291485515-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.291494641-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/false/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.291498722-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p false-20200721002337-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.291502841-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/NetCatPod"}
{"Time":"2020-07-21T00:34:41.291506281-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/false/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.29151014-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context false-20200721002337-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.291514128-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/false/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.291518412-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-tj7kh\" [1fc2c776-7a93-406e-9e21-8ea7ea0b2928] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.29152281-07:00","Action":"cont","Test":"TestNetworkPlugins/group/auto/HairPin"}
{"Time":"2020-07-21T00:34:41.291526295-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"=== CONT  TestNetworkPlugins/group/auto/HairPin\n"}
{"Time":"2020-07-21T00:34:41.291530123-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"    net_test.go:188: (dbg) Non-zero exit: kubectl --context auto-20200721002335-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\": exit status 1 (5.244303095s)\n"}
{"Time":"2020-07-21T00:34:41.291534429-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.291538275-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.291545467-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.291549522-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.291553216-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.291557033-07:00","Action":"cont","Test":"TestNetworkPlugins/group/auto"}
{"Time":"2020-07-21T00:34:41.291560476-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"=== CONT  TestNetworkPlugins/group/auto\n"}
{"Time":"2020-07-21T00:34:41.29156436-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    net_test.go:204: \"auto\" test finished in 6m14.06920167s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.2915684-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:170: Cleaning up \"auto-20200721002335-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291572839-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p auto-20200721002335-23787\n"}
{"Time":"2020-07-21T00:34:41.291576782-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p auto-20200721002335-23787: (3.159236936s)\n"}
{"Time":"2020-07-21T00:34:41.291580679-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2020-07-21T00:34:41.291584134-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== CONT  TestNetworkPlugins/group/calico\n"}
{"Time":"2020-07-21T00:34:41.291588016-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/Start"}
{"Time":"2020-07-21T00:34:41.291591559-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"=== RUN   TestNetworkPlugins/group/calico/Start\n"}
{"Time":"2020-07-21T00:34:41.291595318-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p calico-20200721002454-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=calico --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.29159944-07:00","Action":"cont","Test":"TestNetworkPlugins/group/false/NetCatPod"}
{"Time":"2020-07-21T00:34:41.291602897-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/false/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291606725-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-tj7kh\" [1fc2c776-7a93-406e-9e21-8ea7ea0b2928] Running\n"}
{"Time":"2020-07-21T00:34:41.2916107-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/false/NetCatPod: app=netcat healthy within 11.006209805s\n"}
{"Time":"2020-07-21T00:34:41.291614589-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/DNS"}
{"Time":"2020-07-21T00:34:41.291618021-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/DNS","Output":"=== RUN   TestNetworkPlugins/group/false/DNS\n"}
{"Time":"2020-07-21T00:34:41.291621883-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context false-20200721002337-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.291625957-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/Localhost"}
{"Time":"2020-07-21T00:34:41.291629474-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Localhost","Output":"=== RUN   TestNetworkPlugins/group/false/Localhost\n"}
{"Time":"2020-07-21T00:34:41.291633313-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context false-20200721002337-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291643154-07:00","Action":"run","Test":"TestNetworkPlugins/group/false/HairPin"}
{"Time":"2020-07-21T00:34:41.291649341-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"=== RUN   TestNetworkPlugins/group/false/HairPin\n"}
{"Time":"2020-07-21T00:34:41.291653235-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context false-20200721002337-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291657355-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"    net_test.go:188: (dbg) Non-zero exit: kubectl --context false-20200721002337-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\": exit status 1 (5.251585798s)\n"}
{"Time":"2020-07-21T00:34:41.291661522-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.291668013-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.291671869-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.291675681-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29167937-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.291683133-07:00","Action":"cont","Test":"TestNetworkPlugins/group/false"}
{"Time":"2020-07-21T00:34:41.29168663-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"=== CONT  TestNetworkPlugins/group/false\n"}
{"Time":"2020-07-21T00:34:41.291690528-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    net_test.go:204: \"false\" test finished in 6m30.388497405s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.291694483-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:170: Cleaning up \"false-20200721002337-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291698503-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p false-20200721002337-23787\n"}
{"Time":"2020-07-21T00:34:41.291702586-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p false-20200721002337-23787: (2.779254672s)\n"}
{"Time":"2020-07-21T00:34:41.291709207-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave"}
{"Time":"2020-07-21T00:34:41.291712969-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"=== CONT  TestNetworkPlugins/group/custom-weave\n"}
{"Time":"2020-07-21T00:34:41.291716831-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-weave/Start"}
{"Time":"2020-07-21T00:34:41.291720302-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/Start","Output":"=== RUN   TestNetworkPlugins/group/custom-weave/Start\n"}
{"Time":"2020-07-21T00:34:41.291724169-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p custom-weave-20200721002510-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=testdata/weavenet.yaml --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291728435-07:00","Action":"cont","Test":"TestNetworkPlugins/group/cilium/Start"}
{"Time":"2020-07-21T00:34:41.291731939-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Start","Output":"=== CONT  TestNetworkPlugins/group/cilium/Start\n"}
{"Time":"2020-07-21T00:34:41.291738525-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p cilium-20200721002435-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=cilium --driver=docker : (1m42.968926533s)\n"}
{"Time":"2020-07-21T00:34:41.29174289-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/ControllerPod"}
{"Time":"2020-07-21T00:34:41.291746347-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Output":"=== RUN   TestNetworkPlugins/group/cilium/ControllerPod\n"}
{"Time":"2020-07-21T00:34:41.291753474-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/cilium/ControllerPod: waiting 10m0s for pods matching \"k8s-app=cilium\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.29175784-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Output":"    helpers_test.go:332: \"cilium-pgcx9\" [6d84d47b-0e43-46de-9350-8ca018feff02] Running / Ready:ContainersNotReady (containers with unready status: [cilium-agent]) / ContainersReady:ContainersNotReady (containers with unready status: [cilium-agent])\n"}
{"Time":"2020-07-21T00:34:41.291762241-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/cilium/ControllerPod: k8s-app=cilium healthy within 5.018890335s\n"}
{"Time":"2020-07-21T00:34:41.291766284-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.291769751-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/cilium/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.291773629-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p cilium-20200721002435-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.291779926-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/NetCatPod"}
{"Time":"2020-07-21T00:34:41.29178349-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/cilium/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291787356-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context cilium-20200721002435-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.291791619-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/cilium/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.291795967-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-w6s6v\" [466912ac-841d-4feb-9186-c4d29075bb6a] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.291800385-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-w6s6v\" [466912ac-841d-4feb-9186-c4d29075bb6a] Running\n"}
{"Time":"2020-07-21T00:34:41.291804388-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave/Start"}
{"Time":"2020-07-21T00:34:41.291807854-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/Start","Output":"=== CONT  TestNetworkPlugins/group/custom-weave/Start\n"}
{"Time":"2020-07-21T00:34:41.291811815-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p custom-weave-20200721002510-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=testdata/weavenet.yaml --driver=docker : (1m22.550626717s)\n"}
{"Time":"2020-07-21T00:34:41.291819294-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-weave/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.29182297-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/custom-weave/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.291826826-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p custom-weave-20200721002510-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.291830964-07:00","Action":"run","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod"}
{"Time":"2020-07-21T00:34:41.29183445-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/custom-weave/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291838289-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context custom-weave-20200721002510-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.291842381-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/custom-weave/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.291846573-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-6qt8m\" [86276ea3-b809-4bbb-a5d8-409bc3c891fc] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.291850935-07:00","Action":"cont","Test":"TestNetworkPlugins/group/cilium/NetCatPod"}
{"Time":"2020-07-21T00:34:41.291854475-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/cilium/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291868727-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/cilium/NetCatPod: app=netcat healthy within 12.014795944s\n"}
{"Time":"2020-07-21T00:34:41.291872806-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/DNS"}
{"Time":"2020-07-21T00:34:41.291876254-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/DNS","Output":"=== RUN   TestNetworkPlugins/group/cilium/DNS\n"}
{"Time":"2020-07-21T00:34:41.291880177-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context cilium-20200721002435-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.291884139-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/Localhost"}
{"Time":"2020-07-21T00:34:41.29189292-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Localhost","Output":"=== RUN   TestNetworkPlugins/group/cilium/Localhost\n"}
{"Time":"2020-07-21T00:34:41.291896815-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context cilium-20200721002435-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291900841-07:00","Action":"run","Test":"TestNetworkPlugins/group/cilium/HairPin"}
{"Time":"2020-07-21T00:34:41.291904367-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/HairPin","Output":"=== RUN   TestNetworkPlugins/group/cilium/HairPin\n"}
{"Time":"2020-07-21T00:34:41.291908359-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context cilium-20200721002435-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.291918338-07:00","Action":"cont","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2020-07-21T00:34:41.291922183-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== CONT  TestNetworkPlugins/group/cilium\n"}
{"Time":"2020-07-21T00:34:41.291928868-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    net_test.go:204: \"cilium\" test finished in 8m0.370071196s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.291933012-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    helpers_test.go:170: Cleaning up \"cilium-20200721002435-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.291937122-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p cilium-20200721002435-23787\n"}
{"Time":"2020-07-21T00:34:41.291941077-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod"}
{"Time":"2020-07-21T00:34:41.291948831-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/custom-weave/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.291952995-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-6qt8m\" [86276ea3-b809-4bbb-a5d8-409bc3c891fc] Running\n"}
{"Time":"2020-07-21T00:34:41.291957086-07:00","Action":"cont","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.29196054-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== CONT  TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.291964389-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:184: (dbg) Done: out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.18.4-rc.0 --alsologtostderr -v=1 --driver=docker : (4m39.845534706s)\n"}
{"Time":"2020-07-21T00:34:41.291968547-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:189: (dbg) Run:  kubectl --context kubernetes-upgrade-20200721001954-23787 version --output=json\n"}
{"Time":"2020-07-21T00:34:41.291975386-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:208: Attempting to downgrade Kubernetes (should fail)\n"}
{"Time":"2020-07-21T00:34:41.291981564-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:210: (dbg) Run:  out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.13.0 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.291985833-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:210: (dbg) Non-zero exit: out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.13.0 --driver=docker : exit status 78 (118.909151ms)\n"}
{"Time":"2020-07-21T00:34:41.291989932-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.291993619-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.291997506-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t* [kubernetes-upgrade-20200721001954-23787] minikube v1.12.1 on Debian 9.13\n"}
{"Time":"2020-07-21T00:34:41.292001572-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - KUBECONFIG=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/kubeconfig\n"}
{"Time":"2020-07-21T00:34:41.292005653-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_BIN=out/minikube-linux-amd64\n"}
{"Time":"2020-07-21T00:34:41.292009589-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_HOME=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube\n"}
{"Time":"2020-07-21T00:34:41.292016469-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  - MINIKUBE_LOCATION=8786\n"}
{"Time":"2020-07-21T00:34:41.292020475-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t! You have selected Kubernetes 1.13.0, but the existing cluster is running Kubernetes 1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.29202437-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29202806-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.292031854-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.29203558-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \tX Non-destructive downgrades are not supported, but you can proceed with one of the following options:\n"}
{"Time":"2020-07-21T00:34:41.292039498-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.292043245-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  1) Recreate the cluster with Kubernetes 1.13.0, by running:\n"}
{"Time":"2020-07-21T00:34:41.292047083-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.292051038-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t    minikube delete -p kubernetes-upgrade-20200721001954-23787\n"}
{"Time":"2020-07-21T00:34:41.292054875-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t    minikube start -p kubernetes-upgrade-20200721001954-23787 --kubernetes-version=v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.292058868-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.29206267-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  2) Create a second cluster with Kubernetes 1.13.0, by running:\n"}
{"Time":"2020-07-21T00:34:41.292066497-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.292070169-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t    minikube start -p kubernetes-upgrade-20200721001954-237872 --kubernetes-version=v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.292074038-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.292077771-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t  3) Use the existing cluster at version Kubernetes 1.18.4-rc.0, by running:\n"}
{"Time":"2020-07-21T00:34:41.29208172-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.292085403-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t    minikube start -p kubernetes-upgrade-20200721001954-23787 --kubernetes-version=v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.292089357-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \t    \n"}
{"Time":"2020-07-21T00:34:41.292097701-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.292101774-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.292105531-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:214: Attempting restart after unsuccessful downgrade\n"}
{"Time":"2020-07-21T00:34:41.292109568-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:216: (dbg) Run:  out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.18.4-rc.0 --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.292116615-07:00","Action":"cont","Test":"TestNetworkPlugins/group/cilium"}
{"Time":"2020-07-21T00:34:41.292120306-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"=== CONT  TestNetworkPlugins/group/cilium\n"}
{"Time":"2020-07-21T00:34:41.292124289-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p cilium-20200721002435-23787: (2.972393425s)\n"}
{"Time":"2020-07-21T00:34:41.292128246-07:00","Action":"cont","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2020-07-21T00:34:41.292131769-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== CONT  TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2020-07-21T00:34:41.292135626-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/Start"}
{"Time":"2020-07-21T00:34:41.292139174-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/Start\n"}
{"Time":"2020-07-21T00:34:41.292143373-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p enable-default-cni-20200721002640-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --enable-default-cni=true --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.292147745-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico/Start"}
{"Time":"2020-07-21T00:34:41.292151314-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"=== CONT  TestNetworkPlugins/group/calico/Start\n"}
{"Time":"2020-07-21T00:34:41.292155229-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p calico-20200721002454-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=calico --driver=docker : (1m46.708860718s)\n"}
{"Time":"2020-07-21T00:34:41.292159372-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/ControllerPod"}
{"Time":"2020-07-21T00:34:41.292166713-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"=== RUN   TestNetworkPlugins/group/calico/ControllerPod\n"}
{"Time":"2020-07-21T00:34:41.29217097-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/calico/ControllerPod: waiting 10m0s for pods matching \"k8s-app=calico-node\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.292175328-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"    helpers_test.go:332: \"calico-node-mqvrn\" [05ce7062-74e2-4e03-a98e-5e8570a230e5] Running / Ready:ContainersNotReady (containers with unready status: [calico-node]) / ContainersReady:ContainersNotReady (containers with unready status: [calico-node])\n"}
{"Time":"2020-07-21T00:34:41.292179705-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"    helpers_test.go:332: \"calico-node-mqvrn\" [05ce7062-74e2-4e03-a98e-5e8570a230e5] Running\n"}
{"Time":"2020-07-21T00:34:41.292183937-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292187471-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/custom-weave/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292191407-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/custom-weave/NetCatPod: app=netcat healthy within 10.01216776s\n"}
{"Time":"2020-07-21T00:34:41.292195396-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave"}
{"Time":"2020-07-21T00:34:41.292198883-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"=== CONT  TestNetworkPlugins/group/custom-weave\n"}
{"Time":"2020-07-21T00:34:41.292206216-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"    net_test.go:147: skipping remaining tests for weave, as results can be unpredictable\n"}
{"Time":"2020-07-21T00:34:41.292212572-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"    helpers_test.go:170: Cleaning up \"custom-weave-20200721002510-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.292216757-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p custom-weave-20200721002510-23787\n"}
{"Time":"2020-07-21T00:34:41.292220863-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico/ControllerPod"}
{"Time":"2020-07-21T00:34:41.292224361-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"=== CONT  TestNetworkPlugins/group/calico/ControllerPod\n"}
{"Time":"2020-07-21T00:34:41.292228214-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/calico/ControllerPod: k8s-app=calico-node healthy within 5.017643122s\n"}
{"Time":"2020-07-21T00:34:41.292232232-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.292235736-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/calico/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.292239633-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p calico-20200721002454-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.292243724-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292247262-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/calico/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292251137-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context calico-20200721002454-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.29225515-07:00","Action":"cont","Test":"TestNetworkPlugins/group/custom-weave"}
{"Time":"2020-07-21T00:34:41.292258649-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"=== CONT  TestNetworkPlugins/group/custom-weave\n"}
{"Time":"2020-07-21T00:34:41.292262452-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p custom-weave-20200721002510-23787: (3.312138301s)\n"}
{"Time":"2020-07-21T00:34:41.292266413-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2020-07-21T00:34:41.292270038-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== CONT  TestNetworkPlugins/group/kindnet\n"}
{"Time":"2020-07-21T00:34:41.2922743-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/Start"}
{"Time":"2020-07-21T00:34:41.29228031-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"=== RUN   TestNetworkPlugins/group/kindnet/Start\n"}
{"Time":"2020-07-21T00:34:41.292284195-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p kindnet-20200721002646-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=kindnet --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.292290557-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292293995-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/calico/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292297969-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/calico/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.292305461-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-zddm9\" [3dc13b73-5536-4ca1-b624-cdd891307ccc] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.292310043-07:00","Action":"cont","Test":"TestKubernetesUpgrade"}
{"Time":"2020-07-21T00:34:41.292313578-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"=== CONT  TestKubernetesUpgrade\n"}
{"Time":"2020-07-21T00:34:41.292317449-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    version_upgrade_test.go:216: (dbg) Done: out/minikube-linux-amd64 start -p kubernetes-upgrade-20200721001954-23787 --memory=2200 --kubernetes-version=v1.18.4-rc.0 --alsologtostderr -v=1 --driver=docker : (9.635509937s)\n"}
{"Time":"2020-07-21T00:34:41.292321625-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:170: Cleaning up \"kubernetes-upgrade-20200721001954-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.292325632-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p kubernetes-upgrade-20200721001954-23787\n"}
{"Time":"2020-07-21T00:34:41.292329572-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p kubernetes-upgrade-20200721001954-23787: (2.699761283s)\n"}
{"Time":"2020-07-21T00:34:41.292334077-07:00","Action":"output","Test":"TestKubernetesUpgrade","Output":"--- PASS: TestKubernetesUpgrade (417.06s)\n"}
{"Time":"2020-07-21T00:34:41.292337935-07:00","Action":"pass","Test":"TestKubernetesUpgrade","Elapsed":417.06}
{"Time":"2020-07-21T00:34:41.292342009-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2020-07-21T00:34:41.292345471-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== CONT  TestNetworkPlugins/group/bridge\n"}
{"Time":"2020-07-21T00:34:41.292351576-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/Start"}
{"Time":"2020-07-21T00:34:41.292355123-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"=== RUN   TestNetworkPlugins/group/bridge/Start\n"}
{"Time":"2020-07-21T00:34:41.292358966-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p bridge-20200721002651-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=bridge --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.292363105-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292366596-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/calico/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292370408-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-zddm9\" [3dc13b73-5536-4ca1-b624-cdd891307ccc] Running\n"}
{"Time":"2020-07-21T00:34:41.292374766-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/calico/NetCatPod: app=netcat healthy within 11.017079244s\n"}
{"Time":"2020-07-21T00:34:41.292378887-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/DNS"}
{"Time":"2020-07-21T00:34:41.29238676-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/DNS","Output":"=== RUN   TestNetworkPlugins/group/calico/DNS\n"}
{"Time":"2020-07-21T00:34:41.292391116-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context calico-20200721002454-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.292398272-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/Localhost"}
{"Time":"2020-07-21T00:34:41.292403443-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Localhost","Output":"=== RUN   TestNetworkPlugins/group/calico/Localhost\n"}
{"Time":"2020-07-21T00:34:41.292420586-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context calico-20200721002454-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.292425061-07:00","Action":"run","Test":"TestNetworkPlugins/group/calico/HairPin"}
{"Time":"2020-07-21T00:34:41.292428638-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/HairPin","Output":"=== RUN   TestNetworkPlugins/group/calico/HairPin\n"}
{"Time":"2020-07-21T00:34:41.292434853-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context calico-20200721002454-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.292439021-07:00","Action":"cont","Test":"TestNetworkPlugins/group/calico"}
{"Time":"2020-07-21T00:34:41.29244253-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"=== CONT  TestNetworkPlugins/group/calico\n"}
{"Time":"2020-07-21T00:34:41.292446389-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    net_test.go:204: \"calico\" test finished in 8m21.555897667s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.292450332-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:170: Cleaning up \"calico-20200721002454-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.292454301-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p calico-20200721002454-23787\n"}
{"Time":"2020-07-21T00:34:41.292458487-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p calico-20200721002454-23787: (3.52834634s)\n"}
{"Time":"2020-07-21T00:34:41.292462455-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2020-07-21T00:34:41.292465924-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== CONT  TestNetworkPlugins/group/kubenet\n"}
{"Time":"2020-07-21T00:34:41.292469726-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/Start"}
{"Time":"2020-07-21T00:34:41.292473199-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"=== RUN   TestNetworkPlugins/group/kubenet/Start\n"}
{"Time":"2020-07-21T00:34:41.2924799-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"    net_test.go:80: (dbg) Run:  out/minikube-linux-amd64 start -p kubenet-20200721002702-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --network-plugin=kubenet --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.29248419-07:00","Action":"cont","Test":"TestNetworkPlugins/group/enable-default-cni/Start"}
{"Time":"2020-07-21T00:34:41.292487736-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"=== CONT  TestNetworkPlugins/group/enable-default-cni/Start\n"}
{"Time":"2020-07-21T00:34:41.292491659-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p enable-default-cni-20200721002640-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --enable-default-cni=true --driver=docker : (1m15.905810122s)\n"}
{"Time":"2020-07-21T00:34:41.292495941-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.292502398-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.292506593-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p enable-default-cni-20200721002640-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.292510786-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292514286-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292518183-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context enable-default-cni-20200721002640-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.292522273-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/enable-default-cni/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.292526511-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-vsrsx\" [7c513b9d-9a43-4868-9d2f-7893e31b2583] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.292530833-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-vsrsx\" [7c513b9d-9a43-4868-9d2f-7893e31b2583] Running\n"}
{"Time":"2020-07-21T00:34:41.292537295-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/enable-default-cni/NetCatPod: app=netcat healthy within 12.077107564s\n"}
{"Time":"2020-07-21T00:34:41.292541364-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/DNS"}
{"Time":"2020-07-21T00:34:41.292544857-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/DNS","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/DNS\n"}
{"Time":"2020-07-21T00:34:41.292551846-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context enable-default-cni-20200721002640-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.292556031-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/DNS","Output":"    net_test.go:156: (dbg) Done: kubectl --context enable-default-cni-20200721002640-23787 exec deployment/netcat -- nslookup kubernetes.default: (7.293277156s)\n"}
{"Time":"2020-07-21T00:34:41.292560126-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/Localhost"}
{"Time":"2020-07-21T00:34:41.292563632-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Localhost","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/Localhost\n"}
{"Time":"2020-07-21T00:34:41.292567532-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context enable-default-cni-20200721002640-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.292571671-07:00","Action":"run","Test":"TestNetworkPlugins/group/enable-default-cni/HairPin"}
{"Time":"2020-07-21T00:34:41.292575187-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/HairPin","Output":"=== RUN   TestNetworkPlugins/group/enable-default-cni/HairPin\n"}
{"Time":"2020-07-21T00:34:41.29258182-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context enable-default-cni-20200721002640-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.292586104-07:00","Action":"cont","Test":"TestNetworkPlugins/group/enable-default-cni"}
{"Time":"2020-07-21T00:34:41.292589573-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"=== CONT  TestNetworkPlugins/group/enable-default-cni\n"}
{"Time":"2020-07-21T00:34:41.292593457-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    net_test.go:204: \"enable-default-cni\" test finished in 9m39.808490031s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.292597481-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:170: Cleaning up \"enable-default-cni-20200721002640-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.292601476-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p enable-default-cni-20200721002640-23787\n"}
{"Time":"2020-07-21T00:34:41.292605446-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p enable-default-cni-20200721002640-23787: (3.374954622s)\n"}
{"Time":"2020-07-21T00:34:41.292609473-07:00","Action":"cont","Test":"TestFunctional/parallel/ComponentHealth"}
{"Time":"2020-07-21T00:34:41.292613077-07:00","Action":"output","Test":"TestFunctional/parallel/ComponentHealth","Output":"=== CONT  TestFunctional/parallel/ComponentHealth\n"}
{"Time":"2020-07-21T00:34:41.292619744-07:00","Action":"output","Test":"TestFunctional/parallel/ComponentHealth","Output":"    functional_test.go:314: (dbg) Run:  kubectl --context functional-20200721000927-23787 get cs -o=json\n"}
{"Time":"2020-07-21T00:34:41.292629338-07:00","Action":"cont","Test":"TestFunctional/parallel/NodeLabels"}
{"Time":"2020-07-21T00:34:41.292632995-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"=== CONT  TestFunctional/parallel/NodeLabels\n"}
{"Time":"2020-07-21T00:34:41.292636841-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"    functional_test.go:141: (dbg) Run:  kubectl --context functional-20200721000927-23787 get nodes --output=go-template \"--template='{{range $k, $v := (index .items 0).metadata.labels}}{{$k}} {{end}}'\"\n"}
{"Time":"2020-07-21T00:34:41.29264109-07:00","Action":"cont","Test":"TestFunctional/parallel/DockerEnv"}
{"Time":"2020-07-21T00:34:41.292644543-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"=== CONT  TestFunctional/parallel/DockerEnv\n"}
{"Time":"2020-07-21T00:34:41.292648346-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"    functional_test.go:166: (dbg) Run:  /bin/bash -c \"eval $(out/minikube-linux-amd64 -p functional-20200721000927-23787 docker-env) \u0026\u0026 out/minikube-linux-amd64 status -p functional-20200721000927-23787\"\n"}
{"Time":"2020-07-21T00:34:41.292652879-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"    functional_test.go:186: (dbg) Run:  /bin/bash -c \"eval $(out/minikube-linux-amd64 -p functional-20200721000927-23787 docker-env) \u0026\u0026 docker images\"\n"}
{"Time":"2020-07-21T00:34:41.292657198-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet/Start"}
{"Time":"2020-07-21T00:34:41.292660666-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"=== CONT  TestNetworkPlugins/group/kubenet/Start\n"}
{"Time":"2020-07-21T00:34:41.292664444-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p kubenet-20200721002702-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --network-plugin=kubenet --driver=docker : (1m19.535674497s)\n"}
{"Time":"2020-07-21T00:34:41.292671855-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.292675675-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/kubenet/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.29267964-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p kubenet-20200721002702-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.292683738-07:00","Action":"cont","Test":"TestFunctional/parallel/UpdateContextCmd"}
{"Time":"2020-07-21T00:34:41.292687326-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"=== CONT  TestFunctional/parallel/UpdateContextCmd\n"}
{"Time":"2020-07-21T00:34:41.292691193-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"    functional_test.go:1007: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 update-context --alsologtostderr -v=2\n"}
{"Time":"2020-07-21T00:34:41.292695249-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292698787-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/kubenet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292702667-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context kubenet-20200721002702-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.292706707-07:00","Action":"cont","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2020-07-21T00:34:41.292710204-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== CONT  TestFunctional/parallel/CertSync\n"}
{"Time":"2020-07-21T00:34:41.292714002-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:989: Checking for existence of /etc/ssl/certs/23787.pem within VM\n"}
{"Time":"2020-07-21T00:34:41.292720266-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:990: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"sudo cat /etc/ssl/certs/23787.pem\"\n"}
{"Time":"2020-07-21T00:34:41.292726526-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292730059-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/kubenet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292733903-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/kubenet/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.29273812-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-b2ntb\" [54593938-707c-4b1a-ac91-12e32586e379] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.292742497-07:00","Action":"cont","Test":"TestFunctional/parallel/CertSync"}
{"Time":"2020-07-21T00:34:41.292745936-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"=== CONT  TestFunctional/parallel/CertSync\n"}
{"Time":"2020-07-21T00:34:41.292749725-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:989: Checking for existence of /usr/share/ca-certificates/23787.pem within VM\n"}
{"Time":"2020-07-21T00:34:41.292753695-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:990: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"sudo cat /usr/share/ca-certificates/23787.pem\"\n"}
{"Time":"2020-07-21T00:34:41.292760812-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:989: Checking for existence of /etc/ssl/certs/51391683.0 within VM\n"}
{"Time":"2020-07-21T00:34:41.292764891-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"    functional_test.go:990: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"sudo cat /etc/ssl/certs/51391683.0\"\n"}
{"Time":"2020-07-21T00:34:41.292769138-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge/Start"}
{"Time":"2020-07-21T00:34:41.292772656-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"=== CONT  TestNetworkPlugins/group/bridge/Start\n"}
{"Time":"2020-07-21T00:34:41.292776517-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p bridge-20200721002651-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=bridge --driver=docker : (1m31.27004319s)\n"}
{"Time":"2020-07-21T00:34:41.292780678-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.292784206-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/bridge/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.292788121-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p bridge-20200721002651-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.292792261-07:00","Action":"cont","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2020-07-21T00:34:41.29279582-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== CONT  TestFunctional/parallel/FileSync\n"}
{"Time":"2020-07-21T00:34:41.292804227-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:950: Checking for existence of /etc/test/nested/copy/23787/hosts within VM\n"}
{"Time":"2020-07-21T00:34:41.292808303-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:951: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"sudo cat /etc/test/nested/copy/23787/hosts\"\n"}
{"Time":"2020-07-21T00:34:41.292812418-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/NetCatPod"}
{"Time":"2020-07-21T00:34:41.29281603-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/bridge/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292819877-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context bridge-20200721002651-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.29282389-07:00","Action":"cont","Test":"TestFunctional/parallel/FileSync"}
{"Time":"2020-07-21T00:34:41.292827372-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"=== CONT  TestFunctional/parallel/FileSync\n"}
{"Time":"2020-07-21T00:34:41.292831249-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"    functional_test.go:956: file sync test content: Test file for checking file sync process\n"}
{"Time":"2020-07-21T00:34:41.292835466-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.292839128-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.292845149-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:855: (dbg) Run:  kubectl --context functional-20200721000927-23787 replace --force -f testdata/mysql.yaml\n"}
{"Time":"2020-07-21T00:34:41.292851938-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292855597-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/bridge/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292859704-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/bridge/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.292863933-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-kvqbc\" [b0a69444-b655-4745-8839-86a3d9cae45b] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.292868368-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.292871838-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.292875613-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:860: (dbg) TestFunctional/parallel/MySQL: waiting 10m0s for pods matching \"app=mysql\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.292879918-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    helpers_test.go:332: \"mysql-78ff7d6cf9-kjjg8\" [b220248b-dbc2-4b69-83fe-e7df06e66897] Pending\n"}
{"Time":"2020-07-21T00:34:41.292883908-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    helpers_test.go:332: \"mysql-78ff7d6cf9-kjjg8\" [b220248b-dbc2-4b69-83fe-e7df06e66897] Pending / Ready:ContainersNotReady (containers with unready status: [mysql]) / ContainersReady:ContainersNotReady (containers with unready status: [mysql])\n"}
{"Time":"2020-07-21T00:34:41.292888176-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292891991-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/kubenet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292895905-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-b2ntb\" [54593938-707c-4b1a-ac91-12e32586e379] Running\n"}
{"Time":"2020-07-21T00:34:41.292899927-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292906775-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/bridge/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292910885-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-kvqbc\" [b0a69444-b655-4745-8839-86a3d9cae45b] Running\n"}
{"Time":"2020-07-21T00:34:41.292917035-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet/Start"}
{"Time":"2020-07-21T00:34:41.292920678-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"=== CONT  TestNetworkPlugins/group/kindnet/Start\n"}
{"Time":"2020-07-21T00:34:41.292924536-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"    net_test.go:80: (dbg) Done: out/minikube-linux-amd64 start -p kindnet-20200721002646-23787 --memory=1800 --alsologtostderr --wait=true --wait-timeout=25m --cni=kindnet --driver=docker : (1m44.526507897s)\n"}
{"Time":"2020-07-21T00:34:41.292928781-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/ControllerPod"}
{"Time":"2020-07-21T00:34:41.292932315-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"=== RUN   TestNetworkPlugins/group/kindnet/ControllerPod\n"}
{"Time":"2020-07-21T00:34:41.292936221-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/kindnet/ControllerPod: waiting 10m0s for pods matching \"app=kindnet\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.29294815-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"    helpers_test.go:332: \"kindnet-c4sxc\" [1852d7ff-cbbe-4eac-b080-08e52bd0fdf7] Running\n"}
{"Time":"2020-07-21T00:34:41.292952848-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.292956534-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/kubenet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.292960509-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/kubenet/NetCatPod: app=netcat healthy within 9.008660223s\n"}
{"Time":"2020-07-21T00:34:41.292964522-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/DNS"}
{"Time":"2020-07-21T00:34:41.292968007-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/DNS","Output":"=== RUN   TestNetworkPlugins/group/kubenet/DNS\n"}
{"Time":"2020-07-21T00:34:41.292971801-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context kubenet-20200721002702-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.292975787-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/Localhost"}
{"Time":"2020-07-21T00:34:41.292979278-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Localhost","Output":"=== RUN   TestNetworkPlugins/group/kubenet/Localhost\n"}
{"Time":"2020-07-21T00:34:41.292983052-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context kubenet-20200721002702-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.292987163-07:00","Action":"run","Test":"TestNetworkPlugins/group/kubenet/HairPin"}
{"Time":"2020-07-21T00:34:41.292990638-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/HairPin","Output":"=== RUN   TestNetworkPlugins/group/kubenet/HairPin\n"}
{"Time":"2020-07-21T00:34:41.292994413-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context kubenet-20200721002702-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.29299848-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2020-07-21T00:34:41.293002042-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== CONT  TestNetworkPlugins/group/kubenet\n"}
{"Time":"2020-07-21T00:34:41.293005864-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    net_test.go:204: \"kubenet\" test finished in 9m54.956730613s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.293009884-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:170: Cleaning up \"kubenet-20200721002702-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.293016155-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p kubenet-20200721002702-23787\n"}
{"Time":"2020-07-21T00:34:41.293020146-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge/NetCatPod"}
{"Time":"2020-07-21T00:34:41.293023594-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/bridge/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.293027372-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/bridge/NetCatPod: app=netcat healthy within 10.008459592s\n"}
{"Time":"2020-07-21T00:34:41.293034143-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/DNS"}
{"Time":"2020-07-21T00:34:41.2930401-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/DNS","Output":"=== RUN   TestNetworkPlugins/group/bridge/DNS\n"}
{"Time":"2020-07-21T00:34:41.293043945-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context bridge-20200721002651-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.29304803-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.293051608-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.29305549-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    helpers_test.go:332: \"mysql-78ff7d6cf9-kjjg8\" [b220248b-dbc2-4b69-83fe-e7df06e66897] Running\n"}
{"Time":"2020-07-21T00:34:41.293062319-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/Localhost"}
{"Time":"2020-07-21T00:34:41.293065958-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Localhost","Output":"=== RUN   TestNetworkPlugins/group/bridge/Localhost\n"}
{"Time":"2020-07-21T00:34:41.293072167-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context bridge-20200721002651-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.29307652-07:00","Action":"run","Test":"TestNetworkPlugins/group/bridge/HairPin"}
{"Time":"2020-07-21T00:34:41.293079986-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/HairPin","Output":"=== RUN   TestNetworkPlugins/group/bridge/HairPin\n"}
{"Time":"2020-07-21T00:34:41.293083859-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context bridge-20200721002651-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.293088044-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2020-07-21T00:34:41.293091463-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== CONT  TestNetworkPlugins/group/bridge\n"}
{"Time":"2020-07-21T00:34:41.293097629-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    net_test.go:204: \"bridge\" test finished in 9m57.594839774s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.293101607-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:170: Cleaning up \"bridge-20200721002651-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.293105559-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p bridge-20200721002651-23787\n"}
{"Time":"2020-07-21T00:34:41.293109589-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kubenet"}
{"Time":"2020-07-21T00:34:41.293113035-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"=== CONT  TestNetworkPlugins/group/kubenet\n"}
{"Time":"2020-07-21T00:34:41.29311701-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p kubenet-20200721002702-23787: (3.082163266s)\n"}
{"Time":"2020-07-21T00:34:41.293121025-07:00","Action":"cont","Test":"TestFunctional/parallel/SSHCmd"}
{"Time":"2020-07-21T00:34:41.293124465-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"=== CONT  TestFunctional/parallel/SSHCmd\n"}
{"Time":"2020-07-21T00:34:41.293128288-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"    functional_test.go:820: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"echo hello\"\n"}
{"Time":"2020-07-21T00:34:41.29313226-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"    functional_test.go:837: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"cat /etc/hostname\"\n"}
{"Time":"2020-07-21T00:34:41.293139092-07:00","Action":"cont","Test":"TestFunctional/parallel/TunnelCmd"}
{"Time":"2020-07-21T00:34:41.293143031-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"=== CONT  TestFunctional/parallel/TunnelCmd\n"}
{"Time":"2020-07-21T00:34:41.293146797-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial"}
{"Time":"2020-07-21T00:34:41.293150299-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial\n"}
{"Time":"2020-07-21T00:34:41.293154142-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel"}
{"Time":"2020-07-21T00:34:41.293157722-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/StartTunnel\n"}
{"Time":"2020-07-21T00:34:41.293161678-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"    fn_tunnel_cmd_test.go:122: (dbg) daemon: [out/minikube-linux-amd64 -p functional-20200721000927-23787 tunnel --alsologtostderr]\n"}
{"Time":"2020-07-21T00:34:41.293165742-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService"}
{"Time":"2020-07-21T00:34:41.293169328-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/WaitService\n"}
{"Time":"2020-07-21T00:34:41.29317321-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"    fn_tunnel_cmd_test.go:142: (dbg) Run:  kubectl --context functional-20200721000927-23787 apply -f testdata/testsvc.yaml\n"}
{"Time":"2020-07-21T00:34:41.293179987-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"    fn_tunnel_cmd_test.go:146: (dbg) TestFunctional/parallel/TunnelCmd/serial/WaitService: waiting 4m0s for pods matching \"run=nginx-svc\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.293184433-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"    helpers_test.go:332: \"nginx-svc\" [6a712bac-27ec-487f-bb11-6127744651c2] Pending / Ready:ContainersNotReady (containers with unready status: [nginx]) / ContainersReady:ContainersNotReady (containers with unready status: [nginx])\n"}
{"Time":"2020-07-21T00:34:41.293189047-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet/ControllerPod"}
{"Time":"2020-07-21T00:34:41.29319258-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"=== CONT  TestNetworkPlugins/group/kindnet/ControllerPod\n"}
{"Time":"2020-07-21T00:34:41.293196451-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"    net_test.go:88: (dbg) TestNetworkPlugins/group/kindnet/ControllerPod: app=kindnet healthy within 5.01563168s\n"}
{"Time":"2020-07-21T00:34:41.293203124-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/KubeletFlags"}
{"Time":"2020-07-21T00:34:41.293206695-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/KubeletFlags","Output":"=== RUN   TestNetworkPlugins/group/kindnet/KubeletFlags\n"}
{"Time":"2020-07-21T00:34:41.293210547-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/KubeletFlags","Output":"    net_test.go:102: (dbg) Run:  out/minikube-linux-amd64 ssh -p kindnet-20200721002646-23787 \"pgrep -a kubelet\"\n"}
{"Time":"2020-07-21T00:34:41.293219336-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.293223034-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"=== RUN   TestNetworkPlugins/group/kindnet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.293233063-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"    net_test.go:125: (dbg) Run:  kubectl --context kindnet-20200721002646-23787 replace --force -f testdata/netcat-deployment.yaml\n"}
{"Time":"2020-07-21T00:34:41.29324044-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/kindnet/NetCatPod: waiting 15m0s for pods matching \"app=netcat\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.293244791-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-sklfx\" [fdace54b-80a0-4758-bcf9-8d7a9708d0cf] Pending / Ready:ContainersNotReady (containers with unready status: [dnsutils]) / ContainersReady:ContainersNotReady (containers with unready status: [dnsutils])\n"}
{"Time":"2020-07-21T00:34:41.293249196-07:00","Action":"cont","Test":"TestNetworkPlugins/group/bridge"}
{"Time":"2020-07-21T00:34:41.293252656-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"=== CONT  TestNetworkPlugins/group/bridge\n"}
{"Time":"2020-07-21T00:34:41.29325681-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p bridge-20200721002651-23787: (3.179521287s)\n"}
{"Time":"2020-07-21T00:34:41.293260763-07:00","Action":"cont","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2020-07-21T00:34:41.293264267-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== CONT  TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2020-07-21T00:34:41.293268236-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    fn_pvc_test.go:42: (dbg) TestFunctional/parallel/PersistentVolumeClaim: waiting 4m0s for pods matching \"integration-test=storage-provisioner\" in namespace \"kube-system\" ...\n"}
{"Time":"2020-07-21T00:34:41.293272696-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    helpers_test.go:332: \"storage-provisioner\" [af02a23a-27dd-4aaa-bd06-82404d138bb8] Running\n"}
{"Time":"2020-07-21T00:34:41.293276701-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.293283433-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.293287285-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:860: (dbg) TestFunctional/parallel/MySQL: app=mysql healthy within 15.01662843s\n"}
{"Time":"2020-07-21T00:34:41.293291259-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Run:  kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\"\n"}
{"Time":"2020-07-21T00:34:41.293295462-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Non-zero exit: kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\": exit status 1 (265.790147ms)\n"}
{"Time":"2020-07-21T00:34:41.293301778-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293305641-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.293309407-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tWarning: Using a password on the command line interface can be insecure.\n"}
{"Time":"2020-07-21T00:34:41.293313324-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n"}
{"Time":"2020-07-21T00:34:41.293317288-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.293323912-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293327832-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.293331608-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Run:  kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\"\n"}
{"Time":"2020-07-21T00:34:41.293335778-07:00","Action":"cont","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService"}
{"Time":"2020-07-21T00:34:41.2933393-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"=== CONT  TestFunctional/parallel/TunnelCmd/serial/WaitService\n"}
{"Time":"2020-07-21T00:34:41.293343204-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"    helpers_test.go:332: \"nginx-svc\" [6a712bac-27ec-487f-bb11-6127744651c2] Running\n"}
{"Time":"2020-07-21T00:34:41.293347237-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.293350704-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.293354548-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Non-zero exit: kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\": exit status 1 (244.889268ms)\n"}
{"Time":"2020-07-21T00:34:41.293358898-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293362642-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.293367388-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tWarning: Using a password on the command line interface can be insecure.\n"}
{"Time":"2020-07-21T00:34:41.29337135-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\n"}
{"Time":"2020-07-21T00:34:41.29337529-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.293379061-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293382747-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.293386553-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Run:  kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\"\n"}
{"Time":"2020-07-21T00:34:41.293390648-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Non-zero exit: kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\": exit status 1 (225.950345ms)\n"}
{"Time":"2020-07-21T00:34:41.293394805-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293398548-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.293402358-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tWarning: Using a password on the command line interface can be insecure.\n"}
{"Time":"2020-07-21T00:34:41.293406272-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\n"}
{"Time":"2020-07-21T00:34:41.293419247-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.293423291-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293426984-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.293430768-07:00","Action":"cont","Test":"TestFunctional/parallel/PersistentVolumeClaim"}
{"Time":"2020-07-21T00:34:41.293434314-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"=== CONT  TestFunctional/parallel/PersistentVolumeClaim\n"}
{"Time":"2020-07-21T00:34:41.29343815-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    fn_pvc_test.go:42: (dbg) TestFunctional/parallel/PersistentVolumeClaim: integration-test=storage-provisioner healthy within 5.00769897s\n"}
{"Time":"2020-07-21T00:34:41.293442192-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    fn_pvc_test.go:47: (dbg) Run:  kubectl --context functional-20200721000927-23787 get storageclass -o=json\n"}
{"Time":"2020-07-21T00:34:41.293446142-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    fn_pvc_test.go:67: (dbg) Run:  kubectl --context functional-20200721000927-23787 apply -f testdata/pvc.yaml\n"}
{"Time":"2020-07-21T00:34:41.293450033-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"    fn_pvc_test.go:73: (dbg) Run:  kubectl --context functional-20200721000927-23787 get pvc testpvc -o=json\n"}
{"Time":"2020-07-21T00:34:41.293453958-07:00","Action":"cont","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2020-07-21T00:34:41.293457421-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== CONT  TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2020-07-21T00:34:41.293461184-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"    functional_test.go:787: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 addons list\n"}
{"Time":"2020-07-21T00:34:41.293465099-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.293468585-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/kindnet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.293530929-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"    helpers_test.go:332: \"netcat-7987c4c66b-sklfx\" [fdace54b-80a0-4758-bcf9-8d7a9708d0cf] Running\n"}
{"Time":"2020-07-21T00:34:41.293535587-07:00","Action":"cont","Test":"TestFunctional/parallel/AddonsCmd"}
{"Time":"2020-07-21T00:34:41.293539197-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"=== CONT  TestFunctional/parallel/AddonsCmd\n"}
{"Time":"2020-07-21T00:34:41.293543071-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"    functional_test.go:798: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 addons list -o json\n"}
{"Time":"2020-07-21T00:34:41.293547458-07:00","Action":"cont","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2020-07-21T00:34:41.293550978-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== CONT  TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2020-07-21T00:34:41.293554752-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:681: (dbg) Run:  kubectl --context functional-20200721000927-23787 create deployment hello-node --image=k8s.gcr.io/echoserver:1.4\n"}
{"Time":"2020-07-21T00:34:41.293558891-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:685: (dbg) Run:  kubectl --context functional-20200721000927-23787 expose deployment hello-node --type=NodePort --port=8080\n"}
{"Time":"2020-07-21T00:34:41.293566884-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:690: (dbg) TestFunctional/parallel/ServiceCmd: waiting 10m0s for pods matching \"app=hello-node\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.29357141-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    helpers_test.go:332: \"hello-node-7bf657c596-4g4k6\" [babda8be-5120-409d-bb3e-85f19f95d88f] Pending / Ready:ContainersNotReady (containers with unready status: [echoserver]) / ContainersReady:ContainersNotReady (containers with unready status: [echoserver])\n"}
{"Time":"2020-07-21T00:34:41.293579216-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.293582952-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.293586848-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Run:  kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\"\n"}
{"Time":"2020-07-21T00:34:41.293591082-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Non-zero exit: kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\": exit status 1 (231.874489ms)\n"}
{"Time":"2020-07-21T00:34:41.293595276-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29360559-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.293610879-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tWarning: Using a password on the command line interface can be insecure.\n"}
{"Time":"2020-07-21T00:34:41.293614863-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n"}
{"Time":"2020-07-21T00:34:41.293618932-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \tcommand terminated with exit code 1\n"}
{"Time":"2020-07-21T00:34:41.293625242-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29362919-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.293635282-07:00","Action":"cont","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService"}
{"Time":"2020-07-21T00:34:41.293639426-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"=== CONT  TestFunctional/parallel/TunnelCmd/serial/WaitService\n"}
{"Time":"2020-07-21T00:34:41.29364593-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"    fn_tunnel_cmd_test.go:146: (dbg) TestFunctional/parallel/TunnelCmd/serial/WaitService: run=nginx-svc healthy within 10.005850259s\n"}
{"Time":"2020-07-21T00:34:41.293650326-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP"}
{"Time":"2020-07-21T00:34:41.29365395-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP\n"}
{"Time":"2020-07-21T00:34:41.293658043-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"    fn_tunnel_cmd_test.go:160: (dbg) Run:  kubectl --context functional-20200721000927-23787 get svc nginx-svc -o jsonpath={.status.loadBalancer.ingress[0].ip}\n"}
{"Time":"2020-07-21T00:34:41.293662233-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect"}
{"Time":"2020-07-21T00:34:41.293665771-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/AccessDirect\n"}
{"Time":"2020-07-21T00:34:41.29367311-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"    fn_tunnel_cmd_test.go:225: tunnel at http://10.102.79.74 is working!\n"}
{"Time":"2020-07-21T00:34:41.293677213-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig"}
{"Time":"2020-07-21T00:34:41.293680783-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig\n"}
{"Time":"2020-07-21T00:34:41.293684733-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"    fn_tunnel_cmd_test.go:92: DNS forwarding is supported for darwin only now, skipping test DNS forwarding\n"}
{"Time":"2020-07-21T00:34:41.293689373-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil"}
{"Time":"2020-07-21T00:34:41.293693057-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil\n"}
{"Time":"2020-07-21T00:34:41.293697076-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"    fn_tunnel_cmd_test.go:92: DNS forwarding is supported for darwin only now, skipping test DNS forwarding\n"}
{"Time":"2020-07-21T00:34:41.293701191-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS"}
{"Time":"2020-07-21T00:34:41.293704816-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS\n"}
{"Time":"2020-07-21T00:34:41.293708727-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"    fn_tunnel_cmd_test.go:92: DNS forwarding is supported for darwin only now, skipping test DNS forwarding\n"}
{"Time":"2020-07-21T00:34:41.293713781-07:00","Action":"run","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel"}
{"Time":"2020-07-21T00:34:41.293718805-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"=== RUN   TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel\n"}
{"Time":"2020-07-21T00:34:41.293724365-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"    fn_tunnel_cmd_test.go:360: (dbg) stopping [out/minikube-linux-amd64 -p functional-20200721000927-23787 tunnel --alsologtostderr] ...\n"}
{"Time":"2020-07-21T00:34:41.293729942-07:00","Action":"cont","Test":"TestFunctional/parallel/ProfileCmd"}
{"Time":"2020-07-21T00:34:41.293734825-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"=== CONT  TestFunctional/parallel/ProfileCmd\n"}
{"Time":"2020-07-21T00:34:41.293740065-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create"}
{"Time":"2020-07-21T00:34:41.293743633-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_not_create\n"}
{"Time":"2020-07-21T00:34:41.293747564-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"    functional_test.go:582: (dbg) Run:  out/minikube-linux-amd64 profile lis\n"}
{"Time":"2020-07-21T00:34:41.293751509-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"    functional_test.go:586: (dbg) Run:  out/minikube-linux-amd64 profile list --output json\n"}
{"Time":"2020-07-21T00:34:41.293758441-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_list"}
{"Time":"2020-07-21T00:34:41.293761969-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_list\n"}
{"Time":"2020-07-21T00:34:41.29376883-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"    functional_test.go:607: (dbg) Run:  out/minikube-linux-amd64 profile list\n"}
{"Time":"2020-07-21T00:34:41.293773017-07:00","Action":"run","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output"}
{"Time":"2020-07-21T00:34:41.293776645-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"=== RUN   TestFunctional/parallel/ProfileCmd/profile_json_output\n"}
{"Time":"2020-07-21T00:34:41.293780547-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"    functional_test.go:629: (dbg) Run:  out/minikube-linux-amd64 profile list --output json\n"}
{"Time":"2020-07-21T00:34:41.293784519-07:00","Action":"cont","Test":"TestFunctional/parallel/MySQL"}
{"Time":"2020-07-21T00:34:41.293787982-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"=== CONT  TestFunctional/parallel/MySQL\n"}
{"Time":"2020-07-21T00:34:41.293791788-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"    functional_test.go:867: (dbg) Run:  kubectl --context functional-20200721000927-23787 exec mysql-78ff7d6cf9-kjjg8 -- mysql -ppassword -e \"show databases;\"\n"}
{"Time":"2020-07-21T00:34:41.293799599-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.293803118-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.293806934-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:72: (dbg) daemon: [out/minikube-linux-amd64 mount -p functional-20200721000927-23787 /tmp/mounttest387537362:/mount-9p --alsologtostderr -v=1]\n"}
{"Time":"2020-07-21T00:34:41.293811188-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:106: wrote \"test-1595316527138504496\" to /tmp/mounttest387537362/created-by-test\n"}
{"Time":"2020-07-21T00:34:41.293817431-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:106: wrote \"test-1595316527138504496\" to /tmp/mounttest387537362/created-by-test-removed-by-pod\n"}
{"Time":"2020-07-21T00:34:41.293821665-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:106: wrote \"test-1595316527138504496\" to /tmp/mounttest387537362/test-1595316527138504496\n"}
{"Time":"2020-07-21T00:34:41.293825627-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:114: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2020-07-21T00:34:41.293829854-07:00","Action":"cont","Test":"TestFunctional/parallel/LogsCmd"}
{"Time":"2020-07-21T00:34:41.293833291-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"=== CONT  TestFunctional/parallel/LogsCmd\n"}
{"Time":"2020-07-21T00:34:41.293837209-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"    functional_test.go:566: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 logs\n"}
{"Time":"2020-07-21T00:34:41.29384127-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.293844775-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.2938487-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:114: (dbg) Non-zero exit: out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"findmnt -T /mount-9p | grep 9p\": exit status 1 (346.580184ms)\n"}
{"Time":"2020-07-21T00:34:41.293853012-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293856981-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.293863959-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        \tssh: Process exited with status 1\n"}
{"Time":"2020-07-21T00:34:41.293867997-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.293871893-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.293875642-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:114: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"findmnt -T /mount-9p | grep 9p\"\n"}
{"Time":"2020-07-21T00:34:41.293879703-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:128: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh -- ls -la /mount-9p\n"}
{"Time":"2020-07-21T00:34:41.293883736-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet/NetCatPod"}
{"Time":"2020-07-21T00:34:41.293887406-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"=== CONT  TestNetworkPlugins/group/kindnet/NetCatPod\n"}
{"Time":"2020-07-21T00:34:41.293891246-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"    net_test.go:139: (dbg) TestNetworkPlugins/group/kindnet/NetCatPod: app=netcat healthy within 11.007851789s\n"}
{"Time":"2020-07-21T00:34:41.293895335-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/DNS"}
{"Time":"2020-07-21T00:34:41.293899102-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/DNS","Output":"=== RUN   TestNetworkPlugins/group/kindnet/DNS\n"}
{"Time":"2020-07-21T00:34:41.293903008-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/DNS","Output":"    net_test.go:156: (dbg) Run:  kubectl --context kindnet-20200721002646-23787 exec deployment/netcat -- nslookup kubernetes.default\n"}
{"Time":"2020-07-21T00:34:41.293907298-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/Localhost"}
{"Time":"2020-07-21T00:34:41.293913563-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Localhost","Output":"=== RUN   TestNetworkPlugins/group/kindnet/Localhost\n"}
{"Time":"2020-07-21T00:34:41.293917806-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Localhost","Output":"    net_test.go:175: (dbg) Run:  kubectl --context kindnet-20200721002646-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z localhost 8080\"\n"}
{"Time":"2020-07-21T00:34:41.293921959-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.293925511-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.293929359-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:132: guest mount directory contents\n"}
{"Time":"2020-07-21T00:34:41.2939333-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        total 2\r\n"}
{"Time":"2020-07-21T00:34:41.293937138-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        -rw-r--r-- 1 docker docker 24 Jul 21 07:28 created-by-test\r\n"}
{"Time":"2020-07-21T00:34:41.293941066-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        -rw-r--r-- 1 docker docker 24 Jul 21 07:28 created-by-test-removed-by-pod\r\n"}
{"Time":"2020-07-21T00:34:41.293945076-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        -rw-r--r-- 1 docker docker 24 Jul 21 07:28 test-1595316527138504496\r\n"}
{"Time":"2020-07-21T00:34:41.293949338-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:136: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh cat /mount-9p/test-1595316527138504496\n"}
{"Time":"2020-07-21T00:34:41.293956607-07:00","Action":"run","Test":"TestNetworkPlugins/group/kindnet/HairPin"}
{"Time":"2020-07-21T00:34:41.293960318-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/HairPin","Output":"=== RUN   TestNetworkPlugins/group/kindnet/HairPin\n"}
{"Time":"2020-07-21T00:34:41.293966426-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/HairPin","Output":"    net_test.go:188: (dbg) Run:  kubectl --context kindnet-20200721002646-23787 exec deployment/netcat -- /bin/sh -c \"nc -w 5 -i 5 -z netcat 8080\"\n"}
{"Time":"2020-07-21T00:34:41.29397388-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2020-07-21T00:34:41.293977349-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== CONT  TestNetworkPlugins/group/kindnet\n"}
{"Time":"2020-07-21T00:34:41.293981269-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    net_test.go:204: \"kindnet\" test finished in 10m11.854440338s, failed=false\n"}
{"Time":"2020-07-21T00:34:41.293985422-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:170: Cleaning up \"kindnet-20200721002646-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.293989554-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p kindnet-20200721002646-23787\n"}
{"Time":"2020-07-21T00:34:41.293993507-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.293996957-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.294000775-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:147: (dbg) Run:  kubectl --context functional-20200721000927-23787 replace --force -f testdata/busybox-mount-test.yaml\n"}
{"Time":"2020-07-21T00:34:41.294022093-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:152: (dbg) TestFunctional/parallel/MountCmd: waiting 4m0s for pods matching \"integration-test=busybox-mount\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.294026543-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    helpers_test.go:332: \"busybox-mount\" [b46295ac-b430-4043-bebd-d664ad8de5e4] Pending\n"}
{"Time":"2020-07-21T00:34:41.294030642-07:00","Action":"cont","Test":"TestFunctional/parallel/LogsCmd"}
{"Time":"2020-07-21T00:34:41.294034091-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"=== CONT  TestFunctional/parallel/LogsCmd\n"}
{"Time":"2020-07-21T00:34:41.294038-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"    functional_test.go:566: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 logs: (2.380149225s)\n"}
{"Time":"2020-07-21T00:34:41.294041958-07:00","Action":"cont","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2020-07-21T00:34:41.294045495-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== CONT  TestFunctional/parallel/StatusCmd\n"}
{"Time":"2020-07-21T00:34:41.294052213-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:340: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 status\n"}
{"Time":"2020-07-21T00:34:41.294056379-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:346: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 status -f host:{{.Host}},kublet:{{.Kubelet}},apiserver:{{.APIServer}},kubeconfig:{{.Kubeconfig}}\n"}
{"Time":"2020-07-21T00:34:41.294060682-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.294064159-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.294070979-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    helpers_test.go:332: \"busybox-mount\" [b46295ac-b430-4043-bebd-d664ad8de5e4] Pending / Ready:ContainersNotReady (containers with unready status: [mount-munger]) / ContainersReady:ContainersNotReady (containers with unready status: [mount-munger])\n"}
{"Time":"2020-07-21T00:34:41.294075524-07:00","Action":"cont","Test":"TestFunctional/parallel/StatusCmd"}
{"Time":"2020-07-21T00:34:41.294078998-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"=== CONT  TestFunctional/parallel/StatusCmd\n"}
{"Time":"2020-07-21T00:34:41.294082768-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"    functional_test.go:357: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 status -o json\n"}
{"Time":"2020-07-21T00:34:41.294086676-07:00","Action":"cont","Test":"TestFunctional/parallel/DryRun"}
{"Time":"2020-07-21T00:34:41.294090172-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"=== CONT  TestFunctional/parallel/DryRun\n"}
{"Time":"2020-07-21T00:34:41.294094053-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:430: (dbg) Run:  out/minikube-linux-amd64 start -p functional-20200721000927-23787 --dry-run --memory 250MB --alsologtostderr --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.294098351-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:430: (dbg) Non-zero exit: out/minikube-linux-amd64 start -p functional-20200721000927-23787 --dry-run --memory 250MB --alsologtostderr --driver=docker : exit status 78 (291.533757ms)\n"}
{"Time":"2020-07-21T00:34:41.294103705-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294107738-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.294111618-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t* [functional-20200721000927-23787] minikube v1.12.1 on Debian 9.13\n"}
{"Time":"2020-07-21T00:34:41.294115529-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - KUBECONFIG=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/kubeconfig\n"}
{"Time":"2020-07-21T00:34:41.294119585-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_BIN=out/minikube-linux-amd64\n"}
{"Time":"2020-07-21T00:34:41.294123594-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_HOME=/home/jenkins/minikube-integration/linux-amd64-docker-8786-21258-3b0b4dc505f07db755cbdaf9197c56673c9b7d14/.minikube\n"}
{"Time":"2020-07-21T00:34:41.294127751-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t  - MINIKUBE_LOCATION=8786\n"}
{"Time":"2020-07-21T00:34:41.294131601-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t* Using the docker driver based on existing profile\n"}
{"Time":"2020-07-21T00:34:41.294135439-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294139133-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.294142985-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.294146794-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.052163    3765 out.go:170] Setting JSON to false\n"}
{"Time":"2020-07-21T00:34:41.294150769-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.109644    3765 start.go:101] hostinfo: {\"hostname\":\"kvm-integration-slave7\",\"uptime\":7883,\"bootTime\":1595308648,\"procs\":315,\"os\":\"linux\",\"platform\":\"debian\",\"platformFamily\":\"debian\",\"platformVersion\":\"9.13\",\"kernelVersion\":\"4.9.0-13-amd64\",\"virtualizationSystem\":\"kvm\",\"virtualizationRole\":\"host\",\"hostid\":\"ae41e7f6-8b8e-4d40-b77d-1ebb5a2d5fdb\"}\n"}
{"Time":"2020-07-21T00:34:41.294162317-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.110689    3765 start.go:111] virtualization: kvm host\n"}
{"Time":"2020-07-21T00:34:41.294169669-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.116532    3765 driver.go:287] Setting default libvirt URI to qemu:///system\n"}
{"Time":"2020-07-21T00:34:41.29417372-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.179609    3765 docker.go:87] docker version: linux-19.03.12\n"}
{"Time":"2020-07-21T00:34:41.294177618-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tW0721 00:28:51.182527    3765 docker.go:138] overlay module was not found in \"/lib/modules/4.9.0-13-amd64\\n/modules.builtin\"\n"}
{"Time":"2020-07-21T00:34:41.294181726-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.190253    3765 start.go:217] selected driver: docker\n"}
{"Time":"2020-07-21T00:34:41.294186434-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.190266    3765 start.go:621] validating driver \"docker\" against \u0026{Name:functional-20200721000927-23787 KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.10@sha256:f58e0c4662bac8a9b5dda7984b185bad8502ade5d9fa364bf2755d636ab51438 Memory:2800 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.99.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio KubernetesConfig:{KubernetesVersion:v1.18.3 ClusterName:functional-20200721000927-23787 APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: Fea"}
{"Time":"2020-07-21T00:34:41.294192999-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"tureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8441 NodeName:} Nodes:[{Name: IP:172.17.0.3 Port:8441 KubernetesVersion:v1.18.3 ControlPlane:true Worker:true}] Addons:map[ambassador:false dashboard:false default-storageclass:true efk:false freshpod:false gvisor:false helm-tiller:false ingress:false ingress-dns:false istio:false istio-provisioner:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false] VerifyComponents:map[apiserver:true apps_running:true default_sa:true system_pods:true]}\n"}
{"Time":"2020-07-21T00:34:41.294198682-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.190419    3765 start.go:632] status for docker: {Installed:true Healthy:true NeedsImprovement:true Error:\u003cnil\u003e Fix:enable overlayfs kernel module on your Linux Doc:}\n"}
{"Time":"2020-07-21T00:34:41.294205909-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.294209762-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t! 'docker' driver reported a issue that could affect the performance.\n"}
{"Time":"2020-07-21T00:34:41.294216438-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t* Suggestion: enable overlayfs kernel module on your Linux\n"}
{"Time":"2020-07-21T00:34:41.294220448-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \t\n"}
{"Time":"2020-07-21T00:34:41.294224245-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tI0721 00:28:51.190608    3765 cli_runner.go:109] Run: docker system info --format \"{{json .}}\"\n"}
{"Time":"2020-07-21T00:34:41.294228543-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \tX Requested memory allocation 250MB is less than the usable minimum of \u003cno value\u003eMB\n"}
{"Time":"2020-07-21T00:34:41.294236641-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294240544-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.294244338-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"    functional_test.go:441: (dbg) Run:  out/minikube-linux-amd64 start -p functional-20200721000927-23787 --dry-run --alsologtostderr -v=1 --driver=docker \n"}
{"Time":"2020-07-21T00:34:41.294248515-07:00","Action":"cont","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2020-07-21T00:34:41.294252011-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== CONT  TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2020-07-21T00:34:41.29425597-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    functional_test.go:385: (dbg) daemon: [out/minikube-linux-amd64 dashboard --url -p functional-20200721000927-23787 --alsologtostderr -v=1]\n"}
{"Time":"2020-07-21T00:34:41.294264238-07:00","Action":"cont","Test":"TestNetworkPlugins/group/kindnet"}
{"Time":"2020-07-21T00:34:41.294267777-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"=== CONT  TestNetworkPlugins/group/kindnet\n"}
{"Time":"2020-07-21T00:34:41.294271617-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p kindnet-20200721002646-23787: (2.951632763s)\n"}
{"Time":"2020-07-21T00:34:41.294275575-07:00","Action":"cont","Test":"TestFunctional/parallel/ConfigCmd"}
{"Time":"2020-07-21T00:34:41.294279022-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"=== CONT  TestFunctional/parallel/ConfigCmd\n"}
{"Time":"2020-07-21T00:34:41.294282862-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config unset cpus\n"}
{"Time":"2020-07-21T00:34:41.294292078-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config get cpus\n"}
{"Time":"2020-07-21T00:34:41.294299134-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Non-zero exit: out/minikube-linux-amd64 -p functional-20200721000927-23787 config get cpus: exit status 64 (48.464418ms)\n"}
{"Time":"2020-07-21T00:34:41.294303311-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294307051-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.294310884-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \tError: specified key could not be found in config\n"}
{"Time":"2020-07-21T00:34:41.294314702-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294321017-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.294327559-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config set cpus 2\n"}
{"Time":"2020-07-21T00:34:41.29433166-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config get cpus\n"}
{"Time":"2020-07-21T00:34:41.294335591-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config unset cpus\n"}
{"Time":"2020-07-21T00:34:41.294339504-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 config get cpus\n"}
{"Time":"2020-07-21T00:34:41.294346077-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"    functional_test.go:548: (dbg) Non-zero exit: out/minikube-linux-amd64 -p functional-20200721000927-23787 config get cpus: exit status 64 (53.593176ms)\n"}
{"Time":"2020-07-21T00:34:41.294350168-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294353902-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.294357883-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \tError: specified key could not be found in config\n"}
{"Time":"2020-07-21T00:34:41.294361812-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294365544-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.294369497-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2020-07-21T00:34:41.294372973-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== CONT  TestStartStop/group/old-k8s-version\n"}
{"Time":"2020-07-21T00:34:41.294376909-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial"}
{"Time":"2020-07-21T00:34:41.294380402-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial\n"}
{"Time":"2020-07-21T00:34:41.294384282-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.294387796-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294391785-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Run:  out/minikube-linux-amd64 start -p old-k8s-version-20200721002852-23787 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --container-runtime=docker --driver=docker  --kubernetes-version=v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.294396946-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.294401762-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.294405631-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    helpers_test.go:332: \"busybox-mount\" [b46295ac-b430-4043-bebd-d664ad8de5e4] Succeeded: Initialized:PodCompleted / Ready:PodCompleted / ContainersReady:PodCompleted\n"}
{"Time":"2020-07-21T00:34:41.294414492-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:152: (dbg) TestFunctional/parallel/MountCmd: integration-test=busybox-mount healthy within 3.009868336s\n"}
{"Time":"2020-07-21T00:34:41.294421718-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:168: (dbg) Run:  kubectl --context functional-20200721000927-23787 logs busybox-mount\n"}
{"Time":"2020-07-21T00:34:41.294425892-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:180: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh stat /mount-9p/created-by-test\n"}
{"Time":"2020-07-21T00:34:41.294432653-07:00","Action":"cont","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2020-07-21T00:34:41.294436279-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== CONT  TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2020-07-21T00:34:41.294440105-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    helpers_test.go:332: \"hello-node-7bf657c596-4g4k6\" [babda8be-5120-409d-bb3e-85f19f95d88f] Running\n"}
{"Time":"2020-07-21T00:34:41.294444131-07:00","Action":"cont","Test":"TestFunctional/parallel/MountCmd"}
{"Time":"2020-07-21T00:34:41.294450594-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"=== CONT  TestFunctional/parallel/MountCmd\n"}
{"Time":"2020-07-21T00:34:41.29445453-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:180: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh stat /mount-9p/created-by-pod\n"}
{"Time":"2020-07-21T00:34:41.294458574-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:89: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 ssh \"sudo umount -f /mount-9p\"\n"}
{"Time":"2020-07-21T00:34:41.294462661-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"    fn_mount_cmd_test.go:93: (dbg) stopping [out/minikube-linux-amd64 mount -p functional-20200721000927-23787 /tmp/mounttest387537362:/mount-9p --alsologtostderr -v=1] ...\n"}
{"Time":"2020-07-21T00:34:41.294466878-07:00","Action":"cont","Test":"TestStartStop/group/crio"}
{"Time":"2020-07-21T00:34:41.294470578-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"=== CONT  TestStartStop/group/crio\n"}
{"Time":"2020-07-21T00:34:41.294474474-07:00","Action":"run","Test":"TestStartStop/group/crio/serial"}
{"Time":"2020-07-21T00:34:41.294477979-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"=== RUN   TestStartStop/group/crio/serial\n"}
{"Time":"2020-07-21T00:34:41.294481911-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.294485481-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"=== RUN   TestStartStop/group/crio/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294489468-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Run:  out/minikube-linux-amd64 start -p crio-20200721002853-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=crio --disable-driver-mounts --extra-config=kubeadm.ignore-preflight-errors=SystemVerification --driver=docker  --kubernetes-version=v1.15.7\n"}
{"Time":"2020-07-21T00:34:41.294494052-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"2020/07/21 00:28:56 [DEBUG] GET http://127.0.0.1:36381/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/\n"}
{"Time":"2020-07-21T00:34:41.294498092-07:00","Action":"cont","Test":"TestFunctional/parallel/DashboardCmd"}
{"Time":"2020-07-21T00:34:41.294501633-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"=== CONT  TestFunctional/parallel/DashboardCmd\n"}
{"Time":"2020-07-21T00:34:41.294505463-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    functional_test.go:390: (dbg) stopping [out/minikube-linux-amd64 dashboard --url -p functional-20200721000927-23787 --alsologtostderr -v=1] ...\n"}
{"Time":"2020-07-21T00:34:41.294512686-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"    helpers_test.go:446: unable to kill pid 4480: os: process already finished\n"}
{"Time":"2020-07-21T00:34:41.294516777-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs"}
{"Time":"2020-07-21T00:34:41.294523237-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== CONT  TestStartStop/group/embed-certs\n"}
{"Time":"2020-07-21T00:34:41.294527574-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial"}
{"Time":"2020-07-21T00:34:41.294531037-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"=== RUN   TestStartStop/group/embed-certs/serial\n"}
{"Time":"2020-07-21T00:34:41.294534878-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.294538378-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"=== RUN   TestStartStop/group/embed-certs/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294542371-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Run:  out/minikube-linux-amd64 start -p embed-certs-20200721002856-23787 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=docker  --kubernetes-version=v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.294546837-07:00","Action":"cont","Test":"TestFunctional/parallel/ServiceCmd"}
{"Time":"2020-07-21T00:34:41.294550266-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"=== CONT  TestFunctional/parallel/ServiceCmd\n"}
{"Time":"2020-07-21T00:34:41.294554117-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:690: (dbg) TestFunctional/parallel/ServiceCmd: app=hello-node healthy within 15.007496477s\n"}
{"Time":"2020-07-21T00:34:41.294560411-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:694: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 service list\n"}
{"Time":"2020-07-21T00:34:41.294564354-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:694: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 service list: (1.365457567s)\n"}
{"Time":"2020-07-21T00:34:41.29456842-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:707: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 service --namespace=default --https --url hello-node\n"}
{"Time":"2020-07-21T00:34:41.294572681-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:707: (dbg) Done: out/minikube-linux-amd64 -p functional-20200721000927-23787 service --namespace=default --https --url hello-node: (1.25054795s)\n"}
{"Time":"2020-07-21T00:34:41.294576906-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:716: found endpoint: https://172.17.0.3:30868\n"}
{"Time":"2020-07-21T00:34:41.294581203-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:727: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 service hello-node --url --format={{.IP}}\n"}
{"Time":"2020-07-21T00:34:41.294585222-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:736: (dbg) Run:  out/minikube-linux-amd64 -p functional-20200721000927-23787 service hello-node --url\n"}
{"Time":"2020-07-21T00:34:41.294589159-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:742: found endpoint for hello-node: http://172.17.0.3:30868\n"}
{"Time":"2020-07-21T00:34:41.294593054-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:753: Attempting to fetch http://172.17.0.3:30868 ...\n"}
{"Time":"2020-07-21T00:34:41.294600268-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"    functional_test.go:772: http://172.17.0.3:30868: success! body:\n"}
{"Time":"2020-07-21T00:34:41.294604375-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        CLIENT VALUES:\n"}
{"Time":"2020-07-21T00:34:41.294608362-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        client_address=172.18.0.1\n"}
{"Time":"2020-07-21T00:34:41.294614885-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        command=GET\n"}
{"Time":"2020-07-21T00:34:41.294618775-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        real path=/\n"}
{"Time":"2020-07-21T00:34:41.294622787-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        query=nil\n"}
{"Time":"2020-07-21T00:34:41.294626541-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        request_version=1.1\n"}
{"Time":"2020-07-21T00:34:41.294630797-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        request_uri=http://172.17.0.3:8080/\n"}
{"Time":"2020-07-21T00:34:41.294638105-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294641871-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        SERVER VALUES:\n"}
{"Time":"2020-07-21T00:34:41.294645931-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        server_version=nginx: 1.10.0 - lua: 10001\n"}
{"Time":"2020-07-21T00:34:41.294649894-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294653534-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        HEADERS RECEIVED:\n"}
{"Time":"2020-07-21T00:34:41.294657259-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        accept-encoding=gzip\n"}
{"Time":"2020-07-21T00:34:41.294660966-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        host=172.17.0.3:30868\n"}
{"Time":"2020-07-21T00:34:41.294664698-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        user-agent=Go-http-client/1.1\n"}
{"Time":"2020-07-21T00:34:41.294668521-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        BODY:\n"}
{"Time":"2020-07-21T00:34:41.294672225-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        -no body in request-\n"}
{"Time":"2020-07-21T00:34:41.294679212-07:00","Action":"cont","Test":"TestStartStop/group/containerd"}
{"Time":"2020-07-21T00:34:41.294682825-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"=== CONT  TestStartStop/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.294689488-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial"}
{"Time":"2020-07-21T00:34:41.294693132-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"=== RUN   TestStartStop/group/containerd/serial\n"}
{"Time":"2020-07-21T00:34:41.294696962-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.294700502-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/FirstStart","Output":"=== RUN   TestStartStop/group/containerd/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294704375-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Run:  out/minikube-linux-amd64 start -p containerd-20200721002901-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=containerd --docker-opt containerd=/var/run/containerd/containerd.sock --apiserver-port=8444 --driver=docker  --kubernetes-version=v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.294711499-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.29471529-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"=== CONT  TestStartStop/group/embed-certs/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294719186-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Done: out/minikube-linux-amd64 start -p embed-certs-20200721002856-23787 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=docker  --kubernetes-version=v1.18.3: (1m28.990668958s)\n"}
{"Time":"2020-07-21T00:34:41.294723477-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.294726992-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"=== RUN   TestStartStop/group/embed-certs/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.294730806-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context embed-certs-20200721002856-23787 create -f testdata/busybox.yaml\n"}
{"Time":"2020-07-21T00:34:41.294734906-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/embed-certs/serial/DeployApp: waiting 8m0s for pods matching \"integration-test=busybox\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.294739321-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [46f4970f-a342-428e-a1c0-fb4ac3f0de4f] Pending\n"}
{"Time":"2020-07-21T00:34:41.294747639-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [46f4970f-a342-428e-a1c0-fb4ac3f0de4f] Pending / Ready:ContainersNotReady (containers with unready status: [busybox]) / ContainersReady:ContainersNotReady (containers with unready status: [busybox])\n"}
{"Time":"2020-07-21T00:34:41.294754791-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [46f4970f-a342-428e-a1c0-fb4ac3f0de4f] Running\n"}
{"Time":"2020-07-21T00:34:41.294758829-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/embed-certs/serial/DeployApp: integration-test=busybox healthy within 8.021841145s\n"}
{"Time":"2020-07-21T00:34:41.294762932-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context embed-certs-20200721002856-23787 exec busybox -- /bin/sh -c \"ulimit -n\"\n"}
{"Time":"2020-07-21T00:34:41.294767236-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/Stop"}
{"Time":"2020-07-21T00:34:41.294770692-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.294774561-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Run:  out/minikube-linux-amd64 stop -p embed-certs-20200721002856-23787 --alsologtostderr -v=3\n"}
{"Time":"2020-07-21T00:34:41.294778526-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Done: out/minikube-linux-amd64 stop -p embed-certs-20200721002856-23787 --alsologtostderr -v=3: (11.21907864s)\n"}
{"Time":"2020-07-21T00:34:41.294782581-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.294786111-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.294793023-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.294797396-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Host}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787: exit status 7 (104.735693ms)\n"}
{"Time":"2020-07-21T00:34:41.294801648-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294805487-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.294809342-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.294813252-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.294817019-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.294821058-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.294825268-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.294831704-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.294835335-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"=== RUN   TestStartStop/group/embed-certs/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.294839502-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Run:  out/minikube-linux-amd64 start -p embed-certs-20200721002856-23787 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=docker  --kubernetes-version=v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.294843775-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.294847276-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/FirstStart","Output":"=== CONT  TestStartStop/group/containerd/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.294851182-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Done: out/minikube-linux-amd64 start -p containerd-20200721002901-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=containerd --docker-opt containerd=/var/run/containerd/containerd.sock --apiserver-port=8444 --driver=docker  --kubernetes-version=v1.18.3: (1m58.981693081s)\n"}
{"Time":"2020-07-21T00:34:41.294855777-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.294859248-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"=== RUN   TestStartStop/group/containerd/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.294873011-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context containerd-20200721002901-23787 create -f testdata/busybox.yaml\n"}
{"Time":"2020-07-21T00:34:41.294880122-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/containerd/serial/DeployApp: waiting 8m0s for pods matching \"integration-test=busybox\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.294884542-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [b631718c-0a49-4841-b18c-a5e61ec0f52d] Pending\n"}
{"Time":"2020-07-21T00:34:41.294888575-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [b631718c-0a49-4841-b18c-a5e61ec0f52d] Pending / Ready:ContainersNotReady (containers with unready status: [busybox]) / ContainersReady:ContainersNotReady (containers with unready status: [busybox])\n"}
{"Time":"2020-07-21T00:34:41.294893034-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [b631718c-0a49-4841-b18c-a5e61ec0f52d] Running\n"}
{"Time":"2020-07-21T00:34:41.294897007-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.294900511-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"=== CONT  TestStartStop/group/embed-certs/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.29490443-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Done: out/minikube-linux-amd64 start -p embed-certs-20200721002856-23787 --memory=2200 --alsologtostderr --wait=true --embed-certs --driver=docker  --kubernetes-version=v1.18.3: (20.357034079s)\n"}
{"Time":"2020-07-21T00:34:41.294908677-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"    start_stop_delete_test.go:196: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.294912791-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.294916334-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.294920273-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.294924766-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-9q4v8\" [05c3c285-bbaf-4925-aff0-63b63863f566] Pending\n"}
{"Time":"2020-07-21T00:34:41.294929445-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.294935452-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"=== CONT  TestStartStop/group/containerd/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.294939417-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/containerd/serial/DeployApp: integration-test=busybox healthy within 8.016863207s\n"}
{"Time":"2020-07-21T00:34:41.294943532-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context containerd-20200721002901-23787 exec busybox -- /bin/sh -c \"ulimit -n\"\n"}
{"Time":"2020-07-21T00:34:41.294947751-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/Stop"}
{"Time":"2020-07-21T00:34:41.294954227-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Stop","Output":"=== RUN   TestStartStop/group/containerd/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.294958305-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Run:  out/minikube-linux-amd64 stop -p containerd-20200721002901-23787 --alsologtostderr -v=3\n"}
{"Time":"2020-07-21T00:34:41.294962459-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.294966038-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"=== CONT  TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.294970038-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-9q4v8\" [05c3c285-bbaf-4925-aff0-63b63863f566] Pending / Ready:ContainersNotReady (containers with unready status: [kubernetes-dashboard]) / ContainersReady:ContainersNotReady (containers with unready status: [kubernetes-dashboard])\n"}
{"Time":"2020-07-21T00:34:41.294974677-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-9q4v8\" [05c3c285-bbaf-4925-aff0-63b63863f566] Running\n"}
{"Time":"2020-07-21T00:34:41.294982296-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 10.68552884s\n"}
{"Time":"2020-07-21T00:34:41.294986756-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.294990301-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/embed-certs/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.294994358-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/embed-certs/serial/AddonExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.294998724-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-9q4v8\" [05c3c285-bbaf-4925-aff0-63b63863f566] Running\n"}
{"Time":"2020-07-21T00:34:41.295009214-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/embed-certs/serial/AddonExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 5.014798722s\n"}
{"Time":"2020-07-21T00:34:41.295013471-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages"}
{"Time":"2020-07-21T00:34:41.29501698-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/embed-certs/serial/VerifyKubernetesImages\n"}
{"Time":"2020-07-21T00:34:41.29502114-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: (dbg) Run:  out/minikube-linux-amd64 ssh -p embed-certs-20200721002856-23787 \"sudo crictl images -o json\"\n"}
{"Time":"2020-07-21T00:34:41.295027911-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.295032145-07:00","Action":"run","Test":"TestStartStop/group/embed-certs/serial/Pause"}
{"Time":"2020-07-21T00:34:41.295038563-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"=== RUN   TestStartStop/group/embed-certs/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.29504272-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 pause -p embed-certs-20200721002856-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.295049577-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295053694-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.APIServer}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787: exit status 2 (370.10299ms)\n"}
{"Time":"2020-07-21T00:34:41.295057917-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295061705-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295065487-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tPaused\n"}
{"Time":"2020-07-21T00:34:41.295069359-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295073109-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295076935-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.29508085-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295084986-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Kubelet}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787: exit status 2 (376.664102ms)\n"}
{"Time":"2020-07-21T00:34:41.295089226-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295092945-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295096676-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.295100479-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295104189-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295107972-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.295111865-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 unpause -p embed-certs-20200721002856-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.295115963-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295126174-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p embed-certs-20200721002856-23787 -n embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295130458-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs/serial"}
{"Time":"2020-07-21T00:34:41.295133929-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"=== CONT  TestStartStop/group/embed-certs/serial\n"}
{"Time":"2020-07-21T00:34:41.295137791-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:126: (dbg) Run:  out/minikube-linux-amd64 delete -p embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295141968-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:126: (dbg) Done: out/minikube-linux-amd64 delete -p embed-certs-20200721002856-23787: (2.697329575s)\n"}
{"Time":"2020-07-21T00:34:41.295146342-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:131: (dbg) Run:  kubectl config get-contexts embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295150367-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:131: (dbg) Non-zero exit: kubectl config get-contexts embed-certs-20200721002856-23787: exit status 1 (72.613025ms)\n"}
{"Time":"2020-07-21T00:34:41.2951544-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295158142-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295162263-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2020-07-21T00:34:41.295166118-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295169817-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295173732-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.295177516-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \terror: context embed-certs-20200721002856-23787 not found\n"}
{"Time":"2020-07-21T00:34:41.295181404-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295185144-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.295188964-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"    start_stop_delete_test.go:133: config context error: exit status 1 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.295193271-07:00","Action":"cont","Test":"TestStartStop/group/embed-certs"}
{"Time":"2020-07-21T00:34:41.295196734-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"=== CONT  TestStartStop/group/embed-certs\n"}
{"Time":"2020-07-21T00:34:41.295200666-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"    helpers_test.go:170: Cleaning up \"embed-certs-20200721002856-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.295209343-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p embed-certs-20200721002856-23787\n"}
{"Time":"2020-07-21T00:34:41.295213539-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni"}
{"Time":"2020-07-21T00:34:41.29521972-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== CONT  TestStartStop/group/newest-cni\n"}
{"Time":"2020-07-21T00:34:41.295226658-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial"}
{"Time":"2020-07-21T00:34:41.295230483-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"=== RUN   TestStartStop/group/newest-cni/serial\n"}
{"Time":"2020-07-21T00:34:41.295234418-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.295238041-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"=== RUN   TestStartStop/group/newest-cni/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.295242139-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Run:  out/minikube-linux-amd64 start -p newest-cni-20200721003128-23787 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubelet.network-plugin=cni --extra-config=kubeadm.pod-network-cidr=192.168.111.111/16 --driver=docker  --kubernetes-version=v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.295249058-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial/Stop"}
{"Time":"2020-07-21T00:34:41.295252529-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Stop","Output":"=== CONT  TestStartStop/group/containerd/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.295256438-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Done: out/minikube-linux-amd64 stop -p containerd-20200721002901-23787 --alsologtostderr -v=3: (21.162872729s)\n"}
{"Time":"2020-07-21T00:34:41.295260565-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.295264108-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/containerd/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.29526808-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.295292113-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Host}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787: exit status 7 (104.494327ms)\n"}
{"Time":"2020-07-21T00:34:41.295303822-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295310703-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295314666-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.295318528-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29532228-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295326074-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.295329961-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.295338205-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.295341986-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.295345982-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Done: out/minikube-linux-amd64 start -p old-k8s-version-20200721002852-23787 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --container-runtime=docker --driver=docker  --kubernetes-version=v1.13.0: (2m39.732514439s)\n"}
{"Time":"2020-07-21T00:34:41.295350589-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295354129-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295358118-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context old-k8s-version-20200721002852-23787 create -f testdata/busybox.yaml\n"}
{"Time":"2020-07-21T00:34:41.29536226-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.295365834-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"=== CONT  TestStartStop/group/containerd/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295369759-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Done: out/minikube-linux-amd64 addons enable dashboard -p containerd-20200721002901-23787: (1.128784282s)\n"}
{"Time":"2020-07-21T00:34:41.295373881-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.295377468-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"=== RUN   TestStartStop/group/containerd/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.295381495-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Run:  out/minikube-linux-amd64 start -p containerd-20200721002901-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=containerd --docker-opt containerd=/var/run/containerd/containerd.sock --apiserver-port=8444 --driver=docker  --kubernetes-version=v1.18.3\n"}
{"Time":"2020-07-21T00:34:41.295386121-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295389797-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295393795-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/old-k8s-version/serial/DeployApp: waiting 8m0s for pods matching \"integration-test=busybox\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.295398125-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [32f8c3ae-cb24-11ea-ad68-02428753d279] Pending / Ready:ContainersNotReady (containers with unready status: [busybox]) / ContainersReady:ContainersNotReady (containers with unready status: [busybox])\n"}
{"Time":"2020-07-21T00:34:41.295402452-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [32f8c3ae-cb24-11ea-ad68-02428753d279] Running\n"}
{"Time":"2020-07-21T00:34:41.295415305-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/old-k8s-version/serial/DeployApp: integration-test=busybox healthy within 8.019969111s\n"}
{"Time":"2020-07-21T00:34:41.295423372-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context old-k8s-version-20200721002852-23787 exec busybox -- /bin/sh -c \"ulimit -n\"\n"}
{"Time":"2020-07-21T00:34:41.295428034-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/Stop"}
{"Time":"2020-07-21T00:34:41.295431652-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.295442087-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Run:  out/minikube-linux-amd64 stop -p old-k8s-version-20200721002852-23787 --alsologtostderr -v=3\n"}
{"Time":"2020-07-21T00:34:41.29544628-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Done: out/minikube-linux-amd64 stop -p old-k8s-version-20200721002852-23787 --alsologtostderr -v=3: (11.253032713s)\n"}
{"Time":"2020-07-21T00:34:41.295450674-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.295456964-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295461395-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.295465599-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Host}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787: exit status 7 (123.707233ms)\n"}
{"Time":"2020-07-21T00:34:41.295469849-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295473723-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295480352-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.295484495-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295488409-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295492265-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.295496149-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.295500414-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.295504044-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.295511067-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Run:  out/minikube-linux-amd64 start -p old-k8s-version-20200721002852-23787 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --container-runtime=docker --driver=docker  --kubernetes-version=v1.13.0\n"}
{"Time":"2020-07-21T00:34:41.295519101-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.295522751-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"=== CONT  TestStartStop/group/newest-cni/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.295526835-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Done: out/minikube-linux-amd64 start -p newest-cni-20200721003128-23787 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubelet.network-plugin=cni --extra-config=kubeadm.pod-network-cidr=192.168.111.111/16 --driver=docker  --kubernetes-version=v1.18.4-rc.0: (50.33653707s)\n"}
{"Time":"2020-07-21T00:34:41.295531627-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295535175-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Output":"=== RUN   TestStartStop/group/newest-cni/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295539143-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/Stop"}
{"Time":"2020-07-21T00:34:41.29554273-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.295546595-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Run:  out/minikube-linux-amd64 stop -p newest-cni-20200721003128-23787 --alsologtostderr -v=3\n"}
{"Time":"2020-07-21T00:34:41.295550772-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Done: out/minikube-linux-amd64 stop -p newest-cni-20200721003128-23787 --alsologtostderr -v=3: (1.722937308s)\n"}
{"Time":"2020-07-21T00:34:41.295555035-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.295558626-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295562566-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.295566708-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Host}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787: exit status 7 (134.292913ms)\n"}
{"Time":"2020-07-21T00:34:41.295571044-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.29557481-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295578599-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.29558533-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295589263-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295593061-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.295597474-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.295603901-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.295610281-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"=== RUN   TestStartStop/group/newest-cni/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.295614351-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Run:  out/minikube-linux-amd64 start -p newest-cni-20200721003128-23787 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubelet.network-plugin=cni --extra-config=kubeadm.pod-network-cidr=192.168.111.111/16 --driver=docker  --kubernetes-version=v1.18.4-rc.0\n"}
{"Time":"2020-07-21T00:34:41.295619096-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.295622638-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.295626589-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Done: out/minikube-linux-amd64 start -p old-k8s-version-20200721002852-23787 --memory=2200 --alsologtostderr --wait=true --kvm-network=default --kvm-qemu-uri=qemu:///system --disable-driver-mounts --keep-context=false --container-runtime=docker --driver=docker  --kubernetes-version=v1.13.0: (30.042965254s)\n"}
{"Time":"2020-07-21T00:34:41.295633907-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"    start_stop_delete_test.go:196: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.29563841-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295642004-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295646048-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.295650686-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-76d8f8d5bc-qd7dk\" [52ef10cc-cb24-11ea-b2df-0242edad95ec] Pending\n"}
{"Time":"2020-07-21T00:34:41.295654862-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/FirstStart"}
{"Time":"2020-07-21T00:34:41.295658378-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"=== CONT  TestStartStop/group/crio/serial/FirstStart\n"}
{"Time":"2020-07-21T00:34:41.295664877-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"    start_stop_delete_test.go:149: (dbg) Done: out/minikube-linux-amd64 start -p crio-20200721002853-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=crio --disable-driver-mounts --extra-config=kubeadm.ignore-preflight-errors=SystemVerification --driver=docker  --kubernetes-version=v1.15.7: (3m33.79648473s)\n"}
{"Time":"2020-07-21T00:34:41.295669447-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295676172-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"=== RUN   TestStartStop/group/crio/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295680053-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context crio-20200721002853-23787 create -f testdata/busybox.yaml\n"}
{"Time":"2020-07-21T00:34:41.29568424-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295687842-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295691941-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-76d8f8d5bc-qd7dk\" [52ef10cc-cb24-11ea-b2df-0242edad95ec] Pending / Ready:ContainersNotReady (containers with unready status: [kubernetes-dashboard]) / ContainersReady:ContainersNotReady (containers with unready status: [kubernetes-dashboard])\n"}
{"Time":"2020-07-21T00:34:41.29569655-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295700089-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"=== CONT  TestStartStop/group/crio/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295704084-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/crio/serial/DeployApp: waiting 8m0s for pods matching \"integration-test=busybox\" in namespace \"default\" ...\n"}
{"Time":"2020-07-21T00:34:41.295710557-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [aa502998-380a-4854-96f9-ca2227c613e0] Pending\n"}
{"Time":"2020-07-21T00:34:41.295714774-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295718347-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295722328-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-76d8f8d5bc-qd7dk\" [52ef10cc-cb24-11ea-b2df-0242edad95ec] Running\n"}
{"Time":"2020-07-21T00:34:41.295726466-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295729962-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"=== CONT  TestStartStop/group/crio/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295733807-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [aa502998-380a-4854-96f9-ca2227c613e0] Pending / Ready:ContainersNotReady (containers with unready status: [busybox]) / ContainersReady:ContainersNotReady (containers with unready status: [busybox])\n"}
{"Time":"2020-07-21T00:34:41.295738091-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    helpers_test.go:332: \"busybox\" [aa502998-380a-4854-96f9-ca2227c613e0] Running\n"}
{"Time":"2020-07-21T00:34:41.295745258-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295748961-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295752878-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 12.018625694s\n"}
{"Time":"2020-07-21T00:34:41.295757126-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.29576076-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295764772-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.295769167-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-76d8f8d5bc-qd7dk\" [52ef10cc-cb24-11ea-b2df-0242edad95ec] Running\n"}
{"Time":"2020-07-21T00:34:41.295773303-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/DeployApp"}
{"Time":"2020-07-21T00:34:41.295776794-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"=== CONT  TestStartStop/group/crio/serial/DeployApp\n"}
{"Time":"2020-07-21T00:34:41.295780872-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) TestStartStop/group/crio/serial/DeployApp: integration-test=busybox healthy within 8.015351085s\n"}
{"Time":"2020-07-21T00:34:41.295800053-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"    start_stop_delete_test.go:158: (dbg) Run:  kubectl --context crio-20200721002853-23787 exec busybox -- /bin/sh -c \"ulimit -n\"\n"}
{"Time":"2020-07-21T00:34:41.295807909-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/Stop"}
{"Time":"2020-07-21T00:34:41.295811583-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Stop","Output":"=== RUN   TestStartStop/group/crio/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.29581552-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Run:  out/minikube-linux-amd64 stop -p crio-20200721002853-23787 --alsologtostderr -v=3\n"}
{"Time":"2020-07-21T00:34:41.295819502-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295823-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295826916-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 5.006237489s\n"}
{"Time":"2020-07-21T00:34:41.29583376-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages"}
{"Time":"2020-07-21T00:34:41.295837389-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages\n"}
{"Time":"2020-07-21T00:34:41.295844209-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: (dbg) Run:  out/minikube-linux-amd64 ssh -p old-k8s-version-20200721002852-23787 \"sudo crictl images -o json\"\n"}
{"Time":"2020-07-21T00:34:41.295848853-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.295852926-07:00","Action":"run","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2020-07-21T00:34:41.295856465-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== RUN   TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.295860389-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 pause -p old-k8s-version-20200721002852-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.295864497-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.295868674-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.295872159-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"=== CONT  TestStartStop/group/newest-cni/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.295876043-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Done: out/minikube-linux-amd64 start -p newest-cni-20200721003128-23787 --memory=2200 --alsologtostderr --wait=apiserver,system_pods,default_sa --feature-gates ServerSideApply=true --network-plugin=cni --extra-config=kubelet.network-plugin=cni --extra-config=kubeadm.pod-network-cidr=192.168.111.111/16 --driver=docker  --kubernetes-version=v1.18.4-rc.0: (19.613183929s)\n"}
{"Time":"2020-07-21T00:34:41.295880756-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"    start_stop_delete_test.go:196: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.29588502-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2020-07-21T00:34:41.29588855-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.295892508-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.APIServer}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787: exit status 2 (394.733412ms)\n"}
{"Time":"2020-07-21T00:34:41.295896673-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295900573-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295904419-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tPaused\n"}
{"Time":"2020-07-21T00:34:41.295908269-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295914416-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.295920862-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.29592509-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.295929339-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295932949-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295936961-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:207: WARNING: cni mode requires additional setup before pods can schedule :(\n"}
{"Time":"2020-07-21T00:34:41.295941122-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.295950052-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/newest-cni/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.295954204-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:218: WARNING: cni mode requires additional setup before pods can schedule :(\n"}
{"Time":"2020-07-21T00:34:41.295958333-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages"}
{"Time":"2020-07-21T00:34:41.295961844-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/newest-cni/serial/VerifyKubernetesImages\n"}
{"Time":"2020-07-21T00:34:41.295965749-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: (dbg) Run:  out/minikube-linux-amd64 ssh -p newest-cni-20200721003128-23787 \"sudo crictl images -o json\"\n"}
{"Time":"2020-07-21T00:34:41.295975959-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2020-07-21T00:34:41.295979729-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.295983618-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Kubelet}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787: exit status 2 (409.621331ms)\n"}
{"Time":"2020-07-21T00:34:41.295987799-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.295991664-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.295995429-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.296001546-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296005364-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.296009263-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.296013229-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 unpause -p old-k8s-version-20200721002852-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.296020381-07:00","Action":"run","Test":"TestStartStop/group/newest-cni/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296024061-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"=== RUN   TestStartStop/group/newest-cni/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296027984-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 pause -p newest-cni-20200721003128-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.296032049-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296035611-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296039506-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.296043871-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296047532-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"=== CONT  TestStartStop/group/newest-cni/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296051537-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296055672-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296059238-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296063095-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p old-k8s-version-20200721002852-23787 -n old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.296067263-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296070785-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"=== CONT  TestStartStop/group/newest-cni/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296074732-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.APIServer}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787: exit status 2 (461.618843ms)\n"}
{"Time":"2020-07-21T00:34:41.29607896-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296082729-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.296086594-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tPaused\n"}
{"Time":"2020-07-21T00:34:41.29609038-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296094283-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.296098155-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.296105915-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296110188-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Kubelet}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787: exit status 2 (431.385264ms)\n"}
{"Time":"2020-07-21T00:34:41.29611434-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296118157-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.296121873-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.296125612-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296129335-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.296133127-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.296137039-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 unpause -p newest-cni-20200721003128-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.296141125-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial"}
{"Time":"2020-07-21T00:34:41.296144649-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial\n"}
{"Time":"2020-07-21T00:34:41.296148696-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:126: (dbg) Run:  out/minikube-linux-amd64 delete -p old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.296157971-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial/Pause"}
{"Time":"2020-07-21T00:34:41.296161487-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"=== CONT  TestStartStop/group/newest-cni/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.296165368-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296171608-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p newest-cni-20200721003128-23787 -n newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296176107-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial"}
{"Time":"2020-07-21T00:34:41.296179663-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"=== CONT  TestStartStop/group/newest-cni/serial\n"}
{"Time":"2020-07-21T00:34:41.296183478-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:126: (dbg) Run:  out/minikube-linux-amd64 delete -p newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.29618746-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version/serial"}
{"Time":"2020-07-21T00:34:41.296215049-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"=== CONT  TestStartStop/group/old-k8s-version/serial\n"}
{"Time":"2020-07-21T00:34:41.296225114-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:126: (dbg) Done: out/minikube-linux-amd64 delete -p old-k8s-version-20200721002852-23787: (2.921940724s)\n"}
{"Time":"2020-07-21T00:34:41.296229591-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:131: (dbg) Run:  kubectl config get-contexts old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.296233873-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:131: (dbg) Non-zero exit: kubectl config get-contexts old-k8s-version-20200721002852-23787: exit status 1 (68.62354ms)\n"}
{"Time":"2020-07-21T00:34:41.296237907-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296241732-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.296245598-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2020-07-21T00:34:41.296249579-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296253495-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.296257249-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.296261006-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \terror: context old-k8s-version-20200721002852-23787 not found\n"}
{"Time":"2020-07-21T00:34:41.296264965-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296268719-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.296276156-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"    start_stop_delete_test.go:133: config context error: exit status 1 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.296280603-07:00","Action":"cont","Test":"TestStartStop/group/old-k8s-version"}
{"Time":"2020-07-21T00:34:41.296284191-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"=== CONT  TestStartStop/group/old-k8s-version\n"}
{"Time":"2020-07-21T00:34:41.296288418-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"    helpers_test.go:170: Cleaning up \"old-k8s-version-20200721002852-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.296292376-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p old-k8s-version-20200721002852-23787\n"}
{"Time":"2020-07-21T00:34:41.296297671-07:00","Action":"output","Test":"TestNetworkPlugins","Output":"--- PASS: TestNetworkPlugins (849.40s)\n"}
{"Time":"2020-07-21T00:34:41.296302107-07:00","Action":"output","Test":"TestNetworkPlugins/group","Output":"    --- PASS: TestNetworkPlugins/group (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.296306442-07:00","Action":"output","Test":"TestNetworkPlugins/group/flannel","Output":"        --- SKIP: TestNetworkPlugins/group/flannel (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.296313114-07:00","Action":"skip","Test":"TestNetworkPlugins/group/flannel","Elapsed":0}
{"Time":"2020-07-21T00:34:41.296318017-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto","Output":"        --- PASS: TestNetworkPlugins/group/auto (79.12s)\n"}
{"Time":"2020-07-21T00:34:41.296325842-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Start","Output":"            --- PASS: TestNetworkPlugins/group/auto/Start (60.64s)\n"}
{"Time":"2020-07-21T00:34:41.296330266-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/Start","Elapsed":60.64}
{"Time":"2020-07-21T00:34:41.296334588-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/auto/KubeletFlags (0.33s)\n"}
{"Time":"2020-07-21T00:34:41.296338795-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/KubeletFlags","Elapsed":0.33}
{"Time":"2020-07-21T00:34:41.296342686-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/auto/NetCatPod (9.30s)\n"}
{"Time":"2020-07-21T00:34:41.296349863-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/NetCatPod","Elapsed":9.3}
{"Time":"2020-07-21T00:34:41.29635384-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/DNS","Output":"            --- PASS: TestNetworkPlugins/group/auto/DNS (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.29635795-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/DNS","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296361693-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/auto/Localhost (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.296365799-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/Localhost","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296369497-07:00","Action":"output","Test":"TestNetworkPlugins/group/auto/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/auto/HairPin (5.24s)\n"}
{"Time":"2020-07-21T00:34:41.296373804-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto/HairPin","Elapsed":5.24}
{"Time":"2020-07-21T00:34:41.296377494-07:00","Action":"pass","Test":"TestNetworkPlugins/group/auto","Elapsed":79.12}
{"Time":"2020-07-21T00:34:41.296381284-07:00","Action":"output","Test":"TestNetworkPlugins/group/false","Output":"        --- PASS: TestNetworkPlugins/group/false (93.28s)\n"}
{"Time":"2020-07-21T00:34:41.296385499-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Start","Output":"            --- PASS: TestNetworkPlugins/group/false/Start (72.88s)\n"}
{"Time":"2020-07-21T00:34:41.296389947-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/Start","Elapsed":72.88}
{"Time":"2020-07-21T00:34:41.296393911-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/false/KubeletFlags (0.33s)\n"}
{"Time":"2020-07-21T00:34:41.296398011-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/KubeletFlags","Elapsed":0.33}
{"Time":"2020-07-21T00:34:41.296401736-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/false/NetCatPod (11.50s)\n"}
{"Time":"2020-07-21T00:34:41.296417222-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/NetCatPod","Elapsed":11.5}
{"Time":"2020-07-21T00:34:41.29642177-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/DNS","Output":"            --- PASS: TestNetworkPlugins/group/false/DNS (0.26s)\n"}
{"Time":"2020-07-21T00:34:41.296426013-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/DNS","Elapsed":0.26}
{"Time":"2020-07-21T00:34:41.296429833-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/false/Localhost (0.29s)\n"}
{"Time":"2020-07-21T00:34:41.296433928-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/Localhost","Elapsed":0.29}
{"Time":"2020-07-21T00:34:41.296437611-07:00","Action":"output","Test":"TestNetworkPlugins/group/false/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/false/HairPin (5.25s)\n"}
{"Time":"2020-07-21T00:34:41.296441804-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false/HairPin","Elapsed":5.25}
{"Time":"2020-07-21T00:34:41.296448484-07:00","Action":"pass","Test":"TestNetworkPlugins/group/false","Elapsed":93.28}
{"Time":"2020-07-21T00:34:41.296452353-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium","Output":"        --- PASS: TestNetworkPlugins/group/cilium (124.73s)\n"}
{"Time":"2020-07-21T00:34:41.296456657-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Start","Output":"            --- PASS: TestNetworkPlugins/group/cilium/Start (102.97s)\n"}
{"Time":"2020-07-21T00:34:41.296460845-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/Start","Elapsed":102.97}
{"Time":"2020-07-21T00:34:41.296464936-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Output":"            --- PASS: TestNetworkPlugins/group/cilium/ControllerPod (5.02s)\n"}
{"Time":"2020-07-21T00:34:41.296469367-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/ControllerPod","Elapsed":5.02}
{"Time":"2020-07-21T00:34:41.296473173-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/cilium/KubeletFlags (0.36s)\n"}
{"Time":"2020-07-21T00:34:41.296477283-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/KubeletFlags","Elapsed":0.36}
{"Time":"2020-07-21T00:34:41.296481004-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/cilium/NetCatPod (12.69s)\n"}
{"Time":"2020-07-21T00:34:41.29648504-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/NetCatPod","Elapsed":12.69}
{"Time":"2020-07-21T00:34:41.296488976-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/DNS","Output":"            --- PASS: TestNetworkPlugins/group/cilium/DNS (0.23s)\n"}
{"Time":"2020-07-21T00:34:41.296493007-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/DNS","Elapsed":0.23}
{"Time":"2020-07-21T00:34:41.29650135-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/cilium/Localhost (0.23s)\n"}
{"Time":"2020-07-21T00:34:41.296505916-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/Localhost","Elapsed":0.23}
{"Time":"2020-07-21T00:34:41.296509719-07:00","Action":"output","Test":"TestNetworkPlugins/group/cilium/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/cilium/HairPin (0.25s)\n"}
{"Time":"2020-07-21T00:34:41.296513846-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium/HairPin","Elapsed":0.25}
{"Time":"2020-07-21T00:34:41.296517549-07:00","Action":"pass","Test":"TestNetworkPlugins/group/cilium","Elapsed":124.73}
{"Time":"2020-07-21T00:34:41.296521402-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave","Output":"        --- SKIP: TestNetworkPlugins/group/custom-weave (96.52s)\n"}
{"Time":"2020-07-21T00:34:41.296525805-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/Start","Output":"            --- PASS: TestNetworkPlugins/group/custom-weave/Start (82.55s)\n"}
{"Time":"2020-07-21T00:34:41.296529947-07:00","Action":"pass","Test":"TestNetworkPlugins/group/custom-weave/Start","Elapsed":82.55}
{"Time":"2020-07-21T00:34:41.29653639-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/custom-weave/KubeletFlags (0.34s)\n"}
{"Time":"2020-07-21T00:34:41.296540664-07:00","Action":"pass","Test":"TestNetworkPlugins/group/custom-weave/KubeletFlags","Elapsed":0.34}
{"Time":"2020-07-21T00:34:41.29654443-07:00","Action":"output","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/custom-weave/NetCatPod (10.31s)\n"}
{"Time":"2020-07-21T00:34:41.296548749-07:00","Action":"pass","Test":"TestNetworkPlugins/group/custom-weave/NetCatPod","Elapsed":10.31}
{"Time":"2020-07-21T00:34:41.296552406-07:00","Action":"skip","Test":"TestNetworkPlugins/group/custom-weave","Elapsed":96.52}
{"Time":"2020-07-21T00:34:41.296558762-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico","Output":"        --- PASS: TestNetworkPlugins/group/calico (127.86s)\n"}
{"Time":"2020-07-21T00:34:41.296563223-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Start","Output":"            --- PASS: TestNetworkPlugins/group/calico/Start (106.71s)\n"}
{"Time":"2020-07-21T00:34:41.296567373-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/Start","Elapsed":106.71}
{"Time":"2020-07-21T00:34:41.296571287-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/ControllerPod","Output":"            --- PASS: TestNetworkPlugins/group/calico/ControllerPod (5.02s)\n"}
{"Time":"2020-07-21T00:34:41.296575573-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/ControllerPod","Elapsed":5.02}
{"Time":"2020-07-21T00:34:41.296579373-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/calico/KubeletFlags (0.41s)\n"}
{"Time":"2020-07-21T00:34:41.296583464-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/KubeletFlags","Elapsed":0.41}
{"Time":"2020-07-21T00:34:41.296587289-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/calico/NetCatPod (11.42s)\n"}
{"Time":"2020-07-21T00:34:41.29659137-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/NetCatPod","Elapsed":11.42}
{"Time":"2020-07-21T00:34:41.29659523-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/DNS","Output":"            --- PASS: TestNetworkPlugins/group/calico/DNS (0.26s)\n"}
{"Time":"2020-07-21T00:34:41.296599287-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/DNS","Elapsed":0.26}
{"Time":"2020-07-21T00:34:41.296603144-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/calico/Localhost (0.25s)\n"}
{"Time":"2020-07-21T00:34:41.296607229-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/Localhost","Elapsed":0.25}
{"Time":"2020-07-21T00:34:41.296611066-07:00","Action":"output","Test":"TestNetworkPlugins/group/calico/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/calico/HairPin (0.25s)\n"}
{"Time":"2020-07-21T00:34:41.296615199-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico/HairPin","Elapsed":0.25}
{"Time":"2020-07-21T00:34:41.296618776-07:00","Action":"pass","Test":"TestNetworkPlugins/group/calico","Elapsed":127.86}
{"Time":"2020-07-21T00:34:41.296622925-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni","Output":"        --- PASS: TestNetworkPlugins/group/enable-default-cni (99.84s)\n"}
{"Time":"2020-07-21T00:34:41.296629802-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/Start (75.91s)\n"}
{"Time":"2020-07-21T00:34:41.296634277-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/Start","Elapsed":75.91}
{"Time":"2020-07-21T00:34:41.296641396-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/KubeletFlags (0.38s)\n"}
{"Time":"2020-07-21T00:34:41.296645838-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/KubeletFlags","Elapsed":0.38}
{"Time":"2020-07-21T00:34:41.296649729-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/NetCatPod (12.39s)\n"}
{"Time":"2020-07-21T00:34:41.296654059-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/NetCatPod","Elapsed":12.39}
{"Time":"2020-07-21T00:34:41.296660233-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/DNS","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/DNS (7.29s)\n"}
{"Time":"2020-07-21T00:34:41.296667613-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/DNS","Elapsed":7.29}
{"Time":"2020-07-21T00:34:41.296671659-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/Localhost (0.24s)\n"}
{"Time":"2020-07-21T00:34:41.296676187-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/Localhost","Elapsed":0.24}
{"Time":"2020-07-21T00:34:41.296679924-07:00","Action":"output","Test":"TestNetworkPlugins/group/enable-default-cni/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/enable-default-cni/HairPin (0.26s)\n"}
{"Time":"2020-07-21T00:34:41.29668661-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni/HairPin","Elapsed":0.26}
{"Time":"2020-07-21T00:34:41.296690332-07:00","Action":"pass","Test":"TestNetworkPlugins/group/enable-default-cni","Elapsed":99.84}
{"Time":"2020-07-21T00:34:41.29669408-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet","Output":"        --- PASS: TestNetworkPlugins/group/kubenet (92.95s)\n"}
{"Time":"2020-07-21T00:34:41.29669829-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Start","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/Start (79.54s)\n"}
{"Time":"2020-07-21T00:34:41.296702406-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/Start","Elapsed":79.54}
{"Time":"2020-07-21T00:34:41.296706295-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/KubeletFlags (0.35s)\n"}
{"Time":"2020-07-21T00:34:41.296710587-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/KubeletFlags","Elapsed":0.35}
{"Time":"2020-07-21T00:34:41.296714324-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/NetCatPod (9.33s)\n"}
{"Time":"2020-07-21T00:34:41.296718412-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/NetCatPod","Elapsed":9.33}
{"Time":"2020-07-21T00:34:41.29672217-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/DNS","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/DNS (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.296726192-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/DNS","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296729856-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/Localhost (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.296733924-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/Localhost","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296737621-07:00","Action":"output","Test":"TestNetworkPlugins/group/kubenet/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/kubenet/HairPin (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.296741717-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet/HairPin","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296745296-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kubenet","Elapsed":92.95}
{"Time":"2020-07-21T00:34:41.296748974-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge","Output":"        --- PASS: TestNetworkPlugins/group/bridge (105.99s)\n"}
{"Time":"2020-07-21T00:34:41.296753252-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Start","Output":"            --- PASS: TestNetworkPlugins/group/bridge/Start (91.27s)\n"}
{"Time":"2020-07-21T00:34:41.296757403-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/Start","Elapsed":91.27}
{"Time":"2020-07-21T00:34:41.296761206-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/bridge/KubeletFlags (0.40s)\n"}
{"Time":"2020-07-21T00:34:41.296765286-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/KubeletFlags","Elapsed":0.4}
{"Time":"2020-07-21T00:34:41.296771981-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/bridge/NetCatPod (10.44s)\n"}
{"Time":"2020-07-21T00:34:41.296776223-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/NetCatPod","Elapsed":10.44}
{"Time":"2020-07-21T00:34:41.296780006-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/DNS","Output":"            --- PASS: TestNetworkPlugins/group/bridge/DNS (0.26s)\n"}
{"Time":"2020-07-21T00:34:41.296784033-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/DNS","Elapsed":0.26}
{"Time":"2020-07-21T00:34:41.296787705-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/bridge/Localhost (0.24s)\n"}
{"Time":"2020-07-21T00:34:41.296791821-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/Localhost","Elapsed":0.24}
{"Time":"2020-07-21T00:34:41.296798946-07:00","Action":"output","Test":"TestNetworkPlugins/group/bridge/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/bridge/HairPin (0.21s)\n"}
{"Time":"2020-07-21T00:34:41.296803137-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge/HairPin","Elapsed":0.21}
{"Time":"2020-07-21T00:34:41.296806769-07:00","Action":"pass","Test":"TestNetworkPlugins/group/bridge","Elapsed":105.99}
{"Time":"2020-07-21T00:34:41.296810415-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet","Output":"        --- PASS: TestNetworkPlugins/group/kindnet (125.12s)\n"}
{"Time":"2020-07-21T00:34:41.296814624-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Start","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/Start (104.53s)\n"}
{"Time":"2020-07-21T00:34:41.296818871-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/Start","Elapsed":104.53}
{"Time":"2020-07-21T00:34:41.296822668-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/ControllerPod (5.02s)\n"}
{"Time":"2020-07-21T00:34:41.296826814-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/ControllerPod","Elapsed":5.02}
{"Time":"2020-07-21T00:34:41.29683344-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/KubeletFlags","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/KubeletFlags (0.32s)\n"}
{"Time":"2020-07-21T00:34:41.29683763-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/KubeletFlags","Elapsed":0.32}
{"Time":"2020-07-21T00:34:41.296841354-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/NetCatPod (11.58s)\n"}
{"Time":"2020-07-21T00:34:41.296845526-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/NetCatPod","Elapsed":11.58}
{"Time":"2020-07-21T00:34:41.296849272-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/DNS","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/DNS (0.26s)\n"}
{"Time":"2020-07-21T00:34:41.296853313-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/DNS","Elapsed":0.26}
{"Time":"2020-07-21T00:34:41.296856988-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/Localhost","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/Localhost (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.296863702-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/Localhost","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.296867654-07:00","Action":"output","Test":"TestNetworkPlugins/group/kindnet/HairPin","Output":"            --- PASS: TestNetworkPlugins/group/kindnet/HairPin (0.24s)\n"}
{"Time":"2020-07-21T00:34:41.296871781-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet/HairPin","Elapsed":0.24}
{"Time":"2020-07-21T00:34:41.29687534-07:00","Action":"pass","Test":"TestNetworkPlugins/group/kindnet","Elapsed":125.12}
{"Time":"2020-07-21T00:34:41.296881854-07:00","Action":"pass","Test":"TestNetworkPlugins/group","Elapsed":0}
{"Time":"2020-07-21T00:34:41.296885605-07:00","Action":"pass","Test":"TestNetworkPlugins","Elapsed":849.4}
{"Time":"2020-07-21T00:34:41.296889227-07:00","Action":"cont","Test":"TestFunctional"}
{"Time":"2020-07-21T00:34:41.296892774-07:00","Action":"output","Test":"TestFunctional","Output":"=== CONT  TestFunctional\n"}
{"Time":"2020-07-21T00:34:41.296896585-07:00","Action":"output","Test":"TestFunctional","Output":"    helpers_test.go:170: Cleaning up \"functional-20200721000927-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.296900946-07:00","Action":"output","Test":"TestFunctional","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p functional-20200721000927-23787\n"}
{"Time":"2020-07-21T00:34:41.296904925-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni/serial"}
{"Time":"2020-07-21T00:34:41.29690915-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"=== CONT  TestStartStop/group/newest-cni/serial\n"}
{"Time":"2020-07-21T00:34:41.296914347-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:126: (dbg) Done: out/minikube-linux-amd64 delete -p newest-cni-20200721003128-23787: (2.958713809s)\n"}
{"Time":"2020-07-21T00:34:41.296918484-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:131: (dbg) Run:  kubectl config get-contexts newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296922409-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:131: (dbg) Non-zero exit: kubectl config get-contexts newest-cni-20200721003128-23787: exit status 1 (65.81988ms)\n"}
{"Time":"2020-07-21T00:34:41.29692642-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296930233-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.296933964-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2020-07-21T00:34:41.29693791-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296941624-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.296945566-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.29694931-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \terror: context newest-cni-20200721003128-23787 not found\n"}
{"Time":"2020-07-21T00:34:41.296953133-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.296956845-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.29696058-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"    start_stop_delete_test.go:133: config context error: exit status 1 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.296964517-07:00","Action":"cont","Test":"TestStartStop/group/newest-cni"}
{"Time":"2020-07-21T00:34:41.29696797-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"=== CONT  TestStartStop/group/newest-cni\n"}
{"Time":"2020-07-21T00:34:41.296971728-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"    helpers_test.go:170: Cleaning up \"newest-cni-20200721003128-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.296975748-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p newest-cni-20200721003128-23787\n"}
{"Time":"2020-07-21T00:34:41.296982692-07:00","Action":"cont","Test":"TestFunctional"}
{"Time":"2020-07-21T00:34:41.296986272-07:00","Action":"output","Test":"TestFunctional","Output":"=== CONT  TestFunctional\n"}
{"Time":"2020-07-21T00:34:41.29699002-07:00","Action":"output","Test":"TestFunctional","Output":"    helpers_test.go:171: (dbg) Done: out/minikube-linux-amd64 delete -p functional-20200721000927-23787: (3.211293519s)\n"}
{"Time":"2020-07-21T00:34:41.296995146-07:00","Action":"output","Test":"TestFunctional","Output":"--- PASS: TestFunctional (913.11s)\n"}
{"Time":"2020-07-21T00:34:41.297005624-07:00","Action":"output","Test":"TestFunctional/serial","Output":"    --- PASS: TestFunctional/serial (60.50s)\n"}
{"Time":"2020-07-21T00:34:41.297009959-07:00","Action":"output","Test":"TestFunctional/serial/CopySyncFile","Output":"        --- PASS: TestFunctional/serial/CopySyncFile (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297014061-07:00","Action":"pass","Test":"TestFunctional/serial/CopySyncFile","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297017962-07:00","Action":"output","Test":"TestFunctional/serial/StartWithProxy","Output":"        --- PASS: TestFunctional/serial/StartWithProxy (48.80s)\n"}
{"Time":"2020-07-21T00:34:41.297025085-07:00","Action":"pass","Test":"TestFunctional/serial/StartWithProxy","Elapsed":48.8}
{"Time":"2020-07-21T00:34:41.297029-07:00","Action":"output","Test":"TestFunctional/serial/SoftStart","Output":"        --- PASS: TestFunctional/serial/SoftStart (4.72s)\n"}
{"Time":"2020-07-21T00:34:41.297035719-07:00","Action":"pass","Test":"TestFunctional/serial/SoftStart","Elapsed":4.72}
{"Time":"2020-07-21T00:34:41.297039583-07:00","Action":"output","Test":"TestFunctional/serial/KubeContext","Output":"        --- PASS: TestFunctional/serial/KubeContext (0.05s)\n"}
{"Time":"2020-07-21T00:34:41.29704364-07:00","Action":"pass","Test":"TestFunctional/serial/KubeContext","Elapsed":0.05}
{"Time":"2020-07-21T00:34:41.297047434-07:00","Action":"output","Test":"TestFunctional/serial/KubectlGetPods","Output":"        --- PASS: TestFunctional/serial/KubectlGetPods (0.28s)\n"}
{"Time":"2020-07-21T00:34:41.297051579-07:00","Action":"pass","Test":"TestFunctional/serial/KubectlGetPods","Elapsed":0.28}
{"Time":"2020-07-21T00:34:41.29705529-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd","Output":"        --- PASS: TestFunctional/serial/CacheCmd (6.30s)\n"}
{"Time":"2020-07-21T00:34:41.297059709-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache","Output":"            --- PASS: TestFunctional/serial/CacheCmd/cache (6.30s)\n"}
{"Time":"2020-07-21T00:34:41.29706448-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/add","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/add (4.14s)\n"}
{"Time":"2020-07-21T00:34:41.297068973-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/add","Elapsed":4.14}
{"Time":"2020-07-21T00:34:41.2970728-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc (0.05s)\n"}
{"Time":"2020-07-21T00:34:41.297077121-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/delete_busybox:1.28.4-glibc","Elapsed":0.05}
{"Time":"2020-07-21T00:34:41.297083307-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/list","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/list (0.05s)\n"}
{"Time":"2020-07-21T00:34:41.2970919-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/list","Elapsed":0.05}
{"Time":"2020-07-21T00:34:41.297098796-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node (0.30s)\n"}
{"Time":"2020-07-21T00:34:41.297103213-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/verify_cache_inside_node","Elapsed":0.3}
{"Time":"2020-07-21T00:34:41.297110243-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/cache_reload (1.66s)\n"}
{"Time":"2020-07-21T00:34:41.297114598-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/cache_reload","Elapsed":1.66}
{"Time":"2020-07-21T00:34:41.297132946-07:00","Action":"output","Test":"TestFunctional/serial/CacheCmd/cache/delete","Output":"                --- PASS: TestFunctional/serial/CacheCmd/cache/delete (0.10s)\n"}
{"Time":"2020-07-21T00:34:41.297137789-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache/delete","Elapsed":0.1}
{"Time":"2020-07-21T00:34:41.297141645-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd/cache","Elapsed":6.3}
{"Time":"2020-07-21T00:34:41.297145264-07:00","Action":"pass","Test":"TestFunctional/serial/CacheCmd","Elapsed":6.3}
{"Time":"2020-07-21T00:34:41.297149002-07:00","Action":"output","Test":"TestFunctional/serial/MinikubeKubectlCmd","Output":"        --- PASS: TestFunctional/serial/MinikubeKubectlCmd (0.35s)\n"}
{"Time":"2020-07-21T00:34:41.297153106-07:00","Action":"pass","Test":"TestFunctional/serial/MinikubeKubectlCmd","Elapsed":0.35}
{"Time":"2020-07-21T00:34:41.297156779-07:00","Action":"pass","Test":"TestFunctional/serial","Elapsed":60.5}
{"Time":"2020-07-21T00:34:41.297160656-07:00","Action":"output","Test":"TestFunctional/parallel","Output":"    --- PASS: TestFunctional/parallel (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297164896-07:00","Action":"output","Test":"TestFunctional/parallel/ComponentHealth","Output":"        --- PASS: TestFunctional/parallel/ComponentHealth (0.34s)\n"}
{"Time":"2020-07-21T00:34:41.297169479-07:00","Action":"pass","Test":"TestFunctional/parallel/ComponentHealth","Elapsed":0.34}
{"Time":"2020-07-21T00:34:41.297173196-07:00","Action":"output","Test":"TestFunctional/parallel/NodeLabels","Output":"        --- PASS: TestFunctional/parallel/NodeLabels (0.10s)\n"}
{"Time":"2020-07-21T00:34:41.297179636-07:00","Action":"pass","Test":"TestFunctional/parallel/NodeLabels","Elapsed":0.1}
{"Time":"2020-07-21T00:34:41.2971834-07:00","Action":"output","Test":"TestFunctional/parallel/DockerEnv","Output":"        --- PASS: TestFunctional/parallel/DockerEnv (1.29s)\n"}
{"Time":"2020-07-21T00:34:41.297187458-07:00","Action":"pass","Test":"TestFunctional/parallel/DockerEnv","Elapsed":1.29}
{"Time":"2020-07-21T00:34:41.297191381-07:00","Action":"output","Test":"TestFunctional/parallel/UpdateContextCmd","Output":"        --- PASS: TestFunctional/parallel/UpdateContextCmd (0.14s)\n"}
{"Time":"2020-07-21T00:34:41.297195451-07:00","Action":"pass","Test":"TestFunctional/parallel/UpdateContextCmd","Elapsed":0.14}
{"Time":"2020-07-21T00:34:41.297199121-07:00","Action":"output","Test":"TestFunctional/parallel/CertSync","Output":"        --- PASS: TestFunctional/parallel/CertSync (1.20s)\n"}
{"Time":"2020-07-21T00:34:41.297203196-07:00","Action":"pass","Test":"TestFunctional/parallel/CertSync","Elapsed":1.2}
{"Time":"2020-07-21T00:34:41.297207062-07:00","Action":"output","Test":"TestFunctional/parallel/FileSync","Output":"        --- PASS: TestFunctional/parallel/FileSync (0.41s)\n"}
{"Time":"2020-07-21T00:34:41.297211082-07:00","Action":"pass","Test":"TestFunctional/parallel/FileSync","Elapsed":0.41}
{"Time":"2020-07-21T00:34:41.297214833-07:00","Action":"output","Test":"TestFunctional/parallel/SSHCmd","Output":"        --- PASS: TestFunctional/parallel/SSHCmd (0.66s)\n"}
{"Time":"2020-07-21T00:34:41.297218951-07:00","Action":"pass","Test":"TestFunctional/parallel/SSHCmd","Elapsed":0.66}
{"Time":"2020-07-21T00:34:41.297222729-07:00","Action":"output","Test":"TestFunctional/parallel/PersistentVolumeClaim","Output":"        --- PASS: TestFunctional/parallel/PersistentVolumeClaim (5.33s)\n"}
{"Time":"2020-07-21T00:34:41.297226865-07:00","Action":"pass","Test":"TestFunctional/parallel/PersistentVolumeClaim","Elapsed":5.33}
{"Time":"2020-07-21T00:34:41.297230639-07:00","Action":"output","Test":"TestFunctional/parallel/AddonsCmd","Output":"        --- PASS: TestFunctional/parallel/AddonsCmd (0.15s)\n"}
{"Time":"2020-07-21T00:34:41.297237912-07:00","Action":"pass","Test":"TestFunctional/parallel/AddonsCmd","Elapsed":0.15}
{"Time":"2020-07-21T00:34:41.297241787-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd","Output":"        --- PASS: TestFunctional/parallel/TunnelCmd (10.47s)\n"}
{"Time":"2020-07-21T00:34:41.297246141-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial","Output":"            --- PASS: TestFunctional/parallel/TunnelCmd/serial (10.47s)\n"}
{"Time":"2020-07-21T00:34:41.297250601-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/StartTunnel (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297257977-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/StartTunnel","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297265001-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/WaitService (10.36s)\n"}
{"Time":"2020-07-21T00:34:41.297269548-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Output":"                    --- PASS: TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP (0.08s)\n"}
{"Time":"2020-07-21T00:34:41.297273873-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService/IngressIP","Elapsed":0.08}
{"Time":"2020-07-21T00:34:41.297277646-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/WaitService","Elapsed":10.36}
{"Time":"2020-07-21T00:34:41.297281384-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/AccessDirect (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297285664-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessDirect","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297289449-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Output":"                --- SKIP: TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297294005-07:00","Action":"skip","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDig","Elapsed":0}
{"Time":"2020-07-21T00:34:41.29729775-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Output":"                --- SKIP: TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297302008-07:00","Action":"skip","Test":"TestFunctional/parallel/TunnelCmd/serial/DNSResolutionByDscacheutil","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297305761-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Output":"                --- SKIP: TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.297309956-07:00","Action":"skip","Test":"TestFunctional/parallel/TunnelCmd/serial/AccessThroughDNS","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297313657-07:00","Action":"output","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Output":"                --- PASS: TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel (0.11s)\n"}
{"Time":"2020-07-21T00:34:41.297317783-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial/DeleteTunnel","Elapsed":0.11}
{"Time":"2020-07-21T00:34:41.297321416-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd/serial","Elapsed":10.47}
{"Time":"2020-07-21T00:34:41.297325143-07:00","Action":"pass","Test":"TestFunctional/parallel/TunnelCmd","Elapsed":10.47}
{"Time":"2020-07-21T00:34:41.297328896-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd","Output":"        --- PASS: TestFunctional/parallel/ProfileCmd (0.80s)\n"}
{"Time":"2020-07-21T00:34:41.297335866-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_not_create (0.34s)\n"}
{"Time":"2020-07-21T00:34:41.297343748-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_not_create","Elapsed":0.34}
{"Time":"2020-07-21T00:34:41.297347713-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_list (0.23s)\n"}
{"Time":"2020-07-21T00:34:41.297352212-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_list","Elapsed":0.23}
{"Time":"2020-07-21T00:34:41.297355988-07:00","Action":"output","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Output":"            --- PASS: TestFunctional/parallel/ProfileCmd/profile_json_output (0.23s)\n"}
{"Time":"2020-07-21T00:34:41.29736036-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd/profile_json_output","Elapsed":0.23}
{"Time":"2020-07-21T00:34:41.297363996-07:00","Action":"pass","Test":"TestFunctional/parallel/ProfileCmd","Elapsed":0.8}
{"Time":"2020-07-21T00:34:41.297367721-07:00","Action":"output","Test":"TestFunctional/parallel/MySQL","Output":"        --- PASS: TestFunctional/parallel/MySQL (23.42s)\n"}
{"Time":"2020-07-21T00:34:41.297371791-07:00","Action":"pass","Test":"TestFunctional/parallel/MySQL","Elapsed":23.42}
{"Time":"2020-07-21T00:34:41.297375587-07:00","Action":"output","Test":"TestFunctional/parallel/LogsCmd","Output":"        --- PASS: TestFunctional/parallel/LogsCmd (2.38s)\n"}
{"Time":"2020-07-21T00:34:41.297380049-07:00","Action":"pass","Test":"TestFunctional/parallel/LogsCmd","Elapsed":2.38}
{"Time":"2020-07-21T00:34:41.297383877-07:00","Action":"output","Test":"TestFunctional/parallel/StatusCmd","Output":"        --- PASS: TestFunctional/parallel/StatusCmd (1.38s)\n"}
{"Time":"2020-07-21T00:34:41.297387907-07:00","Action":"pass","Test":"TestFunctional/parallel/StatusCmd","Elapsed":1.38}
{"Time":"2020-07-21T00:34:41.297391742-07:00","Action":"output","Test":"TestFunctional/parallel/DryRun","Output":"        --- PASS: TestFunctional/parallel/DryRun (0.61s)\n"}
{"Time":"2020-07-21T00:34:41.297395781-07:00","Action":"pass","Test":"TestFunctional/parallel/DryRun","Elapsed":0.61}
{"Time":"2020-07-21T00:34:41.297401945-07:00","Action":"output","Test":"TestFunctional/parallel/ConfigCmd","Output":"        --- PASS: TestFunctional/parallel/ConfigCmd (0.33s)\n"}
{"Time":"2020-07-21T00:34:41.29740601-07:00","Action":"pass","Test":"TestFunctional/parallel/ConfigCmd","Elapsed":0.33}
{"Time":"2020-07-21T00:34:41.297416258-07:00","Action":"output","Test":"TestFunctional/parallel/MountCmd","Output":"        --- PASS: TestFunctional/parallel/MountCmd (6.43s)\n"}
{"Time":"2020-07-21T00:34:41.297420569-07:00","Action":"pass","Test":"TestFunctional/parallel/MountCmd","Elapsed":6.43}
{"Time":"2020-07-21T00:34:41.297424402-07:00","Action":"output","Test":"TestFunctional/parallel/DashboardCmd","Output":"        --- PASS: TestFunctional/parallel/DashboardCmd (5.23s)\n"}
{"Time":"2020-07-21T00:34:41.297428631-07:00","Action":"pass","Test":"TestFunctional/parallel/DashboardCmd","Elapsed":5.23}
{"Time":"2020-07-21T00:34:41.297432358-07:00","Action":"output","Test":"TestFunctional/parallel/ServiceCmd","Output":"        --- PASS: TestFunctional/parallel/ServiceCmd (18.54s)\n"}
{"Time":"2020-07-21T00:34:41.297436273-07:00","Action":"pass","Test":"TestFunctional/parallel/ServiceCmd","Elapsed":18.54}
{"Time":"2020-07-21T00:34:41.297439822-07:00","Action":"pass","Test":"TestFunctional/parallel","Elapsed":0}
{"Time":"2020-07-21T00:34:41.297443395-07:00","Action":"pass","Test":"TestFunctional","Elapsed":913.11}
{"Time":"2020-07-21T00:34:41.297446876-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/Stop"}
{"Time":"2020-07-21T00:34:41.297450278-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Stop","Output":"=== CONT  TestStartStop/group/crio/serial/Stop\n"}
{"Time":"2020-07-21T00:34:41.297454211-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Stop","Output":"    start_stop_delete_test.go:164: (dbg) Done: out/minikube-linux-amd64 stop -p crio-20200721002853-23787 --alsologtostderr -v=3: (20.942905525s)\n"}
{"Time":"2020-07-21T00:34:41.297461375-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop"}
{"Time":"2020-07-21T00:34:41.29746514-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"=== RUN   TestStartStop/group/crio/serial/EnableAddonAfterStop\n"}
{"Time":"2020-07-21T00:34:41.29746908-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297475674-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Host}} -p crio-20200721002853-23787 -n crio-20200721002853-23787: exit status 7 (101.226612ms)\n"}
{"Time":"2020-07-21T00:34:41.297480214-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297487221-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297491087-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.297501019-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297504859-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297508641-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:174: status error: exit status 7 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297512542-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"    start_stop_delete_test.go:181: (dbg) Run:  out/minikube-linux-amd64 addons enable dashboard -p crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.29751703-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.297520528-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"=== RUN   TestStartStop/group/crio/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.297524538-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Run:  out/minikube-linux-amd64 start -p crio-20200721002853-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=crio --disable-driver-mounts --extra-config=kubeadm.ignore-preflight-errors=SystemVerification --driver=docker  --kubernetes-version=v1.15.7\n"}
{"Time":"2020-07-21T00:34:41.297534122-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.297537746-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"=== CONT  TestStartStop/group/containerd/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.297541631-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Done: out/minikube-linux-amd64 start -p containerd-20200721002901-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=containerd --docker-opt containerd=/var/run/containerd/containerd.sock --apiserver-port=8444 --driver=docker  --kubernetes-version=v1.18.3: (1m33.972185287s)\n"}
{"Time":"2020-07-21T00:34:41.297546122-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"    start_stop_delete_test.go:196: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.29755349-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.297557235-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/containerd/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.297561151-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/containerd/serial/UserAppExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.297565635-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-j2xg6\" [3111a521-a179-418a-b7a0-a6c280d2e62c] Running\n"}
{"Time":"2020-07-21T00:34:41.297569756-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/containerd/serial/UserAppExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 5.014365324s\n"}
{"Time":"2020-07-21T00:34:41.29757676-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.297580672-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/containerd/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.297584588-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/containerd/serial/AddonExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.297593495-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6dbb54fd95-j2xg6\" [3111a521-a179-418a-b7a0-a6c280d2e62c] Running\n"}
{"Time":"2020-07-21T00:34:41.297597808-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/containerd/serial/AddonExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 5.00648294s\n"}
{"Time":"2020-07-21T00:34:41.297601945-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages"}
{"Time":"2020-07-21T00:34:41.297605459-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/containerd/serial/VerifyKubernetesImages\n"}
{"Time":"2020-07-21T00:34:41.297609342-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: (dbg) Run:  out/minikube-linux-amd64 ssh -p containerd-20200721002901-23787 \"sudo crictl images -o json\"\n"}
{"Time":"2020-07-21T00:34:41.297613471-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: kindest/kindnetd:0.5.4\n"}
{"Time":"2020-07-21T00:34:41.297617419-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: library/busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.297621357-07:00","Action":"run","Test":"TestStartStop/group/containerd/serial/Pause"}
{"Time":"2020-07-21T00:34:41.297624855-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"=== RUN   TestStartStop/group/containerd/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.297631341-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 pause -p containerd-20200721002901-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.297638693-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297643072-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.APIServer}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787: exit status 2 (354.430074ms)\n"}
{"Time":"2020-07-21T00:34:41.297647248-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297651095-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297654849-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \tPaused\n"}
{"Time":"2020-07-21T00:34:41.297658636-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297662368-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297666157-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297670047-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297674144-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Kubelet}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787: exit status 2 (355.947406ms)\n"}
{"Time":"2020-07-21T00:34:41.297678241-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297681959-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297685982-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.297689685-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297693365-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297697131-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297701011-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 unpause -p containerd-20200721002901-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.297705065-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297709163-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p containerd-20200721002901-23787 -n containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297716096-07:00","Action":"cont","Test":"TestStartStop/group/containerd/serial"}
{"Time":"2020-07-21T00:34:41.297719744-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"=== CONT  TestStartStop/group/containerd/serial\n"}
{"Time":"2020-07-21T00:34:41.297723603-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"    start_stop_delete_test.go:126: (dbg) Run:  out/minikube-linux-amd64 delete -p containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297730298-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"    start_stop_delete_test.go:126: (dbg) Done: out/minikube-linux-amd64 delete -p containerd-20200721002901-23787: (2.867661311s)\n"}
{"Time":"2020-07-21T00:34:41.297734625-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"    start_stop_delete_test.go:131: (dbg) Run:  kubectl config get-contexts containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.297738556-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"    start_stop_delete_test.go:131: (dbg) Non-zero exit: kubectl config get-contexts containerd-20200721002901-23787: exit status 1 (65.682321ms)\n"}
{"Time":"2020-07-21T00:34:41.297742542-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297746281-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297750045-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2020-07-21T00:34:41.297753977-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297757747-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297761501-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.297765387-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        \terror: context containerd-20200721002901-23787 not found\n"}
{"Time":"2020-07-21T00:34:41.297769242-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297772902-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.297776631-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"    start_stop_delete_test.go:133: config context error: exit status 1 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297780588-07:00","Action":"cont","Test":"TestStartStop/group/containerd"}
{"Time":"2020-07-21T00:34:41.297784081-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"=== CONT  TestStartStop/group/containerd\n"}
{"Time":"2020-07-21T00:34:41.297787868-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"    helpers_test.go:170: Cleaning up \"containerd-20200721002901-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.297791843-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p containerd-20200721002901-23787\n"}
{"Time":"2020-07-21T00:34:41.29779577-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial/SecondStart"}
{"Time":"2020-07-21T00:34:41.297799263-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"=== CONT  TestStartStop/group/crio/serial/SecondStart\n"}
{"Time":"2020-07-21T00:34:41.297816389-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"    start_stop_delete_test.go:190: (dbg) Done: out/minikube-linux-amd64 start -p crio-20200721002853-23787 --memory=2200 --alsologtostderr --wait=true --container-runtime=crio --disable-driver-mounts --extra-config=kubeadm.ignore-preflight-errors=SystemVerification --driver=docker  --kubernetes-version=v1.15.7: (54.857782542s)\n"}
{"Time":"2020-07-21T00:34:41.297821294-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"    start_stop_delete_test.go:196: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Host}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297825457-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.29782936-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"=== RUN   TestStartStop/group/crio/serial/UserAppExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.297833248-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/crio/serial/UserAppExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.297839964-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6979c57f4c-z2fxz\" [00de19ae-4ce1-493a-9973-03ee32ebf188] Pending / Ready:ContainersNotReady (containers with unready status: [kubernetes-dashboard]) / ContainersReady:ContainersNotReady (containers with unready status: [kubernetes-dashboard])\n"}
{"Time":"2020-07-21T00:34:41.29784451-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6979c57f4c-z2fxz\" [00de19ae-4ce1-493a-9973-03ee32ebf188] Running\n"}
{"Time":"2020-07-21T00:34:41.297848613-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"    start_stop_delete_test.go:208: (dbg) TestStartStop/group/crio/serial/UserAppExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 36.01300676s\n"}
{"Time":"2020-07-21T00:34:41.297852704-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop"}
{"Time":"2020-07-21T00:34:41.297858494-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Output":"=== RUN   TestStartStop/group/crio/serial/AddonExistsAfterStop\n"}
{"Time":"2020-07-21T00:34:41.297862682-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/crio/serial/AddonExistsAfterStop: waiting 9m0s for pods matching \"k8s-app=kubernetes-dashboard\" in namespace \"kubernetes-dashboard\" ...\n"}
{"Time":"2020-07-21T00:34:41.297867045-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Output":"    helpers_test.go:332: \"kubernetes-dashboard-6979c57f4c-z2fxz\" [00de19ae-4ce1-493a-9973-03ee32ebf188] Running\n"}
{"Time":"2020-07-21T00:34:41.297871194-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Output":"    start_stop_delete_test.go:219: (dbg) TestStartStop/group/crio/serial/AddonExistsAfterStop: k8s-app=kubernetes-dashboard healthy within 5.0059258s\n"}
{"Time":"2020-07-21T00:34:41.29787534-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages"}
{"Time":"2020-07-21T00:34:41.297878891-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Output":"=== RUN   TestStartStop/group/crio/serial/VerifyKubernetesImages\n"}
{"Time":"2020-07-21T00:34:41.29788282-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: (dbg) Run:  out/minikube-linux-amd64 ssh -p crio-20200721002853-23787 \"sudo crictl images -o json\"\n"}
{"Time":"2020-07-21T00:34:41.297889917-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: kindest/kindnetd:0.5.4\n"}
{"Time":"2020-07-21T00:34:41.297894071-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Output":"    start_stop_delete_test.go:227: Found non-minikube image: library/busybox:1.28.4-glibc\n"}
{"Time":"2020-07-21T00:34:41.297897983-07:00","Action":"run","Test":"TestStartStop/group/crio/serial/Pause"}
{"Time":"2020-07-21T00:34:41.297901572-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"=== RUN   TestStartStop/group/crio/serial/Pause\n"}
{"Time":"2020-07-21T00:34:41.297905415-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 pause -p crio-20200721002853-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.297909404-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297913484-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.APIServer}} -p crio-20200721002853-23787 -n crio-20200721002853-23787: exit status 2 (328.049458ms)\n"}
{"Time":"2020-07-21T00:34:41.297917559-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297921326-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297925054-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \tPaused\n"}
{"Time":"2020-07-21T00:34:41.297928812-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297932583-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297936306-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297940182-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297944257-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Non-zero exit: out/minikube-linux-amd64 status --format={{.Kubelet}} -p crio-20200721002853-23787 -n crio-20200721002853-23787: exit status 2 (329.866436ms)\n"}
{"Time":"2020-07-21T00:34:41.297948295-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297951978-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.297955677-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \tStopped\n"}
{"Time":"2020-07-21T00:34:41.297959416-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.297963102-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.297966851-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: status error: exit status 2 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.297973984-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 unpause -p crio-20200721002853-23787 --alsologtostderr -v=1\n"}
{"Time":"2020-07-21T00:34:41.297978448-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.APIServer}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.29798251-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"    start_stop_delete_test.go:233: (dbg) Run:  out/minikube-linux-amd64 status --format={{.Kubelet}} -p crio-20200721002853-23787 -n crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297986837-07:00","Action":"cont","Test":"TestStartStop/group/crio/serial"}
{"Time":"2020-07-21T00:34:41.297990246-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"=== CONT  TestStartStop/group/crio/serial\n"}
{"Time":"2020-07-21T00:34:41.297994125-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"    start_stop_delete_test.go:126: (dbg) Run:  out/minikube-linux-amd64 delete -p crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.297998081-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"    start_stop_delete_test.go:126: (dbg) Done: out/minikube-linux-amd64 delete -p crio-20200721002853-23787: (2.708291824s)\n"}
{"Time":"2020-07-21T00:34:41.298002026-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"    start_stop_delete_test.go:131: (dbg) Run:  kubectl config get-contexts crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.298005964-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"    start_stop_delete_test.go:131: (dbg) Non-zero exit: kubectl config get-contexts crio-20200721002853-23787: exit status 1 (60.503619ms)\n"}
{"Time":"2020-07-21T00:34:41.29801011-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.298016093-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        -- stdout --\n"}
{"Time":"2020-07-21T00:34:41.298020023-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        \tCURRENT   NAME   CLUSTER   AUTHINFO   NAMESPACE\n"}
{"Time":"2020-07-21T00:34:41.298060811-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.298065112-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        -- /stdout --\n"}
{"Time":"2020-07-21T00:34:41.298072017-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        ** stderr ** \n"}
{"Time":"2020-07-21T00:34:41.298076097-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        \terror: context crio-20200721002853-23787 not found\n"}
{"Time":"2020-07-21T00:34:41.298079991-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        \n"}
{"Time":"2020-07-21T00:34:41.298083667-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"        ** /stderr **\n"}
{"Time":"2020-07-21T00:34:41.298087562-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"    start_stop_delete_test.go:133: config context error: exit status 1 (may be ok)\n"}
{"Time":"2020-07-21T00:34:41.298091608-07:00","Action":"cont","Test":"TestStartStop/group/crio"}
{"Time":"2020-07-21T00:34:41.298095187-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"=== CONT  TestStartStop/group/crio\n"}
{"Time":"2020-07-21T00:34:41.298098997-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"    helpers_test.go:170: Cleaning up \"crio-20200721002853-23787\" profile ...\n"}
{"Time":"2020-07-21T00:34:41.298102969-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"    helpers_test.go:171: (dbg) Run:  out/minikube-linux-amd64 delete -p crio-20200721002853-23787\n"}
{"Time":"2020-07-21T00:34:41.298110761-07:00","Action":"output","Test":"TestStartStop","Output":"--- PASS: TestStartStop (664.34s)\n"}
{"Time":"2020-07-21T00:34:41.298117637-07:00","Action":"output","Test":"TestStartStop/group","Output":"    --- PASS: TestStartStop/group (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.298121914-07:00","Action":"output","Test":"TestStartStop/group/embed-certs","Output":"        --- PASS: TestStartStop/group/embed-certs (151.99s)\n"}
{"Time":"2020-07-21T00:34:41.298126265-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial","Output":"            --- PASS: TestStartStop/group/embed-certs/serial (151.71s)\n"}
{"Time":"2020-07-21T00:34:41.298130682-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/FirstStart (88.99s)\n"}
{"Time":"2020-07-21T00:34:41.298135005-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/FirstStart","Elapsed":88.99}
{"Time":"2020-07-21T00:34:41.298138926-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/DeployApp (8.84s)\n"}
{"Time":"2020-07-21T00:34:41.298143069-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/DeployApp","Elapsed":8.84}
{"Time":"2020-07-21T00:34:41.298146909-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Stop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/Stop (11.22s)\n"}
{"Time":"2020-07-21T00:34:41.29815144-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/Stop","Elapsed":11.22}
{"Time":"2020-07-21T00:34:41.298155234-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/EnableAddonAfterStop (0.22s)\n"}
{"Time":"2020-07-21T00:34:41.298159977-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/EnableAddonAfterStop","Elapsed":0.22}
{"Time":"2020-07-21T00:34:41.298163815-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/SecondStart (20.72s)\n"}
{"Time":"2020-07-21T00:34:41.298168127-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/SecondStart","Elapsed":20.72}
{"Time":"2020-07-21T00:34:41.298172-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop (10.69s)\n"}
{"Time":"2020-07-21T00:34:41.298176414-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/UserAppExistsAfterStop","Elapsed":10.69}
{"Time":"2020-07-21T00:34:41.29818021-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/AddonExistsAfterStop (5.02s)\n"}
{"Time":"2020-07-21T00:34:41.298184453-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/AddonExistsAfterStop","Elapsed":5.02}
{"Time":"2020-07-21T00:34:41.298188359-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/VerifyKubernetesImages (0.35s)\n"}
{"Time":"2020-07-21T00:34:41.298192843-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/VerifyKubernetesImages","Elapsed":0.35}
{"Time":"2020-07-21T00:34:41.29819658-07:00","Action":"output","Test":"TestStartStop/group/embed-certs/serial/Pause","Output":"                --- PASS: TestStartStop/group/embed-certs/serial/Pause (2.89s)\n"}
{"Time":"2020-07-21T00:34:41.298204384-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial/Pause","Elapsed":2.89}
{"Time":"2020-07-21T00:34:41.298211181-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs/serial","Elapsed":151.71}
{"Time":"2020-07-21T00:34:41.298214975-07:00","Action":"pass","Test":"TestStartStop/group/embed-certs","Elapsed":151.99}
{"Time":"2020-07-21T00:34:41.298218827-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version","Output":"        --- PASS: TestStartStop/group/old-k8s-version (234.27s)\n"}
{"Time":"2020-07-21T00:34:41.298223102-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial","Output":"            --- PASS: TestStartStop/group/old-k8s-version/serial (233.98s)\n"}
{"Time":"2020-07-21T00:34:41.298230254-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/FirstStart (159.73s)\n"}
{"Time":"2020-07-21T00:34:41.298234463-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/FirstStart","Elapsed":159.73}
{"Time":"2020-07-21T00:34:41.298238314-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/DeployApp (8.51s)\n"}
{"Time":"2020-07-21T00:34:41.298245875-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/DeployApp","Elapsed":8.51}
{"Time":"2020-07-21T00:34:41.298249727-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/Stop (11.25s)\n"}
{"Time":"2020-07-21T00:34:41.298256778-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/Stop","Elapsed":11.25}
{"Time":"2020-07-21T00:34:41.298260665-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop (0.28s)\n"}
{"Time":"2020-07-21T00:34:41.298267188-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/EnableAddonAfterStop","Elapsed":0.28}
{"Time":"2020-07-21T00:34:41.298271088-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/SecondStart (30.47s)\n"}
{"Time":"2020-07-21T00:34:41.298277628-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/SecondStart","Elapsed":30.47}
{"Time":"2020-07-21T00:34:41.298281632-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop (12.02s)\n"}
{"Time":"2020-07-21T00:34:41.298288684-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/UserAppExistsAfterStop","Elapsed":12.02}
{"Time":"2020-07-21T00:34:41.298294946-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop (5.01s)\n"}
{"Time":"2020-07-21T00:34:41.298299324-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/AddonExistsAfterStop","Elapsed":5.01}
{"Time":"2020-07-21T00:34:41.298303124-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages (0.37s)\n"}
{"Time":"2020-07-21T00:34:41.298307272-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/VerifyKubernetesImages","Elapsed":0.37}
{"Time":"2020-07-21T00:34:41.298311029-07:00","Action":"output","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Output":"                --- PASS: TestStartStop/group/old-k8s-version/serial/Pause (3.35s)\n"}
{"Time":"2020-07-21T00:34:41.298315142-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial/Pause","Elapsed":3.35}
{"Time":"2020-07-21T00:34:41.298321806-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version/serial","Elapsed":233.98}
{"Time":"2020-07-21T00:34:41.29832556-07:00","Action":"pass","Test":"TestStartStop/group/old-k8s-version","Elapsed":234.27}
{"Time":"2020-07-21T00:34:41.29832929-07:00","Action":"output","Test":"TestStartStop/group/newest-cni","Output":"        --- PASS: TestStartStop/group/newest-cni (79.57s)\n"}
{"Time":"2020-07-21T00:34:41.298333806-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial","Output":"            --- PASS: TestStartStop/group/newest-cni/serial (79.30s)\n"}
{"Time":"2020-07-21T00:34:41.298338124-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/FirstStart (50.34s)\n"}
{"Time":"2020-07-21T00:34:41.298342318-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/FirstStart","Elapsed":50.34}
{"Time":"2020-07-21T00:34:41.298346137-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/DeployApp (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.298350261-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/DeployApp","Elapsed":0}
{"Time":"2020-07-21T00:34:41.298354074-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Stop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/Stop (1.72s)\n"}
{"Time":"2020-07-21T00:34:41.298358361-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/Stop","Elapsed":1.72}
{"Time":"2020-07-21T00:34:41.298362124-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/EnableAddonAfterStop (0.28s)\n"}
{"Time":"2020-07-21T00:34:41.298366349-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/EnableAddonAfterStop","Elapsed":0.28}
{"Time":"2020-07-21T00:34:41.298370214-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/SecondStart (20.00s)\n"}
{"Time":"2020-07-21T00:34:41.298374323-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/SecondStart","Elapsed":20}
{"Time":"2020-07-21T00:34:41.298378229-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.298382408-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/UserAppExistsAfterStop","Elapsed":0}
{"Time":"2020-07-21T00:34:41.298386667-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/AddonExistsAfterStop (0.00s)\n"}
{"Time":"2020-07-21T00:34:41.298390959-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/AddonExistsAfterStop","Elapsed":0}
{"Time":"2020-07-21T00:34:41.298394641-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/VerifyKubernetesImages (0.38s)\n"}
{"Time":"2020-07-21T00:34:41.298398817-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/VerifyKubernetesImages","Elapsed":0.38}
{"Time":"2020-07-21T00:34:41.298402554-07:00","Action":"output","Test":"TestStartStop/group/newest-cni/serial/Pause","Output":"                --- PASS: TestStartStop/group/newest-cni/serial/Pause (3.56s)\n"}
{"Time":"2020-07-21T00:34:41.298407001-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial/Pause","Elapsed":3.56}
{"Time":"2020-07-21T00:34:41.298415322-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni/serial","Elapsed":79.3}
{"Time":"2020-07-21T00:34:41.298419034-07:00","Action":"pass","Test":"TestStartStop/group/newest-cni","Elapsed":79.57}
{"Time":"2020-07-21T00:34:41.298425472-07:00","Action":"output","Test":"TestStartStop/group/containerd","Output":"        --- PASS: TestStartStop/group/containerd (260.66s)\n"}
{"Time":"2020-07-21T00:34:41.29843089-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial","Output":"            --- PASS: TestStartStop/group/containerd/serial (260.40s)\n"}
{"Time":"2020-07-21T00:34:41.29843775-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/FirstStart","Output":"                --- PASS: TestStartStop/group/containerd/serial/FirstStart (118.98s)\n"}
{"Time":"2020-07-21T00:34:41.298441941-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/FirstStart","Elapsed":118.98}
{"Time":"2020-07-21T00:34:41.298445897-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/containerd/serial/DeployApp (8.68s)\n"}
{"Time":"2020-07-21T00:34:41.298449978-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/DeployApp","Elapsed":8.68}
{"Time":"2020-07-21T00:34:41.298453724-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Stop","Output":"                --- PASS: TestStartStop/group/containerd/serial/Stop (21.16s)\n"}
{"Time":"2020-07-21T00:34:41.298457863-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/Stop","Elapsed":21.16}
{"Time":"2020-07-21T00:34:41.29846177-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/containerd/serial/EnableAddonAfterStop (1.23s)\n"}
{"Time":"2020-07-21T00:34:41.298466164-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/EnableAddonAfterStop","Elapsed":1.23}
{"Time":"2020-07-21T00:34:41.298469994-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/SecondStart","Output":"                --- PASS: TestStartStop/group/containerd/serial/SecondStart (94.32s)\n"}
{"Time":"2020-07-21T00:34:41.298474174-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/SecondStart","Elapsed":94.32}
{"Time":"2020-07-21T00:34:41.298478102-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/containerd/serial/UserAppExistsAfterStop (5.02s)\n"}
{"Time":"2020-07-21T00:34:41.298482315-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/UserAppExistsAfterStop","Elapsed":5.02}
{"Time":"2020-07-21T00:34:41.298486102-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/containerd/serial/AddonExistsAfterStop (5.01s)\n"}
{"Time":"2020-07-21T00:34:41.298490335-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/AddonExistsAfterStop","Elapsed":5.01}
{"Time":"2020-07-21T00:34:41.298494077-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Output":"                --- PASS: TestStartStop/group/containerd/serial/VerifyKubernetesImages (0.32s)\n"}
{"Time":"2020-07-21T00:34:41.298498189-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/VerifyKubernetesImages","Elapsed":0.32}
{"Time":"2020-07-21T00:34:41.298501915-07:00","Action":"output","Test":"TestStartStop/group/containerd/serial/Pause","Output":"                --- PASS: TestStartStop/group/containerd/serial/Pause (2.74s)\n"}
{"Time":"2020-07-21T00:34:41.298506151-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial/Pause","Elapsed":2.74}
{"Time":"2020-07-21T00:34:41.298509757-07:00","Action":"pass","Test":"TestStartStop/group/containerd/serial","Elapsed":260.4}
{"Time":"2020-07-21T00:34:41.29851342-07:00","Action":"pass","Test":"TestStartStop/group/containerd","Elapsed":260.66}
{"Time":"2020-07-21T00:34:41.298519594-07:00","Action":"output","Test":"TestStartStop/group/crio","Output":"        --- PASS: TestStartStop/group/crio (346.04s)\n"}
{"Time":"2020-07-21T00:34:41.298527141-07:00","Action":"output","Test":"TestStartStop/group/crio/serial","Output":"            --- PASS: TestStartStop/group/crio/serial (345.80s)\n"}
{"Time":"2020-07-21T00:34:41.298531585-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/FirstStart","Output":"                --- PASS: TestStartStop/group/crio/serial/FirstStart (213.80s)\n"}
{"Time":"2020-07-21T00:34:41.298535836-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/FirstStart","Elapsed":213.8}
{"Time":"2020-07-21T00:34:41.29853973-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/DeployApp","Output":"                --- PASS: TestStartStop/group/crio/serial/DeployApp (8.68s)\n"}
{"Time":"2020-07-21T00:34:41.298543874-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/DeployApp","Elapsed":8.68}
{"Time":"2020-07-21T00:34:41.298547698-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Stop","Output":"                --- PASS: TestStartStop/group/crio/serial/Stop (20.94s)\n"}
{"Time":"2020-07-21T00:34:41.298551824-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/Stop","Elapsed":20.94}
{"Time":"2020-07-21T00:34:41.298555658-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Output":"                --- PASS: TestStartStop/group/crio/serial/EnableAddonAfterStop (0.21s)\n"}
{"Time":"2020-07-21T00:34:41.298559821-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/EnableAddonAfterStop","Elapsed":0.21}
{"Time":"2020-07-21T00:34:41.298563621-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/SecondStart","Output":"                --- PASS: TestStartStop/group/crio/serial/SecondStart (55.30s)\n"}
{"Time":"2020-07-21T00:34:41.298567749-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/SecondStart","Elapsed":55.3}
{"Time":"2020-07-21T00:34:41.29857159-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Output":"                --- PASS: TestStartStop/group/crio/serial/UserAppExistsAfterStop (36.02s)\n"}
{"Time":"2020-07-21T00:34:41.298575781-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/UserAppExistsAfterStop","Elapsed":36.02}
{"Time":"2020-07-21T00:34:41.298579589-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Output":"                --- PASS: TestStartStop/group/crio/serial/AddonExistsAfterStop (5.01s)\n"}
{"Time":"2020-07-21T00:34:41.298583749-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/AddonExistsAfterStop","Elapsed":5.01}
{"Time":"2020-07-21T00:34:41.298590701-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Output":"                --- PASS: TestStartStop/group/crio/serial/VerifyKubernetesImages (0.31s)\n"}
{"Time":"2020-07-21T00:34:41.298594989-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/VerifyKubernetesImages","Elapsed":0.31}
{"Time":"2020-07-21T00:34:41.298606488-07:00","Action":"output","Test":"TestStartStop/group/crio/serial/Pause","Output":"                --- PASS: TestStartStop/group/crio/serial/Pause (2.77s)\n"}
{"Time":"2020-07-21T00:34:41.298613986-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial/Pause","Elapsed":2.77}
{"Time":"2020-07-21T00:34:41.298617731-07:00","Action":"pass","Test":"TestStartStop/group/crio/serial","Elapsed":345.8}
{"Time":"2020-07-21T00:34:41.298621355-07:00","Action":"pass","Test":"TestStartStop/group/crio","Elapsed":346.04}
{"Time":"2020-07-21T00:34:41.298625051-07:00","Action":"pass","Test":"TestStartStop/group","Elapsed":0}
{"Time":"2020-07-21T00:34:41.298628694-07:00","Action":"pass","Test":"TestStartStop","Elapsed":664.34}
{"Time":"2020-07-21T00:34:41.298632412-07:00","Action":"output","Output":"FAIL\n"}
{"Time":"2020-07-21T00:34:41.298636392-07:00","Action":"output","Output":"Tests completed in 32m2.487557672s (result code 1)\n"}
{"Time":"2020-07-21T00:34:41.298643468-07:00","Action":"fail","Elapsed":0.016}
